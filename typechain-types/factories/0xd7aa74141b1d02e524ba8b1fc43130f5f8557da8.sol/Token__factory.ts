/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0xd7aa74141b1d02e524ba8b1fc43130f5f8557da8.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_smiler",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60065560006007556000600855600060095560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600a55600c805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118ed83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118ed83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61157d806103706000396000f3fe6080604052600436106101025760003560e01c8063751039fc11610095578063a8912a3a11610064578063a8912a3a146102ce578063a9059cbb146102e4578063d02c938314610304578063dd62ed3e14610319578063f5f674311461035f57600080fd5b8063751039fc1461024d5780638da5cb5b14610262578063959cbb9d1461028a57806395d89b411461029f57600080fd5b806323b872dd116100d157806323b872dd146101c4578063313ce567146101e457806370a0823114610200578063715018a61461023657600080fd5b806306fdde031461010e578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820190915260128152712822a3901818199077dfde9029b6b4b632b960711b60208201525b604051610152919061116d565b60405180910390f35b34801561016757600080fd5b5061017b6101763660046111d0565b61037f565b6040519015158152602001610152565b34801561019757600080fd5b506101a1600a5481565b604051908152602001610152565b3480156101bb57600080fd5b506101a1610396565b3480156101d057600080fd5b5061017b6101df3660046111fc565b6103b7565b3480156101f057600080fd5b5060405160098152602001610152565b34801561020c57600080fd5b506101a161021b36600461123d565b6001600160a01b031660009081526001602052604090205490565b34801561024257600080fd5b5061024b610475565b005b34801561025957600080fd5b5061024b6104f2565b34801561026e57600080fd5b506000546040516001600160a01b039091168152602001610152565b34801561029657600080fd5b5061024b61051e565b3480156102ab57600080fd5b5060408051808201909152600681526529a6a4a622a960d11b6020820152610145565b3480156102da57600080fd5b506101a16103e881565b3480156102f057600080fd5b5061017b6102ff3660046111d0565b610584565b34801561031057600080fd5b5061024b610591565b34801561032557600080fd5b506101a161033436600461125a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036b57600080fd5b5061024b61037a36600461123d565b610949565b600061038c338484610987565b5060015b92915050565b60006103a46009600a611390565b6103b290633b9aca0061139f565b905090565b60006103c4848484610aab565b6005546001600160a01b031633148015906104145750600c546001600160a01b038581169116148061040157506001600160a01b03831661dead14155b8061041457506001600160a01b03841630145b1561046b5761046b843361046685604051806060016040528060288152602001611520602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ed3565b610987565b5060019392505050565b6000546001600160a01b031633146104a85760405162461bcd60e51b815260040161049f906113b6565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051c5760405162461bcd60e51b815260040161049f906113b6565b565b6000546001600160a01b031633146105485760405162461bcd60e51b815260040161049f906113b6565b6000471161055557600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610581573d6000803e3d6000fd5b50565b600061038c338484610aab565b6000546001600160a01b031633146105bb5760405162461bcd60e51b815260040161049f906113b6565b600c54600160a01b900460ff16156106155760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161049f565b600b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561065e9030906106506009600a611390565b61046690633b9aca0061139f565b600b60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d591906113eb565b6001600160a01b031663c9c6539630600b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b91906113eb565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906113eb565b600c80546001600160a01b039283166001600160a01b0319909116179055600b541663f305d7194730610814816001600160a01b031660009081526001602052604090205490565b6000806108296000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610891573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108b69190611408565b5050600c805462ff00ff60a01b1981166201000160a01b17909155600b5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105819190611436565b3360009081526003602052604090205460ff1661096557600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049f565b6001600160a01b038216610a4a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b0f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161049f565b6001600160a01b038216610b715760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161049f565b60008111610bd35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161049f565b60006001600160a01b0384163014801590610bf757506001600160a01b0383163014155b15610d7557600c546001600160a01b038581169116148015610c275750600b546001600160a01b03848116911614155b8015610c4c57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6657506005546001600160a01b03848116911614155b15610c815760098054906000610c7b83611458565b91905055505b30600090815260016020526040902054600c54600160a81b900460ff16158015610cb85750600c546001600160a01b038581169116145b8015610ccd5750600c54600160b01b900460ff165b8015610ce757506005546001600160a01b03868116911614155b15610d7357843b15610d325760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161049f565b8015610d67576000600a548211610d495781610d4d565b600a545b9050610d65818511610d5f5784610f0d565b81610f0d565b505b47610d7147611087565b505b505b6001600160a01b038416600090815260016020526040902054610d9890836110c5565b6001600160a01b038516600090815260016020526040902055610ddd610dbe83836110c5565b6001600160a01b0385166000908152600160205260409020549061110e565b6001600160a01b0384166000908152600160205260409020558015610e705730600090815260016020526040902054610e16908261110e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e679085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ecd576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ebb85856110c5565b60405190815260200160405180910390a35b50505050565b60008184841115610ef75760405162461bcd60e51b815260040161049f919061116d565b506000610f048486611471565b95945050505050565b600c805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f5557610f55611484565b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd291906113eb565b81600181518110610fe557610fe5611484565b6001600160a01b039283166020918202929092010152600b5461100b9130911684610987565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061104490859060009086903090429060040161149a565b600060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b5050600c805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110c1573d6000803e3d6000fd5b5050565b600061110783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ed3565b9392505050565b60008061111b838561150c565b9050838110156111075760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161049f565b602081526000825180602084015260005b8181101561119b576020818601810151604086840101520161117e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461058157600080fd5b600080604083850312156111e357600080fd5b82356111ee816111bb565b946020939093013593505050565b60008060006060848603121561121157600080fd5b833561121c816111bb565b9250602084013561122c816111bb565b929592945050506040919091013590565b60006020828403121561124f57600080fd5b8135611107816111bb565b6000806040838503121561126d57600080fd5b8235611278816111bb565b91506020830135611288816111bb565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112e4578085048111156112c8576112c8611293565b60018416156112d657908102905b60019390931c9280026112ad565b935093915050565b6000826112fb57506001610390565b8161130857506000610390565b816001811461131e576002811461132857611344565b6001915050610390565b60ff84111561133957611339611293565b50506001821b610390565b5060208310610133831016604e8410600b8410161715611367575081810a610390565b61137460001984846112a9565b806000190482111561138857611388611293565b029392505050565b600061110760ff8416836112ec565b808202811582820484141761039057610390611293565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113fd57600080fd5b8151611107816111bb565b60008060006060848603121561141d57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561144857600080fd5b8151801515811461110757600080fd5b60006001820161146a5761146a611293565b5060010190565b8181038181111561039057610390611293565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114ec5783516001600160a01b03168352602093840193909201916001016114c5565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103905761039061129356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ca97201d10550330517e0ffb4350f375e6181fb20090a82f2807f439b6770c1464736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
