/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x530392a18dce11b31aca499cb0164032f5538be6.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b919061032d565b61004990633b9aca00610343565b610053919061035a565b600e556000600f8190556011805461ffff60a81b191690556012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b0316835291208054909216179055606461010b6009600a61032d565b61011990633b9aca00610343565b610124906062610343565b61012e919061035a565b30600090815260016020526040902055606461014c6009600a61032d565b61015a90633b9aca00610343565b610165906002610343565b61016f919061035a565b336000908152600160205260408120919091553090600080516020611d6783398151915260646101a16009600a61032d565b6101af90633b9aca00610343565b6101ba906062610343565b6101c4919061035a565b60405190815260200160405180910390a3336000600080516020611d6783398151915260646101f56009600a61032d565b61020390633b9aca00610343565b61020e906002610343565b610218919061035a565b60405190815260200160405180910390a361037c565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561027f578085048111156102635761026361022e565b600184161561027157908102905b60019390931c928002610248565b935093915050565b60008261029657506001610327565b816102a357506000610327565b81600181146102b957600281146102c3576102df565b6001915050610327565b60ff8411156102d4576102d461022e565b50506001821b610327565b5060208310610133831016604e8410600b8410161715610302575081810a610327565b61030f6000198484610244565b80600019048211156103235761032361022e565b0290505b92915050565b600061033c60ff841683610287565b9392505050565b80820281158282048414176103275761032761022e565b60008261037757634e487b7160e01b600052601260045260246000fd5b500490565b6119dc8061038b6000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102b0578063a9059cbb146102df578063d02c9383146102ff578063dd62ed3e14610314578063f5f674311461035a57600080fd5b806370a0823114610228578063715018a61461025e578063751039fc146102735780638da5cb5b1461028857600080fd5b806320800a00116100d157806320800a00146101bf57806323b872dd146101d6578063313ce567146101f65780636482c89a1461021257600080fd5b806306fdde031461010e578063095ea7b3146101565780630faee56f1461018657806318160ddd146101aa57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600d81526c454c4f4e53204e455720444f4760981b60208201525b60405161014d9190611497565b60405180910390f35b34801561016257600080fd5b506101766101713660046114fa565b61037a565b604051901515815260200161014d565b34801561019257600080fd5b5061019c600e5481565b60405190815260200161014d565b3480156101b657600080fd5b5061019c610391565b3480156101cb57600080fd5b506101d46103b2565b005b3480156101e257600080fd5b506101766101f1366004611526565b610421565b34801561020257600080fd5b506040516009815260200161014d565b34801561021e57600080fd5b5061019c600f5481565b34801561023457600080fd5b5061019c610243366004611567565b6001600160a01b031660009081526001602052604090205490565b34801561026a57600080fd5b506101d46104d1565b34801561027f57600080fd5b506101d4610545565b34801561029457600080fd5b506000546040516001600160a01b03909116815260200161014d565b3480156102bc57600080fd5b5060408051808201909152600681526550414f50414f60d01b6020820152610140565b3480156102eb57600080fd5b506101766102fa3660046114fa565b610571565b34801561030b57600080fd5b506101d461057e565b34801561032057600080fd5b5061019c61032f366004611584565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036657600080fd5b506101d4610375366004611567565b610936565b600061038733848461098c565b5060015b92915050565b600061039f6009600a6116ba565b6103ad90633b9aca006116c9565b905090565b6000546001600160a01b031633146103e55760405162461bcd60e51b81526004016103dc906116e0565b60405180910390fd5b600047116103f257600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561041e573d6000803e3d6000fd5b50565b600061042e848484610ab0565b3360009081526003602052604090205460ff1615801561047057506011546001600160a01b038581169116148061047057506001600160a01b03831661dead14155b156104c7576104c784336104c28560405180606001604052806028815260200161197f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f7d565b61098c565b5060019392505050565b6000546001600160a01b031633146104fb5760405162461bcd60e51b81526004016103dc906116e0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461056f5760405162461bcd60e51b81526004016103dc906116e0565b565b6000610387338484610ab0565b6000546001600160a01b031633146105a85760405162461bcd60e51b81526004016103dc906116e0565b601154600160a01b900460ff16156106025760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103dc565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561064b90309061063d6009600a6116ba565b6104c290633b9aca006116c9565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c29190611715565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107489190611715565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190611715565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d7194730610801816001600160a01b031660009081526001602052604090205490565b6000806108166000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561087e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108a39190611732565b50506011805462ff00ff60a01b1981166201000160a01b1790915560105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611760565b3360009081526003602052604090205460ff1661095257600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b0383166109ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dc565b6001600160a01b038216610a4f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dc565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b145760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dc565b6001600160a01b038216610b765760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dc565b60008111610bd85760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103dc565b60006001600160a01b0384163014801590610bfc57506001600160a01b0383163014155b15610e1f57601154600160a81b900460ff16610c4157610c3e6064610c3860075460085411610c2d57600554610c31565b6006545b8590610fb7565b90611040565b90505b6011546001600160a01b038581169116148015610c6c57506010546001600160a01b03848116911614155b8015610c9157506001600160a01b03831660009081526003602052604090205460ff16155b8015610cab57506004546001600160a01b03848116911614155b15610cf0574360095414610cc3576000600a55436009555b81600a6000828254610cd59190611782565b909155505060088054906000610cea83611795565b91905055505b6011546001600160a01b038481169116148015610d1657506001600160a01b0384163014155b15610d7157610d23611082565b600a541080610d3457504360095414155b610d715760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103dc565b30600090815260016020526040902054601154600160a81b900460ff16158015610da857506011546001600160a01b038581169116145b8015610dbd5750601154600160b01b900460ff165b8015610dd757506004546001600160a01b03868116911614155b15610e1d578015610e11576000600e548211610df35781610df7565b600e545b9050610e0f818511610e095784611210565b81611210565b505b47610e1b4761138a565b505b505b6001600160a01b038416600090815260016020526040902054610e4290836113c8565b6001600160a01b038516600090815260016020526040902055610e87610e6883836113c8565b6001600160a01b0385166000908152600160205260409020549061140a565b6001600160a01b0384166000908152600160205260409020558015610f1a5730600090815260016020526040902054610ec0908261140a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f119085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f77576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6585856113c8565b60405190815260200160405180910390a35b50505050565b60008184841115610fa15760405162461bcd60e51b81526004016103dc9190611497565b506000610fae84866117ae565b95945050505050565b600082600003610fc95750600061038b565b6000610fd583856116c9565b905082610fe285836117c1565b146110395760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103dc565b9392505050565b600061103983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611469565b604080516002808252606082018352600092839291906020830190803683375050601054604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111149190611715565b81600081518110611127576111276117f9565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061115b5761115b6117f9565b6001600160a01b03928316602091820292909201015260105460405163d06ca61f60e01b8152600092919091169063d06ca61f906111a79067d02ab486cedc0000908690600401611854565b600060405180830381865afa1580156111c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ec9190810190611875565b905080600181518110611201576112016117f9565b60200260200101519250505090565b6011805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611258576112586117f9565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d59190611715565b816001815181106112e8576112e86117f9565b6001600160a01b03928316602091820292909201015260105461130e913091168461098c565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac94790611347908590600090869030904290600401611942565b600060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113c4573d6000803e3d6000fd5b5050565b600061103983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f7d565b6000806114178385611782565b9050838110156110395760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dc565b6000818361148a5760405162461bcd60e51b81526004016103dc9190611497565b506000610fae84866117c1565b602081526000825180602084015260005b818110156114c557602081860181015160408684010152016114a8565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041e57600080fd5b6000806040838503121561150d57600080fd5b8235611518816114e5565b946020939093013593505050565b60008060006060848603121561153b57600080fd5b8335611546816114e5565b92506020840135611556816114e5565b929592945050506040919091013590565b60006020828403121561157957600080fd5b8135611039816114e5565b6000806040838503121561159757600080fd5b82356115a2816114e5565b915060208301356115b2816114e5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561160e578085048111156115f2576115f26115bd565b600184161561160057908102905b60019390931c9280026115d7565b935093915050565b6000826116255750600161038b565b816116325750600061038b565b816001811461164857600281146116525761166e565b600191505061038b565b60ff841115611663576116636115bd565b50506001821b61038b565b5060208310610133831016604e8410600b8410161715611691575081810a61038b565b61169e60001984846115d3565b80600019048211156116b2576116b26115bd565b029392505050565b600061103960ff841683611616565b808202811582820484141761038b5761038b6115bd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172757600080fd5b8151611039816114e5565b60008060006060848603121561174757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177257600080fd5b8151801515811461103957600080fd5b8082018082111561038b5761038b6115bd565b6000600182016117a7576117a76115bd565b5060010190565b8181038181111561038b5761038b6115bd565b6000826117de57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561184a5781516001600160a01b0316865260209586019590910190600101611823565b5093949350505050565b82815260406020820152600061186d604083018461180f565b949350505050565b60006020828403121561188757600080fd5b815167ffffffffffffffff81111561189e57600080fd5b8201601f810184136118af57600080fd5b805167ffffffffffffffff8111156118c9576118c96117e3565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118f6576118f66117e3565b60405291825260208184018101929081018784111561191457600080fd5b6020850194505b838510156119375784518082526020958601959093500161191b565b509695505050505050565b85815284602082015260a06040820152600061196160a083018661180f565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122060e17e7df45f761d5329be8a5b877ddccf1aa7c0a06091fc6c4340059e13102564736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
