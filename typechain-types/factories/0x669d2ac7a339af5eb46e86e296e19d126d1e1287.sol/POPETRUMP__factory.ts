/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  POPETRUMP,
  POPETRUMPInterface,
} from "../../0x669d2ac7a339af5eb46e86e296e19d126d1e1287.sol/POPETRUMP";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b5560646009600a6100319190610271565b61003f906305f5e100610287565b610049919061029e565b600c556000600d819055600f805461ffff60a81b191690556010819055601181905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ff6009600a610271565b61010d906305f5e100610287565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61014e6009600a610271565b61015c906305f5e100610287565b60405190815260200160405180910390a36102c0565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101c3578085048111156101a7576101a7610172565b60018416156101b557908102905b60019390931c92800261018c565b935093915050565b6000826101da5750600161026b565b816101e75750600061026b565b81600181146101fd576002811461020757610223565b600191505061026b565b60ff84111561021857610218610172565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610246575081810a61026b565b6102536000198484610188565b806000190482111561026757610267610172565b0290505b92915050565b600061028060ff8416836101cb565b9392505050565b808202811582820484141761026b5761026b610172565b6000826102bb57634e487b7160e01b600052601260045260246000fd5b500490565b6119c4806102cf6000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b1461029a57806395d89b41146102c2578063a9059cbb146102f4578063dd62ed3e14610314578063ea414b281461035a57600080fd5b806370a0823114610225578063715018a61461025b578063751039fc146102705780638a8c523c1461028557600080fd5b806320800a00116100d157806320800a00146101bc57806323b872dd146101d3578063313ce567146101f35780636482c89a1461020f57600080fd5b806306fdde031461010e578063095ea7b3146101535780630faee56f1461018357806318160ddd146101a757600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600a8152690504f5045205452554d560b41b60208201525b60405161014a919061147f565b60405180910390f35b34801561015f57600080fd5b5061017361016e3660046114e2565b61037a565b604051901515815260200161014a565b34801561018f57600080fd5b50610199600c5481565b60405190815260200161014a565b3480156101b357600080fd5b50610199610391565b3480156101c857600080fd5b506101d16103b2565b005b3480156101df57600080fd5b506101736101ee36600461150e565b610421565b3480156101ff57600080fd5b506040516009815260200161014a565b34801561021b57600080fd5b50610199600d5481565b34801561023157600080fd5b5061019961024036600461154f565b6001600160a01b031660009081526001602052604090205490565b34801561026757600080fd5b506101d16104d1565b34801561027c57600080fd5b506101d1610545565b34801561029157600080fd5b506101d1610571565b3480156102a657600080fd5b506000546040516001600160a01b03909116815260200161014a565b3480156102ce57600080fd5b506040805180820190915260098152680504f50455452554d560bc1b602082015261013d565b34801561030057600080fd5b5061017361030f3660046114e2565b610929565b34801561032057600080fd5b5061019961032f36600461156c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036657600080fd5b506101d161037536600461154f565b610936565b6000610387338484610974565b5060015b92915050565b600061039f6009600a6116a2565b6103ad906305f5e1006116b1565b905090565b6000546001600160a01b031633146103e55760405162461bcd60e51b81526004016103dc906116c8565b60405180910390fd5b600047116103f257600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561041e573d6000803e3d6000fd5b50565b600061042e848484610a98565b3360009081526003602052604090205460ff161580156104705750600f546001600160a01b038581169116148061047057506001600160a01b03831661dead14155b156104c7576104c784336104c285604051806060016040528060288152602001611967602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f65565b610974565b5060019392505050565b6000546001600160a01b031633146104fb5760405162461bcd60e51b81526004016103dc906116c8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461056f5760405162461bcd60e51b81526004016103dc906116c8565b565b6000546001600160a01b0316331461059b5760405162461bcd60e51b81526004016103dc906116c8565b600f54600160a01b900460ff16156105f55760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103dc565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561063e9030906106306009600a6116a2565b6104c2906305f5e1006116b1565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b591906116fd565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906116fd565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906116fd565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107f4816001600160a01b031660009081526001602052604090205490565b6000806108096000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610871573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610896919061171a565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611748565b6000610387338484610a98565b3360009081526003602052604090205460ff1661095257600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dc565b6001600160a01b038216610a375760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dc565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610afc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dc565b6001600160a01b038216610b5e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dc565b60008111610bc05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103dc565b60006001600160a01b0384163014801590610be457506001600160a01b0383163014155b15610e0757600f54600160a81b900460ff16610c2957610c266064610c2060075460085411610c1557600554610c19565b6006545b8590610f9f565b90611028565b90505b600f546001600160a01b038581169116148015610c545750600e546001600160a01b03848116911614155b8015610c7957506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9357506004546001600160a01b03848116911614155b15610cd8574360095414610cab576000600a55436009555b81600a6000828254610cbd919061176a565b909155505060088054906000610cd28361177d565b91905055505b600f546001600160a01b038481169116148015610cfe57506001600160a01b0384163014155b15610d5957610d0b61106a565b600a541080610d1c57504360095414155b610d595760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103dc565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d905750600f546001600160a01b038581169116145b8015610da55750600f54600160b01b900460ff165b8015610dbf57506004546001600160a01b03868116911614155b15610e05578015610df9576000600c548211610ddb5781610ddf565b600c545b9050610df7818511610df157846111f8565b816111f8565b505b47610e0347611372565b505b505b6001600160a01b038416600090815260016020526040902054610e2a90836113b0565b6001600160a01b038516600090815260016020526040902055610e6f610e5083836113b0565b6001600160a01b038516600090815260016020526040902054906113f2565b6001600160a01b0384166000908152600160205260409020558015610f025730600090815260016020526040902054610ea890826113f2565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ef99085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f5f576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f4d85856113b0565b60405190815260200160405180910390a35b50505050565b60008184841115610f895760405162461bcd60e51b81526004016103dc919061147f565b506000610f968486611796565b95945050505050565b600082600003610fb15750600061038b565b6000610fbd83856116b1565b905082610fca85836117a9565b146110215760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103dc565b9392505050565b600061102183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611451565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fc91906116fd565b8160008151811061110f5761110f6117e1565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611143576111436117e1565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061118f90674563918244f4000090869060040161183c565b600060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111d4919081019061185d565b9050806001815181106111e9576111e96117e1565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611240576112406117e1565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd91906116fd565b816001815181106112d0576112d06117e1565b6001600160a01b039283166020918202929092010152600e546112f69130911684610974565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061132f90859060009086903090429060040161192a565b600060405180830381600087803b15801561134957600080fd5b505af115801561135d573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113ac573d6000803e3d6000fd5b5050565b600061102183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f65565b6000806113ff838561176a565b9050838110156110215760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103dc565b600081836114725760405162461bcd60e51b81526004016103dc919061147f565b506000610f9684866117a9565b602081526000825180602084015260005b818110156114ad5760208186018101516040868401015201611490565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041e57600080fd5b600080604083850312156114f557600080fd5b8235611500816114cd565b946020939093013593505050565b60008060006060848603121561152357600080fd5b833561152e816114cd565b9250602084013561153e816114cd565b929592945050506040919091013590565b60006020828403121561156157600080fd5b8135611021816114cd565b6000806040838503121561157f57600080fd5b823561158a816114cd565b9150602083013561159a816114cd565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115f6578085048111156115da576115da6115a5565b60018416156115e857908102905b60019390931c9280026115bf565b935093915050565b60008261160d5750600161038b565b8161161a5750600061038b565b8160018114611630576002811461163a57611656565b600191505061038b565b60ff84111561164b5761164b6115a5565b50506001821b61038b565b5060208310610133831016604e8410600b8410161715611679575081810a61038b565b61168660001984846115bb565b806000190482111561169a5761169a6115a5565b029392505050565b600061102160ff8416836115fe565b808202811582820484141761038b5761038b6115a5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561170f57600080fd5b8151611021816114cd565b60008060006060848603121561172f57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561175a57600080fd5b8151801515811461102157600080fd5b8082018082111561038b5761038b6115a5565b60006001820161178f5761178f6115a5565b5060010190565b8181038181111561038b5761038b6115a5565b6000826117c657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118325781516001600160a01b031686526020958601959091019060010161180b565b5093949350505050565b82815260406020820152600061185560408301846117f7565b949350505050565b60006020828403121561186f57600080fd5b815167ffffffffffffffff81111561188657600080fd5b8201601f8101841361189757600080fd5b805167ffffffffffffffff8111156118b1576118b16117cb565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118de576118de6117cb565b6040529182526020818401810192908101878411156118fc57600080fd5b6020850194505b8385101561191f57845180825260209586019590935001611903565b509695505050505050565b85815284602082015260a06040820152600061194960a08301866117f7565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c7144ec00848acb50f059e421708ce23786d1d3b53b68d1fba5afb0b5d3ca9f664736f6c634300081d0033";

type POPETRUMPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: POPETRUMPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class POPETRUMP__factory extends ContractFactory {
  constructor(...args: POPETRUMPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      POPETRUMP & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): POPETRUMP__factory {
    return super.connect(runner) as POPETRUMP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): POPETRUMPInterface {
    return new Interface(_abi) as POPETRUMPInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): POPETRUMP {
    return new Contract(address, _abi, runner) as unknown as POPETRUMP;
  }
}
