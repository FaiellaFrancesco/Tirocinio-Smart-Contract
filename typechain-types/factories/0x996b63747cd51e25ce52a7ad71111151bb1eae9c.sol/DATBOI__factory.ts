/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DATBOI,
  DATBOIInterface,
} from "../../0x996b63747cd51e25ce52a7ad71111151bb1eae9c.sol/DATBOI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260106006556010600755600060085560006009556010600a556010600b556010600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fac033206200036a565b601155620000a66009600a62000352565b620000b69063fac033206200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611c6380620003946000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103be578063bf474bed146103de578063c9567bf9146103f4578063d34628cc14610409578063dd62ed3e14610429578063ec1f3f631461046f57600080fd5b8063715018a614610311578063751039fc146103265780637d1db4a51461033b5780638da5cb5b146103515780638f9a55c01461037957806395d89b411461038f57600080fd5b8063313ce56711610108578063313ce5671461023c57806331c2d847146102585780633bbac5791461027857806351bc3c85146102b15780636fc3eaec146102c657806370a08231146102db57600080fd5b806306fdde031461015b578063095ea7b31461019c5780630faee56f146101cc578063109daa99146101f057806318160ddd1461020757806323b872dd1461021c57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b50604080518082019091526006815265446174426f6960d01b60208201525b604051610193919061172e565b60405180910390f35b3480156101a857600080fd5b506101bc6101b73660046117a2565b61048f565b6040519015158152602001610193565b3480156101d857600080fd5b506101e260125481565b604051908152602001610193565b3480156101fc57600080fd5b506102056104a6565b005b34801561021357600080fd5b506101e2610516565b34801561022857600080fd5b506101bc6102373660046117ce565b610538565b34801561024857600080fd5b5060405160098152602001610193565b34801561026457600080fd5b50610205610273366004611825565b6105a1565b34801561028457600080fd5b506101bc6102933660046118ea565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102bd57600080fd5b5061020561062d565b3480156102d257600080fd5b5061020561067c565b3480156102e757600080fd5b506101e26102f63660046118ea565b6001600160a01b031660009081526001602052604090205490565b34801561031d57600080fd5b506102056106a9565b34801561033257600080fd5b5061020561071d565b34801561034757600080fd5b506101e2600f5481565b34801561035d57600080fd5b506000546040516001600160a01b039091168152602001610193565b34801561038557600080fd5b506101e260105481565b34801561039b57600080fd5b50604080518082019091526006815265444154424f4960d01b6020820152610186565b3480156103ca57600080fd5b506101bc6103d93660046117a2565b6107cd565b3480156103ea57600080fd5b506101e260115481565b34801561040057600080fd5b506102056107da565b34801561041557600080fd5b50610205610424366004611825565b610b97565b34801561043557600080fd5b506101e2610444366004611907565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047b57600080fd5b5061020561048a366004611940565b610c1f565b600061049c338484610c66565b5060015b92915050565b6000546001600160a01b031633146104d95760405162461bcd60e51b81526004016104d090611959565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105246009600a611a88565b610533906461f313f880611a97565b905090565b6000610545848484610d8a565b610597843361059285604051806060016040528060288152602001611c06602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611391565b610c66565b5060019392505050565b6000546001600160a01b031633146105cb5760405162461bcd60e51b81526004016104d090611959565b60005b8151811015610629576000600460008484815181106105ef576105ef611aae565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105ce565b5050565b6005546001600160a01b0316336001600160a01b03161461064d57600080fd5b30600090815260016020526040902054801561066c5761066c816113cb565b4780156106295761062981611545565b6005546001600160a01b0316336001600160a01b03161461069c57600080fd5b476106a681611545565b50565b6000546001600160a01b031633146106d35760405162461bcd60e51b81526004016104d090611959565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107475760405162461bcd60e51b81526004016104d090611959565b6107536009600a611a88565b610762906461f313f880611a97565b600f556107716009600a611a88565b610780906461f313f880611a97565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b06009600a611a88565b6107bf906461f313f880611a97565b60405190815260200161050c565b600061049c338484610d8a565b6000546001600160a01b031633146108045760405162461bcd60e51b81526004016104d090611959565b601454600160a01b900460ff161561085e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d0565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108a89030906108996009600a611a88565b610592906461f313f880611a97565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190611ac4565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611ac4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611ac4565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a5e816001600160a01b031660009081526001602052604090205490565b600080610a736000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610adb573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b009190611ae1565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190611b0f565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bc15760405162461bcd60e51b81526004016104d090611959565b60005b815181101561062957600160046000848481518110610be557610be5611aae565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc4565b6005546001600160a01b0316336001600160a01b031614610c3f57600080fd5b6008548111158015610c5357506009548111155b610c5c57600080fd5b6008819055600955565b6001600160a01b038316610cc85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d0565b6001600160a01b038216610d295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b6001600160a01b038216610e505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b60008111610eb25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d0565b600080546001600160a01b03858116911614801590610edf57506000546001600160a01b03848116911614155b1561124e576001600160a01b03841660009081526004602052604090205460ff16158015610f2657506001600160a01b03831660009081526004602052604090205460ff16155b610f2f57600080fd5b600e54600003610f6857610f656064610f5f600a54600e5411610f5457600654610f58565b6008545b859061157f565b90611608565b90505b600e5415610f8d57610f8a6064610f5f600d548561157f90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fb857506013546001600160a01b03848116911614155b8015610fdd57506001600160a01b03831660009081526003602052604090205460ff16155b156110e257600f548211156110345760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d0565b60105482611057856001600160a01b031660009081526001602052604090205490565b6110619190611b31565b11156110af5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d0565b6110ca6064610f5f600a54600e5411610f5457600654610f58565b600e805491925060006110dc83611b44565b91905055505b6014546001600160a01b03848116911614801561110857506001600160a01b0384163014155b15611135576111326064610f5f600b54600e541161112857600754610f58565b600954859061157f565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116c57506014546001600160a01b038581169116145b80156111815750601454600160b01b900460ff165b801561118e575060115481115b801561119d5750600c54600e54115b1561124c576016544311156111b25760006015555b6003601554106112045760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d0565b61122161121c846112178460125461164a565b61164a565b6113cb565b4780156112315761123147611545565b6015805490600061124183611b44565b909155505043601655505b505b80156112c8573060009081526001602052604090205461126e908261165f565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bf9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112eb90836116be565b6001600160a01b03851660009081526001602052604090205561133061131183836116be565b6001600160a01b0385166000908152600160205260409020549061165f565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137a85856116be565b60405190815260200160405180910390a350505050565b600081848411156113b55760405162461bcd60e51b81526004016104d0919061172e565b5060006113c28486611b5d565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141357611413611aae565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561146c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114909190611ac4565b816001815181106114a3576114a3611aae565b6001600160a01b0392831660209182029290920101526013546114c99130911684610c66565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611502908590600090869030904290600401611b70565b600060405180830381600087803b15801561151c57600080fd5b505af1158015611530573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610629573d6000803e3d6000fd5b600082600003611591575060006104a0565b600061159d8385611a97565b9050826115aa8583611be3565b146116015760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d0565b9392505050565b600061160183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611700565b60008183116116595782611601565b50919050565b60008061166c8385611b31565b9050838110156116015760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d0565b600061160183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611391565b600081836117215760405162461bcd60e51b81526004016104d0919061172e565b5060006113c28486611be3565b60006020808352835180602085015260005b8181101561175c57858101830151858201604001528201611740565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106a657600080fd5b803561179d8161177d565b919050565b600080604083850312156117b557600080fd5b82356117c08161177d565b946020939093013593505050565b6000806000606084860312156117e357600080fd5b83356117ee8161177d565b925060208401356117fe8161177d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183857600080fd5b823567ffffffffffffffff8082111561185057600080fd5b818501915085601f83011261186457600080fd5b8135818111156118765761187661180f565b8060051b604051601f19603f8301168101818110858211171561189b5761189b61180f565b6040529182528482019250838101850191888311156118b957600080fd5b938501935b828510156118de576118cf85611792565b845293850193928501926118be565b98975050505050505050565b6000602082840312156118fc57600080fd5b81356116018161177d565b6000806040838503121561191a57600080fd5b82356119258161177d565b915060208301356119358161177d565b809150509250929050565b60006020828403121561195257600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119df5781600019048211156119c5576119c561198e565b808516156119d257918102915b93841c93908002906119a9565b509250929050565b6000826119f6575060016104a0565b81611a03575060006104a0565b8160018114611a195760028114611a2357611a3f565b60019150506104a0565b60ff841115611a3457611a3461198e565b50506001821b6104a0565b5060208310610133831016604e8410600b8410161715611a62575081810a6104a0565b611a6c83836119a4565b8060001904821115611a8057611a8061198e565b029392505050565b600061160160ff8416836119e7565b80820281158282048414176104a0576104a061198e565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ad657600080fd5b81516116018161177d565b600080600060608486031215611af657600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b2157600080fd5b8151801515811461160157600080fd5b808201808211156104a0576104a061198e565b600060018201611b5657611b5661198e565b5060010190565b818103818111156104a0576104a061198e565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bc25784516001600160a01b031683529383019391830191600101611b9d565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c0057634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201fcc337c273ac1fafc70f6a147319f68211b37d11c3106fdd40a20bccddb8a0c64736f6c63430008170033";

type DATBOIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DATBOIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DATBOI__factory extends ContractFactory {
  constructor(...args: DATBOIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DATBOI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DATBOI__factory {
    return super.connect(runner) as DATBOI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DATBOIInterface {
    return new Interface(_abi) as DATBOIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DATBOI {
    return new Contract(address, _abi, runner) as unknown as DATBOI;
  }
}
