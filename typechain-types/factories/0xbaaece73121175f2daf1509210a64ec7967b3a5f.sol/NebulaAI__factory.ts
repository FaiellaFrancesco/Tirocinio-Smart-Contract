/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NebulaAI,
  NebulaAIInterface,
} from "../../0xbaaece73121175f2daf1509210a64ec7967b3a5f.sol/NebulaAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "taxWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransactionRevert",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MaxWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_BuyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_DevWallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_SellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellFee",
        type: "uint256",
      },
    ],
    name: "changeTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxLimit",
        type: "uint256",
      },
    ],
    name: "changeWalletLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromTaxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInTaxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxLimit",
        type: "uint256",
      },
    ],
    name: "updateTaxSwapThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600480546001600160a01b031916737df6ff18a6c469e5b289c11acb9cd57ebd4f76db1790556100366012600a610470565b6100429061c350610486565b6005556014600655601960075561005b6012600a610470565b61006890621e8480610486565b600855600a805462ffffff60a01b1916600160a81b17905534801561008c57600080fd5b5061009633610321565b6000737a250d5630b4cf539739df2c5dacb4c659f2488d9050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610111919061049d565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610182919061049d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f3919061049d565b600a80546001600160a01b03199081166001600160a01b03938416178255600980549091169284169290921790915561022e90601290610470565b61023c906305f5e100610486565b3360009081526001602081905260408220929092556003906102666000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556004549091168352912080549092161790556102c43390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102fc6012600a610470565b61030a906305f5e100610486565b60405190815260200160405180910390a3506104c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103c2578085048111156103a6576103a6610371565b60018416156103b457908102905b60019390931c92800261038b565b935093915050565b6000826103d95750600161046a565b816103e65750600061046a565b81600181146103fc576002811461040657610422565b600191505061046a565b60ff84111561041757610417610371565b50506001821b61046a565b5060208310610133831016604e8410600b8410161715610445575081810a61046a565b6104526000198484610387565b806000190482111561046657610466610371565b0290505b92915050565b600061047f60ff8416836103ca565b9392505050565b808202811582820484141761046a5761046a610371565b6000602082840312156104af57600080fd5b81516001600160a01b038116811461047f57600080fd5b6116a2806104d56000396000f3fe6080604052600436106101855760003560e01c8063768dc710116100d157806395d89b411161008a578063bf474bed11610064578063bf474bed1461049b578063c9567bf9146104b1578063dd62ed3e146104c6578063f2fde38b1461050c57600080fd5b806395d89b411461042f578063983e91581461045b578063a9059cbb1461047b57600080fd5b8063768dc7101461036a5780637a88f5dc1461039a5780637db1342c146103bb5780638da5cb5b146103db578063901849d6146103f95780639036ed4d1461040f57600080fd5b806323b872dd1161013e5780634a4a9a68116101185780634a4a9a68146102f457806351bc3c851461030a57806370a082311461031f578063715018a61461035557600080fd5b806323b872dd146102a2578063313ce567146102c257806343b8fe04146102de57600080fd5b8063034832bd1461019157806306fdde03146101b3578063095ea7b3146101f7578063131e00b71461022757806315436a531461024757806318160ddd1461027f57600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac3660046112d3565b61052c565b005b3480156101bf57600080fd5b506040805180820190915260098152684e6562756c6120414960b81b60208201525b6040516101ee91906112ec565b60405180910390f35b34801561020357600080fd5b5061021761021236600461134f565b610586565b60405190151581526020016101ee565b34801561023357600080fd5b506101b161024236600461137b565b61059d565b34801561025357600080fd5b50600454610267906001600160a01b031681565b6040516001600160a01b0390911681526020016101ee565b34801561028b57600080fd5b506102946105c9565b6040519081526020016101ee565b3480156102ae57600080fd5b506102176102bd366004611398565b6105ea565b3480156102ce57600080fd5b50604051601281526020016101ee565b3480156102ea57600080fd5b5061029460075481565b34801561030057600080fd5b5061029460085481565b34801561031657600080fd5b506101b1610653565b34801561032b57600080fd5b5061029461033a36600461137b565b6001600160a01b031660009081526001602052604090205490565b34801561036157600080fd5b506101b16106a6565b34801561037657600080fd5b5061021761038536600461137b565b60036020526000908152604090205460ff1681565b3480156103a657600080fd5b50600a5461021790600160b01b900460ff1681565b3480156103c757600080fd5b506101b16103d63660046112d3565b6106ba565b3480156103e757600080fd5b506000546001600160a01b0316610267565b34801561040557600080fd5b5061029460065481565b34801561041b57600080fd5b506101b161042a3660046113d9565b610728565b34801561043b57600080fd5b506040805180820190915260038152624e414960e81b60208201526101e1565b34801561046757600080fd5b506101b161047636600461137b565b61073b565b34801561048757600080fd5b5061021761049636600461134f565b610764565b3480156104a757600080fd5b5061029460055481565b3480156104bd57600080fd5b506101b1610771565b3480156104d257600080fd5b506102946104e13660046113fb565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561051857600080fd5b506101b161052736600461137b565b6107e0565b610534610859565b600081116105815760405162461bcd60e51b815260206004820152601560248201527405468726573686f6c642063616e6e6f74206265203605c1b60448201526064015b60405180910390fd5b600555565b60006105933384846108b3565b5060015b92915050565b6105a5610859565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b60006105d76012600a611531565b6105e5906305f5e100611540565b905090565b60006105f78484846109d7565b610649843361064485604051806060016040528060288152602001611645602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e8d565b6108b3565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461067357600080fd5b3060009081526001602052604090205480156106925761069281610ec7565b4780156106a2576106a281611048565b5050565b6106ae610859565b6106b860006110e9565b565b6106c2610859565b6106d560c86106cf6105c9565b90611139565b81116107235760405162461bcd60e51b815260206004820152601760248201527f4c696d69742063616e6e6f7420626520746f6f206c6f770000000000000000006044820152606401610578565b600855565b610730610859565b600691909155600755565b610743610859565b6001600160a01b03166000908152600360205260409020805460ff19169055565b60006105933384846109d7565b610779610859565b600a54600160b01b900460ff1615156001036107cb5760405162461bcd60e51b815260206004820152601160248201527041637469766174656420616c726561647960781b6044820152606401610578565b600a805460ff60b01b1916600160b01b179055565b6107e8610859565b6001600160a01b03811661084d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610578565b610856816110e9565b50565b6000546001600160a01b031633146106b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b6001600160a01b0383166109155760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610578565b6001600160a01b0382166109765760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610578565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a3b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610578565b6001600160a01b038216610a9d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610578565b60008111610aff5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610578565b6001600160a01b03831660009081526003602052604081205460ff16158015610b4157506001600160a01b03831660009081526003602052604090205460ff16155b15610d4a57600a54600160b01b900460ff16610b9f5760405162461bcd60e51b815260206004820152601c60248201527f54726164696e67206e65656420746f20626520616374697661746564000000006044820152606401610578565b600a546001600160a01b03848116911614610c3f5760085482610bd7856001600160a01b031660009081526001602052604090205490565b610be19190611557565b1115610c3f5760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657863656564204175746f204149206d61782077616c6c657460448201526608185b5bdd5b9d60ca1b6064820152608401610578565b60065415610c9457600a546001600160a01b038581169116148015610c7257506009546001600160a01b03848116911614155b15610c9457610c9160646106cf6006548561118290919063ffffffff16565b90505b60075415610ccf57600a546001600160a01b0390811690841603610ccf57610ccc60646106cf6007548561118290919063ffffffff16565b90505b30600090815260016020526040902054600a54600160a01b900460ff16158015610d065750600a546001600160a01b038581169116145b8015610d1b5750600a54600160a81b900460ff165b8015610d28575060055481115b15610d4857610d3681610ec7565b478015610d4657610d4647611048565b505b505b8015610dc45730600090815260016020526040902054610d6a9082611204565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dbb9085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610de79083611263565b6001600160a01b038516600090815260016020526040902055610e2c610e0d8383611263565b6001600160a01b03851660009081526001602052604090205490611204565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e768585611263565b60405190815260200160405180910390a350505050565b60008184841115610eb15760405162461bcd60e51b815260040161057891906112ec565b506000610ebe848661156a565b95945050505050565b600a805460ff60a01b1916600160a01b1790558015611038576040805160028082526060820183526000926020830190803683370190505090503081600081518110610f1557610f1561157d565b6001600160a01b03928316602091820292909201810191909152600954604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f929190611593565b81600181518110610fa557610fa561157d565b6001600160a01b039283166020918202929092010152600954610fcb91309116846108b3565b60095460405163791ac94760e01b81526001600160a01b039091169063791ac947906110049085906000908690309042906004016115b0565b600060405180830381600087803b15801561101e57600080fd5b505af1158015611032573d6000803e3d6000fd5b50505050505b50600a805460ff60a01b19169055565b6004546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611095576040519150601f19603f3d011682016040523d82523d6000602084013e61109a565b606091505b50509050806106a2576004546040518381526001600160a01b03909116907faa3a2b0832056fde3df798858c2c8612cf899b18536f53f5c1a7ff0e3bfa8a179060200160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061117b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506112a5565b9392505050565b60008260000361119457506000610597565b60006111a08385611540565b9050826111ad8583611622565b1461117b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610578565b6000806112118385611557565b90508381101561117b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610578565b600061117b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e8d565b600081836112c65760405162461bcd60e51b815260040161057891906112ec565b506000610ebe8486611622565b6000602082840312156112e557600080fd5b5035919050565b602081526000825180602084015260005b8181101561131a57602081860181015160408684010152016112fd565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461085657600080fd5b6000806040838503121561136257600080fd5b823561136d8161133a565b946020939093013593505050565b60006020828403121561138d57600080fd5b813561117b8161133a565b6000806000606084860312156113ad57600080fd5b83356113b88161133a565b925060208401356113c88161133a565b929592945050506040919091013590565b600080604083850312156113ec57600080fd5b50508035926020909101359150565b6000806040838503121561140e57600080fd5b82356114198161133a565b915060208301356114298161133a565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114855780850481111561146957611469611434565b600184161561147757908102905b60019390931c92800261144e565b935093915050565b60008261149c57506001610597565b816114a957506000610597565b81600181146114bf57600281146114c9576114e5565b6001915050610597565b60ff8411156114da576114da611434565b50506001821b610597565b5060208310610133831016604e8410600b8410161715611508575081810a610597565b611515600019848461144a565b806000190482111561152957611529611434565b029392505050565b600061117b60ff84168361148d565b808202811582820484141761059757610597611434565b8082018082111561059757610597611434565b8181038181111561059757610597611434565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156115a557600080fd5b815161117b8161133a565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156116025783516001600160a01b03168352602093840193909201916001016115db565b50506001600160a01b039590951660608401525050608001529392505050565b60008261163f57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122077a3407ef15c966542740a8116c6f631465781d4c3a1b434f2ff4f937e84b41564736f6c634300081a0033";

type NebulaAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NebulaAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NebulaAI__factory extends ContractFactory {
  constructor(...args: NebulaAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NebulaAI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NebulaAI__factory {
    return super.connect(runner) as NebulaAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NebulaAIInterface {
    return new Interface(_abi) as NebulaAIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NebulaAI {
    return new Contract(address, _abi, runner) as unknown as NebulaAI;
  }
}
