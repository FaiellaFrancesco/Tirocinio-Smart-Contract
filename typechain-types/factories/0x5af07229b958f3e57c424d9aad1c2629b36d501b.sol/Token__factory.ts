/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x5af07229b958f3e57c424d9aad1c2629b36d501b.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueXMONEYILFVKETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061183483398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061183483398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b6114c4806103706000396000f3fe6080604052600436106100ec5760003560e01c806339154c941161008a57806395d89b411161005957806395d89b411461027e578063a9059cbb146102ad578063dd62ed3e146102cd578063ea414b281461031357600080fd5b806339154c94146101f657806370a082311461020b578063715018a6146102415780638da5cb5b1461025657600080fd5b80630faee56f116100c65780630faee56f1461018157806318160ddd146101a557806323b872dd146101ba578063313ce567146101da57600080fd5b806301339c21146100f857806306fdde031461010f578063095ea7b31461015157600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061010d610333565b005b34801561011b57600080fd5b5060408051808201909152600781526658204d6f6e657960c81b60208201525b60405161014891906110b4565b60405180910390f35b34801561015d57600080fd5b5061017161016c366004611117565b6106fc565b6040519015158152602001610148565b34801561018d57600080fd5b5061019760095481565b604051908152602001610148565b3480156101b157600080fd5b50610197610713565b3480156101c657600080fd5b506101716101d5366004611143565b610734565b3480156101e657600080fd5b5060405160098152602001610148565b34801561020257600080fd5b5061010d6107f2565b34801561021757600080fd5b50610197610226366004611184565b6001600160a01b031660009081526001602052604090205490565b34801561024d57600080fd5b5061010d610855565b34801561026257600080fd5b506000546040516001600160a01b039091168152602001610148565b34801561028a57600080fd5b50604080518082019091526006815265584d4f4e455960d01b602082015261013b565b3480156102b957600080fd5b506101716102c8366004611117565b6108c9565b3480156102d957600080fd5b506101976102e83660046111a1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561031f57600080fd5b5061010d61032e366004611184565b6108d6565b6000546001600160a01b031633146103665760405162461bcd60e51b815260040161035d906111da565b60405180910390fd5b600b54600160a01b900460ff16156103c05760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161035d565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561040e913091906103fb9060099061130c565b61040990633b9aca0061131b565b610914565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104859190611332565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b9190611332565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190611332565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306105c4816001600160a01b031660009081526001602052604090205490565b6000806105d96000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610641573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610666919061134f565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f9919061137d565b50565b6000610709338484610914565b5060015b92915050565b60006107216009600a61130c565b61072f90633b9aca0061131b565b905090565b6000610741848484610a38565b3360009081526003602052604090205460ff161580156107965750600b546001600160a01b038581169116148061078357506001600160a01b03831661dead14155b8061079657506001600160a01b03841630145b156107e8576107e8843361040985604051806060016040528060288152602001611467602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e1a565b5060019392505050565b6000546001600160a01b0316331461081c5760405162461bcd60e51b815260040161035d906111da565b6000471161082957600080fd5b60405133904780156108fc02916000818181858888f193505050501580156106f9573d6000803e3d6000fd5b6000546001600160a01b0316331461087f5760405162461bcd60e51b815260040161035d906111da565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610709338484610a38565b3360009081526003602052604090205460ff166108f257600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109765760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035d565b6001600160a01b0382166109d75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a9c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035d565b6001600160a01b038216610afe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035d565b60008111610b605760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161035d565b60006001600160a01b0384163014801590610b8457506001600160a01b0383163014155b15610cbc57600b546001600160a01b038581169116148015610bb45750600a546001600160a01b03848116911614155b8015610bd957506001600160a01b03831660009081526003602052604090205460ff16155b8015610bf357506004546001600160a01b03848116911614155b15610c0e5760088054906000610c088361139f565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c455750600b546001600160a01b038581169116145b8015610c5a5750600b54600160b01b900460ff165b8015610c7457506004546001600160a01b03868116911614155b15610cba578015610cae5760006009548211610c905781610c94565b6009545b9050610cac818511610ca65784610e54565b81610e54565b505b47610cb847610fce565b505b505b6001600160a01b038416600090815260016020526040902054610cdf908361100c565b6001600160a01b038516600090815260016020526040902055610d24610d05838361100c565b6001600160a01b03851660009081526001602052604090205490611055565b6001600160a01b0384166000908152600160205260409020558015610db75730600090815260016020526040902054610d5d9082611055565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dae9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e14576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e02858561100c565b60405190815260200160405180910390a35b50505050565b60008184841115610e3e5760405162461bcd60e51b815260040161035d91906110b4565b506000610e4b84866113b8565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610e9c57610e9c6113cb565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f199190611332565b81600181518110610f2c57610f2c6113cb565b6001600160a01b039283166020918202929092010152600a54610f529130911684610914565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610f8b9085906000908690309042906004016113e1565b600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611008573d6000803e3d6000fd5b5050565b600061104e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e1a565b9392505050565b6000806110628385611453565b90508381101561104e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161035d565b602081526000825180602084015260005b818110156110e257602081860181015160408684010152016110c5565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106f957600080fd5b6000806040838503121561112a57600080fd5b823561113581611102565b946020939093013593505050565b60008060006060848603121561115857600080fd5b833561116381611102565b9250602084013561117381611102565b929592945050506040919091013590565b60006020828403121561119657600080fd5b813561104e81611102565b600080604083850312156111b457600080fd5b82356111bf81611102565b915060208301356111cf81611102565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611260578085048111156112445761124461120f565b600184161561125257908102905b60019390931c928002611229565b935093915050565b6000826112775750600161070d565b816112845750600061070d565b816001811461129a57600281146112a4576112c0565b600191505061070d565b60ff8411156112b5576112b561120f565b50506001821b61070d565b5060208310610133831016604e8410600b84101617156112e3575081810a61070d565b6112f06000198484611225565b80600019048211156113045761130461120f565b029392505050565b600061104e60ff841683611268565b808202811582820484141761070d5761070d61120f565b60006020828403121561134457600080fd5b815161104e81611102565b60008060006060848603121561136457600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561138f57600080fd5b8151801515811461104e57600080fd5b6000600182016113b1576113b161120f565b5060010190565b8181038181111561070d5761070d61120f565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114335783516001600160a01b031683526020938401939092019160010161140c565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561070d5761070d61120f56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122038694c21d58e53ef6ed491e37ff1801089e9fba88be15b0ccf7bc18ed86451c664736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
