/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StandardERC20,
  StandardERC20Interface,
} from "../../0x0e00a624a7df53c2d5fb9650f425d6ecf3e25031.sol/StandardERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052601b60809081527f636f6d706c6574656c79207573656c657373206d656d65636f696e000000000060a05260009061003c90826101be565b5060408051808201909152600381526243554d60e81b602082015260019061006490826101be565b506002805460ff1916601217905534801561007e57600080fd5b50600580546001600160a01b031916339081179091556000818152600360205260408082206b033b2e3c9fd0803ce80000009081905590517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916100e59190815260200190565b60405180910390a360405133906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361027c565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061014957607f821691505b60208210810361016957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101b957806000526020600020601f840160051c810160208510156101965750805b601f840160051c820191505b818110156101b657600081556001016101a2565b50505b505050565b81516001600160401b038111156101d7576101d761011f565b6101eb816101e58454610135565b8461016f565b6020601f82116001811461021f57600083156102075750848201515b600019600385901b1c1916600184901b1784556101b6565b600084815260208120601f198516915b8281101561024f578785015182556020948501946001909201910161022f565b508482101561026d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610a638061028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461013d57806370a082311461015057806395d89b4114610179578063a457c2d714610181578063a9059cbb14610194578063dd62ed3e146101a757600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd1461010b578063313ce5671461011e575b600080fd5b6100b66101e0565b6040516100c3919061080c565b60405180910390f35b6100df6100da366004610876565b61026e565b60405190151581526020016100c3565b6b033b2e3c9fd0803ce80000005b6040519081526020016100c3565b6100df6101193660046108a0565b610305565b60025461012b9060ff1681565b60405160ff90911681526020016100c3565b6100df61014b366004610876565b610557565b6100fd61015e3660046108dd565b6001600160a01b031660009081526003602052604090205490565b6100b661060e565b6100df61018f366004610876565b61061b565b6100df6101a2366004610876565b6106f7565b6100fd6101b53660046108ff565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b600080546101ed90610932565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610932565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b505050505081565b60006001600160a01b03831661029f5760405162461bcd60e51b81526004016102969061096c565b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b03841661036b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610296565b6001600160a01b0383166103915760405162461bcd60e51b8152600401610296906109ae565b6001600160a01b0384166000908152600360205260409020548211156103f95760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742062616c616e636500000000006044820152606401610296565b6001600160a01b038416600090815260046020908152604080832033845290915290205482111561046c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610296565b6001600160a01b03841660009081526003602052604081208054849290610494908490610a07565b90915550506001600160a01b038316600090815260036020526040812080548492906104c1908490610a1a565b90915550506001600160a01b0384166000908152600460209081526040808320338452909152812080548492906104f9908490610a07565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161054591815260200190565b60405180910390a35060019392505050565b60006001600160a01b03831661057f5760405162461bcd60e51b81526004016102969061096c565b3360009081526004602090815260408083206001600160a01b0387168452909152812080548492906105b2908490610a1a565b90915550503360008181526004602090815260408083206001600160a01b038816808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016102f3565b600180546101ed90610932565b60006001600160a01b0383166106435760405162461bcd60e51b81526004016102969061096c565b3360009081526004602090815260408083206001600160a01b03871684529091529020548211156106c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610296565b3360009081526004602090815260408083206001600160a01b0387168452909152812080548492906105b2908490610a07565b60006001600160a01b03831661071f5760405162461bcd60e51b8152600401610296906109ae565b3360009081526003602052604090205482111561077e5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742062616c616e636500000000006044820152606401610296565b336000908152600360205260408120805484929061079d908490610a07565b90915550506001600160a01b038316600090815260036020526040812080548492906107ca908490610a1a565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102f3565b602081526000825180602084015260005b8181101561083a576020818601810151604086840101520161081d565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461087157600080fd5b919050565b6000806040838503121561088957600080fd5b6108928361085a565b946020939093013593505050565b6000806000606084860312156108b557600080fd5b6108be8461085a565b92506108cc6020850161085a565b929592945050506040919091013590565b6000602082840312156108ef57600080fd5b6108f88261085a565b9392505050565b6000806040838503121561091257600080fd5b61091b8361085a565b91506109296020840161085a565b90509250929050565b600181811c9082168061094657607f821691505b60208210810361096657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102ff576102ff6109f1565b808201808211156102ff576102ff6109f156fea26469706673582212208c5ffc88a398c8a990a2dde8d89fd2e834930561115ba5990c6a89a78cffd69164736f6c634300081e0033";

type StandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardERC20__factory extends ContractFactory {
  constructor(...args: StandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StandardERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StandardERC20__factory {
    return super.connect(runner) as StandardERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardERC20Interface {
    return new Interface(_abi) as StandardERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StandardERC20 {
    return new Contract(address, _abi, runner) as unknown as StandardERC20;
  }
}
