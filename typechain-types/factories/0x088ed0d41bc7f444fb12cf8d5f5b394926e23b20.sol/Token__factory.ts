/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x088ed0d41bc7f444fb12cf8d5f5b394926e23b20.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_assist_bnTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_oijboijoiTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_vnbbvlkTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6001819055600281815560146003556000600481905560058290556006919091556007819055815461ffff60a81b19168255600b819055600c5560649061004f90600990610341565b61005d90633b9aca00610357565b610067919061036e565b60115567d02ab486cedc0000601255600a601355600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601080546001600160a01b0319163317905560646100dc6009600a610341565b6100ea90633b9aca00610357565b6100f5906002610357565b6100ff919061036e565b336000908152600d6020526040902055606461011d6009600a610341565b61012b90633b9aca00610357565b610136906062610357565b610140919061036e565b306000908152600d6020908152604080832093909355600f90528181208054600160ff1991821681179092556010546001600160a01b0316835292909120805490921617905561018d3390565b6001600160a01b03166000600080516020611db083398151915260646101b56009600a610341565b6101c390633b9aca00610357565b6101ce906002610357565b6101d8919061036e565b60405190815260200160405180910390a3306000600080516020611db083398151915260646102096009600a610341565b61021790633b9aca00610357565b610222906062610357565b61022c919061036e565b60405190815260200160405180910390a3610390565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102935780850481111561027757610277610242565b600184161561028557908102905b60019390931c92800261025c565b935093915050565b6000826102aa5750600161033b565b816102b75750600061033b565b81600181146102cd57600281146102d7576102f3565b600191505061033b565b60ff8411156102e8576102e8610242565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610316575081810a61033b565b6103236000198484610258565b806000190482111561033757610337610242565b0290505b92915050565b600061035060ff84168361029b565b9392505050565b808202811582820484141761033b5761033b610242565b60008261038b57634e487b7160e01b600052601260045260246000fd5b500490565b611a118061039f6000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063c888c7c611610064578063c888c7c6146102cf578063d02c9383146102e5578063d8fbd06f146102fa578063dd62ed3e14610310578063f5f674311461035657600080fd5b80638da5cb5b1461024657806395d89b411461026e578063a9059cbb1461029a578063bd6c5bae146102ba57600080fd5b8063313ce567116100d1578063313ce567146101c857806370a08231146101e4578063715018a61461021a578063751039fc1461023157600080fd5b806306fdde031461010e578063095ea7b31461015557806318160ddd1461018557806323b872dd146101a857600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600c81526b4c65742048696d20436f6f6b60a01b60208201525b60405161014c91906114cc565b60405180910390f35b34801561016157600080fd5b5061017561017036600461152f565b610376565b604051901515815260200161014c565b34801561019157600080fd5b5061019a61038d565b60405190815260200161014c565b3480156101b457600080fd5b506101756101c336600461155b565b6103ae565b3480156101d457600080fd5b506040516009815260200161014c565b3480156101f057600080fd5b5061019a6101ff36600461159c565b6001600160a01b03166000908152600d602052604090205490565b34801561022657600080fd5b5061022f610426565b005b34801561023d57600080fd5b5061022f6104a3565b34801561025257600080fd5b506000546040516001600160a01b03909116815260200161014c565b34801561027a57600080fd5b506040805180820190915260038152624c484360e81b602082015261013f565b3480156102a657600080fd5b506101756102b536600461152f565b6104cf565b3480156102c657600080fd5b5061022f6104dc565b3480156102db57600080fd5b5061019a60125481565b3480156102f157600080fd5b5061022f610542565b34801561030657600080fd5b5061019a60115481565b34801561031c57600080fd5b5061019a61032b3660046115b9565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205490565b34801561036257600080fd5b5061022f61037136600461159c565b6108fa565b6000610383338484610950565b5060015b92915050565b600061039b6009600a6116ef565b6103a990633b9aca006116fe565b905090565b60006103bb848484610a74565b6103c58484610f51565b1561041c5761041c8433610417856040518060600160405280602881526020016119b4602891396001600160a01b038a166000908152600e602090815260408083203384529091529020549190610fb6565b610950565b5060019392505050565b6000546001600160a01b031633146104595760405162461bcd60e51b815260040161045090611715565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104cd5760405162461bcd60e51b815260040161045090611715565b565b6000610383338484610a74565b6000546001600160a01b031633146105065760405162461bcd60e51b815260040161045090611715565b6000471161051357600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561053f573d6000803e3d6000fd5b50565b6000546001600160a01b0316331461056c5760405162461bcd60e51b815260040161045090611715565b600a54600160a01b900460ff16156105c65760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610450565b600880546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561060f9030906106016009600a6116ef565b61041790633b9aca006116fe565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610686919061174a565b6001600160a01b031663c9c6539630600860009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c919061174a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d919061174a565b600a80546001600160a01b039283166001600160a01b03199091161790556008541663f305d71947306107c5816001600160a01b03166000908152600d602052604090205490565b6000806107da6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610842573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108679190611767565b5050600a805462ff00ff60a01b1981166201000160a01b1790915560085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190611795565b336000908152600f602052604090205460ff1661091657600080fd5b601080546001600160a01b039092166001600160a01b0319909216821790556000908152600f60205260409020805460ff19166001179055565b6001600160a01b0383166109b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610450565b6001600160a01b038216610a135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610450565b6001600160a01b038381166000818152600e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ad85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610450565b6001600160a01b038216610b3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610450565b60008111610b9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610450565b600080546001600160a01b03858116911614801590610bc957506000546001600160a01b03848116911614155b8015610bde57506001600160a01b0384163014155b8015610bf357506001600160a01b0383163014155b15610df357600a54600160a81b900460ff16610c3857610c356064610c2f60055460075411610c2457600354610c28565b6004545b8590610ff0565b90611079565b90505b600a546001600160a01b038581169116148015610c6357506008546001600160a01b03848116911614155b8015610c8857506001600160a01b0383166000908152600f602052604090205460ff16155b8015610ca257506010546001600160a01b03848116911614155b15610cbd5760078054906000610cb7836117b7565b91905055505b306000908152600d602052604081205490546001600160a01b03868116911614801590610cf45750600a54600160a81b900460ff16155b8015610d0d5750600a546001600160a01b038581169116145b8015610d2757506010546001600160a01b03868116911614155b8015610d3c5750600a54600160b01b900460ff165b8015610d4b5750600654600754115b15610df157600c54431115610d60576000600b555b610d69836110bb565b600b54610d7691906117d0565b600b8190556012541015610dbd5760405162461bcd60e51b815260206004820152600e60248201526d13585e081cddd85c081b1a5b5a5d60921b6044820152606401610450565b601154811115610de157610de18360115411610ddb57601154611233565b83611233565b47610deb476113bf565b5043600c555b505b6001600160a01b0384166000908152600d6020526040902054610e1690836113fd565b6001600160a01b0385166000908152600d6020526040902055610e5b610e3c83836113fd565b6001600160a01b0385166000908152600d60205260409020549061143f565b6001600160a01b0384166000908152600d60205260409020558015610eee57306000908152600d6020526040902054610e94908261143f565b306000818152600d6020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ee59085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f4b576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f3985856113fd565b60405190815260200160405180910390a35b50505050565b336000908152600f602052604081205460ff1615610f835750336000908152600f602052604090205460ff1615610387565b600a546001600160a01b0384811691161480610faa57506001600160a01b03821661dead14155b61038357506000610387565b60008184841115610fda5760405162461bcd60e51b815260040161045091906114cc565b506000610fe784866117e3565b95945050505050565b60008260000361100257506000610387565b600061100e83856116fe565b90508261101b85836117f6565b146110725760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610450565b9392505050565b600061107283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061149e565b6040805160028082526060820183526000928392919060208301908036833701905050905030816000815181106110f4576110f461182e565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561114d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611171919061174a565b816001815181106111845761118461182e565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b8152600092919091169063d06ca61f906111c89087908690600401611889565b600060405180830381865afa1580156111e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261120d91908101906118aa565b9050806001815181106112225761122261182e565b602002602001015192505050919050565b600a805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061127b5761127b61182e565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f8919061174a565b8160018151811061130b5761130b61182e565b6001600160a01b0392831660209182029290920101526008546113319130911684610950565b600854600980546001600160a01b0319166001600160a01b03909216918217905560405163791ac94760e01b815263791ac9479061137c908590600090869030904290600401611977565b600060405180830381600087803b15801561139657600080fd5b505af11580156113aa573d6000803e3d6000fd5b5050600a805460ff60a81b1916905550505050565b6010546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113f9573d6000803e3d6000fd5b5050565b600061107283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fb6565b60008061144c83856117d0565b9050838110156110725760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610450565b600081836114bf5760405162461bcd60e51b815260040161045091906114cc565b506000610fe784866117f6565b602081526000825180602084015260005b818110156114fa57602081860181015160408684010152016114dd565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461053f57600080fd5b6000806040838503121561154257600080fd5b823561154d8161151a565b946020939093013593505050565b60008060006060848603121561157057600080fd5b833561157b8161151a565b9250602084013561158b8161151a565b929592945050506040919091013590565b6000602082840312156115ae57600080fd5b81356110728161151a565b600080604083850312156115cc57600080fd5b82356115d78161151a565b915060208301356115e78161151a565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561164357808504811115611627576116276115f2565b600184161561163557908102905b60019390931c92800261160c565b935093915050565b60008261165a57506001610387565b8161166757506000610387565b816001811461167d5760028114611687576116a3565b6001915050610387565b60ff841115611698576116986115f2565b50506001821b610387565b5060208310610133831016604e8410600b84101617156116c6575081810a610387565b6116d36000198484611608565b80600019048211156116e7576116e76115f2565b029392505050565b600061107260ff84168361164b565b8082028115828204841417610387576103876115f2565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561175c57600080fd5b81516110728161151a565b60008060006060848603121561177c57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117a757600080fd5b8151801515811461107257600080fd5b6000600182016117c9576117c96115f2565b5060010190565b80820180821115610387576103876115f2565b81810381811115610387576103876115f2565b60008261181357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561187f5781516001600160a01b0316865260209586019590910190600101611858565b5093949350505050565b8281526040602082015260006118a26040830184611844565b949350505050565b6000602082840312156118bc57600080fd5b815167ffffffffffffffff8111156118d357600080fd5b8201601f810184136118e457600080fd5b805167ffffffffffffffff8111156118fe576118fe611818565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561192b5761192b611818565b60405291825260208184018101929081018784111561194957600080fd5b6020850194505b8385101561196c57845180825260209586019590935001611950565b509695505050505050565b85815284602082015260a06040820152600061199660a0830186611844565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212207b9c215827746191851c1e2c0057d8d5022bba59d36de6c92a5fa13479796c4864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
