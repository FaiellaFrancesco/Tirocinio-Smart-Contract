/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x3fd42d4b85c826b649c135ac2744a12be510ddd4.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b919061027b565b61004990633b9aca00610291565b61005391906102a8565b600e556000600f8190556011805461ffff60a81b191690556012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556101096009600a61027b565b61011790633b9aca00610291565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101586009600a61027b565b61016690633b9aca00610291565b60405190815260200160405180910390a36102ca565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101cd578085048111156101b1576101b161017c565b60018416156101bf57908102905b60019390931c928002610196565b935093915050565b6000826101e457506001610275565b816101f157506000610275565b816001811461020757600281146102115761022d565b6001915050610275565b60ff8411156102225761022261017c565b50506001821b610275565b5060208310610133831016604e8410600b8410161715610250575081810a610275565b61025d6000198484610192565b80600019048211156102715761027161017c565b0290505b92915050565b600061028a60ff8416836101d5565b9392505050565b80820281158282048414176102755761027561017c565b6000826102c557634e487b7160e01b600052601260045260246000fd5b500490565b6119e1806102d96000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102b5578063a9059cbb146102e4578063d02c938314610304578063dd62ed3e14610319578063f5f674311461035f57600080fd5b806370a082311461022d578063715018a614610263578063751039fc146102785780638da5cb5b1461028d57600080fd5b806320800a00116100d157806320800a00146101c457806323b872dd146101db578063313ce567146101fb5780636482c89a1461021757600080fd5b806306fdde031461010e578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526012815271436c6f736564344d617850726f666974414960701b60208201525b604051610152919061149c565b60405180910390f35b34801561016757600080fd5b5061017b6101763660046114ff565b61037f565b6040519015158152602001610152565b34801561019757600080fd5b506101a1600e5481565b604051908152602001610152565b3480156101bb57600080fd5b506101a1610396565b3480156101d057600080fd5b506101d96103b7565b005b3480156101e757600080fd5b5061017b6101f636600461152b565b610426565b34801561020757600080fd5b5060405160098152602001610152565b34801561022357600080fd5b506101a1600f5481565b34801561023957600080fd5b506101a161024836600461156c565b6001600160a01b031660009081526001602052604090205490565b34801561026f57600080fd5b506101d96104d6565b34801561028457600080fd5b506101d961054a565b34801561029957600080fd5b506000546040516001600160a01b039091168152602001610152565b3480156102c157600080fd5b5060408051808201909152600681526543344d50414960d01b6020820152610145565b3480156102f057600080fd5b5061017b6102ff3660046114ff565b610576565b34801561031057600080fd5b506101d9610583565b34801561032557600080fd5b506101a1610334366004611589565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036b57600080fd5b506101d961037a36600461156c565b61093b565b600061038c338484610991565b5060015b92915050565b60006103a46009600a6116bf565b6103b290633b9aca006116ce565b905090565b6000546001600160a01b031633146103ea5760405162461bcd60e51b81526004016103e1906116e5565b60405180910390fd5b600047116103f757600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610423573d6000803e3d6000fd5b50565b6000610433848484610ab5565b3360009081526003602052604090205460ff1615801561047557506011546001600160a01b038581169116148061047557506001600160a01b03831661dead14155b156104cc576104cc84336104c785604051806060016040528060288152602001611984602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f82565b610991565b5060019392505050565b6000546001600160a01b031633146105005760405162461bcd60e51b81526004016103e1906116e5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105745760405162461bcd60e51b81526004016103e1906116e5565b565b600061038c338484610ab5565b6000546001600160a01b031633146105ad5760405162461bcd60e51b81526004016103e1906116e5565b601154600160a01b900460ff16156106075760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103e1565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106509030906106426009600a6116bf565b6104c790633b9aca006116ce565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c7919061171a565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d919061171a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be919061171a565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d7194730610806816001600160a01b031660009081526001602052604090205490565b60008061081b6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610883573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108a89190611737565b50506011805462ff00ff60a01b1981166201000160a01b1790915560105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610917573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190611765565b3360009081526003602052604090205460ff1661095757600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b0383166109f35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e1565b6001600160a01b038216610a545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e1565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b195760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e1565b6001600160a01b038216610b7b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e1565b60008111610bdd5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103e1565b60006001600160a01b0384163014801590610c0157506001600160a01b0383163014155b15610e2457601154600160a81b900460ff16610c4657610c436064610c3d60075460085411610c3257600554610c36565b6006545b8590610fbc565b90611045565b90505b6011546001600160a01b038581169116148015610c7157506010546001600160a01b03848116911614155b8015610c9657506001600160a01b03831660009081526003602052604090205460ff16155b8015610cb057506004546001600160a01b03848116911614155b15610cf5574360095414610cc8576000600a55436009555b81600a6000828254610cda9190611787565b909155505060088054906000610cef8361179a565b91905055505b6011546001600160a01b038481169116148015610d1b57506001600160a01b0384163014155b15610d7657610d28611087565b600a541080610d3957504360095414155b610d765760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103e1565b30600090815260016020526040902054601154600160a81b900460ff16158015610dad57506011546001600160a01b038581169116145b8015610dc25750601154600160b01b900460ff165b8015610ddc57506004546001600160a01b03868116911614155b15610e22578015610e16576000600e548211610df85781610dfc565b600e545b9050610e14818511610e0e5784611215565b81611215565b505b47610e204761138f565b505b505b6001600160a01b038416600090815260016020526040902054610e4790836113cd565b6001600160a01b038516600090815260016020526040902055610e8c610e6d83836113cd565b6001600160a01b0385166000908152600160205260409020549061140f565b6001600160a01b0384166000908152600160205260409020558015610f1f5730600090815260016020526040902054610ec5908261140f565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f169085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f7c576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6a85856113cd565b60405190815260200160405180910390a35b50505050565b60008184841115610fa65760405162461bcd60e51b81526004016103e1919061149c565b506000610fb384866117b3565b95945050505050565b600082600003610fce57506000610390565b6000610fda83856116ce565b905082610fe785836117c6565b1461103e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103e1565b9392505050565b600061103e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061146e565b604080516002808252606082018352600092839291906020830190803683375050601054604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611119919061171a565b8160008151811061112c5761112c6117fe565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611160576111606117fe565b6001600160a01b03928316602091820292909201015260105460405163d06ca61f60e01b8152600092919091169063d06ca61f906111ac9067d02ab486cedc0000908690600401611859565b600060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f1919081019061187a565b905080600181518110611206576112066117fe565b60200260200101519250505090565b6011805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061125d5761125d6117fe565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da919061171a565b816001815181106112ed576112ed6117fe565b6001600160a01b0392831660209182029290920101526010546113139130911684610991565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac9479061134c908590600090869030904290600401611947565b600060405180830381600087803b15801561136657600080fd5b505af115801561137a573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113c9573d6000803e3d6000fd5b5050565b600061103e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f82565b60008061141c8385611787565b90508381101561103e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103e1565b6000818361148f5760405162461bcd60e51b81526004016103e1919061149c565b506000610fb384866117c6565b602081526000825180602084015260005b818110156114ca57602081860181015160408684010152016114ad565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461042357600080fd5b6000806040838503121561151257600080fd5b823561151d816114ea565b946020939093013593505050565b60008060006060848603121561154057600080fd5b833561154b816114ea565b9250602084013561155b816114ea565b929592945050506040919091013590565b60006020828403121561157e57600080fd5b813561103e816114ea565b6000806040838503121561159c57600080fd5b82356115a7816114ea565b915060208301356115b7816114ea565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611613578085048111156115f7576115f76115c2565b600184161561160557908102905b60019390931c9280026115dc565b935093915050565b60008261162a57506001610390565b8161163757506000610390565b816001811461164d576002811461165757611673565b6001915050610390565b60ff841115611668576116686115c2565b50506001821b610390565b5060208310610133831016604e8410600b8410161715611696575081810a610390565b6116a360001984846115d8565b80600019048211156116b7576116b76115c2565b029392505050565b600061103e60ff84168361161b565b8082028115828204841417610390576103906115c2565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172c57600080fd5b815161103e816114ea565b60008060006060848603121561174c57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177757600080fd5b8151801515811461103e57600080fd5b80820180821115610390576103906115c2565b6000600182016117ac576117ac6115c2565b5060010190565b81810381811115610390576103906115c2565b6000826117e357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561184f5781516001600160a01b0316865260209586019590910190600101611828565b5093949350505050565b8281526040602082015260006118726040830184611814565b949350505050565b60006020828403121561188c57600080fd5b815167ffffffffffffffff8111156118a357600080fd5b8201601f810184136118b457600080fd5b805167ffffffffffffffff8111156118ce576118ce6117e8565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118fb576118fb6117e8565b60405291825260208184018101929081018784111561191957600080fd5b6020850194505b8385101561193c57845180825260209586019590935001611920565b509695505050505050565b85815284602082015260a06040820152600061196660a0830186611814565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d9c8d1f84c3a81823f5ad560e5b5070dbb6a5f9d96c0210486feae673100cd7864736f6c634300081e0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
