/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  ETH,
  ETHInterface,
} from "../../0x5d974ee39def39b9727852bb4fd56206c4383da6.sol/ETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_ETHThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ETHamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119dc8061029c6000396000f3fe60806040526004361061010d5760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b146102bd57806395d89b41146102e5578063a9059cbb14610311578063dd62ed3e14610331578063ea414b281461037757600080fd5b806370a0823114610248578063715018a61461027e578063751039fc146102935780638a8c523c146102a857600080fd5b806318160ddd116100dc57806318160ddd146101ca57806320800a00146101df5780632243019b146101f657806323b872dd1461020c578063313ce5671461022c57600080fd5b806306fdde0314610119578063095ea7b3146101605780630d530bc5146101905780630faee56f146101b457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152600c81526b0a6e2ead2e4e4cad8408aa8960a31b60208201525b6040516101579190611497565b60405180910390f35b34801561016c57600080fd5b5061018061017b3660046114fa565b610397565b6040519015158152602001610157565b34801561019c57600080fd5b506101a6600e5481565b604051908152602001610157565b3480156101c057600080fd5b506101a6600c5481565b3480156101d657600080fd5b506101a66103ae565b3480156101eb57600080fd5b506101f46103cf565b005b34801561020257600080fd5b506101a6600d5481565b34801561021857600080fd5b50610180610227366004611526565b61043e565b34801561023857600080fd5b5060405160098152602001610157565b34801561025457600080fd5b506101a6610263366004611567565b6001600160a01b031660009081526001602052604090205490565b34801561028a57600080fd5b506101f46104e9565b34801561029f57600080fd5b506101f461055d565b3480156102b457600080fd5b506101f4610589565b3480156102c957600080fd5b506000546040516001600160a01b039091168152602001610157565b3480156102f157600080fd5b5060408051808201909152600381526208aa8960eb1b602082015261014a565b34801561031d57600080fd5b5061018061032c3660046114fa565b610941565b34801561033d57600080fd5b506101a661034c366004611584565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561038357600080fd5b506101f4610392366004611567565b61094e565b60006103a433848461098c565b5060015b92915050565b60006103bc6009600a6116ba565b6103ca906305f5e1006116c9565b905090565b6000546001600160a01b031633146104025760405162461bcd60e51b81526004016103f9906116e0565b60405180910390fd5b6000471161040f57600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561043b573d6000803e3d6000fd5b50565b600061044b848484610ab0565b6004546001600160a01b0316331480159061048857506010546001600160a01b038581169116148061048857506001600160a01b03831661dead14155b156104df576104df84336104da8560405180606001604052806028815260200161197f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f7d565b61098c565b5060019392505050565b6000546001600160a01b031633146105135760405162461bcd60e51b81526004016103f9906116e0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105875760405162461bcd60e51b81526004016103f9906116e0565b565b6000546001600160a01b031633146105b35760405162461bcd60e51b81526004016103f9906116e0565b601054600160a01b900460ff161561060d5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103f9565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106569030906106486009600a6116ba565b6104da906305f5e1006116c9565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611715565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611715565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190611715565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d719473061080c816001600160a01b031660009081526001602052604090205490565b6000806108216000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610889573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108ae9190611732565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190611760565b60006103a4338484610ab0565b3360009081526003602052604090205460ff1661096a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b6001600160a01b038216610a4f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b145760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f9565b6001600160a01b038216610b765760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f9565b60008111610bd85760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103f9565b60006001600160a01b0384163014801590610bfc57506001600160a01b0383163014155b15610e1f57601054600160a81b900460ff16610c4157610c3e6064610c3860075460085411610c2d57600554610c31565b6006545b8590610fb7565b90611040565b90505b6010546001600160a01b038581169116148015610c6c5750600f546001600160a01b03848116911614155b8015610c9157506001600160a01b03831660009081526003602052604090205460ff16155b8015610cab57506004546001600160a01b03848116911614155b15610cf0574360095414610cc3576000600a55436009555b81600a6000828254610cd59190611782565b909155505060088054906000610cea83611795565b91905055505b6010546001600160a01b038481169116148015610d1657506001600160a01b0384163014155b15610d7157610d23611082565b600a541080610d3457504360095414155b610d715760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103f9565b30600090815260016020526040902054601054600160a81b900460ff16158015610da857506010546001600160a01b038581169116145b8015610dbd5750601054600160b01b900460ff165b8015610dd757506004546001600160a01b03868116911614155b15610e1d578015610e11576000600c548211610df35781610df7565b600c545b9050610e0f818511610e095784611210565b81611210565b505b47610e1b4761138a565b505b505b6001600160a01b038416600090815260016020526040902054610e4290836113c8565b6001600160a01b038516600090815260016020526040902055610e87610e6883836113c8565b6001600160a01b0385166000908152600160205260409020549061140a565b6001600160a01b0384166000908152600160205260409020558015610f1a5730600090815260016020526040902054610ec0908261140a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f119085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f77576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6585856113c8565b60405190815260200160405180910390a35b50505050565b60008184841115610fa15760405162461bcd60e51b81526004016103f99190611497565b506000610fae84866117ae565b95945050505050565b600082600003610fc9575060006103a8565b6000610fd583856116c9565b905082610fe285836117c1565b146110395760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103f9565b9392505050565b600061103983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611469565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111149190611715565b81600081518110611127576111276117f9565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061115b5761115b6117f9565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111a7906729a2241af62c0000908690600401611854565b600060405180830381865afa1580156111c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ec9190810190611875565b905080600181518110611201576112016117f9565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611258576112586117f9565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d59190611715565b816001815181106112e8576112e86117f9565b6001600160a01b039283166020918202929092010152600f5461130e913091168461098c565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611347908590600090869030904290600401611942565b600060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113c4573d6000803e3d6000fd5b5050565b600061103983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f7d565b6000806114178385611782565b9050838110156110395760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103f9565b6000818361148a5760405162461bcd60e51b81526004016103f99190611497565b506000610fae84866117c1565b602081526000825180602084015260005b818110156114c557602081860181015160408684010152016114a8565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461043b57600080fd5b6000806040838503121561150d57600080fd5b8235611518816114e5565b946020939093013593505050565b60008060006060848603121561153b57600080fd5b8335611546816114e5565b92506020840135611556816114e5565b929592945050506040919091013590565b60006020828403121561157957600080fd5b8135611039816114e5565b6000806040838503121561159757600080fd5b82356115a2816114e5565b915060208301356115b2816114e5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561160e578085048111156115f2576115f26115bd565b600184161561160057908102905b60019390931c9280026115d7565b935093915050565b600082611625575060016103a8565b81611632575060006103a8565b816001811461164857600281146116525761166e565b60019150506103a8565b60ff841115611663576116636115bd565b50506001821b6103a8565b5060208310610133831016604e8410600b8410161715611691575081810a6103a8565b61169e60001984846115d3565b80600019048211156116b2576116b26115bd565b029392505050565b600061103960ff841683611616565b80820281158282048414176103a8576103a86115bd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172757600080fd5b8151611039816114e5565b60008060006060848603121561174757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177257600080fd5b8151801515811461103957600080fd5b808201808211156103a8576103a86115bd565b6000600182016117a7576117a76115bd565b5060010190565b818103818111156103a8576103a86115bd565b6000826117de57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561184a5781516001600160a01b0316865260209586019590910190600101611823565b5093949350505050565b82815260406020820152600061186d604083018461180f565b949350505050565b60006020828403121561188757600080fd5b815167ffffffffffffffff81111561189e57600080fd5b8201601f810184136118af57600080fd5b805167ffffffffffffffff8111156118c9576118c96117e3565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118f6576118f66117e3565b60405291825260208184018101929081018784111561191457600080fd5b6020850194505b838510156119375784518082526020958601959093500161191b565b509695505050505050565b85815284602082015260a06040820152600061196160a083018661180f565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206f91c067834465c70ed2d302e8e6878cca21d128f3ca75ea7d1752b9e26ce9c664736f6c634300081e0033";

type ETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETH__factory extends ContractFactory {
  constructor(...args: ETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETH__factory {
    return super.connect(runner) as ETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHInterface {
    return new Interface(_abi) as ETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ETH {
    return new Contract(address, _abi, runner) as unknown as ETH;
  }
}
