/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UnifyAI,
  UnifyAIInterface,
} from "../../0x06ebadf2c4f083ea7937deae0071dcc0bf7d8552.sol/UnifyAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260196005556019600655600560075560056008556014600955601e600a55601e600b556000600c556012600a6200003c91906200033b565b6200004b906298968062000353565b600d556200005c6012600a6200033b565b6200006b906298968062000353565b600e556200007c6012600a6200033b565b6200008b906298968062000353565b600f556200009c6012600a6200033b565b620000ab906298968062000353565b6010556012805461ffff60a81b19169055348015620000c957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556200012b6012600a6200033b565b6200013b90633b9aca0062000353565b336000908152600160208190526040822092909255600390620001666000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600454909116835291208054909216179055620001c53390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001ff6012600a6200033b565b6200020f90633b9aca0062000353565b60405190815260200160405180910390a36200036d565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200027d57816000190482111562000261576200026162000226565b808516156200026f57918102915b93841c939080029062000241565b509250929050565b600082620002965750600162000335565b81620002a55750600062000335565b8160018114620002be5760028114620002c957620002e9565b600191505062000335565b60ff841115620002dd57620002dd62000226565b50506001821b62000335565b5060208310610133831016604e8410600b84101617156200030e575081810a62000335565b6200031a83836200023c565b806000190482111562000331576200033162000226565b0290505b92915050565b60006200034c60ff84168362000285565b9392505050565b808202811582820484141762000335576200033562000226565b611767806200037d6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806395d89b411161006457806395d89b41146102cc578063a9059cbb146102fa578063bf474bed1461031a578063c9567bf914610330578063dd62ed3e1461034557600080fd5b8063751039fc146102635780637d1db4a5146102785780638da5cb5b1461028e5780638f9a55c0146102b657600080fd5b806323b872dd116100dc57806323b872dd146101c5578063313ce567146101e557806351bc3c851461020157806370a0823114610218578063715018a61461024e57600080fd5b806306fdde0314610119578063095ea7b31461015c5780630faee56f1461018c57806318160ddd146101b057600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50604080518082019091526008815267556e69667920414960c01b60208201525b6040516101539190611336565b60405180910390f35b34801561016857600080fd5b5061017c61017736600461139c565b61038b565b6040519015158152602001610153565b34801561019857600080fd5b506101a260105481565b604051908152602001610153565b3480156101bc57600080fd5b506101a26103a2565b3480156101d157600080fd5b5061017c6101e03660046113c8565b6103c3565b3480156101f157600080fd5b5060405160128152602001610153565b34801561020d57600080fd5b5061021661042c565b005b34801561022457600080fd5b506101a2610233366004611409565b6001600160a01b031660009081526001602052604090205490565b34801561025a57600080fd5b5061021661047f565b34801561026f57600080fd5b506102166104fc565b34801561028457600080fd5b506101a2600d5481565b34801561029a57600080fd5b506000546040516001600160a01b039091168152602001610153565b3480156102c257600080fd5b506101a2600e5481565b3480156102d857600080fd5b50604080518082019091526005815264554e49465960d81b6020820152610146565b34801561030657600080fd5b5061017c61031536600461139c565b6105ae565b34801561032657600080fd5b506101a2600f5481565b34801561033c57600080fd5b506102166105bb565b34801561035157600080fd5b506101a2610360366004611426565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000610398338484610977565b5060015b92915050565b60006103b06012600a611559565b6103be90633b9aca00611568565b905090565b60006103d0848484610a9b565b610422843361041d8560405180606001604052806028815260200161170a602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f99565b610977565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461044c57600080fd5b30600090815260016020526040902054801561046b5761046b81610fd3565b47801561047b5761047b8161114d565b5050565b6000546001600160a01b031633146104b25760405162461bcd60e51b81526004016104a99061157f565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105265760405162461bcd60e51b81526004016104a99061157f565b6105326012600a611559565b61054090633b9aca00611568565b600d5561054f6012600a611559565b61055d90633b9aca00611568565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61058d6012600a611559565b61059b90633b9aca00611568565b60405190815260200160405180910390a1565b6000610398338484610a9b565b6000546001600160a01b031633146105e55760405162461bcd60e51b81526004016104a99061157f565b601254600160a01b900460ff161561063f5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104a9565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561068890309061067a6012600a611559565b61041d90633b9aca00611568565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906115b4565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078591906115b4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f691906115b4565b601280546001600160a01b039283166001600160a01b03199091161790556011541663f305d719473061083e816001600160a01b031660009081526001602052604090205490565b6000806108536000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108bb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108e091906115d1565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d91906115ff565b506012805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b0383166109d95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a9565b6001600160a01b038216610a3a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a9565b6001600160a01b038216610b615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a9565b60008111610bc35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104a9565b600080546001600160a01b03858116911614801590610bf057506000546001600160a01b03848116911614155b15610e5657610c216064610c1b600a54600c5411610c1057600554610c14565b6007545b8590611187565b90611210565b6012549091506001600160a01b038581169116148015610c4f57506011546001600160a01b03848116911614155b8015610c7457506001600160a01b03831660009081526003602052604090205460ff16155b15610d5c57600d54821115610ccb5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104a9565b600e5482610cee856001600160a01b031660009081526001602052604090205490565b610cf89190611621565b1115610d465760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104a9565b600c8054906000610d5683611634565b91905055505b6012546001600160a01b038481169116148015610d8257506001600160a01b0384163014155b15610daf57610dac6064610c1b600b54600c5411610da257600654610c14565b6008548590611187565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610de657506012546001600160a01b038581169116145b8015610dfb5750601254600160b01b900460ff165b8015610e085750600f5481115b8015610e175750600954600c54115b15610e5457610e39610e3484610e2f84601054611252565b611252565b610fd3565b4766b1a2bc2ec50000811115610e5257610e524761114d565b505b505b8015610ed05730600090815260016020526040902054610e769082611267565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ec79085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610ef390836112c6565b6001600160a01b038516600090815260016020526040902055610f38610f1983836112c6565b6001600160a01b03851660009081526001602052604090205490611267565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f8285856112c6565b60405190815260200160405180910390a350505050565b60008184841115610fbd5760405162461bcd60e51b81526004016104a99190611336565b506000610fca848661164d565b95945050505050565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061101b5761101b611660565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109891906115b4565b816001815181106110ab576110ab611660565b6001600160a01b0392831660209182029290920101526011546110d19130911684610977565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac9479061110a908590600090869030904290600401611676565b600060405180830381600087803b15801561112457600080fd5b505af1158015611138573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561047b573d6000803e3d6000fd5b6000826000036111995750600061039c565b60006111a58385611568565b9050826111b285836116e7565b146112095760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104a9565b9392505050565b600061120983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611308565b60008183116112615782611209565b50919050565b6000806112748385611621565b9050838110156112095760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104a9565b600061120983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f99565b600081836113295760405162461bcd60e51b81526004016104a99190611336565b506000610fca84866116e7565b600060208083528351808285015260005b8181101561136357858101830151858201604001528201611347565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461139957600080fd5b50565b600080604083850312156113af57600080fd5b82356113ba81611384565b946020939093013593505050565b6000806000606084860312156113dd57600080fd5b83356113e881611384565b925060208401356113f881611384565b929592945050506040919091013590565b60006020828403121561141b57600080fd5b813561120981611384565b6000806040838503121561143957600080fd5b823561144481611384565b9150602083013561145481611384565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156114b05781600019048211156114965761149661145f565b808516156114a357918102915b93841c939080029061147a565b509250929050565b6000826114c75750600161039c565b816114d45750600061039c565b81600181146114ea57600281146114f457611510565b600191505061039c565b60ff8411156115055761150561145f565b50506001821b61039c565b5060208310610133831016604e8410600b8410161715611533575081810a61039c565b61153d8383611475565b80600019048211156115515761155161145f565b029392505050565b600061120960ff8416836114b8565b808202811582820484141761039c5761039c61145f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115c657600080fd5b815161120981611384565b6000806000606084860312156115e657600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561161157600080fd5b8151801515811461120957600080fd5b8082018082111561039c5761039c61145f565b6000600182016116465761164661145f565b5060010190565b8181038181111561039c5761039c61145f565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156116c65784516001600160a01b0316835293830193918301916001016116a1565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261170457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122025980c0e076be36f9a1803f4d593ad94cccc2e93aa775cc0199a85c43ddc796564736f6c63430008140033";

type UnifyAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnifyAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnifyAI__factory extends ContractFactory {
  constructor(...args: UnifyAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UnifyAI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UnifyAI__factory {
    return super.connect(runner) as UnifyAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnifyAIInterface {
    return new Interface(_abi) as UnifyAIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UnifyAI {
    return new Contract(address, _abi, runner) as unknown as UnifyAI;
  }
}
