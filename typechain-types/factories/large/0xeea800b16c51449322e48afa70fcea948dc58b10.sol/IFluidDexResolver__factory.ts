/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFluidDexResolver,
  IFluidDexResolverInterface,
} from "../../../large/0xeea800b16c51449322e48afa70fcea948dc58b10.sol/IFluidDexResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesAmt_",
        type: "uint256",
      },
    ],
    name: "estimateBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesAmt_",
        type: "uint256",
      },
    ],
    name: "estimateDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesAmt_",
        type: "uint256",
      },
    ],
    name: "estimatePayback",
    outputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxToken0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxToken1_",
        type: "uint256",
      },
    ],
    name: "estimatePaybackPerfectInOneToken",
    outputs: [
      {
        internalType: "uint256",
        name: "paybackAmt_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amt_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesAmt_",
        type: "uint256",
      },
    ],
    name: "estimateWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minToken0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minToken1_",
        type: "uint256",
      },
    ],
    name: "estimateWithdrawPerfectInOneToken",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawAmt_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
    ],
    name: "getDexEntireData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dex",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "dexId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "liquidity",
                type: "address",
              },
              {
                internalType: "address",
                name: "factory",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "shift",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "admin",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "colOperations",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "debtOperations",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "perfectOperationsAndOracle",
                    type: "address",
                  },
                ],
                internalType: "struct IFluidDexT1.Implementations",
                name: "implementations",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "deployerContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "supplyToken0Slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "borrowToken0Slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "supplyToken1Slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "borrowToken1Slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "exchangePriceToken0Slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "exchangePriceToken1Slot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "oracleMapping",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexT1.ConstantViews",
            name: "constantViews",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "token0NumeratorPrecision",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token0DenominatorPrecision",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1NumeratorPrecision",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1DenominatorPrecision",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexT1.ConstantViews2",
            name: "constantViews2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isSmartCollateralEnabled",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSmartDebtEnabled",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "revenueCut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperRange",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lowerRange",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperShiftThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lowerShiftThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shiftingTime",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "centerPriceAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "hookAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxCenterPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minCenterPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "utilizationLimitToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "utilizationLimitToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxSupplyShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxBorrowShares",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexResolver.Configs",
            name: "configs",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastStoredPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "centerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperRange",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lowerRange",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "geometricMean",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supplyToken0ExchangePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowToken0ExchangePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supplyToken1ExchangePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowToken1ExchangePrice",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexT1.PricesAndExchangePrice",
            name: "pex",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "token0RealReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1RealReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token0ImaginaryReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1ImaginaryReserves",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexT1.CollateralReserves",
            name: "colReserves",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "token0Debt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1Debt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token0RealReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1RealReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token0ImaginaryReserves",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1ImaginaryReserves",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexT1.DebtReserves",
            name: "debtReserves",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lastToLastStoredPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastStoredPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "centerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdateTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastPricesTimeDiff",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleCheckPoint",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleMapping",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalSupplyShares",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowShares",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isSwapAndArbitragePaused",
                type: "bool",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isRangeChangeActive",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isThresholdChangeActive",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isCenterPriceShiftActive",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "oldUpper",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "oldLower",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "duration",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "startTimestamp",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "oldTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IFluidDexResolver.ShiftData",
                    name: "rangeShift",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "oldUpper",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "oldLower",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "duration",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "startTimestamp",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "oldTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IFluidDexResolver.ShiftData",
                    name: "thresholdShift",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "shiftPercentage",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "duration",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "startTimestamp",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IFluidDexResolver.CenterPriceShift",
                    name: "centerPriceShift",
                    type: "tuple",
                  },
                ],
                internalType: "struct IFluidDexResolver.ShiftChanges",
                name: "shifts",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "token0PerSupplyShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1PerSupplyShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token0PerBorrowShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "token1PerBorrowShare",
                type: "uint256",
              },
            ],
            internalType: "struct IFluidDexResolver.DexState",
            name: "dexState",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "liquiditySupplyToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquiditySupplyToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityBorrowToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityBorrowToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityWithdrawableToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityWithdrawableToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityBorrowableToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityBorrowableToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "utilizationLimitToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "utilizationLimitToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawableUntilUtilizationLimitToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawableUntilUtilizationLimitToken1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableUntilUtilizationLimitToken0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableUntilUtilizationLimitToken1",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modeWithInterest",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "supply",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandPercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseWithdrawalLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawableUntilLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawable",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.UserSupplyData",
                name: "liquidityUserSupplyDataToken0",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modeWithInterest",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "supply",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandPercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseWithdrawalLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawableUntilLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawable",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.UserSupplyData",
                name: "liquidityUserSupplyDataToken1",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modeWithInterest",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "borrow",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandPercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseBorrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBorrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowableUntilLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowable",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowLimitUtilization",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.UserBorrowData",
                name: "liquidityUserBorrowDataToken0",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modeWithInterest",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "borrow",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandPercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "expandDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseBorrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBorrowLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowableUntilLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowable",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowLimitUtilization",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.UserBorrowData",
                name: "liquidityUserBorrowDataToken1",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastStoredUtilization",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "storageUpdateThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyExchangePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowExchangePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyRawInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyInterestFree",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowRawInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowInterestFree",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalBorrow",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "revenue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxUtilization",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "token",
                            type: "address",
                          },
                          {
                            internalType: "uint256",
                            name: "kink",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationZero",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationMax",
                            type: "uint256",
                          },
                        ],
                        internalType:
                          "struct IFluidLiquidityResolverStructs.RateDataV1Params",
                        name: "rateDataV1",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "token",
                            type: "address",
                          },
                          {
                            internalType: "uint256",
                            name: "kink1",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "kink2",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationZero",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink1",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink2",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationMax",
                            type: "uint256",
                          },
                        ],
                        internalType:
                          "struct IFluidLiquidityResolverStructs.RateDataV2Params",
                        name: "rateDataV2",
                        type: "tuple",
                      },
                    ],
                    internalType:
                      "struct IFluidLiquidityResolverStructs.RateData",
                    name: "rateData",
                    type: "tuple",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.OverallTokenData",
                name: "liquidityTokenData0",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastStoredUtilization",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "storageUpdateThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastUpdateTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyExchangePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowExchangePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyRawInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "supplyInterestFree",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowRawInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowInterestFree",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalBorrow",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "revenue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxUtilization",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "version",
                        type: "uint256",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "token",
                            type: "address",
                          },
                          {
                            internalType: "uint256",
                            name: "kink",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationZero",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationMax",
                            type: "uint256",
                          },
                        ],
                        internalType:
                          "struct IFluidLiquidityResolverStructs.RateDataV1Params",
                        name: "rateDataV1",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "token",
                            type: "address",
                          },
                          {
                            internalType: "uint256",
                            name: "kink1",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "kink2",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationZero",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink1",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationKink2",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "rateAtUtilizationMax",
                            type: "uint256",
                          },
                        ],
                        internalType:
                          "struct IFluidLiquidityResolverStructs.RateDataV2Params",
                        name: "rateDataV2",
                        type: "tuple",
                      },
                    ],
                    internalType:
                      "struct IFluidLiquidityResolverStructs.RateData",
                    name: "rateData",
                    type: "tuple",
                  },
                ],
                internalType:
                  "struct IFluidLiquidityResolverStructs.OverallTokenData",
                name: "liquidityTokenData1",
                type: "tuple",
              },
            ],
            internalType: "struct IFluidDexResolver.SwapLimitsAndAvailability",
            name: "limitsAndAvailability",
            type: "tuple",
          },
        ],
        internalType: "struct IFluidDexResolver.DexEntireData",
        name: "data_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
    ],
    name: "getDexState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastToLastStoredPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastStoredPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "centerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPricesTimeDiff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleCheckPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleMapping",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupplyShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowShares",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSwapAndArbitragePaused",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isRangeChangeActive",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isThresholdChangeActive",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isCenterPriceShiftActive",
                type: "bool",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "oldUpper",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "oldLower",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "duration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "oldTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IFluidDexResolver.ShiftData",
                name: "rangeShift",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "oldUpper",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "oldLower",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "duration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "oldTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IFluidDexResolver.ShiftData",
                name: "thresholdShift",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "shiftPercentage",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "duration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startTimestamp",
                    type: "uint256",
                  },
                ],
                internalType: "struct IFluidDexResolver.CenterPriceShift",
                name: "centerPriceShift",
                type: "tuple",
              },
            ],
            internalType: "struct IFluidDexResolver.ShiftChanges",
            name: "shifts",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "token0PerSupplyShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1PerSupplyShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token0PerBorrowShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1PerBorrowShare",
            type: "uint256",
          },
        ],
        internalType: "struct IFluidDexResolver.DexState",
        name: "state_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFluidDexResolver__factory {
  static readonly abi = _abi;
  static createInterface(): IFluidDexResolverInterface {
    return new Interface(_abi) as IFluidDexResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFluidDexResolver {
    return new Contract(address, _abi, runner) as unknown as IFluidDexResolver;
  }
}
