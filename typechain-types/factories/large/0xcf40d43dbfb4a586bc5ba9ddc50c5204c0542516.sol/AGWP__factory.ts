/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  AGWP,
  AGWPInterface,
} from "../../../large/0xcf40d43dbfb4a586bc5ba9ddc50c5204c0542516.sol/AGWP";

const _abi = [
  {
    inputs: [],
    name: "getAllTransactions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "transArr",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGWF",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getIsOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMasterCopy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tNb",
        type: "uint256",
      },
    ],
    name: "getTransactionRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "labelhash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deedContract",
        type: "address",
      },
    ],
    name: "nameAuctionBidBucketLabel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class AGWP__factory {
  static readonly abi = _abi;
  static createInterface(): AGWPInterface {
    return new utils.Interface(_abi) as AGWPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AGWP {
    return new Contract(address, _abi, signerOrProvider) as AGWP;
  }
}
