/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Riko,
  RikoInterface,
} from "../../../large/0x8aa9d811e4974ecb25a7b615694dc5692ae36505.sol/Riko";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_buyMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapTokensAtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeMultipleAccountsFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualswap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redisFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redisFeeOnSell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxFeeOnSell",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxTxAmount",
        type: "uint256",
      },
    ],
    name: "setMaxTxnAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxWalletSize",
        type: "uint256",
      },
    ],
    name: "setMaxWalletSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapTokensAtAmount",
        type: "uint256",
      },
    ],
    name: "setMinSwapTokensThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_swapEnabled",
        type: "bool",
      },
    ],
    name: "toggleSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405261001a695915a68d88da2e6d360060001961035b565b6100269060001961037d565b600655600060088190556009819055600a819055600b819055600c819055600d819055600e819055600f55601280547302e9ef981470ec88f943cfb050034d8e7836e1916001600160a01b031991821681179092556013805490911690911790556015805462ffffff60a01b19166201000160a01b17905568e3aeb5737240a0000060168190556901c75d6ae6e4814000006017556018553480156100ca57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506006543360009081526002602090815260409182902092909255601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155815163c45a015560e01b815291519092839263c45a015592600480830193928290030181865afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906103a4565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c91906103a4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028d91906103a4565b601580546001600160a01b0319166001600160a01b03928316179055600080548216815260056020526040808220805460ff1990811660019081179092553084528284208054821683179055601254851684528284208054821683179055601354909416835291208054909216179055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef695915a68d88da2e6d360060405161034d91815260200190565b60405180910390a3506103d4565b60008261037857634e487b7160e01b600052601260045260246000fd5b500690565b8181038181111561039e57634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156103b657600080fd5b81516001600160a01b03811681146103cd57600080fd5b9392505050565b611a93806103e36000396000f3fe6080604052600436106101a05760003560e01c80637d1db4a5116100ec578063a9059cbb1161008a578063c492f04611610064578063c492f046146104c1578063dd62ed3e146104e1578063ea1644d514610527578063f2fde38b1461054757600080fd5b8063a9059cbb1461045c578063bfd792841461047c578063c3c8cd80146104ac57600080fd5b80638f9a55c0116100c65780638f9a55c0146103d957806395d89b41146103ef57806398a5c3151461041c578063a2a957bb1461043c57600080fd5b80637d1db4a5146103785780637f2feddc1461038e5780638da5cb5b146103bb57600080fd5b8063313ce567116101595780636fc3eaec116101335780636fc3eaec1461030e57806370a0823114610323578063715018a61461034357806374010ece1461035857600080fd5b8063313ce567146102b057806349bd5a5e146102cc5780636d8aa8f8146102ec57600080fd5b806306fdde03146101ac578063095ea7b3146101eb5780631694505e1461021b57806318160ddd1461025357806323b872dd1461027a5780632fd689e31461029a57600080fd5b366101a757005b600080fd5b3480156101b857600080fd5b5060408051808201909152600481526352696b6f60e01b60208201525b6040516101e291906116bf565b60405180910390f35b3480156101f757600080fd5b5061020b610206366004611722565b610567565b60405190151581526020016101e2565b34801561022757600080fd5b5060145461023b906001600160a01b031681565b6040516001600160a01b0390911681526020016101e2565b34801561025f57600080fd5b50695915a68d88da2e6d36005b6040519081526020016101e2565b34801561028657600080fd5b5061020b61029536600461174e565b61057e565b3480156102a657600080fd5b5061026c60185481565b3480156102bc57600080fd5b50604051600981526020016101e2565b3480156102d857600080fd5b5060155461023b906001600160a01b031681565b3480156102f857600080fd5b5061030c6103073660046117a4565b6105e7565b005b34801561031a57600080fd5b5061030c610638565b34801561032f57600080fd5b5061026c61033e3660046117bf565b610683565b34801561034f57600080fd5b5061030c6106a5565b34801561036457600080fd5b5061030c6103733660046117dc565b610719565b34801561038457600080fd5b5061026c60165481565b34801561039a57600080fd5b5061026c6103a93660046117bf565b60116020526000908152604090205481565b3480156103c757600080fd5b506000546001600160a01b031661023b565b3480156103e557600080fd5b5061026c60175481565b3480156103fb57600080fd5b5060408051808201909152600481526352494b4f60e01b60208201526101d5565b34801561042857600080fd5b5061030c6104373660046117dc565b610748565b34801561044857600080fd5b5061030c6104573660046117f5565b610777565b34801561046857600080fd5b5061020b610477366004611722565b6107b5565b34801561048857600080fd5b5061020b6104973660046117bf565b60106020526000908152604090205460ff1681565b3480156104b857600080fd5b5061030c6107c2565b3480156104cd57600080fd5b5061030c6104dc366004611827565b610816565b3480156104ed57600080fd5b5061026c6104fc3660046118ad565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561053357600080fd5b5061030c6105423660046117dc565b6108ad565b34801561055357600080fd5b5061030c6105623660046117bf565b6108dc565b60006105743384846109c6565b5060015b92915050565b600061058b848484610aea565b6105dd84336105d885604051806060016040528060288152602001611a36602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610f8c565b6109c6565b5060019392505050565b6000546001600160a01b0316331461061a5760405162461bcd60e51b8152600401610611906118e6565b60405180910390fd5b60158054911515600160b01b0260ff60b01b19909216919091179055565b6012546001600160a01b0316336001600160a01b0316148061066d57506013546001600160a01b0316336001600160a01b0316145b61067657600080fd5b4761068081610fc6565b50565b6001600160a01b03811660009081526002602052604081205461057890611004565b6000546001600160a01b031633146106cf5760405162461bcd60e51b8152600401610611906118e6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107435760405162461bcd60e51b8152600401610611906118e6565b601655565b6000546001600160a01b031633146107725760405162461bcd60e51b8152600401610611906118e6565b601855565b6000546001600160a01b031633146107a15760405162461bcd60e51b8152600401610611906118e6565b600893909355600a91909155600955600b55565b6000610574338484610aea565b6012546001600160a01b0316336001600160a01b031614806107f757506013546001600160a01b0316336001600160a01b0316145b61080057600080fd5b600061080b30610683565b905061068081611088565b6000546001600160a01b031633146108405760405162461bcd60e51b8152600401610611906118e6565b60005b828110156108a75781600560008686858181106108625761086261191b565b905060200201602081019061087791906117bf565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610843565b50505050565b6000546001600160a01b031633146108d75760405162461bcd60e51b8152600401610611906118e6565b601755565b6000546001600160a01b031633146109065760405162461bcd60e51b8152600401610611906118e6565b6001600160a01b03811661096b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610611565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610611565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610611565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b4e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610611565b6001600160a01b038216610bb05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610611565b60008111610c125760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610611565b6000546001600160a01b03848116911614801590610c3e57506000546001600160a01b03838116911614155b15610e8557601554600160a01b900460ff16610cd7576000546001600160a01b03848116911614610cd75760405162461bcd60e51b815260206004820152603f60248201527f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060448201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c6564006064820152608401610611565b601654811115610d295760405162461bcd60e51b815260206004820152601c60248201527f544f4b454e3a204d6178205472616e73616374696f6e204c696d6974000000006044820152606401610611565b6015546001600160a01b03838116911614610dae5760175481610d4b84610683565b610d559190611947565b10610dae5760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073696044820152627a652160e81b6064820152608401610611565b6000610db930610683565b601854601654919250821015908210610dd25760165491505b808015610de95750601554600160a81b900460ff16155b8015610e0357506015546001600160a01b03868116911614155b8015610e185750601554600160b01b900460ff165b8015610e3d57506001600160a01b03851660009081526005602052604090205460ff16155b8015610e6257506001600160a01b03841660009081526005602052604090205460ff16155b15610e8257610e7082611088565b478015610e8057610e8047610fc6565b505b50505b6001600160a01b03831660009081526005602052604090205460019060ff1680610ec757506001600160a01b03831660009081526005602052604090205460ff165b80610ef957506015546001600160a01b03858116911614801590610ef957506015546001600160a01b03848116911614155b15610f0657506000610f80565b6015546001600160a01b038581169116148015610f3157506014546001600160a01b03848116911614155b15610f4357600854600c55600954600d555b6015546001600160a01b038481169116148015610f6e57506014546001600160a01b03858116911614155b15610f8057600a54600c55600b54600d555b6108a784848484611202565b60008184841115610fb05760405162461bcd60e51b815260040161061191906116bf565b506000610fbd848661195a565b95945050505050565b6013546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611000573d6000803e3d6000fd5b5050565b600060065482111561106b5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610611565b6000611075611230565b90506110818382611253565b9392505050565b6015805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110d0576110d061191b565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d919061196d565b816001815181106111605761116061191b565b6001600160a01b03928316602091820292909201015260145461118691309116846109c6565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac947906111bf90859060009086903090429060040161198a565b600060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b8061120f5761120f611295565b61121a8484846112c3565b806108a7576108a7600e54600c55600f54600d55565b600080600061123d6113ba565b909250905061124c8282611253565b9250505090565b600061108183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113fe565b600c541580156112a55750600d54155b156112ac57565b600c8054600e55600d8054600f5560009182905555565b6000806000806000806112d58761142c565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506113079087611489565b6001600160a01b03808b1660009081526002602052604080822093909355908a168152205461133690866114cb565b6001600160a01b0389166000908152600260205260409020556113588161152a565b6113628483611574565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516113a791815260200190565b60405180910390a3505050505050505050565b6006546000908190695915a68d88da2e6d36006113d78282611253565b8210156113f557505060065492695915a68d88da2e6d360092509050565b90939092509050565b6000818361141f5760405162461bcd60e51b815260040161061191906116bf565b506000610fbd84866119fc565b60008060008060008060008060006114498a600c54600d54611598565b9250925092506000611459611230565b9050600080600061146c8e8787876115ed565b919e509c509a509598509396509194505050505091939550919395565b600061108183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f8c565b6000806114d88385611947565b9050838110156110815760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610611565b6000611534611230565b90506000611542838361163d565b3060009081526002602052604090205490915061155f90826114cb565b30600090815260026020526040902055505050565b6006546115819083611489565b60065560075461159190826114cb565b6007555050565b60008080806115b260646115ac898961163d565b90611253565b905060006115c560646115ac8a8961163d565b905060006115dd826115d78b86611489565b90611489565b9992985090965090945050505050565b60008080806115fc888661163d565b9050600061160a888761163d565b90506000611618888861163d565b9050600061162a826115d78686611489565b939b939a50919850919650505050505050565b60008260000361164f57506000610578565b600061165b8385611a1e565b90508261166885836119fc565b146110815760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610611565b602081526000825180602084015260005b818110156116ed57602081860181015160408684010152016116d0565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461068057600080fd5b6000806040838503121561173557600080fd5b82356117408161170d565b946020939093013593505050565b60008060006060848603121561176357600080fd5b833561176e8161170d565b9250602084013561177e8161170d565b929592945050506040919091013590565b8035801515811461179f57600080fd5b919050565b6000602082840312156117b657600080fd5b6110818261178f565b6000602082840312156117d157600080fd5b81356110818161170d565b6000602082840312156117ee57600080fd5b5035919050565b6000806000806080858703121561180b57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060006040848603121561183c57600080fd5b833567ffffffffffffffff81111561185357600080fd5b8401601f8101861361186457600080fd5b803567ffffffffffffffff81111561187b57600080fd5b8660208260051b840101111561189057600080fd5b6020918201945092506118a490850161178f565b90509250925092565b600080604083850312156118c057600080fd5b82356118cb8161170d565b915060208301356118db8161170d565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561057857610578611931565b8181038181111561057857610578611931565b60006020828403121561197f57600080fd5b81516110818161170d565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156119dc5783516001600160a01b03168352602093840193909201916001016119b5565b50506001600160a01b039590951660608401525050608001529392505050565b600082611a1957634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176105785761057861193156fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201d9c485e462d2a8d9851bb53b98ff97e1ad464d2e7f4633b43fc494d335f3f7164736f6c634300081e0033";

type RikoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RikoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Riko__factory extends ContractFactory {
  constructor(...args: RikoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Riko & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Riko__factory {
    return super.connect(runner) as Riko__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RikoInterface {
    return new Interface(_abi) as RikoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Riko {
    return new Contract(address, _abi, runner) as unknown as Riko;
  }
}
