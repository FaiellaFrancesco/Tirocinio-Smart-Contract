/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../large/0xf0da2b28c9d8c5e369b70f711a27a8516cae7cd5.sol/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MODE_NORMAL",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODE_TRANSFER_CONTROLLED",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODE_TRANSFER_RESTRICTED",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "v",
        type: "uint160",
      },
    ],
    name: "setMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610edb380380610edb83398101604081905261002f91610271565b61003833610085565b61004283836100d7565b61006a6100576005546001600160a01b031690565b61006583633b9aca006102f9565b6100f5565b5050600680546001600160a01b03191660021790555061046f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60036100e3838261039e565b5060046100f0828261039e565b505050565b6001600160a01b03821661014f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254610161919061045c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101df57600080fd5b81516001600160401b038111156101f8576101f86101b8565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610226576102266101b8565b60405281815283820160200185101561023e57600080fd5b60005b8281101561025d57602081860181015183830182015201610241565b506000918101602001919091529392505050565b60008060006060848603121561028657600080fd5b83516001600160401b0381111561029c57600080fd5b6102a8868287016101ce565b602086015190945090506001600160401b038111156102c657600080fd5b6102d2868287016101ce565b925050604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610310576103106102e3565b92915050565b600181811c9082168061032a57607f821691505b60208210810361034a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100f057806000526020600020601f840160051c810160208510156103775750805b601f840160051c820191505b818110156103975760008155600101610383565b5050505050565b81516001600160401b038111156103b7576103b76101b8565b6103cb816103c58454610316565b84610350565b6020601f8211600181146103ff57600083156103e75750848201515b600019600385901b1c1916600184901b178455610397565b600084815260208120601f198516915b8281101561042f578785015182556020948501946001909201910161040f565b508482101561044d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b80820180821115610310576103106102e3565b610a5d8061047e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461021f578063a9059cbb14610232578063d32cf43e14610245578063dd62ed3e14610258578063f2fde38b1461026b57600080fd5b806370a08231146101d3578063715018a6146101fc5780638da5cb5b1461020657806395d89b411461021757600080fd5b806323b872dd116100e957806323b872dd1461018e578063313ce567146101a157806332be6330146101b057806339509351146101b85780633af3d783146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c5780631c8fc2c01461016e575b600080fd5b61012361027e565b604051610130919061089f565b60405180910390f35b61014c610147366004610902565b610310565b6040519015158152602001610130565b6002545b604051908152602001610130565b610176600181565b6040516001600160a01b039091168152602001610130565b61014c61019c36600461092e565b61032a565b60405160098152602001610130565b610176600281565b61014c6101c6366004610902565b61034e565b610176600081565b6101606101e136600461096f565b6001600160a01b031660009081526020819052604090205490565b610204610370565b005b6005546001600160a01b0316610176565b610123610384565b61014c61022d366004610902565b610393565b61014c610240366004610902565b610413565b61020461025336600461096f565b61043a565b610160610266366004610993565b610472565b61020461027936600461096f565b61049d565b60606003805461028d906109cc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b9906109cc565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b5050505050905090565b60003361031e818585610513565b60019150505b92915050565b600033610338858285610637565b6103438585856106b1565b506001949350505050565b60003361031e8185856103618383610472565b61036b9190610a06565b610513565b6103786107f3565b610382600061084d565b565b60606004805461028d906109cc565b600033816103a18286610472565b9050838110156104065760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103438286868403610513565b60065460009033906001600160a01b0316810361042f57506000925b61031e8185856106b1565b6104426107f3565b6006546001600160a01b03161561046f57600680546001600160a01b0319166001600160a01b0383161790555b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104a56107f3565b6001600160a01b03811661050a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fd565b61046f8161084d565b6001600160a01b0383166105755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fd565b6001600160a01b0382166105d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106438484610472565b905060001981146106ab578181101561069e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fd565b6106ab8484848403610513565b50505050565b6001600160a01b0383166107155760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fd565b6001600160a01b0383166000908152602081905260409020548181101561078d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106ab565b6005546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b602081526000825180602084015260005b818110156108cd57602081860181015160408684010152016108b0565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461046f57600080fd5b6000806040838503121561091557600080fd5b8235610920816108ed565b946020939093013593505050565b60008060006060848603121561094357600080fd5b833561094e816108ed565b9250602084013561095e816108ed565b929592945050506040919091013590565b60006020828403121561098157600080fd5b813561098c816108ed565b9392505050565b600080604083850312156109a657600080fd5b82356109b1816108ed565b915060208301356109c1816108ed565b809150509250929050565b600181811c908216806109e057607f821691505b602082108103610a0057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032457634e487b7160e01b600052601160045260246000fdfea2646970667358221220d10e3c0b57b7e4bf73b0087d39e6d734e661b71f45c96c2e243d75cd526a238964736f6c634300081e0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, totalSupply, overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
