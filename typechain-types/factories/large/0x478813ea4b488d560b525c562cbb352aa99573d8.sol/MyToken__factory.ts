/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../large/0x478813ea4b488d560b525c562cbb352aa99573d8.sol/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TELEGRAM_LINK",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEBSITE_LINK",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252600580825264504155534560d81b602080840182905284518086019095529184529083015290600361004c838261029e565b506004610059828261029e565b50505061008c3361006e61009160201b60201c565b61007990600a61045b565b610087906305f5e100610471565b610096565b61049b565b601290565b6001600160a01b0382166100c55760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100d1600083836100d5565b5050565b6001600160a01b0383166101005780600260008282546100f59190610488565b909155506101729050565b6001600160a01b038316600090815260208190526040902054818110156101535760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100bc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661018e576002805482900390556101ad565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101f291815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061022957607f821691505b60208210810361024957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561029957806000526020600020601f840160051c810160208510156102765750805b601f840160051c820191505b818110156102965760008155600101610282565b50505b505050565b81516001600160401b038111156102b7576102b76101ff565b6102cb816102c58454610215565b8461024f565b6020601f8211600181146102ff57600083156102e75750848201515b600019600385901b1c1916600184901b178455610296565b600084815260208120601f198516915b8281101561032f578785015182556020948501946001909201910161030f565b508482101561034d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103ad578085048111156103915761039161035c565b600184161561039f57908102905b60019390931c928002610376565b935093915050565b6000826103c457506001610455565b816103d157506000610455565b81600181146103e757600281146103f15761040d565b6001915050610455565b60ff8411156104025761040261035c565b50506001821b610455565b5060208310610133831016604e8410600b8410161715610430575081810a610455565b61043d6000198484610372565b80600019048211156104515761045161035c565b0290505b92915050565b600061046a60ff8416836103b5565b9392505050565b80820281158282048414176104555761045561035c565b808201808211156104555761045561035c565b6107c3806104aa6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461012357806395d89b411461014c578063a9059cbb14610154578063bacc3ef614610167578063c5dc31cf14610193578063dd62ed3e1461019b57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101d4565b6040516100c391906105d1565b60405180910390f35b6100df6100da36600461063b565b610266565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610665565b610280565b604051601281526020016100c3565b6100f36101313660046106a2565b6001600160a01b031660009081526020819052604090205490565b6100b66102a4565b6100df61016236600461063b565b6102b3565b6100b66040518060400160405280600d81526020016c68747470733a2f2f742e6d652f60981b81525081565b6100b66102c1565b6100f36101a93660046106c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e3906106f7565b80601f016020809104026020016040519081016040528092919081815260200182805461020f906106f7565b801561025c5780601f106102315761010080835404028352916020019161025c565b820191906000526020600020905b81548152906001019060200180831161023f57829003601f168201915b5050505050905090565b6000336102748185856102dd565b60019150505b92915050565b60003361028e8582856102ef565b610299858585610373565b506001949350505050565b6060600480546101e3906106f7565b600033610274818585610373565b6040518060600160405280603b8152602001610753603b913981565b6102ea83838360016103d2565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561036d578181101561035e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036d848484840360006103d2565b50505050565b6001600160a01b03831661039d57604051634b637e8f60e11b815260006004820152602401610355565b6001600160a01b0382166103c75760405163ec442f0560e01b815260006004820152602401610355565b6102ea8383836104a7565b6001600160a01b0384166103fc5760405163e602df0560e01b815260006004820152602401610355565b6001600160a01b03831661042657604051634a1406b160e11b815260006004820152602401610355565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049991815260200190565b60405180910390a350505050565b6001600160a01b0383166104d25780600260008282546104c79190610731565b909155506105449050565b6001600160a01b038316600090815260208190526040902054818110156105255760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610355565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105605760028054829003905561057f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c491815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156105ff57602081860181015160408684010152016105e2565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461063657600080fd5b919050565b6000806040838503121561064e57600080fd5b6106578361061f565b946020939093013593505050565b60008060006060848603121561067a57600080fd5b6106838461061f565b92506106916020850161061f565b929592945050506040919091013590565b6000602082840312156106b457600080fd5b6106bd8261061f565b9392505050565b600080604083850312156106d757600080fd5b6106e08361061f565b91506106ee6020840161061f565b90509250929050565b600181811c9082168061070b57607f821691505b60208210810361072b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027a57634e487b7160e01b600052601160045260246000fdfe68747470733a2f2f7472757468736f6369616c2e636f6d2f407265616c446f6e616c645472756d702f313134333039313434323839353035313734a2646970667358221220d1fc41ef653560a9c30e82c9a60a44ed95bfd71396aea3fccf619a8dd878efae64736f6c634300081e0033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  override connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
