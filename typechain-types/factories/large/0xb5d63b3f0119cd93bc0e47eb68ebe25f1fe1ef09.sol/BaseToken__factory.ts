/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BaseToken,
  BaseTokenInterface,
} from "../../../large/0xb5d63b3f0119cd93bc0e47eb68ebe25f1fe1ef09.sol/BaseToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
] as const;

export class BaseToken__factory {
  static readonly abi = _abi;
  static createInterface(): BaseTokenInterface {
    return new Interface(_abi) as BaseTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BaseToken {
    return new Contract(address, _abi, runner) as unknown as BaseToken;
  }
}
