/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TrumpTariffs,
  TrumpTariffsInterface,
} from "../../../large/0xe20762d19cd23e01c3ca36dd2cb91ba0415cd893.sol/TrumpTariffs";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldWallet",
        type: "address",
      },
    ],
    name: "DevelopmentWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isExcluded",
        type: "bool",
      },
    ],
    name: "ExcludeFromFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "SetAutomatedMarketMakerPair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReceived",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensIntoLiquidity",
        type: "uint256",
      },
    ],
    name: "SwapAndLiquify",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
    ],
    name: "UpdateUniswapV2Router",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_isExcludedmaxTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_preventSwapBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalBuys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "changeMaxTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "changeMaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "changeSwapTokensAtAmount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updAds",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEx",
        type: "bool",
      },
    ],
    name: "excludeFromMaxTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "launchBlockNo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limitsInEffect",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setAutomatedMarketMakerPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTokensAtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "updateDevelopmentWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellFee",
        type: "uint256",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isEnable",
        type: "bool",
      },
    ],
    name: "updateSwapEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "waiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600780546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d179055600c805462ffffff191660011790556000601281905560135534801561004f57600080fd5b506040518060400160405280600d81526020016c5472756d70205461726966667360981b815250604051806040016040528060078152602001665461726966667360c81b815250600882600390816100a79190610703565b5060046100b48382610703565b506005805460ff191660ff9290921691909117905550600090506100d53390565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506007546001600160a01b0316610142816001610402565b6001600160a01b03811660808190526040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906107c1565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022191906107c1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561026e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029291906107c1565b6001600160a01b031660a08190526102ab906001610402565b60a0516102b9906001610480565b60006102c760055460ff1690565b6102d290600a6108f0565b6102e0906301406f406108ff565b90506127106102f08260c86108ff565b6102fa9190610916565b60095561271061030b8260c86108ff565b6103159190610916565b600b556127106103268260326108ff565b6103309190610916565b600a556127106103418260646108ff565b61034b9190610916565b6011556109c4600f819055601055600880546001600160a01b0319167309beb470eca7972295d4f65470f0e4ddb4aaee791790556103a061039960055461010090046001600160a01b031690565b60016104d4565b6103ab3060016104d4565b6103b861dead60016104d4565b6103d96103d260055461010090046001600160a01b031690565b6001610402565b6103e4306001610402565b6103f161dead6001610402565b6103fb3382610581565b505061094b565b6005546001600160a01b036101009091041633146104555760405162461bcd60e51b8152602060048201819052602482015260008051602061299683398151915260448201526064015b60405180910390fd5b6001600160a01b03919091166000908152601560205260409020805460ff1916911515919091179055565b6001600160a01b038216600081815260166020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b6005546001600160a01b036101009091041633146105225760405162461bcd60e51b81526020600482018190526024820152600080516020612996833981519152604482015260640161044c565b6001600160a01b038216600081815260146020908152604091829020805460ff191685151590811790915591519182527f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df7910160405180910390a25050565b6001600160a01b0382166105d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044c565b80600260008282546105e99190610938565b90915550506001600160a01b03821660009081526020819052604081208054839290610616908490610938565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061068f57607f821691505b6020821081036106af57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561066057806000526020600020601f840160051c810160208510156106dc5750805b601f840160051c820191505b818110156106fc57600081556001016106e8565b5050505050565b81516001600160401b0381111561071c5761071c610665565b6107308161072a845461067b565b846106b5565b6020601f821160018114610764576000831561074c5750848201515b600019600385901b1c1916600184901b1784556106fc565b600084815260208120601f198516915b828110156107945787850151825560209485019460019092019101610774565b50848210156107b25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000602082840312156107d357600080fd5b81516001600160a01b03811681146107ea57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561084257808504811115610826576108266107f1565b600184161561083457908102905b60019390931c92800261080b565b935093915050565b600082610859575060016108ea565b81610866575060006108ea565b816001811461087c5760028114610886576108a2565b60019150506108ea565b60ff841115610897576108976107f1565b50506001821b6108ea565b5060208310610133831016604e8410600b84101617156108c5575081810a6108ea565b6108d26000198484610807565b80600019048211156108e6576108e66107f1565b0290505b92915050565b60006107ea60ff84168361084a565b80820281158282048414176108ea576108ea6107f1565b60008261093357634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156108ea576108ea6107f1565b60805160a05161200a61098c600039600081816103e70152610e1501526000818161031a0152818161195001528181611a090152611a45015261200a6000f3fe60806040526004361061024a5760003560e01c8063914eb66a11610139578063c81d9246116100b6578063e2f456051161007a578063e2f4560514610732578063e4748b9e14610748578063f023f5731461075e578063f2fde38b1461077e578063f887ea401461079e578063f8b45b05146107be57600080fd5b8063c81d924614610670578063cd73ab0214610686578063dd62ed3e146106a6578063e0f3ccf5146106ec578063e1bc33941461070257600080fd5b8063a9059cbb116100fd578063a9059cbb146105cb578063b62496f5146105eb578063bbc0c7421461061b578063c02466681461063a578063c3f70b521461065a57600080fd5b8063914eb66a14610541578063924de9b71461055657806395d89b41146105765780639a7a23d61461058b578063a457c2d7146105ab57600080fd5b806349bd5a5e116101c75780636ddd17131161018b5780636ddd17131461049257806370a08231146104b257806373a94292146104e85780637571336a146104fe5780638da5cb5b1461051e57600080fd5b806349bd5a5e146103d55780634a62bb65146104095780634fbee1931461042357806363ee4d1c1461045c5780636db794371461047257600080fd5b80631694505e1161020e5780631694505e1461030857806318160ddd1461035457806323b872dd14610373578063313ce5671461039357806339509351146103b557600080fd5b806301339c211461025657806306fdde031461026d578063095ea7b31461029857806309d6bf0a146102c85780630b006d60146102e857600080fd5b3661025157005b600080fd5b34801561026257600080fd5b5061026b6107d4565b005b34801561027957600080fd5b5061028261086d565b60405161028f9190611af0565b60405180910390f35b3480156102a457600080fd5b506102b86102b3366004611b56565b6108ff565b604051901515815260200161028f565b3480156102d457600080fd5b506102b86102e3366004611b82565b610916565b3480156102f457600080fd5b5061026b610303366004611b82565b610a43565b34801561031457600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161028f565b34801561036057600080fd5b506002545b60405190815260200161028f565b34801561037f57600080fd5b506102b861038e366004611b9b565b610af7565b34801561039f57600080fd5b5060055460405160ff909116815260200161028f565b3480156103c157600080fd5b506102b86103d0366004611b56565b610ba1565b3480156103e157600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041557600080fd5b50600c546102b89060ff1681565b34801561042f57600080fd5b506102b861043e366004611bdc565b6001600160a01b031660009081526014602052604090205460ff1690565b34801561046857600080fd5b50610365600e5481565b34801561047e57600080fd5b5061026b61048d366004611bf9565b610bdd565b34801561049e57600080fd5b50600c546102b89062010000900460ff1681565b3480156104be57600080fd5b506103656104cd366004611bdc565b6001600160a01b031660009081526020819052604090205490565b3480156104f457600080fd5b5061036560135481565b34801561050a57600080fd5b5061026b610519366004611c2b565b610cad565b34801561052a57600080fd5b5060055461010090046001600160a01b031661033c565b34801561054d57600080fd5b5061026b610d08565b34801561056257600080fd5b5061026b610571366004611c60565b610d88565b34801561058257600080fd5b50610282610dd4565b34801561059757600080fd5b5061026b6105a6366004611c2b565b610de3565b3480156105b757600080fd5b506102b86105c6366004611b56565b610ec8565b3480156105d757600080fd5b506102b86105e6366004611b56565b610f61565b3480156105f757600080fd5b506102b8610606366004611bdc565b60166020526000908152604090205460ff1681565b34801561062757600080fd5b50600c546102b890610100900460ff1681565b34801561064657600080fd5b5061026b610655366004611c2b565b610f6e565b34801561066657600080fd5b5061036560095481565b34801561067c57600080fd5b5061036560125481565b34801561069257600080fd5b5061026b6106a1366004611b82565b610ffd565b3480156106b257600080fd5b506103656106c1366004611c7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156106f857600080fd5b5061036560105481565b34801561070e57600080fd5b506102b861071d366004611bdc565b60156020526000908152604090205460ff1681565b34801561073e57600080fd5b50610365600a5481565b34801561075457600080fd5b50610365600f5481565b34801561076a57600080fd5b5061026b610779366004611bdc565b6110b6565b34801561078a57600080fd5b5061026b610799366004611bdc565b611143565b3480156107aa57600080fd5b5060075461033c906001600160a01b031681565b3480156107ca57600080fd5b50610365600b5481565b6005546001600160a01b0361010090910416331461080d5760405162461bcd60e51b815260040161080490611cb4565b60405180910390fd5b600c54610100900460ff16156108565760405162461bcd60e51b815260206004820152600e60248201526d151bdad95b881b185d5b98da195960921b6044820152606401610804565b600c805443600e5562ffff00191662010100179055565b60606003805461087c90611ce9565b80601f01602080910402602001604051908101604052809291908181526020018280546108a890611ce9565b80156108f55780601f106108ca576101008083540402835291602001916108f5565b820191906000526020600020905b8154815290600101906020018083116108d857829003601f168201915b5050505050905090565b600061090c33848461123f565b5060015b92915050565b6005546000906001600160a01b036101009091041633146109495760405162461bcd60e51b815260040161080490611cb4565b620186a061095660025490565b610961906001611d39565b61096b9190611d50565b8210156109c55760405162461bcd60e51b815260206004820152602260248201527f5377617020616d6f756e74203c20302e3030312520746f74616c20737570706c6044820152613c9760f11b6064820152608401610804565b6127106109d160025490565b6109dc906064611d39565b6109e69190611d50565b821115610a355760405162461bcd60e51b815260206004820152601e60248201527f5377617020616d6f756e74203e20312520746f74616c20737570706c792e00006044820152606401610804565b50600a81905560015b919050565b6005546001600160a01b03610100909104163314610a735760405162461bcd60e51b815260040161080490611cb4565b612710610a7f60025490565b610a8a906032611d39565b610a949190611d50565b811015610ad65760405162461bcd60e51b815260206004820152601060248201526f6d617857616c6c6574203c20302e352560801b6044820152606401610804565b60055460ff16610ae790600a611e59565b610af19082611d39565b600b5550565b6000610b04848484611363565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610b895760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610804565b610b96853385840361123f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161090c918590610bd8908690611e68565b61123f565b6005546001600160a01b03610100909104163314610c0d5760405162461bcd60e51b815260040161080490611cb4565b611388821115610c575760405162461bcd60e51b8152602060048201526015602482015274109d5e4819995948195e18d959591cc81b1a5b5a5d605a1b6044820152606401610804565b611388811115610ca25760405162461bcd60e51b815260206004820152601660248201527514d95b1b0819995948195e18d959591cc81b1a5b5a5d60521b6044820152606401610804565b600f91909155601055565b6005546001600160a01b03610100909104163314610cdd5760405162461bcd60e51b815260040161080490611cb4565b6001600160a01b03919091166000908152601560205260409020805460ff1916911515919091179055565b6005546001600160a01b03610100909104163314610d385760405162461bcd60e51b815260040161080490611cb4565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6005546001600160a01b03610100909104163314610db85760405162461bcd60e51b815260040161080490611cb4565b600c8054911515620100000262ff000019909216919091179055565b60606004805461087c90611ce9565b6005546001600160a01b03610100909104163314610e135760405162461bcd60e51b815260040161080490611cb4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031603610eba5760405162461bcd60e51b815260206004820152603960248201527f54686520706169722063616e6e6f742062652072656d6f7665642066726f6d2060448201527f6175746f6d617465644d61726b65744d616b65725061697273000000000000006064820152608401610804565b610ec4828261160f565b5050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610f4a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610804565b610f57338585840361123f565b5060019392505050565b600061090c338484611363565b6005546001600160a01b03610100909104163314610f9e5760405162461bcd60e51b815260040161080490611cb4565b6001600160a01b038216600081815260146020908152604091829020805460ff191685151590811790915591519182527f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df7910160405180910390a25050565b6005546001600160a01b0361010090910416331461102d5760405162461bcd60e51b815260040161080490611cb4565b61271061103960025490565b61104490600a611d39565b61104e9190611d50565b8110156110955760405162461bcd60e51b81526020600482015260156024820152746d61785472616e73616374696f6e203c20302e312560581b6044820152606401610804565b60055460ff166110a690600a611e59565b6110b09082611d39565b60095550565b6005546001600160a01b036101009091041633146110e65760405162461bcd60e51b815260040161080490611cb4565b6008546040516001600160a01b03918216918316907f94cc1498503be9a145caf3e96f856665f29cf9b26c7179a93fbe1c1e5f56a0fd90600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b036101009091041633146111735760405162461bcd60e51b815260040161080490611cb4565b6001600160a01b0381166111d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610804565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b0383166112a15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610804565b6001600160a01b0382166113025760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610804565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166113895760405162461bcd60e51b815260040161080490611e7b565b6001600160a01b0382166113af5760405162461bcd60e51b815260040161080490611ec0565b806000036113c8576113c383836000611663565b505050565b30600090815260208190526040902054600a54811080159081906113f45750600c5462010000900460ff165b801561140a5750600754600160a01b900460ff16155b801561142f57506001600160a01b03851660009081526016602052604090205460ff16155b801561145457506001600160a01b03851660009081526014602052604090205460ff16155b801561147957506001600160a01b03841660009081526014602052604090205460ff16155b80156114885750601254601354115b156114c5576007805460ff60a01b1916600160a01b1790556011546114b7906114b29084906117b8565b6117d0565b6007805460ff60a01b191690555b6007546001600160a01b03861660009081526014602052604090205460ff600160a01b90920482161591168061151357506001600160a01b03851660009081526014602052604090205460ff165b1561151c575060005b600081156115fb576001600160a01b03861660009081526016602052604090205460ff16801561154e57506000601054115b1561157b5761157461271061156e6010548861183590919063ffffffff16565b906118b7565b90506115dd565b6001600160a01b03871660009081526016602052604090205460ff1680156115a557506000600f54115b156115dd576115c561271061156e600f548861183590919063ffffffff16565b6013805491925060006115d783611f03565b91905055505b80156115ee576115ee873083611663565b6115f88186611f1c565b94505b611606878787611663565b50505050505050565b6001600160a01b038216600081815260166020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b6001600160a01b0383166116895760405162461bcd60e51b815260040161080490611e7b565b6001600160a01b0382166116af5760405162461bcd60e51b815260040161080490611ec0565b6001600160a01b038316600090815260208190526040902054818110156117275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610804565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061175e908490611e68565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117aa91815260200190565b60405180910390a350505050565b60008183116117c757826117c9565b815b9392505050565b6000816000036117de575050565b816117e8816118f9565b60085460405147916001600160a01b0316908290600081818185875af1925050503d8060008114611606576040519150601f19603f3d011682016040523d82523d6000602084013e611606565b60008260000361184757506000610910565b60006118538385611d39565b9050826118608583611d50565b146117c95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610804565b60006117c983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611ab9565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061192e5761192e611f2f565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d09190611f45565b816001815181106119e3576119e3611f2f565b60200260200101906001600160a01b031690816001600160a01b031681525050611a2e307f00000000000000000000000000000000000000000000000000000000000000008461123f565b60405163791ac94760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063791ac94790611a83908590600090869030904290600401611f62565b600060405180830381600087803b158015611a9d57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b505050505050565b60008183611ada5760405162461bcd60e51b81526004016108049190611af0565b506000611ae78486611d50565b95945050505050565b602081526000825180602084015260005b81811015611b1e5760208186018101516040868401015201611b01565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114611b5357600080fd5b50565b60008060408385031215611b6957600080fd5b8235611b7481611b3e565b946020939093013593505050565b600060208284031215611b9457600080fd5b5035919050565b600080600060608486031215611bb057600080fd5b8335611bbb81611b3e565b92506020840135611bcb81611b3e565b929592945050506040919091013590565b600060208284031215611bee57600080fd5b81356117c981611b3e565b60008060408385031215611c0c57600080fd5b50508035926020909101359150565b80358015158114610a3e57600080fd5b60008060408385031215611c3e57600080fd5b8235611c4981611b3e565b9150611c5760208401611c1b565b90509250929050565b600060208284031215611c7257600080fd5b6117c982611c1b565b60008060408385031215611c8e57600080fd5b8235611c9981611b3e565b91506020830135611ca981611b3e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680611cfd57607f821691505b602082108103611d1d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761091057610910611d23565b600082611d6d57634e487b7160e01b600052601260045260246000fd5b500490565b6001815b6001841115611dad57808504811115611d9157611d91611d23565b6001841615611d9f57908102905b60019390931c928002611d76565b935093915050565b600082611dc457506001610910565b81611dd157506000610910565b8160018114611de75760028114611df157611e0d565b6001915050610910565b60ff841115611e0257611e02611d23565b50506001821b610910565b5060208310610133831016604e8410600b8410161715611e30575081810a610910565b611e3d6000198484611d72565b8060001904821115611e5157611e51611d23565b029392505050565b60006117c960ff841683611db5565b8082018082111561091057610910611d23565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b600060018201611f1557611f15611d23565b5060010190565b8181038181111561091057610910611d23565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611f5757600080fd5b81516117c981611b3e565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611fb45783516001600160a01b0316835260209384019390920191600101611f8d565b50506001600160a01b03959095166060840152505060800152939250505056fea264697066735822122042b428712015bb74d4ed66a26b79b43de2ef5cdefa869add59ee31a8f298e3e464736f6c634300081e00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type TrumpTariffsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrumpTariffsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrumpTariffs__factory extends ContractFactory {
  constructor(...args: TrumpTariffsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TrumpTariffs & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TrumpTariffs__factory {
    return super.connect(runner) as TrumpTariffs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrumpTariffsInterface {
    return new Interface(_abi) as TrumpTariffsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TrumpTariffs {
    return new Contract(address, _abi, runner) as unknown as TrumpTariffs;
  }
}
