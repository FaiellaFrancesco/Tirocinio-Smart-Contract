/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapLabsTestToken,
  UniswapLabsTestTokenInterface,
} from "../../../large/0xfb851792d61109dd84c32d6885f628f6ea23d00c.sol/UniswapLabsTestToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280601781526020017f556e6973776170204c616273205465737420546f6b656e000000000000000000815250604051806040016040528060048152602001631553151560e21b8152508160039081610074919061033e565b506004610081828261033e565b5050506001600160a01b0381166100b357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100bc816100e9565b506100e4336100cd6012600a6104fb565b6100df90670de0b6b3a7640000610511565b61013b565b61053b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101655760405163ec442f0560e01b8152600060048201526024016100aa565b61017160008383610175565b5050565b6001600160a01b0383166101a05780600260008282546101959190610528565b909155506102129050565b6001600160a01b038316600090815260208190526040902054818110156101f35760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100aa565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661022e5760028054829003905561024d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161029291815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102c957607f821691505b6020821081036102e957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561033957806000526020600020601f840160051c810160208510156103165750805b601f840160051c820191505b818110156103365760008155600101610322565b50505b505050565b81516001600160401b038111156103575761035761029f565b61036b8161036584546102b5565b846102ef565b6020601f82116001811461039f57600083156103875750848201515b600019600385901b1c1916600184901b178455610336565b600084815260208120601f198516915b828110156103cf57878501518255602094850194600190920191016103af565b50848210156103ed5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561044d57808504811115610431576104316103fc565b600184161561043f57908102905b60019390931c928002610416565b935093915050565b600082610464575060016104f5565b81610471575060006104f5565b81600181146104875760028114610491576104ad565b60019150506104f5565b60ff8411156104a2576104a26103fc565b50506001821b6104f5565b5060208310610133831016604e8410600b84101617156104d0575081810a6104f5565b6104dd6000198484610412565b80600019048211156104f1576104f16103fc565b0290505b92915050565b600061050a60ff841683610455565b9392505050565b80820281158282048414176104f5576104f56103fc565b808201808211156104f5576104f56103fc565b61084c8061054a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101575780638da5cb5b1461016157806395d89b411461017c578063a9059cbb14610184578063dd62ed3e14610197578063f2fde38b146101d057600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806370a082311461012e575b600080fd5b6100c16101e3565b6040516100ce9190610695565b60405180910390f35b6100ea6100e53660046106ff565b610275565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610729565b61028f565b604051601281526020016100ce565b6100fe61013c366004610766565b6001600160a01b031660009081526020819052604090205490565b61015f6102b3565b005b6005546040516001600160a01b0390911681526020016100ce565b6100c16102c7565b6100ea6101923660046106ff565b6102d6565b6100fe6101a5366004610788565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61015f6101de366004610766565b6102e4565b6060600380546101f2906107bb565b80601f016020809104026020016040519081016040528092919081815260200182805461021e906107bb565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600033610283818585610327565b60019150505b92915050565b60003361029d858285610339565b6102a88585856103b8565b506001949350505050565b6102bb610417565b6102c56000610444565b565b6060600480546101f2906107bb565b6000336102838185856103b8565b6102ec610417565b6001600160a01b03811661031b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61032481610444565b50565b6103348383836001610496565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103b257818110156103a357604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610312565b6103b284848484036000610496565b50505050565b6001600160a01b0383166103e257604051634b637e8f60e11b815260006004820152602401610312565b6001600160a01b03821661040c5760405163ec442f0560e01b815260006004820152602401610312565b61033483838361056b565b6005546001600160a01b031633146102c55760405163118cdaa760e01b8152336004820152602401610312565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166104c05760405163e602df0560e01b815260006004820152602401610312565b6001600160a01b0383166104ea57604051634a1406b160e11b815260006004820152602401610312565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103b257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161055d91815260200190565b60405180910390a350505050565b6001600160a01b03831661059657806002600082825461058b91906107f5565b909155506106089050565b6001600160a01b038316600090815260208190526040902054818110156105e95760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610312565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661062457600280548290039055610643565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068891815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106c357602081860181015160408684010152016106a6565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106fa57600080fd5b919050565b6000806040838503121561071257600080fd5b61071b836106e3565b946020939093013593505050565b60008060006060848603121561073e57600080fd5b610747846106e3565b9250610755602085016106e3565b929592945050506040919091013590565b60006020828403121561077857600080fd5b610781826106e3565b9392505050565b6000806040838503121561079b57600080fd5b6107a4836106e3565b91506107b2602084016106e3565b90509250929050565b600181811c908216806107cf57607f821691505b6020821081036107ef57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028957634e487b7160e01b600052601160045260246000fdfea26469706673582212201e537acf8a4c63496b9037acc9cbd3b87b9a298de1b64eab7d21a6aa8ec82a6c64736f6c634300081e0033";

type UniswapLabsTestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapLabsTestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapLabsTestToken__factory extends ContractFactory {
  constructor(...args: UniswapLabsTestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapLabsTestToken> {
    return super.deploy(overrides || {}) as Promise<UniswapLabsTestToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapLabsTestToken {
    return super.attach(address) as UniswapLabsTestToken;
  }
  override connect(signer: Signer): UniswapLabsTestToken__factory {
    return super.connect(signer) as UniswapLabsTestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapLabsTestTokenInterface {
    return new utils.Interface(_abi) as UniswapLabsTestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapLabsTestToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapLabsTestToken;
  }
}
