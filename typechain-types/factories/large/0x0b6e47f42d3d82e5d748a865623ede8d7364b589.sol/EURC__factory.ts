/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EURC,
  EURCInterface,
} from "../../../large/0x0b6e47f42d3d82e5d748a865623ede8d7364b589.sol/EURC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610eb58061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a9059cbb11610066578063a9059cbb14610218578063c4d66de81461022b578063dd62ed3e1461023e578063f2fde38b1461025157600080fd5b8063715018a6146101ce5780638da5cb5b146101d657806395d89b411461021057600080fd5b806323b872dd116100c857806323b872dd14610161578063313ce5671461017457806340c10f191461018357806370a082311461019857600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610264565b6040516101049190610aad565b60405180910390f35b61012061011b366004610b17565b610327565b6040519015158152602001610104565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610104565b61012061016f366004610b41565b610341565b60405160128152602001610104565b610196610191366004610b17565b610365565b005b6101536101a6366004610b7e565b6001600160a01b03166000908152600080516020610e60833981519152602052604090205490565b61019661037b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610104565b6100f761038f565b610120610226366004610b17565b6103ce565b610196610239366004610b7e565b6103dc565b61015361024c366004610ba0565b61055b565b61019661025f366004610b7e565b6105a5565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020610e60833981519152916102a390610bd3565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90610bd3565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505091505090565b6000336103358185856105e8565b60019150505b92915050565b60003361034f8582856105fa565b61035a858585610661565b506001949350505050565b61036d6106c0565b610377828261071b565b5050565b6103836106c0565b61038d6000610751565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020610e60833981519152916102a390610bd3565b600033610335818585610661565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156104225750825b905060008267ffffffffffffffff16600114801561043f5750303b155b90508115801561044d575080155b1561046b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561049557845460ff60401b1916600160401b1785555b6104d9604051806040016040528060068152602001652a32ba3432b960d11b815250604051806040016040528060048152602001634555524360e01b8152506107c2565b6104e286610751565b6104eb866107d4565b61050d866104fb6012600a610d0a565b6105089062989680610d19565b61071b565b831561055357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6105ad6106c0565b6001600160a01b0381166105dc57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6105e581610751565b50565b6105f583838360016107e5565b505050565b6000610606848461055b565b905060001981101561065b578181101561064c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105d3565b61065b848484840360006107e5565b50505050565b6001600160a01b03831661068b57604051634b637e8f60e11b8152600060048201526024016105d3565b6001600160a01b0382166106b55760405163ec442f0560e01b8152600060048201526024016105d3565b6105f58383836108cd565b336106f27f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461038d5760405163118cdaa760e01b81523360048201526024016105d3565b6001600160a01b0382166107455760405163ec442f0560e01b8152600060048201526024016105d3565b610377600083836108cd565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6107ca610a0b565b6103778282610a54565b6107dc610a0b565b6105e581610aa5565b600080516020610e608339815191526001600160a01b03851661081e5760405163e602df0560e01b8152600060048201526024016105d3565b6001600160a01b03841661084857604051634a1406b160e11b8152600060048201526024016105d3565b6001600160a01b038086166000908152600183016020908152604080832093881683529290522083905581156108c657836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516108bd91815260200190565b60405180910390a35b5050505050565b600080516020610e608339815191526001600160a01b03841661090957818160020160008282546108fe9190610d30565b9091555061097b9050565b6001600160a01b0384166000908152602082905260409020548281101561095c5760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016105d3565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b0383166109995760028101805483900390556109b8565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109fd91815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661038d57604051631afcd79f60e31b815260040160405180910390fd5b610a5c610a0b565b600080516020610e608339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610a968482610da0565b506004810161065b8382610da0565b6105ad610a0b565b602081526000825180602084015260005b81811015610adb5760208186018101516040868401015201610abe565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610b1257600080fd5b919050565b60008060408385031215610b2a57600080fd5b610b3383610afb565b946020939093013593505050565b600080600060608486031215610b5657600080fd5b610b5f84610afb565b9250610b6d60208501610afb565b929592945050506040919091013590565b600060208284031215610b9057600080fd5b610b9982610afb565b9392505050565b60008060408385031215610bb357600080fd5b610bbc83610afb565b9150610bca60208401610afb565b90509250929050565b600181811c90821680610be757607f821691505b602082108103610c0757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610c5e57808504811115610c4257610c42610c0d565b6001841615610c5057908102905b60019390931c928002610c27565b935093915050565b600082610c755750600161033b565b81610c825750600061033b565b8160018114610c985760028114610ca257610cbe565b600191505061033b565b60ff841115610cb357610cb3610c0d565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610ce1575081810a61033b565b610cee6000198484610c23565b8060001904821115610d0257610d02610c0d565b029392505050565b6000610b9960ff841683610c66565b808202811582820484141761033b5761033b610c0d565b8082018082111561033b5761033b610c0d565b634e487b7160e01b600052604160045260246000fd5b601f8211156105f557806000526020600020601f840160051c81016020851015610d805750805b601f840160051c820191505b818110156108c65760008155600101610d8c565b815167ffffffffffffffff811115610dba57610dba610d43565b610dce81610dc88454610bd3565b84610d59565b6020601f821160018114610e025760008315610dea5750848201515b600019600385901b1c1916600184901b1784556108c6565b600084815260208120601f198516915b82811015610e325787850151825560209485019460019092019101610e12565b5084821015610e505786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a2646970667358221220da1655695fbbf3187eb151651a4771b1d64471343c95f1f6f6e577e78248cf5464736f6c634300081e0033";

type EURCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EURCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EURC__factory extends ContractFactory {
  constructor(...args: EURCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EURC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EURC__factory {
    return super.connect(runner) as EURC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EURCInterface {
    return new Interface(_abi) as EURCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EURC {
    return new Contract(address, _abi, runner) as unknown as EURC;
  }
}
