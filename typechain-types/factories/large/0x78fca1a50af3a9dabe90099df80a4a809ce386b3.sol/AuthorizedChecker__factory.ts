/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AuthorizedChecker,
  AuthorizedCheckerInterface,
} from "../../../large/0x78fca1a50af3a9dabe90099df80a4a809ce386b3.sol/AuthorizedChecker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deployerAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deployersIncubatorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "incubatorAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAuthorized",
        type: "bool",
      },
    ],
    name: "updateDeployerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAuthorized",
        type: "bool",
      },
    ],
    name: "updateIncubator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161071a38038061071a83398101604081905261002f916101b4565b600080546001600160a01b031916339081178255604051909182916000805160206106fa833981519152908290a3506001600160a01b03811660009081526002602090815260408083208054600160ff199182168117909255928190529220805490911690911790556100a1816100a7565b506101e4565b6000546001600160a01b031633146101065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661016b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fd565b600080546040516001600160a01b03808516939216916000805160206106fa83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156101c657600080fd5b81516001600160a01b03811681146101dd57600080fd5b9392505050565b610507806101f36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610123578063f2fde38b14610134578063f99774fa14610147578063fb0571151461016a57600080fd5b80630a1d37b01461008d57806347347dfa146100a2578063715018a6146100da57806376bd704f146100e2575b600080fd5b6100a061009b36600461043e565b61017d565b005b6100c56100b036600461047a565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100a061026f565b61010b6100f036600461047a565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6000546001600160a01b031661010b565b6100a061014236600461047a565b6102e3565b6100c561015536600461047a565b60026020526000908152604090205460ff1681565b6100a061017836600461043e565b6103cd565b3360009081526002602052604090205460ff166101d25760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6001600160a01b038281166000908152600360205260409020541661021e576001600160a01b038216600090815260036020526040902080546001600160a01b03191633179055610244565b6001600160a01b0382811660009081526003602052604090205416331461024457600080fd5b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146102995760405162461bcd60e51b81526004016101c99061049c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461030d5760405162461bcd60e51b81526004016101c99061049c565b6001600160a01b0381166103725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c9565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103f75760405162461bcd60e51b81526004016101c99061049c565b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b80356001600160a01b038116811461043957600080fd5b919050565b6000806040838503121561045157600080fd5b61045a83610422565b91506020830135801515811461046f57600080fd5b809150509250929050565b60006020828403121561048c57600080fd5b61049582610422565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122009b091263ac9c1ea42589d0e2aa3ba9f91b050537a33b1fce7868bff72a3a85364736f6c634300081900338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type AuthorizedCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthorizedCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuthorizedChecker__factory extends ContractFactory {
  constructor(...args: AuthorizedCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AuthorizedChecker> {
    return super.deploy(_owner, overrides || {}) as Promise<AuthorizedChecker>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): AuthorizedChecker {
    return super.attach(address) as AuthorizedChecker;
  }
  override connect(signer: Signer): AuthorizedChecker__factory {
    return super.connect(signer) as AuthorizedChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthorizedCheckerInterface {
    return new utils.Interface(_abi) as AuthorizedCheckerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthorizedChecker {
    return new Contract(address, _abi, signerOrProvider) as AuthorizedChecker;
  }
}
