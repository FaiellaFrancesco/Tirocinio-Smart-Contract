/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IVaultFactory,
  IVaultFactoryInterface,
} from "../../../large/0x78fca1a50af3a9dabe90099df80a4a809ce386b3.sol/IVaultFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_incubatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_overrideAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_parentToken",
        type: "address",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IVaultFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultFactoryInterface {
    return new utils.Interface(_abi) as IVaultFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVaultFactory {
    return new Contract(address, _abi, signerOrProvider) as IVaultFactory;
  }
}
