/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Vault,
  VaultInterface,
} from "../../../large/0x78fca1a50af3a9dabe90099df80a4a809ce386b3.sol/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_incubatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_overrideAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_parentToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FEE_DIVISOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approveTaxesFullyForTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethDispersed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "ethRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOutput",
        type: "uint256",
      },
    ],
    name: "forceBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "incubatorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incubatorFullApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incubatorRejected",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overrideAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "tokenRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensDispersed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610f81380380610f8183398101604081905261002f91610068565b6001600160a01b0390811660805291821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c051610e3761014a600039600081816101a1015281816103160152818161051e015281816107ad01526109600152600081816102aa015281816102e4015281816104ec0152818161077b015261092e0152600081816101ed015281816103e301528181610475015281816105e601528181610662015281816106fd015281816107f8015281816108a101526109a90152610e376000f3fe6080604052600436106100c65760003560e01c806380a540011161007f578063add26fd211610059578063add26fd214610262578063b311cd5514610278578063b85e716714610298578063f5f2de34146102cc57600080fd5b806380a54001146101db5780639e93ad8e1461020f578063a2832ce21461023e57600080fd5b8063046463de146100ea57806329f6c9141461011e5780634e23b7b91461013557806369754d68146101555780637d57a1b4146101755780637f06992d1461018f57600080fd5b366100e55734600160008282546100dd9190610caa565b925050819055005b600080fd5b3480156100f657600080fd5b5060005461010990610100900460ff1681565b60405190151581526020015b60405180910390f35b34801561012a57600080fd5b506101336102e2565b005b34801561014157600080fd5b50610133610150366004610cc3565b6104ea565b34801561016157600080fd5b50610133610170366004610ce5565b610779565b34801561018157600080fd5b506000546101099060ff1681565b34801561019b57600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610115565b3480156101e757600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b34801561021b57600080fd5b5061022561271081565b60405167ffffffffffffffff9091168152602001610115565b34801561024a57600080fd5b5061025460035481565b604051908152602001610115565b34801561026e57600080fd5b5061025460025481565b34801561028457600080fd5b50610133610293366004610ce5565b61092c565b3480156102a457600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d857600080fd5b5061025460015481565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148061034157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b6103665760405162461bcd60e51b815260040161035d90610cfe565b60405180910390fd5b600054610100900460ff16156103af5760405162461bcd60e51b815260206004820152600e60248201526d15185e195cc81c995a9958dd195960921b604482015260640161035d565b6000805460ff1916600117905547156103cb576103cb4761092c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610d25565b11156104e8576040516370a0823160e01b81523060048201526104e8907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101709190610d25565b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148061054957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b6105655760405162461bcd60e51b815260040161035d90610cfe565b60005460ff16156105b15760405162461bcd60e51b815260206004820152601660248201527515185e195cc8185b1c9958591e48185c1c1c9bdd995960521b604482015260640161035d565b600054610100900460ff166105d0576000805461ff0019166101001790555b604051631c53034b60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2981a589084906024016000604051808303818588803b15801561063357600080fd5b505af1158015610647573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190610d25565b905080156107745760405163a9059cbb60e01b815261dead6004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610d3e565b505b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314806107d857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b6107f45760405162461bcd60e51b815260040161035d90610cfe565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635d3a5e3b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190610d67565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018590529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190610d3e565b5081600360008282546109239190610caa565b90915550505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148061098b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b6109a75760405162461bcd60e51b815260040161035d90610cfe565b7f000000000000000000000000000000000000000000000000000000000000000047821115610a095760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced0408aa8960931b604482015260640161035d565b6000816001600160a01b0316638c43df136040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190610d90565b90506000826001600160a01b031663b4e7dfa26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad39190610d67565b90506000836001600160a01b0316634e1161726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b399190610d67565b905060008362ffffff1661271003610ba4576040516001600160a01b038416908790600081818185875af1925050503d8060008114610b94576040519150601f19603f3d011682016040523d82523d6000602084013e610b99565b606091505b505080915050610c75565b6000612710610bb862ffffff871689610db5565b610bc29190610dcc565b9050836001600160a01b03168160405160006040518083038185875af1925050503d8060008114610c0f576040519150601f19603f3d011682016040523d82523d6000602084013e610c14565b606091505b50909250506001600160a01b038316610c2d8289610dee565b604051600081818185875af1925050503d8060008114610c69576040519150601f19603f3d011682016040523d82523d6000602084013e610c6e565b606091505b5090925050505b8560026000828254610c879190610caa565b9091555050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cbd57610cbd610c94565b92915050565b60008060408385031215610cd657600080fd5b50508035926020909101359150565b600060208284031215610cf757600080fd5b5035919050565b6020808252600d908201526c2737ba1024b731bab130ba37b960991b604082015260600190565b600060208284031215610d3757600080fd5b5051919050565b600060208284031215610d5057600080fd5b81518015158114610d6057600080fd5b9392505050565b600060208284031215610d7957600080fd5b81516001600160a01b0381168114610d6057600080fd5b600060208284031215610da257600080fd5b815162ffffff81168114610d6057600080fd5b8082028115828204841417610cbd57610cbd610c94565b600082610de957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610cbd57610cbd610c9456fea2646970667358221220ceeb9ddd353af9a7060d2cd6a5101d546788fca900193e34ddc5b49d8a6cf83e64736f6c63430008190033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _incubatorAddress: PromiseOrValue<string>,
    _overrideAddress: PromiseOrValue<string>,
    _parentToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(
      _incubatorAddress,
      _overrideAddress,
      _parentToken,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    _incubatorAddress: PromiseOrValue<string>,
    _overrideAddress: PromiseOrValue<string>,
    _parentToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _incubatorAddress,
      _overrideAddress,
      _parentToken,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
