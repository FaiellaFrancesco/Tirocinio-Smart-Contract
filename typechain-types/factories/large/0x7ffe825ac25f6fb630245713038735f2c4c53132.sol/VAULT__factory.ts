/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VAULT,
  VAULTInterface,
} from "../../../large/0x7ffe825ac25f6fb630245713038735f2c4c53132.sol/VAULT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxnAmount",
        type: "uint256",
      },
    ],
    name: "maxTxnAmountUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_autoAddLiquidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_buyMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapTokensAtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "blacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeMultipleAccountsFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxWalletSize",
        type: "uint256",
      },
    ],
    name: "setMaxWalletsSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapTokensAtAmount",
        type: "uint256",
      },
    ],
    name: "setMinSwapTokensThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxTxnAmount",
        type: "uint256",
      },
    ],
    name: "setmaxTxAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_openTrading",
        type: "bool",
      },
    ],
    name: "startTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_swapEnabled",
        type: "bool",
      },
    ],
    name: "toggleSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notbot",
        type: "address",
      },
    ],
    name: "unBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redFeeOnSell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "devFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "devFeeOnSell",
        type: "uint256",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405261001968302379bf2ca2e00000600019610352565b61002590600019610374565b60065560006008819055600f6009819055600a829055600b819055600c829055600d819055600e919091558055601280546001600160a01b0319908116734e0c7409e31968c4894b4d8c7dcd05a919ef1a599081179092556013805490911690911790556015805461ffff60a81b1916600160b01b17905567f67831e74af000006016819055601755633b9aca006018553480156100c257600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506006543360009081526002602090815260409182902092909255601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155815163c45a015560e01b815291519092839263c45a015592600480830193928290030181865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a3919061039b565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610214919061039b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610261573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610285919061039b565b601580546001600160a01b0319166001600160a01b03928316179055600080548216815260056020526040808220805460ff1990811660019081179092553084528284208054821683179055601254851684528284208054821683179055601354909416835291208054909216179055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef68302379bf2ca2e0000060405161034491815260200190565b60405180910390a3506103cb565b60008261036f57634e487b7160e01b600052601260045260246000fd5b500690565b8181038181111561039557634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156103ad57600080fd5b81516001600160a01b03811681146103c457600080fd5b9392505050565b611df9806103da6000396000f3fe6080604052600436106101dc5760003560e01c80636912652c1161010257806398a5c31511610095578063c6616ba111610064578063c6616ba114610583578063dd62ed3e146105a3578063ee3b16c1146105e9578063f2fde38b1461060957600080fd5b806398a5c315146104f3578063a9059cbb14610513578063bfd7928414610533578063c492f0461461056357600080fd5b80637f2feddc116100d15780637f2feddc146104645780638da5cb5b146104915780638f9a55c0146104af57806395d89b41146104c557600080fd5b80636912652c146103ee5780636d8aa8f81461040f57806370a082311461042f578063715018a61461044f57600080fd5b806323b872dd1161017a57806349bd5a5e1161014957806349bd5a5e1461038457806351bc3c85146103a457806365e47de2146103b957806367a5ea2a146103d957600080fd5b806323b872dd146103125780632fd689e314610332578063313ce567146103485780633a065f981461036457600080fd5b80631694505e116101b65780631694505e1461027e57806318160ddd146102b65780631a895266146102dc5780631de12516146102fc57600080fd5b8063041f173f146101e857806306fdde031461020a578063095ea7b31461024e57600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b5061020861020336600461196f565b610629565b005b34801561021657600080fd5b50604080518082019091526009815268151a194815985d5b1d60ba1b60208201525b6040516102459190611a3f565b60405180910390f35b34801561025a57600080fd5b5061026e610269366004611a8d565b6106be565b6040519015158152602001610245565b34801561028a57600080fd5b5060145461029e906001600160a01b031681565b6040516001600160a01b039091168152602001610245565b3480156102c257600080fd5b5068302379bf2ca2e000005b604051908152602001610245565b3480156102e857600080fd5b506102086102f7366004611ab9565b6106d5565b34801561030857600080fd5b506102ce60165481565b34801561031e57600080fd5b5061026e61032d366004611ad6565b610720565b34801561033e57600080fd5b506102ce60185481565b34801561035457600080fd5b5060405160098152602001610245565b34801561037057600080fd5b5061020861037f366004611b17565b610789565b34801561039057600080fd5b5060155461029e906001600160a01b031681565b3480156103b057600080fd5b506102086107b8565b3480156103c557600080fd5b506102086103d4366004611b17565b61080f565b3480156103e557600080fd5b5061020861083e565b3480156103fa57600080fd5b5060155461026e90600160b81b900460ff1681565b34801561041b57600080fd5b5061020861042a366004611b40565b610886565b34801561043b57600080fd5b506102ce61044a366004611ab9565b6108ce565b34801561045b57600080fd5b506102086108f0565b34801561047057600080fd5b506102ce61047f366004611ab9565b60116020526000908152604090205481565b34801561049d57600080fd5b506000546001600160a01b031661029e565b3480156104bb57600080fd5b506102ce60175481565b3480156104d157600080fd5b50604080518082019091526005815264159055531560da1b6020820152610238565b3480156104ff57600080fd5b5061020861050e366004611b17565b610964565b34801561051f57600080fd5b5061026e61052e366004611a8d565b610993565b34801561053f57600080fd5b5061026e61054e366004611ab9565b60106020526000908152604090205460ff1681565b34801561056f57600080fd5b5061020861057e366004611b5b565b6109a0565b34801561058f57600080fd5b5061020861059e366004611be1565b610a37565b3480156105af57600080fd5b506102ce6105be366004611c13565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b3480156105f557600080fd5b50610208610604366004611b40565b610a75565b34801561061557600080fd5b50610208610624366004611ab9565b610abd565b6000546001600160a01b0316331461065c5760405162461bcd60e51b815260040161065390611c4c565b60405180910390fd5b60005b81518110156106ba5760016010600084848151811061068057610680611c81565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161065f565b5050565b60006106cb338484610ba7565b5060015b92915050565b6000546001600160a01b031633146106ff5760405162461bcd60e51b815260040161065390611c4c565b6001600160a01b03166000908152601060205260409020805460ff19169055565b600061072d848484610ccb565b61077f843361077a85604051806060016040528060288152602001611d9c602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190611207565b610ba7565b5060019392505050565b6000546001600160a01b031633146107b35760405162461bcd60e51b815260040161065390611c4c565b601755565b6012546001600160a01b0316336001600160a01b031614806107ed57506013546001600160a01b0316336001600160a01b0316145b6107f657600080fd5b6000610801306108ce565b905061080c81611241565b50565b6000546001600160a01b031633146108395760405162461bcd60e51b815260040161065390611c4c565b601655565b6012546001600160a01b0316336001600160a01b0316148061087357506013546001600160a01b0316336001600160a01b0316145b61087c57600080fd5b4761080c816113bb565b6000546001600160a01b031633146108b05760405162461bcd60e51b815260040161065390611c4c565b60158054911515600160b01b0260ff60b01b19909216919091179055565b6001600160a01b0381166000908152600260205260408120546106cf906113f5565b6000546001600160a01b0316331461091a5760405162461bcd60e51b815260040161065390611c4c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461098e5760405162461bcd60e51b815260040161065390611c4c565b601855565b60006106cb338484610ccb565b6000546001600160a01b031633146109ca5760405162461bcd60e51b815260040161065390611c4c565b60005b82811015610a315781600560008686858181106109ec576109ec611c81565b9050602002016020810190610a019190611ab9565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016109cd565b50505050565b6000546001600160a01b03163314610a615760405162461bcd60e51b815260040161065390611c4c565b600893909355600a91909155600955600b55565b6000546001600160a01b03163314610a9f5760405162461bcd60e51b815260040161065390611c4c565b60158054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b03163314610ae75760405162461bcd60e51b815260040161065390611c4c565b6001600160a01b038116610b4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610653565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610c095760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610653565b6001600160a01b038216610c6a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610653565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d2f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610653565b6001600160a01b038216610d915760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610653565b60008111610df35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610653565b6000546001600160a01b03848116911614801590610e1f57506000546001600160a01b03838116911614155b1561110057601554600160a01b900460ff16610eb8576000546001600160a01b03848116911614610eb85760405162461bcd60e51b815260206004820152603f60248201527f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060448201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c6564006064820152608401610653565b601654811115610f0a5760405162461bcd60e51b815260206004820152601c60248201527f544f4b454e3a204d6178205472616e73616374696f6e204c696d6974000000006044820152606401610653565b6001600160a01b03831660009081526010602052604090205460ff16158015610f4c57506001600160a01b03821660009081526010602052604090205460ff16155b610fa45760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460448201526265642160e81b6064820152608401610653565b6015546001600160a01b038381169116146110295760175481610fc6846108ce565b610fd09190611cad565b106110295760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073696044820152627a652160e81b6064820152608401610653565b6000611034306108ce565b60185460165491925082101590821061104d5760165491505b8080156110645750601554600160a81b900460ff16155b801561107e57506015546001600160a01b03868116911614155b80156110935750601554600160b01b900460ff165b80156110b857506001600160a01b03851660009081526005602052604090205460ff16155b80156110dd57506001600160a01b03841660009081526005602052604090205460ff16155b156110fd576110eb82611241565b4780156110fb576110fb476113bb565b505b50505b6001600160a01b03831660009081526005602052604090205460019060ff168061114257506001600160a01b03831660009081526005602052604090205460ff165b8061117457506015546001600160a01b0385811691161480159061117457506015546001600160a01b03848116911614155b15611181575060006111fb565b6015546001600160a01b0385811691161480156111ac57506014546001600160a01b03848116911614155b156111be57600854600c55600954600d555b6015546001600160a01b0384811691161480156111e957506014546001600160a01b03858116911614155b156111fb57600a54600c55600b54600d555b610a3184848484611479565b6000818484111561122b5760405162461bcd60e51b81526004016106539190611a3f565b5060006112388486611cc0565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061128957611289611c81565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113069190611cd3565b8160018151811061131957611319611c81565b6001600160a01b03928316602091820292909201015260145461133f9130911684610ba7565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac94790611378908590600090869030904290600401611cf0565b600060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6013546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106ba573d6000803e3d6000fd5b600060065482111561145c5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610653565b60006114666114a7565b905061147283826114ca565b9392505050565b806114865761148661150c565b61149184848461153a565b80610a3157610a31600e54600c55600f54600d55565b60008060006114b4611631565b90925090506114c382826114ca565b9250505090565b600061147283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611673565b600c5415801561151c5750600d54155b1561152357565b600c8054600e55600d8054600f5560009182905555565b60008060008060008061154c876116a1565b6001600160a01b038f16600090815260026020526040902054959b5093995091975095509350915061157e90876116fe565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115ad9086611740565b6001600160a01b0389166000908152600260205260409020556115cf8161179f565b6115d984836117e9565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161161e91815260200190565b60405180910390a3505050505050505050565b600654600090819068302379bf2ca2e0000061164d82826114ca565b82101561166a5750506006549268302379bf2ca2e0000092509050565b90939092509050565b600081836116945760405162461bcd60e51b81526004016106539190611a3f565b5060006112388486611d62565b60008060008060008060008060006116be8a600c54600d5461180d565b92509250925060006116ce6114a7565b905060008060006116e18e878787611862565b919e509c509a509598509396509194505050505091939550919395565b600061147283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611207565b60008061174d8385611cad565b9050838110156114725760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610653565b60006117a96114a7565b905060006117b783836118b2565b306000908152600260205260409020549091506117d49082611740565b30600090815260026020526040902055505050565b6006546117f690836116fe565b6006556007546118069082611740565b6007555050565b6000808080611827606461182189896118b2565b906114ca565b9050600061183a60646118218a896118b2565b905060006118528261184c8b866116fe565b906116fe565b9992985090965090945050505050565b600080808061187188866118b2565b9050600061187f88876118b2565b9050600061188d88886118b2565b9050600061189f8261184c86866116fe565b939b939a50919850919650505050505050565b6000826000036118c4575060006106cf565b60006118d08385611d84565b9050826118dd8583611d62565b146114725760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610653565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080c57600080fd5b803561196a8161194a565b919050565b60006020828403121561198157600080fd5b813567ffffffffffffffff81111561199857600080fd5b8201601f810184136119a957600080fd5b803567ffffffffffffffff8111156119c3576119c3611934565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156119f0576119f0611934565b604052918252602081840181019290810187841115611a0e57600080fd5b6020850194505b83851015611a3457611a268561195f565b815260209485019401611a15565b509695505050505050565b602081526000825180602084015260005b81811015611a6d5760208186018101516040868401015201611a50565b506000604082850101526040601f19601f83011684010191505092915050565b60008060408385031215611aa057600080fd5b8235611aab8161194a565b946020939093013593505050565b600060208284031215611acb57600080fd5b81356114728161194a565b600080600060608486031215611aeb57600080fd5b8335611af68161194a565b92506020840135611b068161194a565b929592945050506040919091013590565b600060208284031215611b2957600080fd5b5035919050565b8035801515811461196a57600080fd5b600060208284031215611b5257600080fd5b61147282611b30565b600080600060408486031215611b7057600080fd5b833567ffffffffffffffff811115611b8757600080fd5b8401601f81018613611b9857600080fd5b803567ffffffffffffffff811115611baf57600080fd5b8660208260051b8401011115611bc457600080fd5b602091820194509250611bd8908501611b30565b90509250925092565b60008060008060808587031215611bf757600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611c2657600080fd5b8235611c318161194a565b91506020830135611c418161194a565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106cf576106cf611c97565b818103818111156106cf576106cf611c97565b600060208284031215611ce557600080fd5b81516114728161194a565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611d425783516001600160a01b0316835260209384019390920191600101611d1b565b50506001600160a01b039590951660608401525050608001529392505050565b600082611d7f57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176106cf576106cf611c9756fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c003a1b380c00cdd2da0841442674fded8f641cb1678cf127408919d128e424464736f6c634300081d0033";

type VAULTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAULTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VAULT__factory extends ContractFactory {
  constructor(...args: VAULTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VAULT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VAULT__factory {
    return super.connect(runner) as VAULT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAULTInterface {
    return new Interface(_abi) as VAULTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VAULT {
    return new Contract(address, _abi, runner) as unknown as VAULT;
  }
}
