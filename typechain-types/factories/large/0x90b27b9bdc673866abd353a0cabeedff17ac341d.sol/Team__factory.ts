/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Team,
  TeamInterface,
} from "../../../large/0x90b27b9bdc673866abd353a0cabeedff17ac341d.sol/Team";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "ReleaseAllocation",
    type: "event",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eachReleaseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFirstRelease",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRelease",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTimeRelease",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releasePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610c938061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063eff548b811610066578063eff548b8146101b3578063f2fde38b146101bc578063fc0c546a146101cf578063fe97479c146101e257600080fd5b80638da5cb5b1461016a578063a50a1fe61461018f578063b69ef8a814610198578063c4d66de8146101a057600080fd5b806373fd2807116100d357806373fd28071461013d57806379203dc41461015057806383ab0ac61461015957806386d1a69f1461016257600080fd5b8063300e2ea6146100fa57806363ef16271461011c578063715018a614610133575b600080fd5b6068546101079060ff1681565b60405190151581526020015b60405180910390f35b610125606a5481565b604051908152602001610113565b61013b6101eb565b005b61013b61014b366004610ad7565b6101ff565b61012560655481565b61012560675481565b61013b610360565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610113565b61012560665481565b6101256104bb565b61013b6101ae366004610ad7565b61052d565b610125606b5481565b61013b6101ca366004610ad7565b6106a7565b606c54610177906001600160a01b031681565b61012560695481565b6101f3610720565b6101fd600061077a565b565b73d5f266f0e8240f4831445d80cd545b3baaa1b95233146102675760405162461bcd60e51b815260206004820152601760248201527f4e6f7420416c6c6f77656420746f20776974686472617700000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb9073d5f266f0e8240f4831445d80cd545b3baaa1b9529083906370a0823190602401602060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610b00565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610b19565b5050565b610368610720565b6000606654116103ba5760405162461bcd60e51b815260206004820152601860248201527f416c6c20746f6b656e7320776572652072656c65617365640000000000000000604482015260640161025e565b60695442101561040c5760405162461bcd60e51b815260206004820152601e60248201527f506c65617365207761697420756e74696c2072656c656173652074696d650000604482015260640161025e565b6000606b5442106104205750606654610439565b606654606754116104345750606754610439565b506066545b806066546104479190610b51565b606655606a5460695461045a9190610b6a565b606955606c54610474906001600160a01b031633836107cc565b60665460405133917f3b4f7b9a693cf8ad00e17afa45165765a0c859850c35f30cf122655d94f05e08916104b091858252602082015260400190565b60405180910390a250565b606c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105289190610b00565b905090565b600054610100900460ff161580801561054d5750600054600160ff909116105b806105675750303b158015610567575060005460ff166001145b6105ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161025e565b6000805460ff1916600117905580156105ed576000805461ff0019166101001790555b6105f5610823565b606c80546001600160a01b0319166001600160a01b0384161790556a73ce27351811f40c0000006065819055606681905561063290601890610b7d565b606755610643426301da9c00610b6a565b60695562278d00606a5561065b4263058fd400610b6a565b606b55801561035c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6106af610720565b6001600160a01b0381166107145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61071d8161077a565b50565b6033546001600160a01b031633146101fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261081e908490610852565b505050565b600054610100900460ff1661084a5760405162461bcd60e51b815260040161025e90610b9f565b6101fd610924565b60006108a7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109549092919063ffffffff16565b80519091501561081e57808060200190518101906108c59190610b19565b61081e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161025e565b600054610100900460ff1661094b5760405162461bcd60e51b815260040161025e90610b9f565b6101fd3361077a565b6060610963848460008561096d565b90505b9392505050565b6060824710156109ce5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161025e565b6001600160a01b0385163b610a255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025e565b600080866001600160a01b03168587604051610a419190610c0e565b60006040518083038185875af1925050503d8060008114610a7e576040519150601f19603f3d011682016040523d82523d6000602084013e610a83565b606091505b5091509150610a93828286610a9e565b979650505050505050565b60608315610aad575081610966565b825115610abd5782518084602001fd5b8160405162461bcd60e51b815260040161025e9190610c2a565b600060208284031215610ae957600080fd5b81356001600160a01b038116811461096657600080fd5b600060208284031215610b1257600080fd5b5051919050565b600060208284031215610b2b57600080fd5b8151801515811461096657600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610b6457610b64610b3b565b92915050565b80820180821115610b6457610b64610b3b565b600082610b9a57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610c05578181015183820152602001610bed565b50506000910152565b60008251610c20818460208701610bea565b9190910192915050565b6020815260008251806020840152610c49816040850160208701610bea565b601f01601f1916919091016040019291505056fea2646970667358221220888cf2d440a525fe3124e45858286c227d5afc5f8c03717dd1c344e44859bbd864736f6c634300081e0033";

type TeamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TeamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Team__factory extends ContractFactory {
  constructor(...args: TeamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Team> {
    return super.deploy(overrides || {}) as Promise<Team>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Team {
    return super.attach(address) as Team;
  }
  override connect(signer: Signer): Team__factory {
    return super.connect(signer) as Team__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TeamInterface {
    return new utils.Interface(_abi) as TeamInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Team {
    return new Contract(address, _abi, signerOrProvider) as Team;
  }
}
