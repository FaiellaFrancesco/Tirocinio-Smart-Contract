/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GOF,
  GOFInterface,
} from "../../../large/0x9d2c86157a61e1beffdc4b4d972c0bd6cc1c04e5.sol/GOF";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600a81526020016911dbdb19195b8813dddb60b21b8152506040518060400160405280600381526020016223a7a360e91b815250816003908161005f919061026a565b50600461006c828261026a565b5050506100856100806100ae60201b60201c565b6100b2565b6100a9336100956012600a610427565b6100a49064012a05f20061043d565b610104565b610467565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661015e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546101709190610454565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806101f657607f821691505b60208210810361021657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101c757806000526020600020601f840160051c810160208510156102435750805b601f840160051c820191505b81811015610263576000815560010161024f565b5050505050565b81516001600160401b03811115610283576102836101cc565b6102978161029184546101e2565b8461021c565b6020601f8211600181146102cb57600083156102b35750848201515b600019600385901b1c1916600184901b178455610263565b600084815260208120601f198516915b828110156102fb57878501518255602094850194600190920191016102db565b50848210156103195786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103795780850481111561035d5761035d610328565b600184161561036b57908102905b60019390931c928002610342565b935093915050565b60008261039057506001610421565b8161039d57506000610421565b81600181146103b357600281146103bd576103d9565b6001915050610421565b60ff8411156103ce576103ce610328565b50506001821b610421565b5060208310610133831016604e8410600b84101617156103fc575081810a610421565b610409600019848461033e565b806000190482111561041d5761041d610328565b0290505b92915050565b600061043660ff841683610381565b9392505050565b808202811582820484141761042157610421610328565b8082018082111561042157610421610328565b610dc1806104766000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610adc565b60405180910390f35b61014161013c366004610b46565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610b70565b61031f565b60405160128152602001610125565b610141610193366004610b46565b610343565b6101ab6101a6366004610b46565b610365565b005b6101ab6101bb366004610bad565b610390565b6101556101ce366004610bc6565b6001600160a01b031660009081526020819052604090205490565b6101ab61039d565b6101ab6101ff366004610b46565b6103b1565b6005546040516001600160a01b039091168152602001610125565b6101186103c6565b610141610235366004610b46565b6103d5565b610141610248366004610b46565b610455565b61015561025b366004610be8565b610463565b6101ab61026e366004610bc6565b61048e565b60606003805461028290610c1b565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c1b565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b600033610313818585610504565b60019150505b92915050565b60003361032d858285610629565b6103388585856106a3565b506001949350505050565b6000336103138185856103568383610463565b6103609190610c6b565b610504565b61036d610847565b61038c8261037d6012600a610d65565b6103879084610d74565b6108a1565b5050565b61039a3382610960565b50565b6103a5610847565b6103af6000610a8a565b565b6103bc823383610629565b61038c8282610960565b60606004805461028290610c1b565b600033816103e38286610463565b9050838110156104485760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103388286868403610504565b6000336103138185856106a3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610496610847565b6001600160a01b0381166104fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043f565b61039a81610a8a565b6001600160a01b0383166105665760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043f565b6001600160a01b0382166105c75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106358484610463565b9050600019811461069d57818110156106905760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161043f565b61069d8484848403610504565b50505050565b6001600160a01b0383166107075760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043f565b6001600160a01b0382166107695760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043f565b6001600160a01b038316600090815260208190526040902054818110156107e15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161043f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361069d565b6005546001600160a01b031633146103af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043f565b6001600160a01b0382166108f75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161043f565b80600260008282546109099190610c6b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109c05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161043f565b6001600160a01b03821660009081526020819052604090205481811015610a345760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161043f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161061c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b602081526000825180602084015260005b81811015610b0a5760208186018101516040868401015201610aed565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610b4157600080fd5b919050565b60008060408385031215610b5957600080fd5b610b6283610b2a565b946020939093013593505050565b600080600060608486031215610b8557600080fd5b610b8e84610b2a565b9250610b9c60208501610b2a565b929592945050506040919091013590565b600060208284031215610bbf57600080fd5b5035919050565b600060208284031215610bd857600080fd5b610be182610b2a565b9392505050565b60008060408385031215610bfb57600080fd5b610c0483610b2a565b9150610c1260208401610b2a565b90509250929050565b600181811c90821680610c2f57607f821691505b602082108103610c4f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031957610319610c55565b6001815b6001841115610cb957808504811115610c9d57610c9d610c55565b6001841615610cab57908102905b60019390931c928002610c82565b935093915050565b600082610cd057506001610319565b81610cdd57506000610319565b8160018114610cf35760028114610cfd57610d19565b6001915050610319565b60ff841115610d0e57610d0e610c55565b50506001821b610319565b5060208310610133831016604e8410600b8410161715610d3c575081810a610319565b610d496000198484610c7e565b8060001904821115610d5d57610d5d610c55565b029392505050565b6000610be160ff841683610cc1565b808202811582820484141761031957610319610c5556fea26469706673582212203cc4898946e2f06c9a2f5f889e113706210fd58480fe22de53dc2dc7a4f2d0a964736f6c634300081c0033";

type GOFConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GOFConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GOF__factory extends ContractFactory {
  constructor(...args: GOFConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GOF> {
    return super.deploy(overrides || {}) as Promise<GOF>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GOF {
    return super.attach(address) as GOF;
  }
  override connect(signer: Signer): GOF__factory {
    return super.connect(signer) as GOF__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GOFInterface {
    return new utils.Interface(_abi) as GOFInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GOF {
    return new Contract(address, _abi, signerOrProvider) as GOF;
  }
}
