/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Proxy,
  ProxyInterface,
} from "../../../large/0x67c58996670ad4afc9cf74f3367a6c430da0b605.sol/Proxy";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

export class Proxy__factory {
  static readonly abi = _abi;
  static createInterface(): ProxyInterface {
    return new Interface(_abi) as ProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Proxy {
    return new Contract(address, _abi, runner) as unknown as Proxy;
  }
}
