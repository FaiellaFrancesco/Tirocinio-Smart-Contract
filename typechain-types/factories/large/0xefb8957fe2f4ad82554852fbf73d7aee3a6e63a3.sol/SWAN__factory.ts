/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SWAN,
  SWANInterface,
} from "../../../large/0xefb8957fe2f4ad82554852fbf73d7aee3a6e63a3.sol/SWAN";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokens",
        type: "uint256",
      },
    ],
    name: "AutoLiquify",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClearStuck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "Buy",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "Sell",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "Transfer",
        type: "uint8",
      },
    ],
    name: "EditTax",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTX",
        type: "uint256",
      },
    ],
    name: "set_MaxTX",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxWallet",
        type: "uint256",
      },
    ],
    name: "set_MaxWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "marketingFeeReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buybackFeeReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "burnFeeReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "devFeeReceiver",
        type: "address",
      },
    ],
    name: "set_Receivers",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "Enabled",
        type: "bool",
      },
    ],
    name: "set_SwapBack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "Exempt",
        type: "bool",
      },
    ],
    name: "user_TxExempt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "Exempt",
        type: "bool",
      },
    ],
    name: "user_exemptfromfees",
    type: "event",
  },
  {
    inputs: [],
    name: "TradingOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "approveMax",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accuracy",
        type: "uint256",
      },
    ],
    name: "checkRatio",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxWallPercent",
        type: "uint256",
      },
    ],
    name: "maxWalletRule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IDEXRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liquidityFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buybackFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_devFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeDenominator",
        type: "uint256",
      },
    ],
    name: "setParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percentonbuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentonsell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_wallettransfer",
        type: "uint256",
      },
    ],
    name: "setStructure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setSwapBackSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_autoLiquidityReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketingFeeReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devFeeReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_burnFeeReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buybackFeeReceiver",
        type: "address",
      },
    ],
    name: "setWallets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accuracy",
        type: "uint256",
      },
    ],
    name: "showBacking",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "showSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052620000126012600a62000683565b620000239064e8d4a5100062000694565b6003556200005e6103e86200004a60196003546200045360201b62000f191790919060201c565b620004ea60201b62000f9b1790919060201c565b600455620000856103e86200004a60196003546200045360201b62000f191790919060201c565b6005556001600a556001600b556000600c556000600d556000600e55600e54600c54600a54600b54600d54620000bc9190620006ae565b620000c89190620006ae565b620000d49190620006ae565b620000e09190620006ae565b600f5560646010819055601181905560128190556013819055601e601955601a55601d805461ffff60a01b1916600160a81b1790556003546103e8906200012990600762000694565b620001359190620006c4565b601e553480156200014557600080fd5b50600080546001600160a01b031916339081178255808252600160208190526040808420805460ff191690921790915551909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa15801562000205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022b9190620006e7565b600280546001600160a01b0319166001600160a01b03928316179055601b546040805163c45a015560e01b81529051919092169163c45a01559160048083019260209291908290030181865afa1580156200028a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b09190620006e7565b6002546040516364e329cb60e11b81526001600160a01b03918216600482015230602482015291169063c9c65396906044016020604051808303816000875af115801562000302573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003289190620006e7565b601d80546001600160a01b039283166001600160a01b031991821681178355601c805483169091179055306000818152600760209081526040808320601b5488168452825280832060001990553380845260088352818420805460ff1990811660019081179092556009855283862080548216831790559754891685528285208054891682179055601580549099168552828520805489168217905594845281842080549097169094179095556014805485168417905585548416831790955560168054841683179055601780548416831790556018805490931661dead179092556003548183526006855283832081905592519283529290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a362000762565b6000826000036200046757506000620004e4565b600062000475838562000694565b905082620004848583620006c4565b14620004e15760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b90505b92915050565b6000620004e183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200053460201b60201c565b60008183620005585760405162461bcd60e51b8152600401620004d8919062000712565b506000620005678486620006c4565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005c7578160001904821115620005ab57620005ab62000570565b80851615620005b957918102915b93841c93908002906200058b565b509250929050565b600082620005e057506001620004e4565b81620005ef57506000620004e4565b8160018114620006085760028114620006135762000633565b6001915050620004e4565b60ff84111562000627576200062762000570565b50506001821b620004e4565b5060208310610133831016604e8410600b841016171562000658575081810a620004e4565b62000664838362000586565b80600019048211156200067b576200067b62000570565b029392505050565b6000620004e160ff841683620005cf565b8082028115828204841417620004e457620004e462000570565b80820180821115620004e457620004e462000570565b600082620006e257634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620006fa57600080fd5b81516001600160a01b0381168114620004e157600080fd5b600060208083528351808285015260005b81811015620007415785810183015185820160400152820162000723565b506000604082860101526040601f19601f8301168501019250505092915050565b61202f80620007726000396000f3fe6080604052600436106102135760003560e01c806377b54bad11610118578063a9059cbb116100a0578063ded1e4381161006f578063ded1e43814610635578063df20fd4914610655578063f2fde38b14610675578063f429389014610695578063f887ea40146106aa57600080fd5b8063a9059cbb1461058f578063b2bdfa7b146105af578063c0cbdea4146105cf578063dd62ed3e146105ef57600080fd5b8063893d20e8116100e7578063893d20e8146104db5780638da5cb5b1461050d57806395d89b411461052b578063a70419d21461055a578063a8aa1b311461056f57600080fd5b806377b54bad1461046f57806378109e541461048f5780637d1db4a5146104a557806382528791146104bb57600080fd5b806330c9a6a01161019b5780635d83e1d51161016a5780635d83e1d5146103ce5780636ddd1713146103ee57806370a082311461040f578063715018a614610445578063751039fc1461045a57600080fd5b806330c9a6a01461035d578063313ce5671461037d5780635526566914610399578063571ac8b0146103ae57600080fd5b806318160ddd116101e257806318160ddd146102db5780631df4ccfc146102f057806323b872dd14610306578063282c874914610326578063293230b81461034857600080fd5b80630445b6671461021f57806306fdde031461024857806308fd3d051461028a578063095ea7b3146102bb57600080fd5b3661021a57005b600080fd5b34801561022b57600080fd5b50610235601e5481565b6040519081526020015b60405180910390f35b34801561025457600080fd5b5060408051808201909152601081526f11dc99595b8814ddd85b88115d995b9d60821b60208201525b60405161023f9190611beb565b34801561029657600080fd5b50601d546102ab90600160a01b900460ff1681565b604051901515815260200161023f565b3480156102c757600080fd5b506102ab6102d6366004611c55565b6106ca565b3480156102e757600080fd5b50600354610235565b3480156102fc57600080fd5b50610235600f5481565b34801561031257600080fd5b506102ab610321366004611c7f565b610737565b34801561033257600080fd5b50610346610341366004611cbb565b6107f9565b005b34801561035457600080fd5b50610346610875565b34801561036957600080fd5b50610235610378366004611cfe565b6108c4565b34801561038957600080fd5b506040516012815260200161023f565b3480156103a557600080fd5b5061023561090b565b3480156103ba57600080fd5b506102ab6103c9366004611d17565b61097c565b3480156103da57600080fd5b506103466103e9366004611cfe565b61098a565b3480156103fa57600080fd5b50601d546102ab90600160a81b900460ff1681565b34801561041b57600080fd5b5061023561042a366004611d17565b6001600160a01b031660009081526006602052604090205490565b34801561045157600080fd5b50610346610a18565b34801561046657600080fd5b50610346610a8c565b34801561047b57600080fd5b506102ab61048a366004611c55565b610ac3565b34801561049b57600080fd5b5061023560055481565b3480156104b157600080fd5b5061023560045481565b3480156104c757600080fd5b506103466104d6366004611d32565b610bf1565b3480156104e757600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161023f565b34801561051957600080fd5b506000546001600160a01b03166104f5565b34801561053757600080fd5b506040805180820190915260068152652a20a924a32360d11b602082015261027d565b34801561056657600080fd5b50610346610cc9565b34801561057b57600080fd5b50601d546104f5906001600160a01b031681565b34801561059b57600080fd5b506102ab6105aa366004611c55565b610d04565b3480156105bb57600080fd5b506000546104f5906001600160a01b031681565b3480156105db57600080fd5b506103466105ea366004611d97565b610d11565b3480156105fb57600080fd5b5061023561060a366004611dc3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b34801561064157600080fd5b506102ab610650366004611df6565b610d4c565b34801561066157600080fd5b50610346610670366004611e26565b610d60565b34801561068157600080fd5b50610346610690366004611d17565b610df3565b3480156106a157600080fd5b50610346610edd565b3480156106b657600080fd5b50601b546104f5906001600160a01b031681565b3360008181526007602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107259086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600760209081526040808320338452909152812054600019146107e4576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526007825283812033825290915291909120546107bf918490610fdd565b6001600160a01b03851660009081526007602090815260408083203384529091529020555b6107ef848484611017565b90505b9392505050565b6000546001600160a01b0316331461082c5760405162461bcd60e51b815260040161082390611e44565b60405180910390fd5b600a869055600d859055600b849055600c839055600e82905561085d82610857858188818c8c61137a565b9061137a565b600f55601081905561086d6113d9565b505050505050565b6000546001600160a01b0316331461089f5760405162461bcd60e51b815260040161082390611e44565b601d805460ff60a01b1916600160a01b17905560c860128190556011556103e8601355565b60006107316108d161090b565b601d546001600160a01b0316600090815260066020526040902054610905906108fe906002905b90610f19565b8590610f19565b90610f9b565b60066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85461dead60009081527f1aecba4ebe7a4e0673e4891b2b092b2228e4322380b579fb494fad3da8586e225460035491926109779290916109719190611474565b90611474565b905090565b6000610731826000196106ca565b6000546001600160a01b031633146109b45760405162461bcd60e51b815260040161082390611e44565b60018110156109c257600080fd5b6103e8816003546109d39190611e8f565b6109dd9190611ea6565b60058190556040519081527f1273be876d6df5e39545188e5f5d2d930e30e383f2fb2dc9dfaae2643901be519060200160405180910390a150565b6000546001600160a01b03163314610a425760405162461bcd60e51b815260040161082390611e44565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610ab65760405162461bcd60e51b815260040161082390611e44565b6003546004819055600555565b600081600003610b38576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611ec8565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a160145460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529084169063a9059cbb906044016020604051808303816000875af1158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f29190611ee1565b6000546001600160a01b03163314610c1b5760405162461bcd60e51b815260040161082390611e44565b601480546001600160a01b038781166001600160a01b031992831617909255601580548784169083168117909155601680548785169084168117909155601880548786169085168117909155601780549587169590941685179093556040805192835260208301949094529281019190915260608101919091527f06cd79b5e338fdebb51e28f829f3333e4fda9663d4732f262d97dbbacf748b159060800160405180910390a15050505050565b6000546001600160a01b03163314610cf35760405162461bcd60e51b815260040161082390611e44565b606460128190556011819055601355565b60006107f2338484611017565b6000546001600160a01b03163314610d3b5760405162461bcd60e51b815260040161082390611e44565b601191909155601291909155601355565b600082610d58836108c4565b119392505050565b6000546001600160a01b03163314610d8a5760405162461bcd60e51b815260040161082390611e44565b601d805460ff60a81b1916600160a81b84151581029190911791829055601e8390556040805184815260ff9290930491909116151560208301527f519582fd959400ab5e398f78c2768dea99251e8e26aed5578213b059ce4cee60910160405180910390a15050565b6000546001600160a01b03163314610e1d5760405162461bcd60e51b815260040161082390611e44565b6001600160a01b038116610e825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610823565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6014546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610f16573d6000803e3d6000fd5b50565b600082600003610f2b57506000610731565b6000610f378385611e8f565b905082610f448583611ea6565b146107f25760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610823565b60006107f283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114b6565b600081848411156110015760405162461bcd60e51b81526004016108239190611beb565b50600061100e8486611efe565b95945050505050565b601f5460009060ff1615611037576110308484846114e4565b90506107f2565b6001600160a01b03841660009081526001602052604090205460ff1615801561107957506001600160a01b03831660009081526001602052604090205460ff16155b156110ce57601d54600160a01b900460ff166110ce5760405162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b6044820152606401610823565b6001600160a01b03841660009081526001602052604090205460ff1615801561110057506001600160a01b0383163014155b801561111757506001600160a01b03831661dead14155b80156111315750601d546001600160a01b03848116911614155b801561114b57506018546001600160a01b03848116911614155b801561116557506015546001600160a01b03848116911614155b801561118a57506001600160a01b03831660009081526009602052604090205460ff16155b1561122b576001600160a01b0383166000908152600660205260409020546005546111b58483611f11565b11156112295760405162461bcd60e51b815260206004820152603e60248201527f546f74616c20486f6c64696e672069732063757272656e746c79206c696d697460448201527f65642c20796f752063616e206e6f74206275792074686174206d7563682e00006064820152608401610823565b505b61123584836115b8565b61123d611625565b1561124a5761124a61167b565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b03871660009081526006909152919091205461129c918490610fdd565b6001600160a01b038516600090815260066020908152604080832093909355600890529081205460ff16806112e957506001600160a01b03841660009081526008602052604090205460ff165b6112fd576112f8858486611a62565b6112ff565b825b6001600160a01b038516600090815260066020526040902054909150611325908261137a565b6001600160a01b038086166000818152600660205260409081902093909355915190871690600080516020611fda833981519152906113679085815260200190565b60405180910390a3506001949350505050565b6000806113878385611f11565b9050838110156107f25760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610823565b7f8cc651ceed4360bdb07d4dfc17daa4a6fa17092a313d2464a582a73e9b9328006114166064610905601254600f54610f1990919063ffffffff16565b6114326064610905601154600f54610f1990919063ffffffff16565b61144e6064610905601354600f54610f1990919063ffffffff16565b6040805160ff9485168152928416602084015292168183015290519081900360600190a1565b60006107f283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fdd565b600081836114d75760405162461bcd60e51b81526004016108239190611beb565b50600061100e8486611ea6565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0386166000908152600690915291822054611535918490610fdd565b6001600160a01b038086166000908152600660205260408082209390935590851681522054611564908361137a565b6001600160a01b038085166000818152600660205260409081902093909355915190861690600080516020611fda833981519152906115a69086815260200190565b60405180910390a35060019392505050565b600454811115806115e157506001600160a01b03821660009081526009602052604090205460ff165b6116215760405162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b6044820152606401610823565b5050565b601d546000906001600160a01b031633148015906116465750601f5460ff16155b801561165b5750601d54600160a81b900460ff165b8015610977575050601e5430600090815260066020526040902054101590565b601f805460ff19166001179055601954601a5460009161169a91610d4c565b6116a657600a546116a9565b60005b905060006116cd6002610905600f5461090586601e54610f1990919063ffffffff16565b905060006116e682601e5461147490919063ffffffff16565b6040805160028082526060820183529293506000929091602083019080368337019050509050308160008151811061172057611720611f24565b6001600160a01b03928316602091820292909201015260025482519116908290600190811061175157611751611f24565b6001600160a01b039283166020918202929092010152601b5460405163791ac94760e01b81524792919091169063791ac9479061179b908690600090879030904290600401611f3a565b600060405180830381600087803b1580156117b557600080fd5b505af11580156117c9573d6000803e3d6000fd5b5050505060006117e2824761147490919063ffffffff16565b905060006117fd6117f4886002610f9b565b600f5490611474565b9050600061181260026109058481878d610f19565b9050600061182f83610905600b5487610f1990919063ffffffff16565b9050600061184c84610905600d5488610f1990919063ffffffff16565b9050600061186985610905600c5489610f1990919063ffffffff16565b6015546040519192506000916001600160a01b039091169085908381818185875af1925050503d80600081146118bb576040519150601f19603f3d011682016040523d82523d6000602084013e6118c0565b606091505b50506016546040519192506001600160a01b0316908390600081818185875af1925050503d8060008114611910576040519150601f19603f3d011682016040523d82523d6000602084013e611915565b606091505b50506017546040519192506001600160a01b0316908490600081818185875af1925050503d8060008114611965576040519150601f19603f3d011682016040523d82523d6000602084013e61196a565b606091505b5060009250508b159050611a4a57601b5460145460405163f305d71960e01b8152306004820152602481018e905260006044820181905260648201526001600160a01b0391821660848201524260a482015291169063f305d71990879060c40160606040518083038185885af11580156119e8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611a0d9190611fab565b505060408051878152602081018e90527f424db2872186fa7e7afa7a5e902ed3b49a2ef19c2f5431e672462495dd6b450692500160405180910390a15b5050601f805460ff1916905550505050505050505050565b601354601d54600091906001600160a01b0390811690841603611a885750601154611aa3565b601d546001600160a01b0390811690861603611aa357506012545b6000611ad06010546064611ab79190611e8f565b610905846108f8600f548a610f1990919063ffffffff16565b90506000611aef600f54610905600e5485610f1990919063ffffffff16565b90506000611afd8383611474565b30600090815260066020526040902054909150611b1a908261137a565b30600090815260066020526040808220929092556018546001600160a01b031681522054611b48908361137a565b6018546001600160a01b0390811660009081526006602090815260409182902093909355518381523092918b1691600080516020611fda833981519152910160405180910390a38115611bd557600354611ba29083611474565b6003556040518281526000906001600160a01b038a1690600080516020611fda8339815191529060200160405180910390a35b611bdf8784611474565b98975050505050505050565b600060208083528351808285015260005b81811015611c1857858101830151858201604001528201611bfc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611c5057600080fd5b919050565b60008060408385031215611c6857600080fd5b611c7183611c39565b946020939093013593505050565b600080600060608486031215611c9457600080fd5b611c9d84611c39565b9250611cab60208501611c39565b9150604084013590509250925092565b60008060008060008060c08789031215611cd457600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b600060208284031215611d1057600080fd5b5035919050565b600060208284031215611d2957600080fd5b6107f282611c39565b600080600080600060a08688031215611d4a57600080fd5b611d5386611c39565b9450611d6160208701611c39565b9350611d6f60408701611c39565b9250611d7d60608701611c39565b9150611d8b60808701611c39565b90509295509295909350565b600080600060608486031215611dac57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215611dd657600080fd5b611ddf83611c39565b9150611ded60208401611c39565b90509250929050565b60008060408385031215611e0957600080fd5b50508035926020909101359150565b8015158114610f1657600080fd5b60008060408385031215611e3957600080fd5b8235611c7181611e18565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761073157610731611e79565b600082611ec357634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611eda57600080fd5b5051919050565b600060208284031215611ef357600080fd5b81516107f281611e18565b8181038181111561073157610731611e79565b8082018082111561073157610731611e79565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611f8a5784516001600160a01b031683529383019391830191600101611f65565b50506001600160a01b03969096166060850152505050608001529392505050565b600080600060608486031215611fc057600080fd5b835192506020840151915060408401519050925092509256feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205cdeaa97109e2ff2f0d0dd25059035715819d6946d76b010f4f224c4f356897964736f6c63430008120033";

type SWANConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SWANConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SWAN__factory extends ContractFactory {
  constructor(...args: SWANConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SWAN> {
    return super.deploy(overrides || {}) as Promise<SWAN>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SWAN {
    return super.attach(address) as SWAN;
  }
  override connect(signer: Signer): SWAN__factory {
    return super.connect(signer) as SWAN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SWANInterface {
    return new utils.Interface(_abi) as SWANInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SWAN {
    return new Contract(address, _abi, signerOrProvider) as SWAN;
  }
}
