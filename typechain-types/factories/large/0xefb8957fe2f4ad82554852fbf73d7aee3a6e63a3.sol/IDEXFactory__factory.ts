/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDEXFactory,
  IDEXFactoryInterface,
} from "../../../large/0xefb8957fe2f4ad82554852fbf73d7aee3a6e63a3.sol/IDEXFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDEXFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDEXFactoryInterface {
    return new utils.Interface(_abi) as IDEXFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDEXFactory {
    return new Contract(address, _abi, signerOrProvider) as IDEXFactory;
  }
}
