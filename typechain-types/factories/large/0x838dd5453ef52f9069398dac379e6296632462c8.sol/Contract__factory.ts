/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../large/0x838dd5453ef52f9069398dac379e6296632462c8.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600f600555601960065560006007556000600855600f6009556019600a556019600b556000600c5560646009600a6200003e9190620003e2565b6200004f906461f313f880620003fa565b6200005b919062000414565b62000068906002620003fa565b600d5560646200007b6009600a620003e2565b6200008c906461f313f880620003fa565b62000098919062000414565b620000a5906002620003fa565b600e556103e8620000b96009600a620003e2565b620000ca906461f313f880620003fa565b620000d6919062000414565b620000e3906005620003fa565b600f556103e8620000f76009600a620003e2565b62000108906461f313f880620003fa565b62000114919062000414565b62000121906005620003fa565b6010556012805462ffffff60a01b191690553480156200014057600080fd5b506200014c336200027d565b600480546001600160a01b03191673f12e6d51039621738e70c8b521957063530a48c1179055620001806009600a620003e2565b62000191906461f313f880620003fa565b336000908152600160208190526040822092909255600390620001bc6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905560045490911681526003909252808220805484166001908117909155308352912080549092161790556200021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002556009600a620003e2565b62000266906461f313f880620003fa565b60405190815260200160405180910390a362000437565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000324578160001904821115620003085762000308620002cd565b808516156200031657918102915b93841c9390800290620002e8565b509250929050565b6000826200033d57506001620003dc565b816200034c57506000620003dc565b8160018114620003655760028114620003705762000390565b6001915050620003dc565b60ff841115620003845762000384620002cd565b50506001821b620003dc565b5060208310610133831016604e8410600b8410161715620003b5575081810a620003dc565b620003c18383620002e3565b8060001904821115620003d857620003d8620002cd565b0290505b92915050565b6000620003f360ff8416836200032c565b9392505050565b8082028115828204841417620003dc57620003dc620002cd565b6000826200043257634e487b7160e01b600052601260045260246000fd5b500490565b61188280620004476000396000f3fe6080604052600436106101185760003560e01c8063715018a6116100a057806395d89b411161006457806395d89b4114610124578063a9059cbb146102ea578063bf474bed1461030a578063c9567bf914610320578063dd62ed3e1461033557600080fd5b8063715018a61461026c578063751039fc146102815780637d1db4a5146102965780638da5cb5b146102ac5780638f9a55c0146102d457600080fd5b806323b872dd116100e757806323b872dd146101ce578063313ce567146101ee57806351bc3c851461020a5780636fc3eaec1461022157806370a082311461023657600080fd5b806306fdde0314610124578063095ea7b3146101655780630faee56f1461019557806318160ddd146101b957600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201825260098152681113d1d1539154905360ba1b6020820152905161015c9190611454565b60405180910390f35b34801561017157600080fd5b506101856101803660046114b7565b61037b565b604051901515815260200161015c565b3480156101a157600080fd5b506101ab60105481565b60405190815260200161015c565b3480156101c557600080fd5b506101ab610392565b3480156101da57600080fd5b506101856101e93660046114e3565b6103b4565b3480156101fa57600080fd5b506040516009815260200161015c565b34801561021657600080fd5b5061021f61041e565b005b34801561022d57600080fd5b5061021f61046d565b34801561024257600080fd5b506101ab610251366004611524565b6001600160a01b031660009081526001602052604090205490565b34801561027857600080fd5b5061021f610496565b34801561028d57600080fd5b5061021f6104d5565b3480156102a257600080fd5b506101ab600d5481565b3480156102b857600080fd5b506000546040516001600160a01b03909116815260200161015c565b3480156102e057600080fd5b506101ab600e5481565b3480156102f657600080fd5b506101856103053660046114b7565b61058a565b34801561031657600080fd5b506101ab600f5481565b34801561032c57600080fd5b5061021f610597565b34801561034157600080fd5b506101ab610350366004611541565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000610388338484610954565b5060015b92915050565b60006103a06009600a611674565b6103af906461f313f880611683565b905090565b60006103c1848484610a78565b610413843361040e85604051806060016040528060288152602001611825602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f9b565b610954565b5060015b9392505050565b3360009081526003602052604090205460ff1661043a57600080fd5b3060009081526001602052604090205480156104595761045981610fd5565b478015610469576104698161114f565b5050565b3360009081526003602052604090205460ff1661048957600080fd5b476104938161114f565b50565b6000546001600160a01b031633146104c95760405162461bcd60e51b81526004016104c09061169a565b60405180910390fd5b6104d36000611189565b565b6000546001600160a01b031633146104ff5760405162461bcd60e51b81526004016104c09061169a565b61050b6009600a611674565b61051a906461f313f880611683565b600d556105296009600a611674565b610538906461f313f880611683565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105686009600a611674565b610577906461f313f880611683565b60405190815260200160405180910390a1565b6000610388338484610a78565b6000546001600160a01b031633146105c15760405162461bcd60e51b81526004016104c09061169a565b601254600160a01b900460ff161561061b5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104c0565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106659030906106566009600a611674565b61040e906461f313f880611683565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc91906116cf565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076291906116cf565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d391906116cf565b601280546001600160a01b039283166001600160a01b03199091161790556011541663f305d719473061081b816001600160a01b031660009081526001602052604090205490565b6000806108306000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610898573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108bd91906116ec565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a919061171a565b506012805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b0383166109b65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c0565b6001600160a01b038216610a175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610adc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c0565b6001600160a01b038216610b3e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c0565b60008111610ba05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104c0565b600080546001600160a01b03858116911614801590610bcd57506000546001600160a01b03848116911614155b15610e58576000600c54118015610bed5750601254600160b01b900460ff165b15610c0057610bfd8285856111d9565b90505b610c2c6064610c26600954600c5411610c1b57600554610c1f565b6007545b85906112ac565b9061132e565b6012549091506001600160a01b038581169116148015610c5a57506011546001600160a01b03848116911614155b8015610c7f57506001600160a01b03831660009081526003602052604090205460ff16155b15610d6757600d54821115610cd65760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104c0565b600e5482610cf9856001600160a01b031660009081526001602052604090205490565b610d03919061173c565b1115610d515760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104c0565b600c8054906000610d618361174f565b91905055505b6012546001600160a01b038481169116148015610d8d57506001600160a01b0384163014155b15610dba57610db76064610c26600a54600c5411610dad57600654610c1f565b60085485906112ac565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610df157506012546001600160a01b038581169116145b8015610e065750601254600160b01b900460ff165b8015610e135750600f5481115b8015610e225750600b54600c54115b15610e5657610e44610e3f84610e3a84601054611370565b611370565b610fd5565b478015610e5457610e544761114f565b505b505b8015610ed25730600090815260016020526040902054610e789082611385565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ec99085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610ef590836113e4565b6001600160a01b038516600090815260016020526040902055610f3a610f1b83836113e4565b6001600160a01b03851660009081526001602052604090205490611385565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f8485856113e4565b60405190815260200160405180910390a350505050565b60008184841115610fbf5760405162461bcd60e51b81526004016104c09190611454565b506000610fcc8486611768565b95945050505050565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061101d5761101d61177b565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906116cf565b816001815181106110ad576110ad61177b565b6001600160a01b0392831660209182029290920101526011546110d39130911684610954565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac9479061110c908590600090869030904290600401611791565b600060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610469573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b03831630148015906111f45750333b15155b801561120f57503360009081526003602052604090205460ff165b1561124057506001600160a01b03821660009081526002602090815260408083203384529091528120849055610417565b813b1515801561125e57506012546001600160a01b03838116911614155b801561127957503360009081526003602052604090205460ff165b156112a2576001600160a01b0382166000908152600360205260409020805460ff191660011790555b5060009392505050565b6000826000036112be5750600061038c565b60006112ca8385611683565b9050826112d78583611802565b146104175760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104c0565b600061041783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611426565b600081831161137f5782610417565b50919050565b600080611392838561173c565b9050838110156104175760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104c0565b600061041783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f9b565b600081836114475760405162461bcd60e51b81526004016104c09190611454565b506000610fcc8486611802565b600060208083528351808285015260005b8181101561148157858101830151858201604001528201611465565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461049357600080fd5b600080604083850312156114ca57600080fd5b82356114d5816114a2565b946020939093013593505050565b6000806000606084860312156114f857600080fd5b8335611503816114a2565b92506020840135611513816114a2565b929592945050506040919091013590565b60006020828403121561153657600080fd5b8135610417816114a2565b6000806040838503121561155457600080fd5b823561155f816114a2565b9150602083013561156f816114a2565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115cb5781600019048211156115b1576115b161157a565b808516156115be57918102915b93841c9390800290611595565b509250929050565b6000826115e25750600161038c565b816115ef5750600061038c565b8160018114611605576002811461160f5761162b565b600191505061038c565b60ff8411156116205761162061157a565b50506001821b61038c565b5060208310610133831016604e8410600b841016171561164e575081810a61038c565b6116588383611590565b806000190482111561166c5761166c61157a565b029392505050565b600061041760ff8416836115d3565b808202811582820484141761038c5761038c61157a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116e157600080fd5b8151610417816114a2565b60008060006060848603121561170157600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561172c57600080fd5b8151801515811461041757600080fd5b8082018082111561038c5761038c61157a565b6000600182016117615761176161157a565b5060010190565b8181038181111561038c5761038c61157a565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156117e15784516001600160a01b0316835293830193918301916001016117bc565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261181f57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a015fe7fdce3c01fb07c1e708dd815b2b28f0053925f763cc2cb589d88b0330b64736f6c63430008150033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
