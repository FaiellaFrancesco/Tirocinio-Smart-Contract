/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TWENTYTWOMILLIONDOLLARS,
  TWENTYTWOMILLIONDOLLARSInterface,
} from "../../0xd7a9cc879fce184f6e578fa8fb2f0d557d14595e.sol/TWENTYTWOMILLIONDOLLARS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260166006556016600755600060085560006009556016600a556016600b556016600c556000600d556000600e556009600a6200004191906200035e565b62000050906206b6c062000376565b600f55620000616009600a6200035e565b62000070906206b6c062000376565b601055620000816009600a6200035e565b620000909062035b6062000376565b601155620000a16009600a6200035e565b620000b09062035b6062000376565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d857600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319167399d611ada23721fd5a900c495edb9ed6f5cd39551790556200014e6009600a6200035e565b6200015e9063014fb18062000376565b336000908152600160208190526040822092909255600390620001896000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001e83390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002226009600a6200035e565b620002329063014fb18062000376565b60405190815260200160405180910390a362000390565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a057816000190482111562000284576200028462000249565b808516156200029257918102915b93841c939080029062000264565b509250929050565b600082620002b95750600162000358565b81620002c85750600062000358565b8160018114620002e15760028114620002ec576200030c565b600191505062000358565b60ff84111562000300576200030062000249565b50506001821b62000358565b5060208310610133831016604e8410600b841016171562000331575081810a62000358565b6200033d83836200025f565b806000190482111562000354576200035462000249565b0290505b92915050565b60006200036f60ff841683620002a8565b9392505050565b808202811582820484141762000358576200035862000249565b611dc480620003a06000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103dd578063bf474bed146103fd578063c9567bf914610413578063d34628cc14610428578063dd62ed3e14610448578063ec1f3f631461048e57600080fd5b8063751039fc146103285780637d1db4a51461033d5780638cd4426d146103535780638da5cb5b146103735780638f9a55c01461039b57806395d89b41146103b157600080fd5b8063313ce56711610108578063313ce5671461025357806331c2d8471461026f5780633bbac5791461028f57806351bc3c85146102c857806370a08231146102dd578063715018a61461031357600080fd5b806306fdde031461015b578063095ea7b3146101b35780630faee56f146101e3578063109daa991461020757806318160ddd1461021e57806323b872dd1461023357600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152601e81527f32324d20444f4c4c41525320494e2033204655434b494e4720484f555253000060208201525b6040516101aa9190611873565b60405180910390f35b3480156101bf57600080fd5b506101d36101ce3660046118ea565b6104ae565b60405190151581526020016101aa565b3480156101ef57600080fd5b506101f960125481565b6040519081526020016101aa565b34801561021357600080fd5b5061021c6104c5565b005b34801561022a57600080fd5b506101f9610535565b34801561023f57600080fd5b506101d361024e366004611916565b610556565b34801561025f57600080fd5b50604051600981526020016101aa565b34801561027b57600080fd5b5061021c61028a36600461196d565b6105bf565b34801561029b57600080fd5b506101d36102aa366004611a32565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102d457600080fd5b5061021c61064b565b3480156102e957600080fd5b506101f96102f8366004611a32565b6001600160a01b031660009081526001602052604090205490565b34801561031f57600080fd5b5061021c6106b1565b34801561033457600080fd5b5061021c610725565b34801561034957600080fd5b506101f9600f5481565b34801561035f57600080fd5b5061021c61036e3660046118ea565b6107d2565b34801561037f57600080fd5b506000546040516001600160a01b0390911681526020016101aa565b3480156103a757600080fd5b506101f960105481565b3480156103bd57600080fd5b5060408051808201909152600381526232324d60e81b602082015261019d565b3480156103e957600080fd5b506101d36103f83660046118ea565b6108ff565b34801561040957600080fd5b506101f960115481565b34801561041f57600080fd5b5061021c61090c565b34801561043457600080fd5b5061021c61044336600461196d565b610cc8565b34801561045457600080fd5b506101f9610463366004611a4f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561049a57600080fd5b5061021c6104a9366004611a88565b610d50565b60006104bb338484610d97565b5060015b92915050565b6000546001600160a01b031633146104f85760405162461bcd60e51b81526004016104ef90611aa1565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105436009600a611bd0565b6105519063014fb180611bdf565b905090565b6000610563848484610ebb565b6105b584336105b085604051806060016040528060288152602001611d67602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114d6565b610d97565b5060019392505050565b6000546001600160a01b031633146105e95760405162461bcd60e51b81526004016104ef90611aa1565b60005b81518110156106475760006004600084848151811061060d5761060d611bf6565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105ec565b5050565b6005546001600160a01b0316336001600160a01b03161461066b57600080fd5b3060009081526001602052604090205480158015906106935750601454600160b01b900460ff165b156106a1576106a181611510565b478015610647576106478161168a565b6000546001600160a01b031633146106db5760405162461bcd60e51b81526004016104ef90611aa1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461074f5760405162461bcd60e51b81526004016104ef90611aa1565b61075b6009600a611bd0565b6107699063014fb180611bdf565b600f556107786009600a611bd0565b6107869063014fb180611bdf565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b66009600a611bd0565b6107c49063014fb180611bdf565b60405190815260200161052b565b6000546001600160a01b031633146107fc5760405162461bcd60e51b81526004016104ef90611aa1565b6040516370a0823160e01b81523060048201526000906108809060649061087a9085906001600160a01b038816906370a0823190602401602060405180830381865afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190611c0c565b906116c4565b9061174d565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190611c25565b50505050565b60006104bb338484610ebb565b6000546001600160a01b031633146109365760405162461bcd60e51b81526004016104ef90611aa1565b601454600160a01b900460ff16156109905760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ef565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109d99030906109cb6009600a611bd0565b6105b09063014fb180611bdf565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a509190611c47565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad69190611c47565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190611c47565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610b8f816001600160a01b031660009081526001602052604090205490565b600080610ba46000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c0c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c319190611c64565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae9190611c25565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610cf25760405162461bcd60e51b81526004016104ef90611aa1565b60005b815181101561064757600160046000848481518110610d1657610d16611bf6565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cf5565b6005546001600160a01b0316336001600160a01b031614610d7057600080fd5b6008548111158015610d8457506009548111155b610d8d57600080fd5b6008819055600955565b6001600160a01b038316610df95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ef565b6001600160a01b038216610e5a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ef565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ef565b6001600160a01b038216610f815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ef565b60008111610fe35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ef565b600080546001600160a01b0385811691161480159061101057506000546001600160a01b03848116911614155b801561102a57506005546001600160a01b03848116911614155b15611393576001600160a01b03841660009081526004602052604090205460ff1615801561107157506001600160a01b03831660009081526004602052604090205460ff16155b61107a57600080fd5b600e546000036110ad576110aa606461087a600a54600e541161109f576006546110a3565b6008545b85906116c4565b90505b600e54156110d2576110cf606461087a600d54856116c490919063ffffffff16565b90505b6014546001600160a01b0385811691161480156110fd57506013546001600160a01b03848116911614155b801561112257506001600160a01b03831660009081526003602052604090205460ff16155b1561122757600f548211156111795760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104ef565b6010548261119c856001600160a01b031660009081526001602052604090205490565b6111a69190611c92565b11156111f45760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ef565b61120f606461087a600a54600e541161109f576006546110a3565b600e8054919250600061122183611ca5565b91905055505b6014546001600160a01b03848116911614801561124d57506001600160a01b0384163014155b1561127a57611277606461087a600b54600e541161126d576007546110a3565b60095485906116c4565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156112b157506014546001600160a01b038581169116145b80156112c65750601454600160b01b900460ff165b80156112d3575060115481115b80156112e25750600c54600e54115b15611391576016544311156112f75760006015555b6003601554106113495760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ef565b6113666113618461135c8460125461178f565b61178f565b611510565b478015611376576113764761168a565b6015805490600061138683611ca5565b909155505043601655505b505b801561140d57306000908152600160205260409020546113b390826117a4565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114049085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546114309083611803565b6001600160a01b0385166000908152600160205260409020556114756114568383611803565b6001600160a01b038516600090815260016020526040902054906117a4565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114bf8585611803565b60405190815260200160405180910390a350505050565b600081848411156114fa5760405162461bcd60e51b81526004016104ef9190611873565b5060006115078486611cbe565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061155857611558611bf6565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156115b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d59190611c47565b816001815181106115e8576115e8611bf6565b6001600160a01b03928316602091820292909201015260135461160e9130911684610d97565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611647908590600090869030904290600401611cd1565b600060405180830381600087803b15801561166157600080fd5b505af1158015611675573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610647573d6000803e3d6000fd5b6000826000036116d6575060006104bf565b60006116e28385611bdf565b9050826116ef8583611d44565b146117465760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ef565b9392505050565b600061174683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611845565b600081831161179e5782611746565b50919050565b6000806117b18385611c92565b9050838110156117465760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ef565b600061174683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114d6565b600081836118665760405162461bcd60e51b81526004016104ef9190611873565b5060006115078486611d44565b60006020808352835180602085015260005b818110156118a157858101830151858201604001528201611885565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118d757600080fd5b50565b80356118e5816118c2565b919050565b600080604083850312156118fd57600080fd5b8235611908816118c2565b946020939093013593505050565b60008060006060848603121561192b57600080fd5b8335611936816118c2565b92506020840135611946816118c2565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561198057600080fd5b823567ffffffffffffffff8082111561199857600080fd5b818501915085601f8301126119ac57600080fd5b8135818111156119be576119be611957565b8060051b604051601f19603f830116810181811085821117156119e3576119e3611957565b604052918252848201925083810185019188831115611a0157600080fd5b938501935b82851015611a2657611a17856118da565b84529385019392850192611a06565b98975050505050505050565b600060208284031215611a4457600080fd5b8135611746816118c2565b60008060408385031215611a6257600080fd5b8235611a6d816118c2565b91506020830135611a7d816118c2565b809150509250929050565b600060208284031215611a9a57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b27578160001904821115611b0d57611b0d611ad6565b80851615611b1a57918102915b93841c9390800290611af1565b509250929050565b600082611b3e575060016104bf565b81611b4b575060006104bf565b8160018114611b615760028114611b6b57611b87565b60019150506104bf565b60ff841115611b7c57611b7c611ad6565b50506001821b6104bf565b5060208310610133831016604e8410600b8410161715611baa575081810a6104bf565b611bb48383611aec565b8060001904821115611bc857611bc8611ad6565b029392505050565b600061174660ff841683611b2f565b80820281158282048414176104bf576104bf611ad6565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c1e57600080fd5b5051919050565b600060208284031215611c3757600080fd5b8151801515811461174657600080fd5b600060208284031215611c5957600080fd5b8151611746816118c2565b600080600060608486031215611c7957600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104bf576104bf611ad6565b600060018201611cb757611cb7611ad6565b5060010190565b818103818111156104bf576104bf611ad6565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d235784516001600160a01b031683529383019391830191600101611cfe565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d6157634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220e086f6531f6b16fecf989202d6f579a62adf94dd285f5b93d4b500427815eb4664736f6c63430008170033";

type TWENTYTWOMILLIONDOLLARSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TWENTYTWOMILLIONDOLLARSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TWENTYTWOMILLIONDOLLARS__factory extends ContractFactory {
  constructor(...args: TWENTYTWOMILLIONDOLLARSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TWENTYTWOMILLIONDOLLARS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TWENTYTWOMILLIONDOLLARS__factory {
    return super.connect(runner) as TWENTYTWOMILLIONDOLLARS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TWENTYTWOMILLIONDOLLARSInterface {
    return new Interface(_abi) as TWENTYTWOMILLIONDOLLARSInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TWENTYTWOMILLIONDOLLARS {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TWENTYTWOMILLIONDOLLARS;
  }
}
