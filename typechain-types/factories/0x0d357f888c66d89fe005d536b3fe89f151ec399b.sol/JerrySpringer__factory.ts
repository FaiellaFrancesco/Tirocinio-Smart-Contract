/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  JerrySpringer,
  JerrySpringerInterface,
} from "../../0x0d357f888c66d89fe005d536b3fe89f151ec399b.sol/JerrySpringer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052601460055560146006556000600755600060085560016009556001600a556001600b556000600c556000600d5560646009600a610041919061037d565b61004f906305f5e100610393565b61005a906001610393565b61006491906103aa565b600e5560646100756009600a61037d565b610083906305f5e100610393565b61008e906001610393565b61009891906103aa565b600f5560646100a96009600a61037d565b6100b7906305f5e100610393565b6100c2906001610393565b6100cc91906103aa565b60105560646100dd6009600a61037d565b6100eb906305f5e100610393565b6100f6906001610393565b61010091906103aa565b6011556013805461ffff60a81b1916905560006014819055601581905560165534801561012c57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317905561018c6009600a61037d565b61019a906305f5e100610393565b3360009081526001602081905260408220929092556003906101c46000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556004549091168352912080549092161790556102223390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61025a6009600a61037d565b610268906305f5e100610393565b60405190815260200160405180910390a36103cc565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102cf578085048111156102b3576102b361027e565b60018416156102c157908102905b60019390931c928002610298565b935093915050565b6000826102e657506001610377565b816102f357506000610377565b816001811461030957600281146103135761032f565b6001915050610377565b60ff8411156103245761032461027e565b50506001821b610377565b5060208310610133831016604e8410600b8410161715610352575081810a610377565b61035f6000198484610294565b80600019048211156103735761037361027e565b0290505b92915050565b600061038c60ff8416836102d7565b9392505050565b80820281158282048414176103775761037761027e565b6000826103c757634e487b7160e01b600052601260045260246000fd5b500490565b611be8806103db6000396000f3fe6080604052600436106101395760003560e01c806377b54bad116100ab578063a9059cbb1161006f578063a9059cbb14610366578063bf474bed14610386578063c9567bf91461039c578063dd62ed3e146103b1578063ec1f3f63146103f7578063f42938901461041757600080fd5b806377b54bad146102c45780637d1db4a5146102e45780638da5cb5b146102fa5780638f9a55c01461032257806395d89b411461033857600080fd5b806323b872dd116100fd57806323b872dd14610213578063313ce5671461023357806351bc3c851461024f578063622565891461026457806370a0823114610279578063715018a6146102af57600080fd5b806306fdde0314610145578063095ea7b3146101935780630faee56f146101c3578063109daa99146101e757806318160ddd146101fe57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506040805180820190915260138152722532b9393c9029b83934b733b2b91021b7b4b760691b60208201525b60405161018a9190611784565b60405180910390f35b34801561019f57600080fd5b506101b36101ae3660046117e7565b61042c565b604051901515815260200161018a565b3480156101cf57600080fd5b506101d960115481565b60405190815260200161018a565b3480156101f357600080fd5b506101fc610443565b005b34801561020a57600080fd5b506101d96104b3565b34801561021f57600080fd5b506101b361022e366004611813565b6104d4565b34801561023f57600080fd5b506040516009815260200161018a565b34801561025b57600080fd5b506101fc61053d565b34801561027057600080fd5b506101fc610590565b34801561028557600080fd5b506101d9610294366004611854565b6001600160a01b031660009081526001602052604090205490565b3480156102bb57600080fd5b506101fc61063d565b3480156102d057600080fd5b506101b36102df3660046117e7565b6106b1565b3480156102f057600080fd5b506101d9600e5481565b34801561030657600080fd5b506000546040516001600160a01b03909116815260200161018a565b34801561032e57600080fd5b506101d9600f5481565b34801561034457600080fd5b506040805180820190915260058152644a4552525960d81b602082015261017d565b34801561037257600080fd5b506101b36103813660046117e7565b610809565b34801561039257600080fd5b506101d960105481565b3480156103a857600080fd5b506101fc610816565b3480156103bd57600080fd5b506101d96103cc366004611871565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561040357600080fd5b506101fc6104123660046118aa565b610bd6565b34801561042357600080fd5b506101fc610c1d565b6000610439338484610caa565b5060015b92915050565b6000546001600160a01b031633146104765760405162461bcd60e51b815260040161046d906118c3565b60405180910390fd5b6000600c8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006104c16009600a6119f5565b6104cf906305f5e100611a04565b905090565b60006104e1848484610dce565b610533843361052e85604051806060016040528060288152602001611b8b602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906113ee565b610caa565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461055d57600080fd5b30600090815260016020526040902054801561057c5761057c81611428565b47801561058c5761058c816115a2565b5050565b6000546001600160a01b031633146105ba5760405162461bcd60e51b815260040161046d906118c3565b6105c66009600a6119f5565b6105d4906305f5e100611a04565b600e556105e36009600a6119f5565b6105f1906305f5e100611a04565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106216009600a6119f5565b61062f906305f5e100611a04565b6040519081526020016104a9565b6000546001600160a01b031633146106675760405162461bcd60e51b815260040161046d906118c3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546000906001600160a01b0316336001600160a01b0316146106d457600080fd5b81600003610747576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190611a1b565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a16004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905284169063a9059cbb906044016020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611a34565b9392505050565b6000610439338484610dce565b6000546001600160a01b031633146108405760405162461bcd60e51b815260040161046d906118c3565b601354600160a01b900460ff161561089a5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161046d565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108e39030906108d56009600a6119f5565b61052e906305f5e100611a04565b601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190611a56565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e09190611a56565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a519190611a56565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d7194730610a99816001600160a01b031660009081526001602052604090205490565b600080610aae6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b16573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b3b9190611a73565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190611a34565b506013805462ff00ff60a01b19166201000160a01b17905543601655565b6004546001600160a01b0316336001600160a01b031614610bf657600080fd5b6007548111158015610c0a57506008548111155b610c1357600080fd5b6007819055600855565b6004546001600160a01b0316336001600160a01b031614610c3d57600080fd5b4780610c9e5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163742062616c616e6365206d7573742062652067726561746572604482015269207468616e207a65726f60b01b606482015260840161046d565b610ca7816115a2565b50565b6001600160a01b038316610d0c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046d565b6001600160a01b038216610d6d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e325760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046d565b6001600160a01b038216610e945760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046d565b60008111610ef65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161046d565b600080546001600160a01b03858116911614801590610f2357506000546001600160a01b03848116911614155b156112ab57600d54600003610f6157610f5e6064610f58600954600d5411610f4d57600554610f51565b6007545b85906115dc565b9061165e565b90505b600d5415610f8657610f836064610f58600c54856115dc90919063ffffffff16565b90505b6016544303610fe157603c600d5410610fe15760405162461bcd60e51b815260206004820181905260248201527f457863656564732062757973206f6e2074686520666972737420626c6f636b2e604482015260640161046d565b6013546001600160a01b03858116911614801561100c57506012546001600160a01b03848116911614155b801561103157506001600160a01b03831660009081526003602052604090205460ff16155b1561113f57601654431461110c57600e548211156110915760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161046d565b600f54826110b4856001600160a01b031660009081526001602052604090205490565b6110be9190611aa1565b111561110c5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161046d565b6111276064610f58600954600d5411610f4d57600554610f51565b600d8054919250600061113983611ab4565b91905055505b6013546001600160a01b03848116911614801561116557506001600160a01b0384163014155b156111925761118f6064610f58600a54600d541161118557600654610f51565b60085485906115dc565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156111c957506013546001600160a01b038581169116145b80156111de5750601354600160b01b900460ff165b80156111eb575060105481115b80156111fa5750600b54600d54115b156112a95760155443111561120f5760006014555b6003601454106112615760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161046d565b61127e61127984611274846011546116a0565b6116a0565b611428565b47801561128e5761128e476115a2565b6014805490600061129e83611ab4565b909155505043601555505b505b801561132557306000908152600160205260409020546112cb90826116b5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061131c9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113489083611714565b6001600160a01b03851660009081526001602052604090205561138d61136e8383611714565b6001600160a01b038516600090815260016020526040902054906116b5565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6113d78585611714565b60405190815260200160405180910390a350505050565b600081848411156114125760405162461bcd60e51b815260040161046d9190611784565b50600061141f8486611acd565b95945050505050565b6013805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061147057611470611ae0565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed9190611a56565b8160018151811061150057611500611ae0565b6001600160a01b0392831660209182029290920101526012546115269130911684610caa565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac9479061155f908590600090869030904290600401611af6565b600060405180830381600087803b15801561157957600080fd5b505af115801561158d573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561058c573d6000803e3d6000fd5b6000826000036115ee5750600061043d565b60006115fa8385611a04565b9050826116078583611b68565b146108025760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161046d565b600061080283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611756565b60008183116116af5782610802565b50919050565b6000806116c28385611aa1565b9050838110156108025760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161046d565b600061080283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113ee565b600081836117775760405162461bcd60e51b815260040161046d9190611784565b50600061141f8486611b68565b602081526000825180602084015260005b818110156117b25760208186018101516040868401015201611795565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610ca757600080fd5b600080604083850312156117fa57600080fd5b8235611805816117d2565b946020939093013593505050565b60008060006060848603121561182857600080fd5b8335611833816117d2565b92506020840135611843816117d2565b929592945050506040919091013590565b60006020828403121561186657600080fd5b8135610802816117d2565b6000806040838503121561188457600080fd5b823561188f816117d2565b9150602083013561189f816117d2565b809150509250929050565b6000602082840312156118bc57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156119495780850481111561192d5761192d6118f8565b600184161561193b57908102905b60019390931c928002611912565b935093915050565b6000826119605750600161043d565b8161196d5750600061043d565b8160018114611983576002811461198d576119a9565b600191505061043d565b60ff84111561199e5761199e6118f8565b50506001821b61043d565b5060208310610133831016604e8410600b84101617156119cc575081810a61043d565b6119d9600019848461190e565b80600019048211156119ed576119ed6118f8565b029392505050565b600061080260ff841683611951565b808202811582820484141761043d5761043d6118f8565b600060208284031215611a2d57600080fd5b5051919050565b600060208284031215611a4657600080fd5b8151801515811461080257600080fd5b600060208284031215611a6857600080fd5b8151610802816117d2565b600080600060608486031215611a8857600080fd5b5050815160208301516040909301519094929350919050565b8082018082111561043d5761043d6118f8565b600060018201611ac657611ac66118f8565b5060010190565b8181038181111561043d5761043d6118f8565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611b485783516001600160a01b0316835260209384019390920191600101611b21565b50506001600160a01b039590951660608401525050608001529392505050565b600082611b8557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ff1c669c8a16808c875482c9f64da46d139bf48cfb1fc96dcfef744e6c4efc1864736f6c634300081e0033";

type JerrySpringerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JerrySpringerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JerrySpringer__factory extends ContractFactory {
  constructor(...args: JerrySpringerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      JerrySpringer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JerrySpringer__factory {
    return super.connect(runner) as JerrySpringer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JerrySpringerInterface {
    return new Interface(_abi) as JerrySpringerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): JerrySpringer {
    return new Contract(address, _abi, runner) as unknown as JerrySpringer;
  }
}
