/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  MODEAI,
  MODEAIInterface,
} from "../../0xc2594b074787691bd53f1a51e9d96ec1e60bb5f0.sol/MODEAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalMODEAITransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initMODEAIDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueMODEAIETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b611850806102c66000396000f3fe6080604052600436106101025760003560e01c8063715018a61161009557806395d89b411161006457806395d89b41146102ab578063a9059cbb146102d8578063dd62ed3e146102f8578063e485ad081461033e578063ea414b281461035357600080fd5b8063715018a614610241578063786b8bd1146102585780638a8c523c1461026e5780638da5cb5b1461028357600080fd5b806323b872dd116100d157806323b872dd146101b9578063313ce567146101d957806358db513e146101f557806370a082311461020b57600080fd5b806306fdde031461010e578063095ea7b3146101505780630faee56f1461018057806318160ddd146101a457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820190915260078152664d6f646520414960c81b60208201525b604051610147919061132d565b60405180910390f35b34801561015c57600080fd5b5061017061016b366004611390565b610373565b6040519015158152602001610147565b34801561018c57600080fd5b50610196600b5481565b604051908152602001610147565b3480156101b057600080fd5b5061019661038a565b3480156101c557600080fd5b506101706101d43660046113bc565b6103ab565b3480156101e557600080fd5b5060405160098152602001610147565b34801561020157600080fd5b50610196600c5481565b34801561021757600080fd5b506101966102263660046113fd565b6001600160a01b031660009081526001602052604090205490565b34801561024d57600080fd5b5061025661046e565b005b34801561026457600080fd5b50610196600d5481565b34801561027a57600080fd5b506102566104eb565b34801561028f57600080fd5b506000546040516001600160a01b039091168152602001610147565b3480156102b757600080fd5b506040805180820190915260048152634d4f444560e01b602082015261013a565b3480156102e457600080fd5b506101706102f3366004611390565b6108a6565b34801561030457600080fd5b5061019661031336600461141a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034a57600080fd5b506102566108b3565b34801561035f57600080fd5b5061025661036e3660046113fd565b610916565b6000610380338484610954565b5060015b92915050565b60006103986009600a611550565b6103a6906305f5e10061155f565b905090565b60006103b8848484610a78565b3360009081526003602052604090205460ff1615801561040d5750600f546001600160a01b03858116911614806103fa57506001600160a01b03831661dead14155b8061040d57506001600160a01b03841630145b1561046457610464843361045f856040518060600160405280602881526020016117f3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f05565b610954565b5060019392505050565b6000546001600160a01b031633146104a15760405162461bcd60e51b815260040161049890611576565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105155760405162461bcd60e51b815260040161049890611576565b600f54600160a01b900460ff161561056f5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610498565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105b89030906105aa6009600a611550565b61045f906305f5e10061155f565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f91906115ab565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b591906115ab565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906115ab565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d719473061076e816001600160a01b031660009081526001602052604090205490565b6000806107836000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107eb573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081091906115c8565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a391906115f6565b50565b6000610380338484610a78565b6000546001600160a01b031633146108dd5760405162461bcd60e51b815260040161049890611576565b600047116108ea57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156108a3573d6000803e3d6000fd5b3360009081526003602052604090205460ff1661093257600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109b65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610498565b6001600160a01b038216610a175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610498565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610adc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610498565b6001600160a01b038216610b3e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610498565b60008111610ba05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610498565b60006001600160a01b0384163014801590610bc457506001600160a01b0383163014155b15610da757600f546001600160a01b038581169116148015610bf45750600e546001600160a01b03848116911614155b8015610c1957506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3357506004546001600160a01b03848116911614155b15610c78574360095414610c4b576000600a55436009555b81600a6000828254610c5d9190611618565b909155505060088054906000610c728361162b565b91905055505b600f546001600160a01b038481169116148015610c9e57506001600160a01b0384163014155b15610cf957610cab610f3f565b600a541080610cbc57504360095414155b610cf95760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b6044820152606401610498565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d305750600f546001600160a01b038581169116145b8015610d455750600f54600160b01b900460ff165b8015610d5f57506004546001600160a01b03868116911614155b15610da5578015610d99576000600b548211610d7b5781610d7f565b600b545b9050610d97818511610d9157846110cd565b816110cd565b505b47610da347611247565b505b505b6001600160a01b038416600090815260016020526040902054610dca9083611285565b6001600160a01b038516600090815260016020526040902055610e0f610df08383611285565b6001600160a01b038516600090815260016020526040902054906112ce565b6001600160a01b0384166000908152600160205260409020558015610ea25730600090815260016020526040902054610e4890826112ce565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e999085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eff576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eed8585611285565b60405190815260200160405180910390a35b50505050565b60008184841115610f295760405162461bcd60e51b8152600401610498919061132d565b506000610f368486611644565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd191906115ab565b81600081518110610fe457610fe461166d565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110185761101861166d565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611064906729a2241af62c00009086906004016116c8565b600060405180830381865afa158015611081573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a991908101906116e9565b9050806001815181106110be576110be61166d565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111155761111561166d565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561116e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119291906115ab565b816001815181106111a5576111a561166d565b6001600160a01b039283166020918202929092010152600e546111cb9130911684610954565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112049085906000908690309042906004016117b6565b600060405180830381600087803b15801561121e57600080fd5b505af1158015611232573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611281573d6000803e3d6000fd5b5050565b60006112c783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f05565b9392505050565b6000806112db8385611618565b9050838110156112c75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610498565b602081526000825180602084015260005b8181101561135b576020818601810151604086840101520161133e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108a357600080fd5b600080604083850312156113a357600080fd5b82356113ae8161137b565b946020939093013593505050565b6000806000606084860312156113d157600080fd5b83356113dc8161137b565b925060208401356113ec8161137b565b929592945050506040919091013590565b60006020828403121561140f57600080fd5b81356112c78161137b565b6000806040838503121561142d57600080fd5b82356114388161137b565b915060208301356114488161137b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114a45780850481111561148857611488611453565b600184161561149657908102905b60019390931c92800261146d565b935093915050565b6000826114bb57506001610384565b816114c857506000610384565b81600181146114de57600281146114e857611504565b6001915050610384565b60ff8411156114f9576114f9611453565b50506001821b610384565b5060208310610133831016604e8410600b8410161715611527575081810a610384565b6115346000198484611469565b806000190482111561154857611548611453565b029392505050565b60006112c760ff8416836114ac565b808202811582820484141761038457610384611453565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115bd57600080fd5b81516112c78161137b565b6000806000606084860312156115dd57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561160857600080fd5b815180151581146112c757600080fd5b8082018082111561038457610384611453565b60006001820161163d5761163d611453565b5060010190565b8181038181111561038457610384611453565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116be5781516001600160a01b0316865260209586019590910190600101611697565b5093949350505050565b8281526040602082015260006116e16040830184611683565b949350505050565b6000602082840312156116fb57600080fd5b815167ffffffffffffffff81111561171257600080fd5b8201601f8101841361172357600080fd5b805167ffffffffffffffff81111561173d5761173d611657565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561176a5761176a611657565b60405291825260208184018101929081018784111561178857600080fd5b6020850194505b838510156117ab5784518082526020958601959093500161178f565b509695505050505050565b85815284602082015260a0604082015260006117d560a0830186611683565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b6a4013fd539b8876d7078b607600f8df6f051b4ec1b49debc0535b8211754c264736f6c634300081d0033";

type MODEAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MODEAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MODEAI__factory extends ContractFactory {
  constructor(...args: MODEAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MODEAI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MODEAI__factory {
    return super.connect(runner) as MODEAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MODEAIInterface {
    return new Interface(_abi) as MODEAIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MODEAI {
    return new Contract(address, _abi, runner) as unknown as MODEAI;
  }
}
