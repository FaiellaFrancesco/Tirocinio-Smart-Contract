/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  CUM,
  CUMInterface,
} from "../../0x376517af054985feee559eccd4b240c2717d6dd1.sol/CUM";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellLimit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526014600655601e600755600060085560006009556024600a55602d600b556014600c556000600d556009600a6200003c919062000544565b6200004c906307f281556200055c565b600e556200005d6009600a62000544565b6200006d906307f281556200055c565b600f556200007e6009600a62000544565b6200008d906287a2386200055c565b6010556200009e6009600a62000544565b620000ae9063054c56386200055c565b6011556013805462ffffff60a81b1916600160a81b179055600060148190556015819055620000da3390565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa15801562000189573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001af919062000576565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000238919062000576565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac919062000576565b601380546001600160a01b03929092166001600160a01b031992831617905560058054909116737cb5031ff81de6a42bc1ccd85a6c96bd373035fe179055620002f23390565b600480546001600160a01b0319166001600160a01b0392909216919091179055620003206009600a62000544565b6200033190640211d1ae386200055c565b3360009081526001602081905260408220929092556003906200035c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554821684528284208054861682179055600454909116835291208054909216179055620003cd3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620004076009600a62000544565b6200041890640211d1ae386200055c565b60405190815260200160405180910390a3620005a1565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004865781600019048211156200046a576200046a6200042f565b808516156200047857918102915b93841c93908002906200044a565b509250929050565b6000826200049f575060016200053e565b81620004ae575060006200053e565b8160018114620004c75760028114620004d257620004f2565b60019150506200053e565b60ff841115620004e657620004e66200042f565b50506001821b6200053e565b5060208310610133831016604e8410600b841016171562000517575081810a6200053e565b62000523838362000445565b80600019048211156200053a576200053a6200042f565b0290505b92915050565b60006200055560ff8416836200048e565b9392505050565b80820281158282048414176200053e576200053e6200042f565b6000602082840312156200058957600080fd5b81516001600160a01b03811681146200055557600080fd5b611af180620005b16000396000f3fe6080604052600436106101235760003560e01c8063751039fc116100a057806395d89b411161006457806395d89b4114610306578063a9059cbb14610332578063bf474bed14610352578063dd62ed3e14610368578063f0558935146103ae57600080fd5b8063751039fc146102955780637d1db4a5146102aa5780638a8c523c146102c05780638da5cb5b146102c85780638f9a55c0146102f057600080fd5b806323b872dd116100e757806323b872dd146101ed578063313ce5671461020d5780634f91e48c1461022957806370a082311461024a578063715018a61461028057600080fd5b806306fdde031461012f578063095ea7b31461016d5780630faee56f1461019d57806318160ddd146101c157806320800a00146101d657600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5060408051808201909152600381526243556d60e81b60208201525b6040516101649190611653565b60405180910390f35b34801561017957600080fd5b5061018d6101883660046116b7565b6103ce565b6040519015158152602001610164565b3480156101a957600080fd5b506101b360115481565b604051908152602001610164565b3480156101cd57600080fd5b506101b36103e5565b3480156101e257600080fd5b506101eb610407565b005b3480156101f957600080fd5b5061018d6102083660046116e3565b610463565b34801561021957600080fd5b5060405160098152602001610164565b34801561023557600080fd5b5060135461018d90600160a81b900460ff1681565b34801561025657600080fd5b506101b3610265366004611724565b6001600160a01b031660009081526001602052604090205490565b34801561028c57600080fd5b506101eb6104cc565b3480156102a157600080fd5b506101eb610549565b3480156102b657600080fd5b506101b3600e5481565b6101eb6105fe565b3480156102d457600080fd5b506000546040516001600160a01b039091168152602001610164565b3480156102fc57600080fd5b506101b3600f5481565b34801561031257600080fd5b5060408051808201909152600381526243554d60e81b6020820152610157565b34801561033e57600080fd5b5061018d61034d3660046116b7565b6109ff565b34801561035e57600080fd5b506101b360105481565b34801561037457600080fd5b506101b3610383366004611741565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103ba57600080fd5b506101eb6103c936600461177a565b610a0c565b60006103db338484610c12565b5060015b92915050565b60006103f36009600a61188d565b61040290640211d1ae3861189c565b905090565b6004546001600160a01b0316336001600160a01b03161461042757600080fd5b6005546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610460573d6000803e3d6000fd5b50565b6000610470848484610d36565b6104c284336104bd85604051806060016040528060288152602001611a94602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906112b2565b610c12565b5060019392505050565b6000546001600160a01b031633146104ff5760405162461bcd60e51b81526004016104f6906118b3565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105735760405162461bcd60e51b81526004016104f6906118b3565b61057f6009600a61188d565b61058e90640211d1ae3861189c565b600e5561059d6009600a61188d565b6105ac90640211d1ae3861189c565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105dc6009600a61188d565b6105eb90640211d1ae3861189c565b60405190815260200160405180910390a1565b6000546001600160a01b031633146106285760405162461bcd60e51b81526004016104f6906118b3565b601354600160a01b900460ff16156106825760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104f6565b3060008181526001602052604090205460125490916106aa916001600160a01b031683610c12565b60135460125460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906118e8565b50601254604080516315ab88c960e31b815290516000926001600160a01b03169163ad5c46489160048083019260209291908290030181865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610793919061190a565b6013546040516370a0823160e01b81526001600160a01b03918216600482015291925060009182918416906370a0823190602401602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190611927565b9050801561094e5761081a47826112ec565b915060006108328361082c8785611335565b906113b7565b60135490915061084d9030906001600160a01b031683610d36565b601360009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561089d57600080fd5b505af11580156108b1573d6000803e3d6000fd5b50506012546001600160a01b0316915063f305d71990508430886000836108e06000546001600160a01b031690565b426040518863ffffffff1660e01b815260040161090296959493929190611940565b60606040518083038185885af1158015610920573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610945919061197b565b505050506109e0565b6012546001600160a01b031663f305d7194730876000806109776000546001600160a01b031690565b426040518863ffffffff1660e01b815260040161099996959493929190611940565b60606040518083038185885af11580156109b7573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109dc919061197b565b5050505b50506013805463ff0000ff60a01b1916630100000160a01b1790555050565b60006103db338484610d36565b6004546001600160a01b0316336001600160a01b031614610a605760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016104f6565b600081118015610a71575060648111155b610ab25760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b60448201526064016104f6565b6040516370a0823160e01b815230600482018190526000916370a0823190602401602060405180830381865afa158015610af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b149190611927565b90506000610b42606461082c85610b2d6009600a61188d565b610b3c90640211d1ae3861189c565b90611335565b905080821015610b945760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e7320696e20636f6e747261637400000060448201526064016104f6565b6004805460405163a9059cbb60e01b81526001600160a01b039091169181019190915260248101829052309063a9059cbb906044016020604051808303816000875af1158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c91906118e8565b50505050565b6001600160a01b038316610c745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f6565b6001600160a01b038216610cd55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d9a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f6565b6001600160a01b038216610dfc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f6565b60008111610e5e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104f6565b600080546001600160a01b03858116911614801590610e8b57506000546001600160a01b03848116911614155b1561116f57610eb6606461082c600a54600d5411610eab57600654610eaf565b6008545b8590611335565b6013549091506001600160a01b038581169116148015610ee457506012546001600160a01b03848116911614155b8015610f0957506001600160a01b03831660009081526003602052604090205460ff16155b15610ff157600e54821115610f605760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104f6565b600f5482610f83856001600160a01b031660009081526001602052604090205490565b610f8d91906119a9565b1115610fdb5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104f6565b600d8054906000610feb836119bc565b91905055505b6013546001600160a01b03848116911614801561101757506001600160a01b0384163014155b1561104457611041606461082c600b54600d541161103757600754610eaf565b6009548590611335565b90505b30600090815260016020526040902054601354600160b01b900460ff1615801561107b57506013546001600160a01b038581169116145b80156110905750601354600160b81b900460ff165b801561109d575060105481115b80156110ac5750600c54600d54115b1561116d576015544311156110c15760006014555b601354600160a81b900460ff1615611125576007601454106111255760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920372073656c6c732070657220626c6f636b2100000000000000000060448201526064016104f6565b61114261113d84611138846011546113f9565b6113f9565b61140e565b4780156111525761115247611588565b60148054906000611162836119bc565b909155505043601555505b505b80156111e9573060009081526001602052604090205461118f90826115c6565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111e09085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461120c90836112ec565b6001600160a01b03851660009081526001602052604090205561125161123283836112ec565b6001600160a01b038516600090815260016020526040902054906115c6565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61129b85856112ec565b60405190815260200160405180910390a350505050565b600081848411156112d65760405162461bcd60e51b81526004016104f69190611653565b5060006112e384866119d5565b95945050505050565b600061132e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b2565b9392505050565b600082600003611347575060006103df565b6000611353838561189c565b90508261136085836119e8565b1461132e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104f6565b600061132e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611625565b6000818311611408578261132e565b50919050565b6013805460ff60b01b1916600160b01b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061145657611456611a0a565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d3919061190a565b816001815181106114e6576114e6611a0a565b6001600160a01b03928316602091820292909201015260125461150c9130911684610c12565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611545908590600090869030904290600401611a20565b600060405180830381600087803b15801561155f57600080fd5b505af1158015611573573d6000803e3d6000fd5b50506013805460ff60b01b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156115c2573d6000803e3d6000fd5b5050565b6000806115d383856119a9565b90508381101561132e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104f6565b600081836116465760405162461bcd60e51b81526004016104f69190611653565b5060006112e384866119e8565b60006020808352835180602085015260005b8181101561168157858101830151858201604001528201611665565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461046057600080fd5b600080604083850312156116ca57600080fd5b82356116d5816116a2565b946020939093013593505050565b6000806000606084860312156116f857600080fd5b8335611703816116a2565b92506020840135611713816116a2565b929592945050506040919091013590565b60006020828403121561173657600080fd5b813561132e816116a2565b6000806040838503121561175457600080fd5b823561175f816116a2565b9150602083013561176f816116a2565b809150509250929050565b60006020828403121561178c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117e45781600019048211156117ca576117ca611793565b808516156117d757918102915b93841c93908002906117ae565b509250929050565b6000826117fb575060016103df565b81611808575060006103df565b816001811461181e576002811461182857611844565b60019150506103df565b60ff84111561183957611839611793565b50506001821b6103df565b5060208310610133831016604e8410600b8410161715611867575081810a6103df565b61187183836117a9565b806000190482111561188557611885611793565b029392505050565b600061132e60ff8416836117ec565b80820281158282048414176103df576103df611793565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156118fa57600080fd5b8151801515811461132e57600080fd5b60006020828403121561191c57600080fd5b815161132e816116a2565b60006020828403121561193957600080fd5b5051919050565b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b60008060006060848603121561199057600080fd5b8351925060208401519150604084015190509250925092565b808201808211156103df576103df611793565b6000600182016119ce576119ce611793565b5060010190565b818103818111156103df576103df611793565b600082611a0557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611a725784516001600160a01b031683529383019391830191600101611a4d565b50506001600160a01b0396909616606085015250505060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b7fc04fc2c4c89e9ff8e376a55e580f005eeb18a2c54e2b70cf1eac3a39d26b764736f6c63430008170033";

type CUMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CUMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CUM__factory extends ContractFactory {
  constructor(...args: CUMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CUM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CUM__factory {
    return super.connect(runner) as CUM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CUMInterface {
    return new Interface(_abi) as CUMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CUM {
    return new Contract(address, _abi, runner) as unknown as CUM;
  }
}
