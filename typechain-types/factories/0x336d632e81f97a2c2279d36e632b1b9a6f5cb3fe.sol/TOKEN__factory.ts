/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../0x336d632e81f97a2c2279d36e632b1b9a6f5cb3fe.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKNThresAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTradingTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendETHToPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526005805560006006556000600755600060085560006009556002600a556000600b556000600c556009600a610039919061031e565b61004790633b9aca00610334565b600d55600a600e556010805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f56009600a61031e565b61010390633b9aca00610334565b61010e906002610334565b610118919061034b565b3360009081526001602052604090205560646101366009600a61031e565b61014490633b9aca00610334565b61014f906062610334565b610159919061034b565b30600090815260016020526040902055336001600160a01b031660006000805160206119f783398151915260646101926009600a61031e565b6101a090633b9aca00610334565b6101ab906002610334565b6101b5919061034b565b60405190815260200160405180910390a33060006000805160206119f783398151915260646101e66009600a61031e565b6101f490633b9aca00610334565b6101ff906062610334565b610209919061034b565b60405190815260200160405180910390a361036d565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610270578085048111156102545761025461021f565b600184161561026257908102905b60019390931c928002610239565b935093915050565b60008261028757506001610318565b8161029457506000610318565b81600181146102aa57600281146102b4576102d0565b6001915050610318565b60ff8411156102c5576102c561021f565b50506001821b610318565b5060208310610133831016604e8410600b84101617156102f3575081810a610318565b6103006000198484610235565b80600019048211156103145761031461021f565b0290505b92915050565b600061032d60ff841683610278565b9392505050565b80820281158282048414176103185761031861021f565b60008261036857634e487b7160e01b600052601260045260246000fd5b500490565b61167b8061037c6000396000f3fe6080604052600436106101025760003560e01c8063715018a6116100955780639639b01d116100645780639639b01d146102cc578063a9059cbb146102e2578063dd62ed3e14610302578063ea414b2814610348578063f79bfcf01461036857600080fd5b8063715018a61461024a578063751039fc1461025f5780638da5cb5b1461027457806395d89b411461029c57600080fd5b806323b872dd116100d157806323b872dd146101c1578063313ce567146101e157806348fd35ae146101fd57806370a082311461021457600080fd5b806306fdde031461010e578063095ea7b3146101585780630faee56f1461018857806318160ddd146101ac57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600f81526e476f726b697573204d6178696d757360881b60208201525b60405161014f9190611249565b60405180910390f35b34801561016457600080fd5b506101786101733660046112ac565b61037d565b604051901515815260200161014f565b34801561019457600080fd5b5061019e600d5481565b60405190815260200161014f565b3480156101b857600080fd5b5061019e610394565b3480156101cd57600080fd5b506101786101dc3660046112d8565b6103b5565b3480156101ed57600080fd5b506040516009815260200161014f565b34801561020957600080fd5b50610212610465565b005b34801561022057600080fd5b5061019e61022f366004611319565b6001600160a01b031660009081526001602052604090205490565b34801561025657600080fd5b50610212610829565b34801561026b57600080fd5b5061021261089d565b34801561028057600080fd5b506000546040516001600160a01b03909116815260200161014f565b3480156102a857600080fd5b50604080518082019091526007815266474f524b49555360c81b6020820152610142565b3480156102d857600080fd5b5061019e600e5481565b3480156102ee57600080fd5b506101786102fd3660046112ac565b6108c9565b34801561030e57600080fd5b5061019e61031d366004611336565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035457600080fd5b50610212610363366004611319565b6108d6565b34801561037457600080fd5b50610212610914565b600061038a338484610977565b5060015b92915050565b60006103a26009600a61146c565b6103b090633b9aca0061147b565b905090565b60006103c2848484610a9b565b3360009081526003602052604090205460ff1615801561040457506010546001600160a01b038581169116148061040457506001600160a01b03831661dead14155b1561045b5761045b84336104568560405180606001604052806028815260200161161e602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ebd565b610977565b5060019392505050565b6000546001600160a01b031633146104985760405162461bcd60e51b815260040161048f90611492565b60405180910390fd5b601054600160a01b900460ff16156104f25760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161048f565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561053b90309061052d6009600a61146c565b61045690633b9aca0061147b565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b291906114c7565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906114c7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a991906114c7565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d71947306106f1816001600160a01b031660009081526001602052604090205490565b6000806107066000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561076e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061079391906114e4565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108269190611512565b50565b6000546001600160a01b031633146108535760405162461bcd60e51b815260040161048f90611492565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108c75760405162461bcd60e51b815260040161048f90611492565b565b600061038a338484610a9b565b3360009081526003602052604090205460ff166108f257600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461093e5760405162461bcd60e51b815260040161048f90611492565b6000471161094b57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610826573d6000803e3d6000fd5b6001600160a01b0383166109d95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048f565b6001600160a01b038216610a3a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048f565b6001600160a01b038216610b615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048f565b60008111610bc35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161048f565b60006001600160a01b0384163014801590610be757506001600160a01b0383163014155b15610d5f57601054600160a81b900460ff16610c2c57610c296064610c2360075460085411610c1857600554610c1c565b6006545b8590610ef7565b90610f80565b90505b6010546001600160a01b038581169116148015610c575750600f546001600160a01b03848116911614155b8015610c7c57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9657506004546001600160a01b03848116911614155b15610cb15760088054906000610cab83611534565b91905055505b30600090815260016020526040902054601054600160a81b900460ff16158015610ce857506010546001600160a01b038581169116145b8015610cfd5750601054600160b01b900460ff165b8015610d1757506004546001600160a01b03868116911614155b15610d5d578015610d51576000600d548211610d335781610d37565b600d545b9050610d4f818511610d495784610fc2565b81610fc2565b505b47610d5b4761113c565b505b505b6001600160a01b038416600090815260016020526040902054610d82908361117a565b6001600160a01b038516600090815260016020526040902055610dc7610da8838361117a565b6001600160a01b038516600090815260016020526040902054906111bc565b6001600160a01b0384166000908152600160205260409020558015610e5a5730600090815260016020526040902054610e0090826111bc565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e519085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb7576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea5858561117a565b60405190815260200160405180910390a35b50505050565b60008184841115610ee15760405162461bcd60e51b815260040161048f9190611249565b506000610eee848661154d565b95945050505050565b600082600003610f095750600061038e565b6000610f15838561147b565b905082610f228583611560565b14610f795760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161048f565b9392505050565b6000610f7983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061121b565b6010805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061100a5761100a611582565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108791906114c7565b8160018151811061109a5761109a611582565b6001600160a01b039283166020918202929092010152600f546110c09130911684610977565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110f9908590600090869030904290600401611598565b600060405180830381600087803b15801561111357600080fd5b505af1158015611127573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611176573d6000803e3d6000fd5b5050565b6000610f7983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebd565b6000806111c9838561160a565b905083811015610f795760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161048f565b6000818361123c5760405162461bcd60e51b815260040161048f9190611249565b506000610eee8486611560565b602081526000825180602084015260005b81811015611277576020818601810151604086840101520161125a565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461082657600080fd5b600080604083850312156112bf57600080fd5b82356112ca81611297565b946020939093013593505050565b6000806000606084860312156112ed57600080fd5b83356112f881611297565b9250602084013561130881611297565b929592945050506040919091013590565b60006020828403121561132b57600080fd5b8135610f7981611297565b6000806040838503121561134957600080fd5b823561135481611297565b9150602083013561136481611297565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113c0578085048111156113a4576113a461136f565b60018416156113b257908102905b60019390931c928002611389565b935093915050565b6000826113d75750600161038e565b816113e45750600061038e565b81600181146113fa576002811461140457611420565b600191505061038e565b60ff8411156114155761141561136f565b50506001821b61038e565b5060208310610133831016604e8410600b8410161715611443575081810a61038e565b6114506000198484611385565b80600019048211156114645761146461136f565b029392505050565b6000610f7960ff8416836113c8565b808202811582820484141761038e5761038e61136f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114d957600080fd5b8151610f7981611297565b6000806000606084860312156114f957600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561152457600080fd5b81518015158114610f7957600080fd5b6000600182016115465761154661136f565b5060010190565b8181038181111561038e5761038e61136f565b60008261157d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115ea5783516001600160a01b03168352602093840193909201916001016115c3565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561038e5761038e61136f56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122096974097c548d073f5c84e4e4aa4f54978fe80d54f7166d402a344b89ea9619964736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
