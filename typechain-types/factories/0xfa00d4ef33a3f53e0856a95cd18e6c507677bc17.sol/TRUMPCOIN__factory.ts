/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  TRUMPCOIN,
  TRUMPCOINInterface,
} from "../../0xfa00d4ef33a3f53e0856a95cd18e6c507677bc17.sol/TRUMPCOIN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_taxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
    ],
    name: "assistStuckedETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a600555600a6006556000600755600060085560056009556005600a556000600b5560646009600a610037919061028b565b610045906305f5e1006102a1565b61004f91906102b8565b600c55600e805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556100bf6009600a61028b565b6100cd906305f5e1006102a1565b3060009081526001602081905260408220929092556003906100f76000546001600160a01b031690565b6001600160a01b0316815260208082019290925260409081016000908120805494151560ff199586161790553080825260039093529081208054909316600117909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101686009600a61028b565b610176906305f5e1006102a1565b60405190815260200160405180910390a36102da565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101dd578085048111156101c1576101c161018c565b60018416156101cf57908102905b60019390931c9280026101a6565b935093915050565b6000826101f457506001610285565b8161020157506000610285565b816001811461021757600281146102215761023d565b6001915050610285565b60ff8411156102325761023261018c565b50506001821b610285565b5060208310610133831016604e8410600b8410161715610260575081810a610285565b61026d60001984846101a2565b80600019048211156102815761028161018c565b0290505b92915050565b600061029a60ff8416836101e5565b9392505050565b80820281158282048414176102855761028561018c565b6000826102d557634e487b7160e01b600052601260045260246000fd5b500490565b611925806102e96000396000f3fe6080604052600436106100e15760003560e01c806370a082311161007f5780638da5cb5b116100595780638da5cb5b1461025c57806395d89b4114610284578063a9059cbb146102b6578063dd62ed3e146102d657600080fd5b806370a08231146101fc578063715018a6146102325780638a8c523c1461024757600080fd5b806323b872dd116100bb57806323b872dd14610188578063313ce567146101a857806334376f3b146101c457806347cca60e146101da57600080fd5b806306fdde03146100ed578063095ea7b31461013557806318160ddd1461016557600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5060408051808201909152600d81526c27a3902a292aa6a81021a7a4a760991b60208201525b60405161012c9190611415565b60405180910390f35b34801561014157600080fd5b50610155610150366004611478565b61031c565b604051901515815260200161012c565b34801561017157600080fd5b5061017a610333565b60405190815260200161012c565b34801561019457600080fd5b506101556101a33660046114a4565b610354565b3480156101b457600080fd5b506040516009815260200161012c565b3480156101d057600080fd5b5061017a600c5481565b3480156101e657600080fd5b506101fa6101f53660046114e5565b610404565b005b34801561020857600080fd5b5061017a6102173660046114e5565b6001600160a01b031660009081526001602052604090205490565b34801561023e57600080fd5b506101fa61044f565b34801561025357600080fd5b506101fa6104f8565b34801561026857600080fd5b506000546040516001600160a01b03909116815260200161012c565b34801561029057600080fd5b506040805180820190915260098152682a292aa6a821a7a4a760b91b602082015261011f565b3480156102c257600080fd5b506101556102d1366004611478565b6108e3565b3480156102e257600080fd5b5061017a6102f1366004611502565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103293384846108f0565b5060015b92915050565b60006103416009600a611638565b61034f906305f5e100611647565b905090565b6000610361848484610a14565b3360009081526003602052604090205460ff161580156103a35750600e546001600160a01b03858116911614806103a357506001600160a01b03831661dead14155b156103fa576103fa84336103f5856040518060600160405280602881526020016118c8602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ee6565b6108f0565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461042457600080fd5b61042d47610f20565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a5565b600e54600160a01b900460ff16156105ac5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104a5565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105f59030906105e76009600a611638565b6103f5906305f5e100611647565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061165e565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f2919061165e565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610763919061165e565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d71947306107ab816001600160a01b031660009081526001602052604090205490565b6000806107c06000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610828573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061084d919061167b565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e091906116a9565b50565b6000610329338484610a14565b6001600160a01b0383166109525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a5565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a7a5760405162461bcd60e51b815260206004820152602760248201527f45524332303a207472616e736665722066726f6d2074686520307864656144206044820152666164647265737360c81b60648201526084016104a5565b6001600160a01b038216610ade5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e7366657220746f2074686520307864656144206164604482015264647265737360d81b60648201526084016104a5565b60008111610b405760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104a5565b60006001600160a01b0384163014801590610b6457506001600160a01b0383163014155b15610d8f57610b956064610b8f600954600b5411610b8457600554610b88565b6007545b8590610f5e565b90610fe7565b600e549091506001600160a01b038581169116148015610bc35750600d546001600160a01b03848116911614155b8015610be857506001600160a01b03831660009081526003602052604090205460ff16155b15610c77576001600160a01b03831661dead14610c6157610c07611029565b8210610c615760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657220416d6f756e742045786365656473206d6178537761704c6044820152631a5b5a5d60e21b60648201526084016104a5565b600b8054906000610c71836116cb565b91905055505b600e546001600160a01b038481169116148015610c9d57506001600160a01b0384163014155b15610cca57610cc76064610b8f600a54600b5411610cbd57600654610b88565b6008548590610f5e565b90505b30600090815260016020526040902054600e54600160a81b900460ff16158015610d015750600e546001600160a01b038581169116145b8015610d165750600e54600160b01b900460ff165b15610d8d57843b15610d615760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b60448201526064016104a5565b8015610d8457610d84610d7f84610d7a84600c546111b7565b6111b7565b6111cc565b610d8d47610f20565b505b8015610e095730600090815260016020526040902054610daf9082611346565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e009085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610e2c90836113a5565b6001600160a01b038516600090815260016020526040902055610e71610e5283836113a5565b6001600160a01b03851660009081526001602052604090205490611346565b6001600160a01b03841660008181526001602052604090209190915561dead14610ee0576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ece85856113a5565b60405190815260200160405180910390a35b50505050565b60008184841115610f0a5760405162461bcd60e51b81526004016104a59190611415565b506000610f1784866116e4565b95945050505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610f5a573d6000803e3d6000fd5b5050565b600082600003610f705750600061032d565b6000610f7c8385611647565b905082610f8985836116f7565b14610fe05760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104a5565b9392505050565b6000610fe083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113e7565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bb919061165e565b816000815181106110ce576110ce61172f565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106111025761110261172f565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061114e9067d02ab486cedc000090869060040161178a565b600060405180830381865afa15801561116b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261119391908101906117ab565b9050806001815181106111a8576111a861172f565b60200260200101519250505090565b60008183116111c65782610fe0565b50919050565b600e805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106112145761121461172f565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611291919061165e565b816001815181106112a4576112a461172f565b6001600160a01b039283166020918202929092010152600d546112ca91309116846108f0565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611303908590600090869030904290600401611878565b600060405180830381600087803b15801561131d57600080fd5b505af1158015611331573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b60008061135383856118b4565b905083811015610fe05760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104a5565b6000610fe083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ee6565b600081836114085760405162461bcd60e51b81526004016104a59190611415565b506000610f1784866116f7565b602081526000825180602084015260005b818110156114435760208186018101516040868401015201611426565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108e057600080fd5b6000806040838503121561148b57600080fd5b823561149681611463565b946020939093013593505050565b6000806000606084860312156114b957600080fd5b83356114c481611463565b925060208401356114d481611463565b929592945050506040919091013590565b6000602082840312156114f757600080fd5b8135610fe081611463565b6000806040838503121561151557600080fd5b823561152081611463565b9150602083013561153081611463565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561158c578085048111156115705761157061153b565b600184161561157e57908102905b60019390931c928002611555565b935093915050565b6000826115a35750600161032d565b816115b05750600061032d565b81600181146115c657600281146115d0576115ec565b600191505061032d565b60ff8411156115e1576115e161153b565b50506001821b61032d565b5060208310610133831016604e8410600b841016171561160f575081810a61032d565b61161c6000198484611551565b80600019048211156116305761163061153b565b029392505050565b6000610fe060ff841683611594565b808202811582820484141761032d5761032d61153b565b60006020828403121561167057600080fd5b8151610fe081611463565b60008060006060848603121561169057600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156116bb57600080fd5b81518015158114610fe057600080fd5b6000600182016116dd576116dd61153b565b5060010190565b8181038181111561032d5761032d61153b565b60008261171457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156117805781516001600160a01b0316865260209586019590910190600101611759565b5093949350505050565b8281526040602082015260006117a36040830184611745565b949350505050565b6000602082840312156117bd57600080fd5b815167ffffffffffffffff8111156117d457600080fd5b8201601f810184136117e557600080fd5b805167ffffffffffffffff8111156117ff576117ff611719565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561182c5761182c611719565b60405291825260208184018101929081018784111561184a57600080fd5b6020850194505b8385101561186d57845180825260209586019590935001611851565b509695505050505050565b85815284602082015260a06040820152600061189760a0830186611745565b6001600160a01b0394909416606083015250608001529392505050565b8082018082111561032d5761032d61153b56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212205e271b25f515de17ab21cf8950b09a7d1372da8a742b0d363b2097143bc097a364736f6c634300081c0033";

type TRUMPCOINConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TRUMPCOINConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TRUMPCOIN__factory extends ContractFactory {
  constructor(...args: TRUMPCOINConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TRUMPCOIN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TRUMPCOIN__factory {
    return super.connect(runner) as TRUMPCOIN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TRUMPCOINInterface {
    return new Interface(_abi) as TRUMPCOINInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TRUMPCOIN {
    return new Contract(address, _abi, runner) as unknown as TRUMPCOIN;
  }
}
