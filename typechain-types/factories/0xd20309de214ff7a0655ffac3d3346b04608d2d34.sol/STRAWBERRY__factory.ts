/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  STRAWBERRY,
  STRAWBERRYInterface,
} from "../../0xd20309de214ff7a0655ffac3d3346b04608d2d34.sol/STRAWBERRY";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260146006556014600755600060085560006009556017600a556017600b556017600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fa56ea006200036a565b601155620000a66009600a62000352565b620000b69063fa56ea006200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611dc780620003946000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103db578063bf474bed146103fb578063c9567bf914610411578063d34628cc14610426578063dd62ed3e14610446578063ec1f3f631461048c57600080fd5b8063751039fc1461031f5780637d1db4a5146103345780638cd4426d1461034a5780638da5cb5b1461036a5780638f9a55c01461039257806395d89b41146103a857600080fd5b8063313ce56711610108578063313ce5671461024a57806331c2d847146102665780633bbac5791461028657806351bc3c85146102bf57806370a08231146102d4578063715018a61461030a57600080fd5b806306fdde031461015b578063095ea7b3146101aa5780630faee56f146101da578063109daa99146101fe57806318160ddd1461021557806323b872dd1461022a57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b50604080518082019091526014815273436f636f726f204f726967696e616c204e616d6560601b60208201525b6040516101a19190611876565b60405180910390f35b3480156101b657600080fd5b506101ca6101c53660046118ed565b6104ac565b60405190151581526020016101a1565b3480156101e657600080fd5b506101f060125481565b6040519081526020016101a1565b34801561020a57600080fd5b506102136104c3565b005b34801561022157600080fd5b506101f0610533565b34801561023657600080fd5b506101ca610245366004611919565b610555565b34801561025657600080fd5b50604051600981526020016101a1565b34801561027257600080fd5b50610213610281366004611970565b6105be565b34801561029257600080fd5b506101ca6102a1366004611a35565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102cb57600080fd5b5061021361064a565b3480156102e057600080fd5b506101f06102ef366004611a35565b6001600160a01b031660009081526001602052604090205490565b34801561031657600080fd5b506102136106b0565b34801561032b57600080fd5b50610213610724565b34801561034057600080fd5b506101f0600f5481565b34801561035657600080fd5b506102136103653660046118ed565b6107d4565b34801561037657600080fd5b506000546040516001600160a01b0390911681526020016101a1565b34801561039e57600080fd5b506101f060105481565b3480156103b457600080fd5b5060408051808201909152600a8152695354524157424552525960b01b6020820152610194565b3480156103e757600080fd5b506101ca6103f63660046118ed565b610901565b34801561040757600080fd5b506101f060115481565b34801561041d57600080fd5b5061021361090e565b34801561043257600080fd5b50610213610441366004611970565b610ccb565b34801561045257600080fd5b506101f0610461366004611a52565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561049857600080fd5b506102136104a7366004611a8b565b610d53565b60006104b9338484610d9a565b5060015b92915050565b6000546001600160a01b031633146104f65760405162461bcd60e51b81526004016104ed90611aa4565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105416009600a611bd3565b610550906461f313f880611be2565b905090565b6000610562848484610ebe565b6105b484336105af85604051806060016040528060288152602001611d6a602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114d9565b610d9a565b5060019392505050565b6000546001600160a01b031633146105e85760405162461bcd60e51b81526004016104ed90611aa4565b60005b81518110156106465760006004600084848151811061060c5761060c611bf9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105eb565b5050565b6005546001600160a01b0316336001600160a01b03161461066a57600080fd5b3060009081526001602052604090205480158015906106925750601454600160b01b900460ff165b156106a0576106a081611513565b478015610646576106468161168d565b6000546001600160a01b031633146106da5760405162461bcd60e51b81526004016104ed90611aa4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461074e5760405162461bcd60e51b81526004016104ed90611aa4565b61075a6009600a611bd3565b610769906461f313f880611be2565b600f556107786009600a611bd3565b610787906461f313f880611be2565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b76009600a611bd3565b6107c6906461f313f880611be2565b604051908152602001610529565b6000546001600160a01b031633146107fe5760405162461bcd60e51b81526004016104ed90611aa4565b6040516370a0823160e01b81523060048201526000906108829060649061087c9085906001600160a01b038816906370a0823190602401602060405180830381865afa158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611c0f565b906116c7565b90611750565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb9190611c28565b50505050565b60006104b9338484610ebe565b6000546001600160a01b031633146109385760405162461bcd60e51b81526004016104ed90611aa4565b601454600160a01b900460ff16156109925760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ed565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109dc9030906109cd6009600a611bd3565b6105af906461f313f880611be2565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611c4a565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad99190611c4a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611c4a565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610b92816001600160a01b031660009081526001602052604090205490565b600080610ba76000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c0f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c349190611c67565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb19190611c28565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610cf55760405162461bcd60e51b81526004016104ed90611aa4565b60005b815181101561064657600160046000848481518110610d1957610d19611bf9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cf8565b6005546001600160a01b0316336001600160a01b031614610d7357600080fd5b6008548111158015610d8757506009548111155b610d9057600080fd5b6008819055600955565b6001600160a01b038316610dfc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ed565b6001600160a01b038216610e5d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ed565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ed565b6001600160a01b038216610f845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ed565b60008111610fe65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ed565b600080546001600160a01b0385811691161480159061101357506000546001600160a01b03848116911614155b801561102d57506005546001600160a01b03848116911614155b15611396576001600160a01b03841660009081526004602052604090205460ff1615801561107457506001600160a01b03831660009081526004602052604090205460ff16155b61107d57600080fd5b600e546000036110b0576110ad606461087c600a54600e54116110a2576006546110a6565b6008545b85906116c7565b90505b600e54156110d5576110d2606461087c600d54856116c790919063ffffffff16565b90505b6014546001600160a01b03858116911614801561110057506013546001600160a01b03848116911614155b801561112557506001600160a01b03831660009081526003602052604090205460ff16155b1561122a57600f5482111561117c5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104ed565b6010548261119f856001600160a01b031660009081526001602052604090205490565b6111a99190611c95565b11156111f75760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ed565b611212606461087c600a54600e54116110a2576006546110a6565b600e8054919250600061122483611ca8565b91905055505b6014546001600160a01b03848116911614801561125057506001600160a01b0384163014155b1561127d5761127a606461087c600b54600e5411611270576007546110a6565b60095485906116c7565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156112b457506014546001600160a01b038581169116145b80156112c95750601454600160b01b900460ff165b80156112d6575060115481115b80156112e55750600c54600e54115b15611394576016544311156112fa5760006015555b60036015541061134c5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ed565b6113696113648461135f84601254611792565b611792565b611513565b478015611379576113794761168d565b6015805490600061138983611ca8565b909155505043601655505b505b801561141057306000908152600160205260409020546113b690826117a7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114079085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546114339083611806565b6001600160a01b0385166000908152600160205260409020556114786114598383611806565b6001600160a01b038516600090815260016020526040902054906117a7565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114c28585611806565b60405190815260200160405180910390a350505050565b600081848411156114fd5760405162461bcd60e51b81526004016104ed9190611876565b50600061150a8486611cc1565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061155b5761155b611bf9565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d89190611c4a565b816001815181106115eb576115eb611bf9565b6001600160a01b0392831660209182029290920101526013546116119130911684610d9a565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac9479061164a908590600090869030904290600401611cd4565b600060405180830381600087803b15801561166457600080fd5b505af1158015611678573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610646573d6000803e3d6000fd5b6000826000036116d9575060006104bd565b60006116e58385611be2565b9050826116f28583611d47565b146117495760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ed565b9392505050565b600061174983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611848565b60008183116117a15782611749565b50919050565b6000806117b48385611c95565b9050838110156117495760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ed565b600061174983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114d9565b600081836118695760405162461bcd60e51b81526004016104ed9190611876565b50600061150a8486611d47565b60006020808352835180602085015260005b818110156118a457858101830151858201604001528201611888565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118da57600080fd5b50565b80356118e8816118c5565b919050565b6000806040838503121561190057600080fd5b823561190b816118c5565b946020939093013593505050565b60008060006060848603121561192e57600080fd5b8335611939816118c5565b92506020840135611949816118c5565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561198357600080fd5b823567ffffffffffffffff8082111561199b57600080fd5b818501915085601f8301126119af57600080fd5b8135818111156119c1576119c161195a565b8060051b604051601f19603f830116810181811085821117156119e6576119e661195a565b604052918252848201925083810185019188831115611a0457600080fd5b938501935b82851015611a2957611a1a856118dd565b84529385019392850192611a09565b98975050505050505050565b600060208284031215611a4757600080fd5b8135611749816118c5565b60008060408385031215611a6557600080fd5b8235611a70816118c5565b91506020830135611a80816118c5565b809150509250929050565b600060208284031215611a9d57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b2a578160001904821115611b1057611b10611ad9565b80851615611b1d57918102915b93841c9390800290611af4565b509250929050565b600082611b41575060016104bd565b81611b4e575060006104bd565b8160018114611b645760028114611b6e57611b8a565b60019150506104bd565b60ff841115611b7f57611b7f611ad9565b50506001821b6104bd565b5060208310610133831016604e8410600b8410161715611bad575081810a6104bd565b611bb78383611aef565b8060001904821115611bcb57611bcb611ad9565b029392505050565b600061174960ff841683611b32565b80820281158282048414176104bd576104bd611ad9565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c2157600080fd5b5051919050565b600060208284031215611c3a57600080fd5b8151801515811461174957600080fd5b600060208284031215611c5c57600080fd5b8151611749816118c5565b600080600060608486031215611c7c57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104bd576104bd611ad9565b600060018201611cba57611cba611ad9565b5060010190565b818103818111156104bd576104bd611ad9565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d265784516001600160a01b031683529383019391830191600101611d01565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d6457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220bef7ef7592e3e45ebdc71892e4c8080e7b15eb9ce06c28bc938c5c572dff2f5e64736f6c63430008170033";

type STRAWBERRYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: STRAWBERRYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class STRAWBERRY__factory extends ContractFactory {
  constructor(...args: STRAWBERRYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      STRAWBERRY & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): STRAWBERRY__factory {
    return super.connect(runner) as STRAWBERRY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): STRAWBERRYInterface {
    return new Interface(_abi) as STRAWBERRYInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): STRAWBERRY {
    return new Contract(address, _abi, runner) as unknown as STRAWBERRY;
  }
}
