/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0xdd21b7e1180900eb57d5a85c291223754a595135.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600555600a6006556000600755600760085560006009556000600b556009600a610030919061031a565b61003e90633b9aca00610330565b600c55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b03166000600080516020611ce9833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a3306000600080516020611ce983398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b611971806103786000396000f3fe6080604052600436106100f75760003560e01c8063715018a61161008a57806395d89b411161005957806395d89b4114610103578063a9059cbb146102b1578063dd62ed3e146102d1578063fb201b1d1461031757600080fd5b8063715018a61461023f578063751039fc14610254578063798e5036146102695780638da5cb5b1461028957600080fd5b806320800a00116100c657806320800a00146101b657806323b872dd146101cd578063313ce567146101ed57806370a082311461020957600080fd5b806306fdde0314610103578063095ea7b31461014d5780630faee56f1461017d57806318160ddd146101a157600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506040805180820182526012815271436c6f736564344d617850726f666974414960701b60208201529051610144919061142c565b60405180910390f35b34801561015957600080fd5b5061016d61016836600461148f565b61032c565b6040519015158152602001610144565b34801561018957600080fd5b50610193600c5481565b604051908152602001610144565b3480156101ad57600080fd5b50610193610343565b3480156101c257600080fd5b506101cb610364565b005b3480156101d957600080fd5b5061016d6101e83660046114bb565b6103d3565b3480156101f957600080fd5b5060405160098152602001610144565b34801561021557600080fd5b506101936102243660046114fc565b6001600160a01b031660009081526001602052604090205490565b34801561024b57600080fd5b506101cb61047e565b34801561026057600080fd5b506101cb6104f2565b34801561027557600080fd5b506101cb6102843660046114fc565b61051e565b34801561029557600080fd5b506000546040516001600160a01b039091168152602001610144565b3480156102bd57600080fd5b5061016d6102cc36600461148f565b61055c565b3480156102dd57600080fd5b506101936102ec366004611519565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032357600080fd5b506101cb610569565b6000610339338484610921565b5060015b92915050565b60006103516009600a61164f565b61035f90633b9aca0061165e565b905090565b6000546001600160a01b031633146103975760405162461bcd60e51b815260040161038e90611675565b60405180910390fd5b600047116103a457600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103d0573d6000803e3d6000fd5b50565b60006103e0848484610a45565b6004546001600160a01b0316331480159061041d5750600e546001600160a01b038581169116148061041d57506001600160a01b03831661dead14155b1561047457610474843361046f85604051806060016040528060288152602001611914602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f12565b610921565b5060019392505050565b6000546001600160a01b031633146104a85760405162461bcd60e51b815260040161038e90611675565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051c5760405162461bcd60e51b815260040161038e90611675565b565b3360009081526003602052604090205460ff1661053a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610339338484610a45565b6000546001600160a01b031633146105935760405162461bcd60e51b815260040161038e90611675565b600e54600160a01b900460ff16156105ed5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161038e565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106369030906106286009600a61164f565b61046f90633b9aca0061165e565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad91906116aa565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906116aa565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a491906116aa565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d71947306107ec816001600160a01b031660009081526001602052604090205490565b6000806108016000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610869573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061088e91906116c7565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d091906116f5565b6001600160a01b0383166109835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038e565b6001600160a01b0382166109e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038e565b6001600160a01b038216610b0b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038e565b60008111610b6d5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161038e565b60006001600160a01b0384163014801590610b9157506001600160a01b0383163014155b15610db457600e54600160a81b900460ff16610bd657610bd36064610bcd60085460095411610bc257600654610bc6565b6007545b8590610f4c565b90610fd5565b90505b600e546001600160a01b038581169116148015610c015750600d546001600160a01b03848116911614155b8015610c2657506001600160a01b03831660009081526003602052604090205460ff16155b8015610c4057506004546001600160a01b03848116911614155b15610c855743600a5414610c58576000600b5543600a555b81600b6000828254610c6a9190611717565b909155505060098054906000610c7f8361172a565b91905055505b600e546001600160a01b038481169116148015610cab57506001600160a01b0384163014155b15610d0657610cb8611017565b600b541080610cc9575043600a5414155b610d065760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161038e565b30600090815260016020526040902054600e54600160a81b900460ff16158015610d3d5750600e546001600160a01b038581169116145b8015610d525750600e54600160b01b900460ff165b8015610d6c57506004546001600160a01b03868116911614155b15610db2578015610da6576000600c548211610d885781610d8c565b600c545b9050610da4818511610d9e57846111a5565b816111a5565b505b47610db04761131f565b505b505b6001600160a01b038416600090815260016020526040902054610dd7908361135d565b6001600160a01b038516600090815260016020526040902055610e1c610dfd838361135d565b6001600160a01b0385166000908152600160205260409020549061139f565b6001600160a01b0384166000908152600160205260409020558015610eaf5730600090815260016020526040902054610e55908261139f565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ea69085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f0c576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610efa858561135d565b60405190815260200160405180910390a35b50505050565b60008184841115610f365760405162461bcd60e51b815260040161038e919061142c565b506000610f438486611743565b95945050505050565b600082600003610f5e5750600061033d565b6000610f6a838561165e565b905082610f778583611756565b14610fce5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161038e565b9392505050565b6000610fce83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113fe565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a991906116aa565b816000815181106110bc576110bc61178e565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110f0576110f061178e565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061113c906729a2241af62c00009086906004016117e9565b600060405180830381865afa158015611159573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611181919081019061180a565b9050806001815181106111965761119661178e565b60200260200101519250505090565b600e805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111ed576111ed61178e565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126a91906116aa565b8160018151811061127d5761127d61178e565b6001600160a01b039283166020918202929092010152600d546112a39130911684610921565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112dc9085906000908690309042906004016118d7565b600060405180830381600087803b1580156112f657600080fd5b505af115801561130a573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611359573d6000803e3d6000fd5b5050565b6000610fce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f12565b6000806113ac8385611717565b905083811015610fce5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161038e565b6000818361141f5760405162461bcd60e51b815260040161038e919061142c565b506000610f438486611756565b602081526000825180602084015260005b8181101561145a576020818601810151604086840101520161143d565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103d057600080fd5b600080604083850312156114a257600080fd5b82356114ad8161147a565b946020939093013593505050565b6000806000606084860312156114d057600080fd5b83356114db8161147a565b925060208401356114eb8161147a565b929592945050506040919091013590565b60006020828403121561150e57600080fd5b8135610fce8161147a565b6000806040838503121561152c57600080fd5b82356115378161147a565b915060208301356115478161147a565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115a35780850481111561158757611587611552565b600184161561159557908102905b60019390931c92800261156c565b935093915050565b6000826115ba5750600161033d565b816115c75750600061033d565b81600181146115dd57600281146115e757611603565b600191505061033d565b60ff8411156115f8576115f8611552565b50506001821b61033d565b5060208310610133831016604e8410600b8410161715611626575081810a61033d565b6116336000198484611568565b806000190482111561164757611647611552565b029392505050565b6000610fce60ff8416836115ab565b808202811582820484141761033d5761033d611552565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116bc57600080fd5b8151610fce8161147a565b6000806000606084860312156116dc57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561170757600080fd5b81518015158114610fce57600080fd5b8082018082111561033d5761033d611552565b60006001820161173c5761173c611552565b5060010190565b8181038181111561033d5761033d611552565b60008261177357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156117df5781516001600160a01b03168652602095860195909101906001016117b8565b5093949350505050565b82815260406020820152600061180260408301846117a4565b949350505050565b60006020828403121561181c57600080fd5b815167ffffffffffffffff81111561183357600080fd5b8201601f8101841361184457600080fd5b805167ffffffffffffffff81111561185e5761185e611778565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561188b5761188b611778565b6040529182526020818401810192908101878411156118a957600080fd5b6020850194505b838510156118cc578451808252602095860195909350016118b0565b509695505050505050565b85815284602082015260a0604082015260006118f660a08301866117a4565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a10e7247aee13d76f5eac4de2e47bae2199d898db944d1202073cee28ce2824b64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
