/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  WAZ2CAT,
  WAZ2CATInterface,
} from "../../../medium/0xdb44e3f7848ffd726e4c13ee6cd98d50c12d897f.sol/WAZ2CAT";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b5560646009600a6100319190610271565b61003f906305f5e100610287565b610049919061029e565b600c556000600d819055600f805461ffff60a81b191690556010819055601181905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ff6009600a610271565b61010d906305f5e100610287565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61014e6009600a610271565b61015c906305f5e100610287565b60405190815260200160405180910390a36102c0565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101c3578085048111156101a7576101a7610172565b60018416156101b557908102905b60019390931c92800261018c565b935093915050565b6000826101da5750600161026b565b816101e75750600061026b565b81600181146101fd576002811461020757610223565b600191505061026b565b60ff84111561021857610218610172565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610246575081810a61026b565b6102536000198484610188565b806000190482111561026757610267610172565b0290505b92915050565b600061028060ff8416836101cb565b9392505050565b808202811582820484141761026b5761026b610172565b6000826102bb57634e487b7160e01b600052601260045260246000fd5b500490565b6119c6806102cf6000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b1461029f57806395d89b41146102c7578063a9059cbb146102f6578063dd62ed3e14610316578063ea414b281461035c57600080fd5b806370a082311461022a578063715018a614610260578063751039fc146102755780638a8c523c1461028a57600080fd5b806320800a00116100d157806320800a00146101c157806323b872dd146101d8578063313ce567146101f85780636482c89a1461021457600080fd5b806306fdde031461010e578063095ea7b3146101585780630faee56f1461018857806318160ddd146101ac57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600f81526e129d5cdd1a58d948119bdc8810d85d608a1b60208201525b60405161014f9190611481565b60405180910390f35b34801561016457600080fd5b506101786101733660046114e4565b61037c565b604051901515815260200161014f565b34801561019457600080fd5b5061019e600c5481565b60405190815260200161014f565b3480156101b857600080fd5b5061019e610393565b3480156101cd57600080fd5b506101d66103b4565b005b3480156101e457600080fd5b506101786101f3366004611510565b610423565b34801561020457600080fd5b506040516009815260200161014f565b34801561022057600080fd5b5061019e600d5481565b34801561023657600080fd5b5061019e610245366004611551565b6001600160a01b031660009081526001602052604090205490565b34801561026c57600080fd5b506101d66104d3565b34801561028157600080fd5b506101d6610547565b34801561029657600080fd5b506101d6610573565b3480156102ab57600080fd5b506000546040516001600160a01b03909116815260200161014f565b3480156102d357600080fd5b5060408051808201909152600681526518982ba0ad1960d11b6020820152610142565b34801561030257600080fd5b506101786103113660046114e4565b61092b565b34801561032257600080fd5b5061019e61033136600461156e565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036857600080fd5b506101d6610377366004611551565b610938565b6000610389338484610976565b5060015b92915050565b60006103a16009600a6116a4565b6103af906305f5e1006116b3565b905090565b6000546001600160a01b031633146103e75760405162461bcd60e51b81526004016103de906116ca565b60405180910390fd5b600047116103f457600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610420573d6000803e3d6000fd5b50565b6000610430848484610a9a565b3360009081526003602052604090205460ff161580156104725750600f546001600160a01b038581169116148061047257506001600160a01b03831661dead14155b156104c9576104c984336104c485604051806060016040528060288152602001611969602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f67565b610976565b5060019392505050565b6000546001600160a01b031633146104fd5760405162461bcd60e51b81526004016103de906116ca565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105715760405162461bcd60e51b81526004016103de906116ca565b565b6000546001600160a01b0316331461059d5760405162461bcd60e51b81526004016103de906116ca565b600f54600160a01b900460ff16156105f75760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103de565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106409030906106326009600a6116a4565b6104c4906305f5e1006116b3565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b791906116ff565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d91906116ff565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae91906116ff565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107f6816001600160a01b031660009081526001602052604090205490565b60008061080b6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610873573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610898919061171c565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610907573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061174a565b6000610389338484610a9a565b3360009081526003602052604090205460ff1661095457600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109d85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103de565b6001600160a01b038216610a395760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103de565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610afe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103de565b6001600160a01b038216610b605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103de565b60008111610bc25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103de565b60006001600160a01b0384163014801590610be657506001600160a01b0383163014155b15610e0957600f54600160a81b900460ff16610c2b57610c286064610c2260075460085411610c1757600554610c1b565b6006545b8590610fa1565b9061102a565b90505b600f546001600160a01b038581169116148015610c565750600e546001600160a01b03848116911614155b8015610c7b57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9557506004546001600160a01b03848116911614155b15610cda574360095414610cad576000600a55436009555b81600a6000828254610cbf919061176c565b909155505060088054906000610cd48361177f565b91905055505b600f546001600160a01b038481169116148015610d0057506001600160a01b0384163014155b15610d5b57610d0d61106c565b600a541080610d1e57504360095414155b610d5b5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103de565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d925750600f546001600160a01b038581169116145b8015610da75750600f54600160b01b900460ff165b8015610dc157506004546001600160a01b03868116911614155b15610e07578015610dfb576000600c548211610ddd5781610de1565b600c545b9050610df9818511610df357846111fa565b816111fa565b505b47610e0547611374565b505b505b6001600160a01b038416600090815260016020526040902054610e2c90836113b2565b6001600160a01b038516600090815260016020526040902055610e71610e5283836113b2565b6001600160a01b038516600090815260016020526040902054906113f4565b6001600160a01b0384166000908152600160205260409020558015610f045730600090815260016020526040902054610eaa90826113f4565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610efb9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f61576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f4f85856113b2565b60405190815260200160405180910390a35b50505050565b60008184841115610f8b5760405162461bcd60e51b81526004016103de9190611481565b506000610f988486611798565b95945050505050565b600082600003610fb35750600061038d565b6000610fbf83856116b3565b905082610fcc85836117ab565b146110235760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103de565b9392505050565b600061102383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611453565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe91906116ff565b81600081518110611111576111116117e3565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611145576111456117e3565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061119190674563918244f4000090869060040161183e565b600060405180830381865afa1580156111ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111d6919081019061185f565b9050806001815181106111eb576111eb6117e3565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611242576112426117e3565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561129b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bf91906116ff565b816001815181106112d2576112d26117e3565b6001600160a01b039283166020918202929092010152600e546112f89130911684610976565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061133190859060009086903090429060040161192c565b600060405180830381600087803b15801561134b57600080fd5b505af115801561135f573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113ae573d6000803e3d6000fd5b5050565b600061102383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f67565b600080611401838561176c565b9050838110156110235760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103de565b600081836114745760405162461bcd60e51b81526004016103de9190611481565b506000610f9884866117ab565b602081526000825180602084015260005b818110156114af5760208186018101516040868401015201611492565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461042057600080fd5b600080604083850312156114f757600080fd5b8235611502816114cf565b946020939093013593505050565b60008060006060848603121561152557600080fd5b8335611530816114cf565b92506020840135611540816114cf565b929592945050506040919091013590565b60006020828403121561156357600080fd5b8135611023816114cf565b6000806040838503121561158157600080fd5b823561158c816114cf565b9150602083013561159c816114cf565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115f8578085048111156115dc576115dc6115a7565b60018416156115ea57908102905b60019390931c9280026115c1565b935093915050565b60008261160f5750600161038d565b8161161c5750600061038d565b8160018114611632576002811461163c57611658565b600191505061038d565b60ff84111561164d5761164d6115a7565b50506001821b61038d565b5060208310610133831016604e8410600b841016171561167b575081810a61038d565b61168860001984846115bd565b806000190482111561169c5761169c6115a7565b029392505050565b600061102360ff841683611600565b808202811582820484141761038d5761038d6115a7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561171157600080fd5b8151611023816114cf565b60008060006060848603121561173157600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561175c57600080fd5b8151801515811461102357600080fd5b8082018082111561038d5761038d6115a7565b600060018201611791576117916115a7565b5060010190565b8181038181111561038d5761038d6115a7565b6000826117c857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118345781516001600160a01b031686526020958601959091019060010161180d565b5093949350505050565b82815260406020820152600061185760408301846117f9565b949350505050565b60006020828403121561187157600080fd5b815167ffffffffffffffff81111561188857600080fd5b8201601f8101841361189957600080fd5b805167ffffffffffffffff8111156118b3576118b36117cd565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118e0576118e06117cd565b6040529182526020818401810192908101878411156118fe57600080fd5b6020850194505b8385101561192157845180825260209586019590935001611905565b509695505050505050565b85815284602082015260a06040820152600061194b60a08301866117f9565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122004a7b25967024271a604e2750755743178ebd219a8c5b7bf2d13b026cb376d5a64736f6c634300081d0033";

type WAZ2CATConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WAZ2CATConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WAZ2CAT__factory extends ContractFactory {
  constructor(...args: WAZ2CATConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WAZ2CAT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WAZ2CAT__factory {
    return super.connect(runner) as WAZ2CAT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WAZ2CATInterface {
    return new Interface(_abi) as WAZ2CATInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WAZ2CAT {
    return new Contract(address, _abi, runner) as unknown as WAZ2CAT;
  }
}
