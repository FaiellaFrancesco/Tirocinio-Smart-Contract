/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StandardToken,
  StandardTokenInterface,
} from "../../../medium/0xb88124e8464f0c1b1078911f57561c96de400c31.sol/StandardToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blackListed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "Blacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "txFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610bc38061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637b7e8bac1161008c578063cf82046111610066578063cf8204611461020e578063d73dd62314610217578063dd62ed3e1461022a578063fce589d81461026357600080fd5b80637b7e8bac146101ad5780639fa45102146101d8578063a9059cbb146101fb57600080fd5b80635342acb4116100c85780635342acb4146101415780635c975abb14610164578063661884631461017157806370a082311461018457600080fd5b8063095ea7b3146100ef57806318160ddd1461011757806323b872dd1461012e575b600080fd5b6101026100fd366004610a63565b61026c565b60405190151581526020015b60405180910390f35b61012060035481565b60405190815260200161010e565b61010261013c366004610a8d565b6102d9565b61010261014f366004610aca565b60046020526000908152604090205460ff1681565b6007546101029060ff1681565b61010261017f366004610a63565b610343565b610120610192366004610aca565b6001600160a01b031660009081526008602052604090205490565b6002546101c0906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b6101026101e6366004610aca565b60066020526000908152604090205460ff1681565b610102610209366004610a63565b61042b565b61012060005481565b610102610225366004610a63565b610442565b610120610238366004610ae5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b61012060015481565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102c79086815260200190565b60405180910390a35060015b92915050565b60006102e68484846104c7565b506001600160a01b038416600090815260056020908152604080832033845290915290205461031590836107c2565b6001600160a01b03851660009081526005602090815260408083203384529091529020555060019392505050565b3360009081526005602090815260408083206001600160a01b038616845290915281205480831115610398573360009081526005602090815260408083206001600160a01b03881684529091528120556103c7565b6103a281846107c2565b3360009081526005602090815260408083206001600160a01b03891684529091529020555b3360008181526005602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b60006104383384846104c7565b5060019392505050565b3360009081526005602090815260408083206001600160a01b03861684529091528120546104709083610825565b3360008181526005602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016102c7565b6001600160a01b03831660009081526006602052604081205460ff16156105415760405162461bcd60e51b8152602060048201526024808201527f5374616e64617264546f6b656e3a2073656e64657220697320626c61636b6c696044820152631cdd195960e21b60648201526084015b60405180910390fd5b6001600160a01b0383166105ab5760405162461bcd60e51b815260206004820152602b60248201527f5374616e64617264546f6b656e3a207472616e7366657220746f20746865207a60448201526a65726f206164647265737360a81b6064820152608401610538565b6001600160a01b03841660009081526008602052604090205482111561062a5760405162461bcd60e51b815260206004820152602e60248201527f5374616e64617264546f6b656e3a207472616e7366657220616d6f756e74206560448201526d7863656564732062616c616e636560901b6064820152608401610538565b6001600160a01b03841660009081526004602052604090205460ff1615801561066c57506001600160a01b03831660009081526004602052604090205460ff16155b156106b05760075460ff16156106b05760405162461bcd60e51b81526020600482015260096024820152681b9bdd081cdd185c9d60ba1b6044820152606401610538565b6001600160a01b0384166000908152600860205260409020546106d390836107c2565b6001600160a01b038516600090815260086020908152604080832093909355600490529081205460ff168061072057506001600160a01b03841660009081526004602052604090205460ff165b6107335761072e8584610831565b610735565b825b6001600160a01b03851660009081526008602052604090205490915061075b9082610825565b6001600160a01b0380861660008181526008602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107af9085815260200190565b60405180910390a3506001949350505050565b6000828211156108145760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610538565b61081e8284610b2e565b9392505050565b600061081e8284610b41565b600154600090819081901561086357610860606461085a600154876109e090919063ffffffff16565b906109ec565b90505b6000541561088857610885606461085a600054876109e090919063ffffffff16565b91505b8115610913576002546001600160a01b03166000908152600860205260409020546108b39083610825565b600280546001600160a01b03908116600090815260086020908152604091829020949094559154915185815291811692908816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b80156109c3576000805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c75461094e9082610825565b600080805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7919091556040516001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109ba9085815260200190565b60405180910390a35b6109d76109d08383610825565b85906107c2565b95945050505050565b600061081e8284610b54565b6000808211610a3d5760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610538565b61081e8284610b6b565b80356001600160a01b0381168114610a5e57600080fd5b919050565b60008060408385031215610a7657600080fd5b610a7f83610a47565b946020939093013593505050565b600080600060608486031215610aa257600080fd5b610aab84610a47565b9250610ab960208501610a47565b929592945050506040919091013590565b600060208284031215610adc57600080fd5b61081e82610a47565b60008060408385031215610af857600080fd5b610b0183610a47565b9150610b0f60208401610a47565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102d3576102d3610b18565b808201808211156102d3576102d3610b18565b80820281158282048414176102d3576102d3610b18565b600082610b8857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220feadea5c96a6471bfb719048ccde476d41e1192d3d4fd89f48f7571e1cfdf0ea64736f6c634300081e0033";

type StandardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardToken__factory extends ContractFactory {
  constructor(...args: StandardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StandardToken> {
    return super.deploy(overrides || {}) as Promise<StandardToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StandardToken {
    return super.attach(address) as StandardToken;
  }
  override connect(signer: Signer): StandardToken__factory {
    return super.connect(signer) as StandardToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardTokenInterface {
    return new utils.Interface(_abi) as StandardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StandardToken {
    return new Contract(address, _abi, signerOrProvider) as StandardToken;
  }
}
