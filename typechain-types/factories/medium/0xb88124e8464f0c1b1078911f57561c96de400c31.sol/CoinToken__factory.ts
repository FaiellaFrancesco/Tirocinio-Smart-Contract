/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  CoinToken,
  CoinTokenInterface,
} from "../../../medium/0xb88124e8464f0c1b1078911f57561c96de400c31.sol/CoinToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_txFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_FeeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "service",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blackListed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "Blacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "listAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBlackListed",
        type: "bool",
      },
    ],
    name: "blackListAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeMultipleAccountsFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "txFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_FeeAddress",
        type: "address",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "waiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051611b51380380611b518339810160408190526100229161022e565b600c61002e8a8261037c565b50600d61003b898261037c565b50600e87905561004c87600a610539565b610056908761054c565b60038190556001600160a01b03808416600081815260086020908152604080832095909555600980546001600160a01b031990811690941790558982556001898155600280548a871695169490941790935560049052838120805460ff19908116841790915530825284822080549091169092179091559151908316913480156108fc02929091818181858888f193505050501580156100fa573d6000803e3d6000fd5b50816001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405161014391815260200190565b60405180910390a3505050505050505050610563565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261018057600080fd5b81516001600160401b0381111561019957610199610159565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101c7576101c7610159565b6040528181528382016020018510156101df57600080fd5b60005b828110156101fe576020818601810151838301820152016101e2565b506000918101602001919091529392505050565b80516001600160a01b038116811461022957600080fd5b919050565b60008060008060008060008060006101208a8c03121561024d57600080fd5b89516001600160401b0381111561026357600080fd5b61026f8c828d0161016f565b60208c0151909a5090506001600160401b0381111561028d57600080fd5b6102998c828d0161016f565b60408c015160608d015160808e015160a08f0151939c50919a509850965094506102c7905060c08b01610212565b92506102d560e08b01610212565b91506102e46101008b01610212565b90509295985092959850929598565b600181811c9082168061030757607f821691505b60208210810361032757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037757806000526020600020601f840160051c810160208510156103545750805b601f840160051c820191505b818110156103745760008155600101610360565b50505b505050565b81516001600160401b0381111561039557610395610159565b6103a9816103a384546102f3565b8461032d565b6020601f8211600181146103dd57600083156103c55750848201515b600019600385901b1c1916600184901b178455610374565b600084815260208120601f198516915b8281101561040d57878501518255602094850194600190920191016103ed565b508482101561042b5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561048b5780850481111561046f5761046f61043a565b600184161561047d57908102905b60019390931c928002610454565b935093915050565b6000826104a257506001610533565b816104af57506000610533565b81600181146104c557600281146104cf576104eb565b6001915050610533565b60ff8411156104e0576104e061043a565b50506001821b610533565b5060208310610133831016604e8410600b841016171561050e575081810a610533565b61051b6000198484610450565b806000190482111561052f5761052f61043a565b0290505b92915050565b60006105458383610493565b9392505050565b80820281158282048414176105335761053361043a565b6115df806105726000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638456cb5911610104578063a9059cbb116100a2578063dd46706411610071578063dd467064146103d3578063dd62ed3e146103e6578063f2fde38b1461041f578063fce589d81461043257600080fd5b8063a9059cbb14610391578063c492f046146103a4578063cf820461146103b7578063d73dd623146103c057600080fd5b8063914eb66a116100de578063914eb66a1461035657806395d89b411461035e5780639fa4510214610366578063a69df4b51461038957600080fd5b80638456cb5914610328578063875ae990146103305780638da5cb5b1461034357600080fd5b80635342acb41161017c578063661884631161014b57806366188463146102ae57806370a08231146102c1578063794be707146102ea5780637b7e8bac146102fd57600080fd5b80635342acb414610270578063557ed1ba146102935780635c975abb14610299578063602bc62b146102a657600080fd5b806323b872dd116101b857806323b872dd14610237578063313ce5671461024a5780633f4ba83a1461025357806342966c681461025d57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e761043b565b6040516101f4919061124b565b60405180910390f35b61021061020b3660046112b5565b6104c9565b60405190151581526020016101f4565b61022960035481565b6040519081526020016101f4565b6102106102453660046112df565b610536565b610229600e5481565b61025b6105a0565b005b61025b61026b36600461131c565b6105df565b61021061027e366004611335565b60046020526000908152604090205460ff1681565b42610229565b6007546102109060ff1681565b600b54610229565b6102106102bc3660046112b5565b6105ec565b6102296102cf366004611335565b6001600160a01b031660009081526008602052604090205490565b61025b6102f8366004611360565b6106d4565b600254610310906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b61025b610729565b61025b61033e366004611393565b610762565b600954610310906001600160a01b031681565b61025b6107b6565b6101e7610818565b610210610374366004611335565b60066020526000908152604090205460ff1681565b61025b610825565b61021061039f3660046112b5565b610947565b61025b6103b23660046113c8565b61095e565b61022960005481565b6102106103ce3660046112b5565b6109f5565b61025b6103e136600461131c565b610a7a565b6102296103f4366004611445565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b61025b61042d366004611335565b610aff565b61022960015481565b600c80546104489061146f565b80601f01602080910402602001604051908101604052809291908181526020018280546104749061146f565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105249086815260200190565b60405180910390a35060015b92915050565b6000610543848484610bd8565b506001600160a01b03841660009081526005602090815260408083203384529091529020546105729083610ebc565b6001600160a01b03851660009081526005602090815260408083203384529091529020555060019392505050565b6009546001600160a01b031633146105d35760405162461bcd60e51b81526004016105ca906114a9565b60405180910390fd5b6007805460ff19169055565b6105e93382610f1f565b50565b3360009081526005602090815260408083206001600160a01b038616845290915281205480831115610641573360009081526005602090815260408083206001600160a01b0388168452909152812055610670565b61064b8184610ebc565b3360009081526005602090815260408083206001600160a01b03891684529091529020555b3360008181526005602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6009546001600160a01b031633146106fe5760405162461bcd60e51b81526004016105ca906114a9565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6009546001600160a01b031633146107535760405162461bcd60e51b81526004016105ca906114a9565b6007805460ff19166001179055565b6009546001600160a01b0316331461078c5760405162461bcd60e51b81526004016105ca906114a9565b600092909255600155600280546001600160a01b0319166001600160a01b03909216919091179055565b6009546001600160a01b031633146107e05760405162461bcd60e51b81526004016105ca906114a9565b6009546040516000916001600160a01b03169060008051602061156a833981519152908390a3600980546001600160a01b0319169055565b600d80546104489061146f565b600a546001600160a01b031633146108915760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c653a2063616c6c6572206973206e6f742074686520707265766960448201526837bab99037bbb732b960b91b60648201526084016105ca565b600b5442116108f65760405162461bcd60e51b815260206004820152602b60248201527f4f776e61626c653a20636f6e7472616374206973206c6f636b65642c2074696d60448201526a065206973206e6f742075760ac1b60648201526084016105ca565b600a546009546040516001600160a01b03928316929091169060008051602061156a83398151915290600090a3600a54600980546001600160a01b0319166001600160a01b03909216919091179055565b6000610954338484610bd8565b5060019392505050565b6009546001600160a01b031633146109885760405162461bcd60e51b81526004016105ca906114a9565b60005b828110156109ef5781600460008686858181106109aa576109aa6114de565b90506020020160208101906109bf9190611335565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905560010161098b565b50505050565b3360009081526005602090815260408083206001600160a01b0386168452909152812054610a23908361104d565b3360008181526005602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610524565b6009546001600160a01b03163314610aa45760405162461bcd60e51b81526004016105ca906114a9565b60098054600a80546001600160a01b03199081166001600160a01b03841617909155169055610ad3814261150a565b600b556009546040516000916001600160a01b03169060008051602061156a833981519152908390a350565b6009546001600160a01b03163314610b295760405162461bcd60e51b81526004016105ca906114a9565b6001600160a01b038116610b8e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ca565b6009546040516001600160a01b0380841692169060008051602061156a83398151915290600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831660009081526006602052604081205460ff1615610c4d5760405162461bcd60e51b8152602060048201526024808201527f5374616e64617264546f6b656e3a2073656e64657220697320626c61636b6c696044820152631cdd195960e21b60648201526084016105ca565b6001600160a01b038316610cb75760405162461bcd60e51b815260206004820152602b60248201527f5374616e64617264546f6b656e3a207472616e7366657220746f20746865207a60448201526a65726f206164647265737360a81b60648201526084016105ca565b6001600160a01b038416600090815260086020526040902054821115610d365760405162461bcd60e51b815260206004820152602e60248201527f5374616e64617264546f6b656e3a207472616e7366657220616d6f756e74206560448201526d7863656564732062616c616e636560901b60648201526084016105ca565b6001600160a01b03841660009081526004602052604090205460ff16158015610d7857506001600160a01b03831660009081526004602052604090205460ff16155b15610dbc5760075460ff1615610dbc5760405162461bcd60e51b81526020600482015260096024820152681b9bdd081cdd185c9d60ba1b60448201526064016105ca565b6001600160a01b038416600090815260086020526040902054610ddf9083610ebc565b6001600160a01b038516600090815260086020908152604080832093909355600490529081205460ff1680610e2c57506001600160a01b03841660009081526004602052604090205460ff165b610e3f57610e3a8584611059565b610e41565b825b6001600160a01b038516600090815260086020526040902054909150610e67908261104d565b6001600160a01b03808616600081815260086020526040908190209390935591519087169060008051602061158a83398151915290610ea99085815260200190565b60405180910390a3506001949350505050565b600082821115610f0e5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016105ca565b610f18828461151d565b9392505050565b6001600160a01b038216600090815260086020526040902054811115610f965760405162461bcd60e51b815260206004820152602660248201527f436f696e546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ca565b6001600160a01b03821660009081526008602052604081208054839290610fbe90849061151d565b925050819055508060036000828254610fd7919061151d565b90915550506040518181526001600160a01b038316907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a26040518181526000906001600160a01b0384169060008051602061158a8339815191529060200160405180910390a35050565b6000610f18828461150a565b600154600090819081901561108b576110886064611082600154876111e490919063ffffffff16565b906111f0565b90505b600054156110b0576110ad6064611082600054876111e490919063ffffffff16565b91505b8115611129576002546001600160a01b03166000908152600860205260409020546110db908361104d565b600280546001600160a01b039081166000908152600860209081526040918290209490945591549151858152918116929088169160008051602061158a833981519152910160405180910390a35b80156111c7576000805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c754611164908261104d565b600080805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7919091556040516001600160a01b0387169060008051602061158a833981519152906111be9085815260200190565b60405180910390a35b6111db6111d4838361104d565b8590610ebc565b95945050505050565b6000610f188284611530565b60008082116112415760405162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f00000000000060448201526064016105ca565b610f188284611547565b602081526000825180602084015260005b81811015611279576020818601810151604086840101520161125c565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146112b057600080fd5b919050565b600080604083850312156112c857600080fd5b6112d183611299565b946020939093013593505050565b6000806000606084860312156112f457600080fd5b6112fd84611299565b925061130b60208501611299565b929592945050506040919091013590565b60006020828403121561132e57600080fd5b5035919050565b60006020828403121561134757600080fd5b610f1882611299565b803580151581146112b057600080fd5b6000806040838503121561137357600080fd5b61137c83611299565b915061138a60208401611350565b90509250929050565b6000806000606084860312156113a857600080fd5b83359250602084013591506113bf60408501611299565b90509250925092565b6000806000604084860312156113dd57600080fd5b833567ffffffffffffffff8111156113f457600080fd5b8401601f8101861361140557600080fd5b803567ffffffffffffffff81111561141c57600080fd5b8660208260051b840101111561143157600080fd5b6020918201945092506113bf908501611350565b6000806040838503121561145857600080fd5b61146183611299565b915061138a60208401611299565b600181811c9082168061148357607f821691505b6020821081036114a357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610530576105306114f4565b81810381811115610530576105306114f4565b8082028115828204841417610530576105306114f4565b60008261156457634e487b7160e01b600052601260045260246000fd5b50049056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122037e5706b9e4fa7f223535eb642229077443956edeeb0980c731f131be73a300164736f6c634300081e0033";

type CoinTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinToken__factory extends ContractFactory {
  constructor(...args: CoinTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _supply: BigNumberish,
    _txFee: BigNumberish,
    _burnFee: BigNumberish,
    _FeeAddress: AddressLike,
    tokenOwner: AddressLike,
    service: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _supply,
      _txFee,
      _burnFee,
      _FeeAddress,
      tokenOwner,
      service,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _supply: BigNumberish,
    _txFee: BigNumberish,
    _burnFee: BigNumberish,
    _FeeAddress: AddressLike,
    tokenOwner: AddressLike,
    service: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _supply,
      _txFee,
      _burnFee,
      _FeeAddress,
      tokenOwner,
      service,
      overrides || {}
    ) as Promise<
      CoinToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CoinToken__factory {
    return super.connect(runner) as CoinToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinTokenInterface {
    return new Interface(_abi) as CoinTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CoinToken {
    return new Contract(address, _abi, runner) as unknown as CoinToken;
  }
}
