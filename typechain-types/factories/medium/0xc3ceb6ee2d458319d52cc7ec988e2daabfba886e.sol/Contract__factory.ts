/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../medium/0xc3ceb6ee2d458319d52cc7ec988e2daabfba886e.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notBot",
        type: "address",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot38",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526017600755601760085560006009556000600a55600e600b556014600c556003600d556000600e556000600f556009600a620000419190620004ea565b62000052906401f580664062000502565b601055620000636009600a620004ea565b62000074906401f580664062000502565b601155620000856009600a620004ea565b620000959063fac0332062000502565b601255620000a66009600a620004ea565b620000b69063fac0332062000502565b6013556015805462ffffff60a81b1916905560006016819055601781905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b03191633179055620001336009600a620004ea565b62000144906461f313f88062000502565b3060009081526001602081905260408220929092556003906200016f6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530808252600385528382208054871660019081179091556006549093168252928120805486168317905560049093527fbc48d0b18b37d802eb6f16293b7c4673b63f4ce21f23256f585e771461ac6b0a80548516821790557f2ad68f6a04de56af63ca8049466ef5d841eaf2f483dc2b5e2940c09fab2e492780548516821790557fded10936f8187872bef98760eef728ce7eab5cfa94bae4c9994f051fde554ceb80548516821790557f3e18ed82e212e39a1271e0a731492610e1bd67b81fad35038cf403e495ac050480548516821790557f6a109cbb292b6b629a40b210cb367eb26f9eeddc1d2cb1aa9692cfa1b83d375980548516821790557fdd76867d6b711dfe60c36d67864418df7aa840549d9629570dece4607288ed1480548516821790557fbf6df302f629cdc467883a6ffd1ae27421bdd85144141e48d39f2f353d6d54eb80548516821790557fdef22fb6e693f382c0f91c4569b23bdd7018766364193cdd774a5aa600c1b44280548516821790557fb8440265b3e418917c7b6a6210451dddc551740fbed1ac51c829824f93033869805485168217905573e2dd16c9d9eb27b9d341d49600dd84e24bd208c583527f633df843529d8557624c113bc57c3ce9752df1b8e012fc7814254234dfd80d1a8054909416179092557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003ad6009600a620004ea565b620003be906461f313f88062000502565b60405190815260200160405180910390a36200051c565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200042c578160001904821115620004105762000410620003d5565b808516156200041e57918102915b93841c9390800290620003f0565b509250929050565b6000826200044557506001620004e4565b816200045457506000620004e4565b81600181146200046d5760028114620004785762000498565b6001915050620004e4565b60ff8411156200048c576200048c620003d5565b50506001821b620004e4565b5060208310610133831016604e8410600b8410161715620004bd575081810a620004e4565b620004c98383620003eb565b8060001904821115620004e057620004e0620003d5565b0290505b92915050565b6000620004fb60ff84168362000434565b9392505050565b8082028115828204841417620004e457620004e4620003d5565b611dad806200052c6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d15780638f9a55c01161008a578063bf474bed11610064578063bf474bed14610443578063c9567bf914610459578063dd62ed3e1461046e578063ec1f3f63146104b457600080fd5b80638f9a55c0146103db57806395d89b41146103f1578063a9059cbb1461042357600080fd5b806370a082311461031d578063715018a614610353578063751039fc146103685780637d1db4a51461037d5780638cd4426d146103935780638da5cb5b146103b357600080fd5b8063313ce56711610123578063313ce5671461025e5780634c8afff41461027a57806351bc3c851461029a57806356ec63a5146102af5780635f469370146102cf5780636fc3eaec1461030857600080fd5b806306fdde0314610176578063095ea7b3146101be5780630faee56f146101ee578063109daa991461021257806318160ddd1461022957806323b872dd1461023e57600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5060408051808201909152600d81526c27a3902a292aa6a81021a7a4a760991b60208201525b6040516101b5919061194a565b60405180910390f35b3480156101ca57600080fd5b506101de6101d93660046119ae565b6104d4565b60405190151581526020016101b5565b3480156101fa57600080fd5b5061020460135481565b6040519081526020016101b5565b34801561021e57600080fd5b506102276104eb565b005b34801561023557600080fd5b5061020461055b565b34801561024a57600080fd5b506101de6102593660046119da565b61057d565b34801561026a57600080fd5b50604051600981526020016101b5565b34801561028657600080fd5b50610227610295366004611a1b565b6105e6565b3480156102a657600080fd5b50610227610631565b3480156102bb57600080fd5b506102276102ca366004611a1b565b610684565b3480156102db57600080fd5b506101de6102ea366004611a1b565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561031457600080fd5b506102276106d2565b34801561032957600080fd5b50610204610338366004611a1b565b6001600160a01b031660009081526001602052604090205490565b34801561035f57600080fd5b506102276106ff565b34801561037457600080fd5b50610227610773565b34801561038957600080fd5b5061020460105481565b34801561039f57600080fd5b506102276103ae3660046119ae565b610830565b3480156103bf57600080fd5b506000546040516001600160a01b0390911681526020016101b5565b3480156103e757600080fd5b5061020460115481565b3480156103fd57600080fd5b506040805180820190915260098152682a292aa6a821a7a4a760b91b60208201526101a8565b34801561042f57600080fd5b506101de61043e3660046119ae565b610953565b34801561044f57600080fd5b5061020460125481565b34801561046557600080fd5b50610227610960565b34801561047a57600080fd5b50610204610489366004611a38565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104c057600080fd5b506102276104cf366004611a71565b610d1f565b60006104e1338484610d66565b5060015b92915050565b6000546001600160a01b0316331461051e5760405162461bcd60e51b815260040161051590611a8a565b60405180910390fd5b6000600e8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105696009600a611bb9565b610578906461f313f880611bc8565b905090565b600061058a848484610e8a565b6105dc84336105d785604051806060016040528060288152602001611d50602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906115ad565b610d66565b5060019392505050565b6000546001600160a01b031633146106105760405162461bcd60e51b815260040161051590611a8a565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6006546001600160a01b0316336001600160a01b03161461065157600080fd5b30600090815260016020526040902054801561067057610670816115e7565b4780156106805761068081611761565b5050565b6000546001600160a01b031633146106ae5760405162461bcd60e51b815260040161051590611a8a565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6006546001600160a01b0316336001600160a01b0316146106f257600080fd5b476106fc81611761565b50565b6000546001600160a01b031633146107295760405162461bcd60e51b815260040161051590611a8a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461079d5760405162461bcd60e51b815260040161051590611a8a565b6107a96009600a611bb9565b6107b8906461f313f880611bc8565b6010556107c76009600a611bb9565b6107d6906461f313f880611bc8565b6011556015805460ff60b81b191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6108136009600a611bb9565b610822906461f313f880611bc8565b604051908152602001610551565b6006546001600160a01b0316336001600160a01b03161461085057600080fd5b6040516370a0823160e01b81523060048201526000906108d4906064906108ce9085906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190611bdf565b9061179b565b90611824565b60065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af1158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190611bf8565b50505050565b60006104e1338484610e8a565b6000546001600160a01b0316331461098a5760405162461bcd60e51b815260040161051590611a8a565b601554600160a01b900460ff16156109e45760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610515565b601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155610a2e903090610a1f6009600a611bb9565b6105d7906461f313f880611bc8565b601460009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611c1a565b6001600160a01b031663c9c6539630601460009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611c1a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c9190611c1a565b601580546001600160a01b039283166001600160a01b03199091161790556014541663f305d7194730610be4816001600160a01b031660009081526001602052604090205490565b600080610bf96000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c61573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c869190611c37565b505060155460145460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190611bf8565b506015805463ffff00ff60a01b1916630101000160a01b179055565b6006546001600160a01b0316336001600160a01b031614610d3f57600080fd5b6009548111158015610d535750600a548111155b610d5c57600080fd5b6009819055600a55565b6001600160a01b038316610dc85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610515565b6001600160a01b038216610e295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610515565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610eee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610515565b6001600160a01b038216610f505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610515565b60008111610fb25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610515565b600080546001600160a01b03858116911614801590610fdf57506000546001600160a01b03848116911614155b1561146a576001600160a01b03841660009081526004602052604090205460ff1615801561102657506001600160a01b03831660009081526004602052604090205460ff16155b801561104257503260009081526004602052604090205460ff16155b61104b57600080fd5b601554600160b81b900460ff1615611151576000546001600160a01b0384811691161480159061108957506014546001600160a01b03848116911614155b80156110a357506015546001600160a01b03848116911614155b156111515732600090815260056020526040902054431161113e5760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a401610515565b3260009081526005602052604090204390555b600f546000036111845761118160646108ce600b54600f54116111765760075461117a565b6009545b859061179b565b90505b600f54156111a9576111a660646108ce600e548561179b90919063ffffffff16565b90505b6015546001600160a01b0385811691161480156111d457506014546001600160a01b03848116911614155b80156111f957506001600160a01b03831660009081526003602052604090205460ff16155b156112fe576010548211156112505760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610515565b60115482611273856001600160a01b031660009081526001602052604090205490565b61127d9190611c65565b11156112cb5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610515565b6112e660646108ce600b54600f54116111765760075461117a565b600f805491925060006112f883611c78565b91905055505b6015546001600160a01b03848116911614801561132457506001600160a01b0384163014155b156113515761134e60646108ce600c54600f54116113445760085461117a565b600a54859061179b565b90505b30600090815260016020526040902054601554600160a81b900460ff1615801561138857506015546001600160a01b038581169116145b801561139d5750601554600160b01b900460ff165b80156113aa575060125481115b80156113b95750600d54600f54115b15611468576017544311156113ce5760006016555b6003601654106114205760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610515565b61143d6114388461143384601354611866565b611866565b6115e7565b47801561144d5761144d47611761565b6016805490600061145d83611c78565b909155505043601755505b505b80156114e4573060009081526001602052604090205461148a908261187b565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114db9085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461150790836118da565b6001600160a01b03851660009081526001602052604090205561154c61152d83836118da565b6001600160a01b0385166000908152600160205260409020549061187b565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61159685856118da565b60405190815260200160405180910390a350505050565b600081848411156115d15760405162461bcd60e51b8152600401610515919061194a565b5060006115de8486611c91565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061162f5761162f611ca4565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac9190611c1a565b816001815181106116bf576116bf611ca4565b6001600160a01b0392831660209182029290920101526014546116e59130911684610d66565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac9479061171e908590600090869030904290600401611cba565b600060405180830381600087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6006546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610680573d6000803e3d6000fd5b6000826000036117ad575060006104e5565b60006117b98385611bc8565b9050826117c68583611d2d565b1461181d5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610515565b9392505050565b600061181d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061191c565b6000818311611875578261181d565b50919050565b6000806118888385611c65565b90508381101561181d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610515565b600061181d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115ad565b6000818361193d5760405162461bcd60e51b8152600401610515919061194a565b5060006115de8486611d2d565b60006020808352835180602085015260005b818110156119785785810183015185820160400152820161195c565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106fc57600080fd5b600080604083850312156119c157600080fd5b82356119cc81611999565b946020939093013593505050565b6000806000606084860312156119ef57600080fd5b83356119fa81611999565b92506020840135611a0a81611999565b929592945050506040919091013590565b600060208284031215611a2d57600080fd5b813561181d81611999565b60008060408385031215611a4b57600080fd5b8235611a5681611999565b91506020830135611a6681611999565b809150509250929050565b600060208284031215611a8357600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b10578160001904821115611af657611af6611abf565b80851615611b0357918102915b93841c9390800290611ada565b509250929050565b600082611b27575060016104e5565b81611b34575060006104e5565b8160018114611b4a5760028114611b5457611b70565b60019150506104e5565b60ff841115611b6557611b65611abf565b50506001821b6104e5565b5060208310610133831016604e8410600b8410161715611b93575081810a6104e5565b611b9d8383611ad5565b8060001904821115611bb157611bb1611abf565b029392505050565b600061181d60ff841683611b18565b80820281158282048414176104e5576104e5611abf565b600060208284031215611bf157600080fd5b5051919050565b600060208284031215611c0a57600080fd5b8151801515811461181d57600080fd5b600060208284031215611c2c57600080fd5b815161181d81611999565b600080600060608486031215611c4c57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104e5576104e5611abf565b600060018201611c8a57611c8a611abf565b5060010190565b818103818111156104e5576104e5611abf565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d0c5784516001600160a01b031683529383019391830191600101611ce7565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d4a57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220398651bbc1cbb40556aad4fbf8c4c9f3ef59be09722bfc2e11ad5ad455b6595c64736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
