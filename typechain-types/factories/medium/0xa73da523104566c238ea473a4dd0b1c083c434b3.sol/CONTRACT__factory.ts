/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CONTRACT,
  CONTRACTInterface,
} from "../../../medium/0xa73da523104566c238ea473a4dd0b1c083c434b3.sol/CONTRACT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "extraForm",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "firstForm",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d17380380610d1783398101604081905261002f9161017f565b600061003b8582610291565b5060016100488482610291565b506002805460ff191660ff841690811790915561006690600a61044e565b6100709082610461565b600381905533600081815260046020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050610478565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100ed57600080fd5b81516001600160401b03811115610106576101066100c6565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610134576101346100c6565b60405281815283820160200185101561014c57600080fd5b60005b8281101561016b5760208186018101518383018201520161014f565b506000918101602001919091529392505050565b6000806000806080858703121561019557600080fd5b84516001600160401b038111156101ab57600080fd5b6101b7878288016100dc565b602087015190955090506001600160401b038111156101d557600080fd5b6101e1878288016100dc565b935050604085015160ff811681146101f857600080fd5b6060959095015193969295505050565b600181811c9082168061021c57607f821691505b60208210810361023c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028c57806000526020600020601f840160051c810160208510156102695750805b601f840160051c820191505b818110156102895760008155600101610275565b50505b505050565b81516001600160401b038111156102aa576102aa6100c6565b6102be816102b88454610208565b84610242565b6020601f8211600181146102f257600083156102da5750848201515b600019600385901b1c1916600184901b178455610289565b600084815260208120601f198516915b828110156103225787850151825560209485019460019092019101610302565b50848210156103405786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103a0578085048111156103845761038461034f565b600184161561039257908102905b60019390931c928002610369565b935093915050565b6000826103b757506001610448565b816103c457506000610448565b81600181146103da57600281146103e457610400565b6001915050610448565b60ff8411156103f5576103f561034f565b50506001821b610448565b5060208310610133831016604e8410600b8410161715610423575081810a610448565b6104306000198484610365565b80600019048211156104445761044461034f565b0290505b92915050565b600061045a83836103a8565b9392505050565b80820281158282048414176104485761044861034f565b610890806104876000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633bd12bcd116100715780633bd12bcd1461013857806370a082311461014b57806395d89b411461016b578063a9059cbb14610173578063caddb59914610186578063dd62ed3e1461019957600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610106578063313ce56714610119575b600080fd5b6100b66101c4565b6040516100c39190610605565b60405180910390f35b6100df6100da36600461066f565b610252565b60405190151581526020016100c3565b6100f860035481565b6040519081526020016100c3565b6100df610114366004610699565b6102bf565b6002546101269060ff1681565b60405160ff90911681526020016100c3565b6100f86101463660046106d6565b6104f7565b6100f86101593660046106ef565b60046020526000908152604090205481565b6100b6610505565b6100df61018136600461066f565b610512565b6100f86101943660046106d6565b6105f7565b6100f86101a7366004610711565b600560209081526000928352604080842090915290825290205481565b600080546101d190610744565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd90610744565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102ad9086815260200190565b60405180910390a35060015b92915050565b60006001600160a01b03841661032a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084015b60405180910390fd5b6001600160a01b0383166103505760405162461bcd60e51b81526004016103219061077e565b6001600160a01b0384166000908152600460205260409020548211156103885760405162461bcd60e51b8152600401610321906107c1565b6001600160a01b038416600090815260056020908152604080832033845290915290205482111561040c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610321565b6001600160a01b0384166000908152600460205260408120805484929061043490849061081d565b90915550506001600160a01b03831660009081526004602052604081208054849290610461908490610830565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061049990849061081d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104e591815260200190565b60405180910390a35060019392505050565b60006102b9826107ea610843565b600180546101d190610744565b60006001600160a01b03831661053a5760405162461bcd60e51b81526004016103219061077e565b336000908152600460205260409020548211156105695760405162461bcd60e51b8152600401610321906107c1565b336000908152600460205260408120805484929061058890849061081d565b90915550506001600160a01b038316600090815260046020526040812080548492906105b5908490610830565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102ad565b60006102b9826107eb610843565b602081526000825180602084015260005b818110156106335760208186018101516040868401015201610616565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461066a57600080fd5b919050565b6000806040838503121561068257600080fd5b61068b83610653565b946020939093013593505050565b6000806000606084860312156106ae57600080fd5b6106b784610653565b92506106c560208501610653565b929592945050506040919091013590565b6000602082840312156106e857600080fd5b5035919050565b60006020828403121561070157600080fd5b61070a82610653565b9392505050565b6000806040838503121561072457600080fd5b61072d83610653565b915061073b60208401610653565b90509250929050565b600181811c9082168061075857607f821691505b60208210810361077857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102b9576102b9610807565b808201808211156102b9576102b9610807565b80820281158282048414176102b9576102b961080756fea26469706673582212209d8587fc151d22a4b0d10e29ed0e0a876bc9922a19bbe9e7eb999b330924c74064736f6c634300081e0033";

type CONTRACTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CONTRACTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CONTRACT__factory extends ContractFactory {
  constructor(...args: CONTRACTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CONTRACT> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    ) as Promise<CONTRACT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): CONTRACT {
    return super.attach(address) as CONTRACT;
  }
  override connect(signer: Signer): CONTRACT__factory {
    return super.connect(signer) as CONTRACT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CONTRACTInterface {
    return new utils.Interface(_abi) as CONTRACTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CONTRACT {
    return new Contract(address, _abi, signerOrProvider) as CONTRACT;
  }
}
