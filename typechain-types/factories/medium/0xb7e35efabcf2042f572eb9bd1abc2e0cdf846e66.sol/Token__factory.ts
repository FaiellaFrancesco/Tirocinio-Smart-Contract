/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xb7e35efabcf2042f572eb9bd1abc2e0cdf846e66.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_HOMEAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b9190610281565b61004990633b9aca00610297565b61005391906102ae565b600e556000600f8190556127106010556012805461ffff60a81b191690556013819055601481905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905561010f6009600a610281565b61011d90633b9aca00610297565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61015e6009600a610281565b61016c90633b9aca00610297565b60405190815260200160405180910390a36102d0565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101d3578085048111156101b7576101b7610182565b60018416156101c557908102905b60019390931c92800261019c565b935093915050565b6000826101ea5750600161027b565b816101f75750600061027b565b816001811461020d576002811461021757610233565b600191505061027b565b60ff84111561022857610228610182565b50506001821b61027b565b5060208310610133831016604e8410600b8410161715610256575081810a61027b565b6102636000198484610198565b806000190482111561027757610277610182565b0290505b92915050565b600061029060ff8416836101db565b9392505050565b808202811582820484141761027b5761027b610182565b6000826102cb57634e487b7160e01b600052601260045260246000fd5b500490565b6119fc806102df6000396000f3fe60806040526004361061010d5760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102d2578063a9059cbb146102ff578063d02c93831461031f578063dd62ed3e14610334578063f5f674311461037a57600080fd5b806370a082311461024a578063715018a614610280578063751039fc146102955780638da5cb5b146102aa57600080fd5b806320800a00116100dc57806320800a00146101cb57806323b872dd146101e2578063313ce567146102025780633362c7e91461021e5780636482c89a1461023457600080fd5b806306fdde0314610119578063095ea7b3146101625780630faee56f1461019257806318160ddd146101b657600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152600e81526d486f757365204f66204d656d657360901b60208201525b60405161015991906114b7565b60405180910390f35b34801561016e57600080fd5b5061018261017d36600461151a565b61039a565b6040519015158152602001610159565b34801561019e57600080fd5b506101a8600e5481565b604051908152602001610159565b3480156101c257600080fd5b506101a86103b1565b3480156101d757600080fd5b506101e06103d2565b005b3480156101ee57600080fd5b506101826101fd366004611546565b610441565b34801561020e57600080fd5b5060405160098152602001610159565b34801561022a57600080fd5b506101a860105481565b34801561024057600080fd5b506101a8600f5481565b34801561025657600080fd5b506101a8610265366004611587565b6001600160a01b031660009081526001602052604090205490565b34801561028c57600080fd5b506101e06104f1565b3480156102a157600080fd5b506101e0610565565b3480156102b657600080fd5b506000546040516001600160a01b039091168152602001610159565b3480156102de57600080fd5b50604080518082019091526004815263484f4d4560e01b602082015261014c565b34801561030b57600080fd5b5061018261031a36600461151a565b610591565b34801561032b57600080fd5b506101e061059e565b34801561034057600080fd5b506101a861034f3660046115a4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561038657600080fd5b506101e0610395366004611587565b610956565b60006103a73384846109ac565b5060015b92915050565b60006103bf6009600a6116da565b6103cd90633b9aca006116e9565b905090565b6000546001600160a01b031633146104055760405162461bcd60e51b81526004016103fc90611700565b60405180910390fd5b6000471161041257600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561043e573d6000803e3d6000fd5b50565b600061044e848484610ad0565b3360009081526003602052604090205460ff1615801561049057506012546001600160a01b038581169116148061049057506001600160a01b03831661dead14155b156104e7576104e784336104e28560405180606001604052806028815260200161199f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f9d565b6109ac565b5060019392505050565b6000546001600160a01b0316331461051b5760405162461bcd60e51b81526004016103fc90611700565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461058f5760405162461bcd60e51b81526004016103fc90611700565b565b60006103a7338484610ad0565b6000546001600160a01b031633146105c85760405162461bcd60e51b81526004016103fc90611700565b601254600160a01b900460ff16156106225760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103fc565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561066b90309061065d6009600a6116da565b6104e290633b9aca006116e9565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190611735565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190611735565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d99190611735565b601280546001600160a01b039283166001600160a01b03199091161790556011541663f305d7194730610821816001600160a01b031660009081526001602052604090205490565b6000806108366000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561089e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c39190611752565b50506012805462ff00ff60a01b1981166201000160a01b1790915560115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610932573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e9190611780565b3360009081526003602052604090205460ff1661097257600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b038316610a0e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b038216610a6f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b345760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b038216610b965760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b60008111610bf85760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103fc565b60006001600160a01b0384163014801590610c1c57506001600160a01b0383163014155b15610e3f57601254600160a81b900460ff16610c6157610c5e6064610c5860075460085411610c4d57600554610c51565b6006545b8590610fd7565b90611060565b90505b6012546001600160a01b038581169116148015610c8c57506011546001600160a01b03848116911614155b8015610cb157506001600160a01b03831660009081526003602052604090205460ff16155b8015610ccb57506004546001600160a01b03848116911614155b15610d10574360095414610ce3576000600a55436009555b81600a6000828254610cf591906117a2565b909155505060088054906000610d0a836117b5565b91905055505b6012546001600160a01b038481169116148015610d3657506001600160a01b0384163014155b15610d9157610d436110a2565b600a541080610d5457504360095414155b610d915760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103fc565b30600090815260016020526040902054601254600160a81b900460ff16158015610dc857506012546001600160a01b038581169116145b8015610ddd5750601254600160b01b900460ff165b8015610df757506004546001600160a01b03868116911614155b15610e3d578015610e31576000600e548211610e135781610e17565b600e545b9050610e2f818511610e295784611230565b81611230565b505b47610e3b476113aa565b505b505b6001600160a01b038416600090815260016020526040902054610e6290836113e8565b6001600160a01b038516600090815260016020526040902055610ea7610e8883836113e8565b6001600160a01b0385166000908152600160205260409020549061142a565b6001600160a01b0384166000908152600160205260409020558015610f3a5730600090815260016020526040902054610ee0908261142a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f319085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f97576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f8585856113e8565b60405190815260200160405180910390a35b50505050565b60008184841115610fc15760405162461bcd60e51b81526004016103fc91906114b7565b506000610fce84866117ce565b95945050505050565b600082600003610fe9575060006103ab565b6000610ff583856116e9565b90508261100285836117e1565b146110595760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103fc565b9392505050565b600061105983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611489565b604080516002808252606082018352600092839291906020830190803683375050601154604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611735565b8160008151811061114757611147611819565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061117b5761117b611819565b6001600160a01b03928316602091820292909201015260115460405163d06ca61f60e01b8152600092919091169063d06ca61f906111c79067d02ab486cedc0000908690600401611874565b600060405180830381865afa1580156111e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261120c9190810190611895565b90508060018151811061122157611221611819565b60200260200101519250505090565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061127857611278611819565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f59190611735565b8160018151811061130857611308611819565b6001600160a01b03928316602091820292909201015260115461132e91309116846109ac565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac94790611367908590600090869030904290600401611962565b600060405180830381600087803b15801561138157600080fd5b505af1158015611395573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113e4573d6000803e3d6000fd5b5050565b600061105983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f9d565b60008061143783856117a2565b9050838110156110595760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103fc565b600081836114aa5760405162461bcd60e51b81526004016103fc91906114b7565b506000610fce84866117e1565b602081526000825180602084015260005b818110156114e557602081860181015160408684010152016114c8565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461043e57600080fd5b6000806040838503121561152d57600080fd5b823561153881611505565b946020939093013593505050565b60008060006060848603121561155b57600080fd5b833561156681611505565b9250602084013561157681611505565b929592945050506040919091013590565b60006020828403121561159957600080fd5b813561105981611505565b600080604083850312156115b757600080fd5b82356115c281611505565b915060208301356115d281611505565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561162e57808504811115611612576116126115dd565b600184161561162057908102905b60019390931c9280026115f7565b935093915050565b600082611645575060016103ab565b81611652575060006103ab565b816001811461166857600281146116725761168e565b60019150506103ab565b60ff841115611683576116836115dd565b50506001821b6103ab565b5060208310610133831016604e8410600b84101617156116b1575081810a6103ab565b6116be60001984846115f3565b80600019048211156116d2576116d26115dd565b029392505050565b600061105960ff841683611636565b80820281158282048414176103ab576103ab6115dd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561174757600080fd5b815161105981611505565b60008060006060848603121561176757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561179257600080fd5b8151801515811461105957600080fd5b808201808211156103ab576103ab6115dd565b6000600182016117c7576117c76115dd565b5060010190565b818103818111156103ab576103ab6115dd565b6000826117fe57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561186a5781516001600160a01b0316865260209586019590910190600101611843565b5093949350505050565b82815260406020820152600061188d604083018461182f565b949350505050565b6000602082840312156118a757600080fd5b815167ffffffffffffffff8111156118be57600080fd5b8201601f810184136118cf57600080fd5b805167ffffffffffffffff8111156118e9576118e9611803565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561191657611916611803565b60405291825260208184018101929081018784111561193457600080fd5b6020850194505b838510156119575784518082526020958601959093500161193b565b509695505050505050565b85815284602082015260a06040820152600061198160a083018661182f565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220af6803a35874bd5912c3522e63cf951dcecbf3ecd25baa9dcfef96c85a66490f64736f6c634300081e0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
