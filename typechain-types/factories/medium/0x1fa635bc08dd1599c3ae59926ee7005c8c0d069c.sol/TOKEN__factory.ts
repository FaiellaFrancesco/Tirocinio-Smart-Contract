/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x1fa635bc08dd1599c3ae59926ee7005c8c0d069c.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKNThresAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTradingTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETHfromPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526005805560006006556000600755600060085560006009556002600a556000600b556000600c556009600a610039919061031c565b61004790633b9aca00610332565b600d55600f805461ffff60a81b19168155601055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f36009600a61031c565b61010190633b9aca00610332565b61010c906002610332565b6101169190610349565b3360009081526001602052604090205560646101346009600a61031c565b61014290633b9aca00610332565b61014d906062610332565b6101579190610349565b30600090815260016020526040902055336001600160a01b031660006000805160206119f083398151915260646101906009600a61031c565b61019e90633b9aca00610332565b6101a9906002610332565b6101b39190610349565b60405190815260200160405180910390a33060006000805160206119f083398151915260646101e46009600a61031c565b6101f290633b9aca00610332565b6101fd906062610332565b6102079190610349565b60405190815260200160405180910390a361036b565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026e578085048111156102525761025261021d565b600184161561026057908102905b60019390931c928002610237565b935093915050565b60008261028557506001610316565b8161029257506000610316565b81600181146102a857600281146102b2576102ce565b6001915050610316565b60ff8411156102c3576102c361021d565b50506001821b610316565b5060208310610133831016604e8410600b84101617156102f1575081810a610316565b6102fe6000198484610233565b80600019048211156103125761031261021d565b0290505b92915050565b600061032b60ff841683610276565b9392505050565b80820281158282048414176103165761031661021d565b60008261036657634e487b7160e01b600052601260045260246000fd5b500490565b6116768061037a6000396000f3fe6080604052600436106101025760003560e01c8063715018a6116100955780639639b01d116100645780639639b01d146102c7578063a9059cbb146102dd578063ba2b30da146102fd578063dd62ed3e14610312578063ea414b281461035857600080fd5b8063715018a614610246578063751039fc1461025b5780638da5cb5b1461027057806395d89b411461029857600080fd5b806323b872dd116100d157806323b872dd146101bd578063313ce567146101dd57806348fd35ae146101f957806370a082311461021057600080fd5b806306fdde031461010e578063095ea7b3146101545780630faee56f1461018457806318160ddd146101a857600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600b81526a1a9d5cdd1a58d94d18d85d60aa1b60208201525b60405161014b9190611244565b60405180910390f35b34801561016057600080fd5b5061017461016f3660046112a7565b610378565b604051901515815260200161014b565b34801561019057600080fd5b5061019a600d5481565b60405190815260200161014b565b3480156101b457600080fd5b5061019a61038f565b3480156101c957600080fd5b506101746101d83660046112d3565b6103b0565b3480156101e957600080fd5b506040516009815260200161014b565b34801561020557600080fd5b5061020e610460565b005b34801561021c57600080fd5b5061019a61022b366004611314565b6001600160a01b031660009081526001602052604090205490565b34801561025257600080fd5b5061020e610824565b34801561026757600080fd5b5061020e610898565b34801561027c57600080fd5b506000546040516001600160a01b03909116815260200161014b565b3480156102a457600080fd5b5060408051808201909152600681526518983bb0bd1960d11b602082015261013e565b3480156102d357600080fd5b5061019a60105481565b3480156102e957600080fd5b506101746102f83660046112a7565b6108c4565b34801561030957600080fd5b5061020e6108d1565b34801561031e57600080fd5b5061019a61032d366004611331565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036457600080fd5b5061020e610373366004611314565b610934565b6000610385338484610972565b5060015b92915050565b600061039d6009600a611467565b6103ab90633b9aca00611476565b905090565b60006103bd848484610a96565b3360009081526003602052604090205460ff161580156103ff5750600f546001600160a01b03858116911614806103ff57506001600160a01b03831661dead14155b1561045657610456843361045185604051806060016040528060288152602001611619602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eb8565b610972565b5060019392505050565b6000546001600160a01b031633146104935760405162461bcd60e51b815260040161048a9061148d565b60405180910390fd5b600f54600160a01b900460ff16156104ed5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161048a565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105369030906105286009600a611467565b61045190633b9aca00611476565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad91906114c2565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063391906114c2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a491906114c2565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306106ec816001600160a01b031660009081526001602052604090205490565b6000806107016000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610769573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061078e91906114df565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610821919061150d565b50565b6000546001600160a01b0316331461084e5760405162461bcd60e51b815260040161048a9061148d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108c25760405162461bcd60e51b815260040161048a9061148d565b565b6000610385338484610a96565b6000546001600160a01b031633146108fb5760405162461bcd60e51b815260040161048a9061148d565b6000471161090857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610821573d6000803e3d6000fd5b3360009081526003602052604090205460ff1661095057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109d45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048a565b6001600160a01b038216610a355760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610afa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048a565b6001600160a01b038216610b5c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048a565b60008111610bbe5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161048a565b60006001600160a01b0384163014801590610be257506001600160a01b0383163014155b15610d5a57600f54600160a81b900460ff16610c2757610c246064610c1e60075460085411610c1357600554610c17565b6006545b8590610ef2565b90610f7b565b90505b600f546001600160a01b038581169116148015610c525750600e546001600160a01b03848116911614155b8015610c7757506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9157506004546001600160a01b03848116911614155b15610cac5760088054906000610ca68361152f565b91905055505b30600090815260016020526040902054600f54600160a81b900460ff16158015610ce35750600f546001600160a01b038581169116145b8015610cf85750600f54600160b01b900460ff165b8015610d1257506004546001600160a01b03868116911614155b15610d58578015610d4c576000600d548211610d2e5781610d32565b600d545b9050610d4a818511610d445784610fbd565b81610fbd565b505b47610d5647611137565b505b505b6001600160a01b038416600090815260016020526040902054610d7d9083611175565b6001600160a01b038516600090815260016020526040902055610dc2610da38383611175565b6001600160a01b038516600090815260016020526040902054906111b7565b6001600160a01b0384166000908152600160205260409020558015610e555730600090815260016020526040902054610dfb90826111b7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e4c9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb2576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea08585611175565b60405190815260200160405180910390a35b50505050565b60008184841115610edc5760405162461bcd60e51b815260040161048a9190611244565b506000610ee98486611548565b95945050505050565b600082600003610f0457506000610389565b6000610f108385611476565b905082610f1d858361155b565b14610f745760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161048a565b9392505050565b6000610f7483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611216565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110055761100561157d565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561105e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108291906114c2565b816001815181106110955761109561157d565b6001600160a01b039283166020918202929092010152600e546110bb9130911684610972565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110f4908590600090869030904290600401611593565b600060405180830381600087803b15801561110e57600080fd5b505af1158015611122573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611171573d6000803e3d6000fd5b5050565b6000610f7483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eb8565b6000806111c48385611605565b905083811015610f745760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161048a565b600081836112375760405162461bcd60e51b815260040161048a9190611244565b506000610ee9848661155b565b602081526000825180602084015260005b818110156112725760208186018101516040868401015201611255565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461082157600080fd5b600080604083850312156112ba57600080fd5b82356112c581611292565b946020939093013593505050565b6000806000606084860312156112e857600080fd5b83356112f381611292565b9250602084013561130381611292565b929592945050506040919091013590565b60006020828403121561132657600080fd5b8135610f7481611292565b6000806040838503121561134457600080fd5b823561134f81611292565b9150602083013561135f81611292565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113bb5780850481111561139f5761139f61136a565b60018416156113ad57908102905b60019390931c928002611384565b935093915050565b6000826113d257506001610389565b816113df57506000610389565b81600181146113f557600281146113ff5761141b565b6001915050610389565b60ff8411156114105761141061136a565b50506001821b610389565b5060208310610133831016604e8410600b841016171561143e575081810a610389565b61144b6000198484611380565b806000190482111561145f5761145f61136a565b029392505050565b6000610f7460ff8416836113c3565b80820281158282048414176103895761038961136a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114d457600080fd5b8151610f7481611292565b6000806000606084860312156114f457600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561151f57600080fd5b81518015158114610f7457600080fd5b6000600182016115415761154161136a565b5060010190565b818103818111156103895761038961136a565b60008261157857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115e55783516001600160a01b03168352602093840193909201916001016115be565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103895761038961136a56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122060a5612dfc3ed25145709cf7efad40beb5257c6adeec380b3e54e14fb312aee664736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
