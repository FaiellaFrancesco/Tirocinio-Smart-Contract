/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x39ae6595f070222a9009908f1b0e4219d461f26d.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_mooncat",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118e783398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118e783398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611577806103706000396000f3fe6080604052600436106101025760003560e01c8063751039fc1161009557806398a1f93b1161006457806398a1f93b146102c9578063a9059cbb146102de578063d02c9383146102fe578063dd62ed3e14610313578063f5f674311461035957600080fd5b8063751039fc146102475780638da5cb5b1461025c578063959cbb9d1461028457806395d89b411461029957600080fd5b806323b872dd116100d157806323b872dd146101be578063313ce567146101de57806370a08231146101fa578063715018a61461023057600080fd5b806306fdde031461010e578063095ea7b3146101555780630faee56f1461018557806318160ddd146101a957600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600c81526b135bdbdb881d1a194818d85d60a21b60208201525b60405161014c9190611167565b60405180910390f35b34801561016157600080fd5b506101756101703660046111ca565b610379565b604051901515815260200161014c565b34801561019157600080fd5b5061019b60095481565b60405190815260200161014c565b3480156101b557600080fd5b5061019b610390565b3480156101ca57600080fd5b506101756101d93660046111f6565b6103b1565b3480156101ea57600080fd5b506040516009815260200161014c565b34801561020657600080fd5b5061019b610215366004611237565b6001600160a01b031660009081526001602052604090205490565b34801561023c57600080fd5b5061024561046f565b005b34801561025357600080fd5b506102456104ec565b34801561026857600080fd5b506000546040516001600160a01b03909116815260200161014c565b34801561029057600080fd5b50610245610518565b3480156102a557600080fd5b506040805180820190915260078152661353d3d390d05560ca1b602082015261013f565b3480156102d557600080fd5b5061019b600a81565b3480156102ea57600080fd5b506101756102f93660046111ca565b61057e565b34801561030a57600080fd5b5061024561058b565b34801561031f57600080fd5b5061019b61032e366004611254565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036557600080fd5b50610245610374366004611237565b610943565b6000610386338484610981565b5060015b92915050565b600061039e6009600a61138a565b6103ac90633b9aca00611399565b905090565b60006103be848484610aa5565b6004546001600160a01b0316331480159061040e5750600b546001600160a01b03858116911614806103fb57506001600160a01b03831661dead14155b8061040e57506001600160a01b03841630145b156104655761046584336104608560405180606001604052806028815260200161151a602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ecd565b610981565b5060019392505050565b6000546001600160a01b031633146104a25760405162461bcd60e51b8152600401610499906113b0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105165760405162461bcd60e51b8152600401610499906113b0565b565b6000546001600160a01b031633146105425760405162461bcd60e51b8152600401610499906113b0565b6000471161054f57600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561057b573d6000803e3d6000fd5b50565b6000610386338484610aa5565b6000546001600160a01b031633146105b55760405162461bcd60e51b8152600401610499906113b0565b600b54600160a01b900460ff161561060f5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610499565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556106589130919061064a9060099061138a565b61046090633b9aca00611399565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf91906113e5565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906113e5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c691906113e5565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d719473061080e816001600160a01b031660009081526001602052604090205490565b6000806108236000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561088b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108b09190611402565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561091f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611430565b3360009081526003602052604090205460ff1661095f57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109e35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610499565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610499565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b095760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610499565b6001600160a01b038216610b6b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610499565b60008111610bcd5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610499565b60006001600160a01b0384163014801590610bf157506001600160a01b0383163014155b15610d6f57600b546001600160a01b038581169116148015610c215750600a546001600160a01b03848116911614155b8015610c4657506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6057506004546001600160a01b03848116911614155b15610c7b5760088054906000610c7583611452565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610cb25750600b546001600160a01b038581169116145b8015610cc75750600b54600160b01b900460ff165b8015610ce157506004546001600160a01b03868116911614155b15610d6d57843b15610d2c5760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610499565b8015610d615760006009548211610d435781610d47565b6009545b9050610d5f818511610d595784610f07565b81610f07565b505b47610d6b47611081565b505b505b6001600160a01b038416600090815260016020526040902054610d9290836110bf565b6001600160a01b038516600090815260016020526040902055610dd7610db883836110bf565b6001600160a01b03851660009081526001602052604090205490611108565b6001600160a01b0384166000908152600160205260409020558015610e6a5730600090815260016020526040902054610e109082611108565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e619085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ec7576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eb585856110bf565b60405190815260200160405180910390a35b50505050565b60008184841115610ef15760405162461bcd60e51b81526004016104999190611167565b506000610efe848661146b565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f4f57610f4f61147e565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc91906113e5565b81600181518110610fdf57610fdf61147e565b6001600160a01b039283166020918202929092010152600a546110059130911684610981565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061103e908590600090869030904290600401611494565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110bb573d6000803e3d6000fd5b5050565b600061110183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ecd565b9392505050565b6000806111158385611506565b9050838110156111015760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610499565b602081526000825180602084015260005b818110156111955760208186018101516040868401015201611178565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461057b57600080fd5b600080604083850312156111dd57600080fd5b82356111e8816111b5565b946020939093013593505050565b60008060006060848603121561120b57600080fd5b8335611216816111b5565b92506020840135611226816111b5565b929592945050506040919091013590565b60006020828403121561124957600080fd5b8135611101816111b5565b6000806040838503121561126757600080fd5b8235611272816111b5565b91506020830135611282816111b5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112de578085048111156112c2576112c261128d565b60018416156112d057908102905b60019390931c9280026112a7565b935093915050565b6000826112f55750600161038a565b816113025750600061038a565b816001811461131857600281146113225761133e565b600191505061038a565b60ff8411156113335761133361128d565b50506001821b61038a565b5060208310610133831016604e8410600b8410161715611361575081810a61038a565b61136e60001984846112a3565b80600019048211156113825761138261128d565b029392505050565b600061110160ff8416836112e6565b808202811582820484141761038a5761038a61128d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113f757600080fd5b8151611101816111b5565b60008060006060848603121561141757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561144257600080fd5b8151801515811461110157600080fd5b6000600182016114645761146461128d565b5060010190565b8181038181111561038a5761038a61128d565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114e65783516001600160a01b03168352602093840193909201916001016114bf565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561038a5761038a61128d56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d5c4381f0abc2bf78bf834f9246a4a81e39ae1b7230c4be795bbb5ddda736e1164736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
