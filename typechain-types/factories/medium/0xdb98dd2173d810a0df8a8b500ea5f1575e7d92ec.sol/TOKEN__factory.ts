/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0xdb98dd2173d810a0df8a8b500ea5f1575e7d92ec.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610317565b61003690633b9aca0061032d565b6100409190610344565b6009556000600a819055600c805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100ee6009600a610317565b6100fc90633b9aca0061032d565b61010790600261032d565b6101119190610344565b33600090815260016020526040902055606461012f6009600a610317565b61013d90633b9aca0061032d565b61014890606261032d565b6101529190610344565b30600090815260016020526040902055336001600160a01b031660006000805160206118fe833981519152606461018b6009600a610317565b61019990633b9aca0061032d565b6101a490600261032d565b6101ae9190610344565b60405190815260200160405180910390a33060006000805160206118fe83398151915260646101df6009600a610317565b6101ed90633b9aca0061032d565b6101f890606261032d565b6102029190610344565b60405190815260200160405180910390a3610366565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102695780850481111561024d5761024d610218565b600184161561025b57908102905b60019390931c928002610232565b935093915050565b60008261028057506001610311565b8161028d57506000610311565b81600181146102a357600281146102ad576102c9565b6001915050610311565b60ff8411156102be576102be610218565b50506001821b610311565b5060208310610133831016604e8410600b84101617156102ec575081810a610311565b6102f9600019848461022e565b806000190482111561030d5761030d610218565b0290505b92915050565b600061032660ff841683610271565b9392505050565b808202811582820484141761031157610311610218565b60008261036157634e487b7160e01b600052601260045260246000fd5b500490565b611589806103756000396000f3fe6080604052600436106101025760003560e01c8063715018a611610095578063959cbb9d11610064578063959cbb9d146102cb57806395d89b41146102e0578063a9059cbb14610310578063dd62ed3e14610330578063fb201b1d1461037657600080fd5b8063715018a614610257578063751039fc1461026e578063798e5036146102835780638da5cb5b146102a357600080fd5b806323b872dd116100d157806323b872dd146101cf578063313ce567146101ef5780636482c89a1461020b57806370a082311461022157600080fd5b806306fdde031461010e578063095ea7b3146101665780630faee56f1461019657806318160ddd146101ba57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152601981527f42616563686965202d20426f6f6368696520277320776966650000000000000060208201525b60405161015d9190611179565b60405180910390f35b34801561017257600080fd5b506101866101813660046111dc565b61038b565b604051901515815260200161015d565b3480156101a257600080fd5b506101ac60095481565b60405190815260200161015d565b3480156101c657600080fd5b506101ac6103a2565b3480156101db57600080fd5b506101866101ea366004611208565b6103c3565b3480156101fb57600080fd5b506040516009815260200161015d565b34801561021757600080fd5b506101ac600a5481565b34801561022d57600080fd5b506101ac61023c366004611249565b6001600160a01b031660009081526001602052604090205490565b34801561026357600080fd5b5061026c610481565b005b34801561027a57600080fd5b5061026c6104fe565b34801561028f57600080fd5b5061026c61029e366004611249565b61052a565b3480156102af57600080fd5b506000546040516001600160a01b03909116815260200161015d565b3480156102d757600080fd5b5061026c610568565b3480156102ec57600080fd5b506040805180820190915260078152664261656368696560c81b6020820152610150565b34801561031c57600080fd5b5061018661032b3660046111dc565b6105ce565b34801561033c57600080fd5b506101ac61034b366004611266565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561038257600080fd5b5061026c6105db565b6000610398338484610993565b5060015b92915050565b60006103b06009600a61139c565b6103be90633b9aca006113ab565b905090565b60006103d0848484610ab7565b6004546001600160a01b031633148015906104205750600c546001600160a01b038581169116148061040d57506001600160a01b03831661dead14155b8061042057506001600160a01b03841630145b156104775761047784336104728560405180606001604052806028815260200161152c602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610edf565b610993565b5060019392505050565b6000546001600160a01b031633146104b45760405162461bcd60e51b81526004016104ab906113c2565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105285760405162461bcd60e51b81526004016104ab906113c2565b565b3360009081526003602052604090205460ff1661054657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105925760405162461bcd60e51b81526004016104ab906113c2565b6000471161059f57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156105cb573d6000803e3d6000fd5b50565b6000610398338484610ab7565b6000546001600160a01b031633146106055760405162461bcd60e51b81526004016104ab906113c2565b600c54600160a01b900460ff161561065f5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ab565b600b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106a890309061069a6009600a61139c565b61047290633b9aca006113ab565b600b60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906113f7565b6001600160a01b031663c9c6539630600b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a591906113f7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081691906113f7565b600c80546001600160a01b039283166001600160a01b0319909116179055600b541663f305d719473061085e816001600160a01b031660009081526001602052604090205490565b6000806108736000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108db573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109009190611414565b5050600c805462ff00ff60a01b1981166201000160a01b17909155600b5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611442565b6001600160a01b0383166109f55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ab565b6001600160a01b038216610a565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ab565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ab565b6001600160a01b038216610b7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ab565b60008111610bdf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ab565b60006001600160a01b0384163014801590610c0357506001600160a01b0383163014155b15610d8157600c546001600160a01b038581169116148015610c335750600b546001600160a01b03848116911614155b8015610c5857506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7257506004546001600160a01b03848116911614155b15610c8d5760088054906000610c8783611464565b91905055505b30600090815260016020526040902054600c54600160a81b900460ff16158015610cc45750600c546001600160a01b038581169116145b8015610cd95750600c54600160b01b900460ff165b8015610cf357506004546001600160a01b03868116911614155b15610d7f57843b15610d3e5760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b60448201526064016104ab565b8015610d735760006009548211610d555781610d59565b6009545b9050610d71818511610d6b5784610f19565b81610f19565b505b47610d7d47611093565b505b505b6001600160a01b038416600090815260016020526040902054610da490836110d1565b6001600160a01b038516600090815260016020526040902055610de9610dca83836110d1565b6001600160a01b0385166000908152600160205260409020549061111a565b6001600160a01b0384166000908152600160205260409020558015610e7c5730600090815260016020526040902054610e22908261111a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e739085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ed9576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ec785856110d1565b60405190815260200160405180910390a35b50505050565b60008184841115610f035760405162461bcd60e51b81526004016104ab9190611179565b506000610f10848661147d565b95945050505050565b600c805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f6157610f61611490565b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde91906113f7565b81600181518110610ff157610ff1611490565b6001600160a01b039283166020918202929092010152600b546110179130911684610993565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110509085906000908690309042906004016114a6565b600060405180830381600087803b15801561106a57600080fd5b505af115801561107e573d6000803e3d6000fd5b5050600c805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110cd573d6000803e3d6000fd5b5050565b600061111383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610edf565b9392505050565b6000806111278385611518565b9050838110156111135760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ab565b602081526000825180602084015260005b818110156111a7576020818601810151604086840101520161118a565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146105cb57600080fd5b600080604083850312156111ef57600080fd5b82356111fa816111c7565b946020939093013593505050565b60008060006060848603121561121d57600080fd5b8335611228816111c7565b92506020840135611238816111c7565b929592945050506040919091013590565b60006020828403121561125b57600080fd5b8135611113816111c7565b6000806040838503121561127957600080fd5b8235611284816111c7565b91506020830135611294816111c7565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112f0578085048111156112d4576112d461129f565b60018416156112e257908102905b60019390931c9280026112b9565b935093915050565b6000826113075750600161039c565b816113145750600061039c565b816001811461132a576002811461133457611350565b600191505061039c565b60ff8411156113455761134561129f565b50506001821b61039c565b5060208310610133831016604e8410600b8410161715611373575081810a61039c565b61138060001984846112b5565b80600019048211156113945761139461129f565b029392505050565b600061111360ff8416836112f8565b808202811582820484141761039c5761039c61129f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561140957600080fd5b8151611113816111c7565b60008060006060848603121561142957600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561145457600080fd5b8151801515811461111357600080fd5b6000600182016114765761147661129f565b5060010190565b8181038181111561039c5761039c61129f565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114f85783516001600160a01b03168352602093840193909201916001016114d1565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561039c5761039c61129f56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212200132070093bfa8f61281b356657d62b90e40cd99b5343925a81a89b08f6dc99864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TOKEN> {
    return super.deploy(overrides || {}) as Promise<TOKEN>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TOKEN {
    return super.attach(address) as TOKEN;
  }
  override connect(signer: Signer): TOKEN__factory {
    return super.connect(signer) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new utils.Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TOKEN {
    return new Contract(address, _abi, signerOrProvider) as TOKEN;
  }
}
