/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xc9ea815861e3bdf6dcc7276b0433cf70d9602061.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueArtemisETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206119d683398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206119d683398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611666806103706000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b411461028a578063a9059cbb146102ba578063dd62ed3e146102da578063ea414b281461032057600080fd5b806370a0823114610202578063715018a6146102385780638a8c523c1461024d5780638da5cb5b1461026257600080fd5b806318160ddd116100c657806318160ddd1461019a57806323b872dd146101af578063313ce567146101cf578063587f4b2a146101eb57600080fd5b806306fdde03146100f8578063095ea7b3146101465780630faee56f1461017657600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506040805180820190915260138152724a75737469636520466f7220417274656d697360681b60208201525b60405161013d9190611234565b60405180910390f35b34801561015257600080fd5b50610166610161366004611297565b610340565b604051901515815260200161013d565b34801561018257600080fd5b5061018c60095481565b60405190815260200161013d565b3480156101a657600080fd5b5061018c610357565b3480156101bb57600080fd5b506101666101ca3660046112c3565b610378565b3480156101db57600080fd5b506040516009815260200161013d565b3480156101f757600080fd5b50610200610436565b005b34801561020e57600080fd5b5061018c61021d366004611304565b6001600160a01b031660009081526001602052604090205490565b34801561024457600080fd5b506102006104a5565b34801561025957600080fd5b50610200610519565b34801561026e57600080fd5b506000546040516001600160a01b03909116815260200161013d565b34801561029657600080fd5b50604080518082019091526007815266417274656d697360c81b6020820152610130565b3480156102c657600080fd5b506101666102d5366004611297565b6108d1565b3480156102e657600080fd5b5061018c6102f5366004611321565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032c57600080fd5b5061020061033b366004611304565b6108de565b600061034d33848461091c565b5060015b92915050565b60006103656009600a611457565b610373906319133850611466565b905090565b6000610385848484610a40565b6004546001600160a01b031633148015906103d55750600b546001600160a01b03858116911614806103c257506001600160a01b03831661dead14155b806103d557506001600160a01b03841630145b1561042c5761042c843361042785604051806060016040528060288152602001611609602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ea8565b61091c565b5060019392505050565b6000546001600160a01b031633146104695760405162461bcd60e51b81526004016104609061147d565b60405180910390fd5b6000471161047657600080fd5b60405133904780156108fc02916000818181858888f193505050501580156104a2573d6000803e3d6000fd5b50565b6000546001600160a01b031633146104cf5760405162461bcd60e51b81526004016104609061147d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105435760405162461bcd60e51b81526004016104609061147d565b600b54600160a01b900460ff161561059d5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610460565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556105e6913091906105d890600990611457565b610427906319133850611466565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d91906114b2565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e391906114b2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906114b2565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d719473061079c816001600160a01b031660009081526001602052604090205490565b6000806107b16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610819573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061083e91906114cf565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906114fd565b600061034d338484610a40565b3360009081526003602052604090205460ff166108fa57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661097e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610460565b6001600160a01b0382166109df5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610460565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610460565b6001600160a01b038216610b065760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610460565b60008111610b685760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610460565b60006001600160a01b0384163014801590610b8c57506001600160a01b0383163014155b15610d4a57600b54600160a81b900460ff16610bd157610bce6064610bc860075460085411610bbd57600554610bc1565b6006545b8590610ee2565b90610f6b565b90505b600b546001600160a01b038581169116148015610bfc5750600a546001600160a01b03848116911614155b8015610c2157506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3b57506004546001600160a01b03848116911614155b15610c565760088054906000610c508361151f565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c8d5750600b546001600160a01b038581169116145b8015610ca25750600b54600160b01b900460ff165b8015610cbc57506004546001600160a01b03868116911614155b15610d4857843b15610d075760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610460565b8015610d3c5760006009548211610d1e5781610d22565b6009545b9050610d3a818511610d345784610fad565b81610fad565b505b47610d4647611127565b505b505b6001600160a01b038416600090815260016020526040902054610d6d9083611165565b6001600160a01b038516600090815260016020526040902055610db2610d938383611165565b6001600160a01b038516600090815260016020526040902054906111a7565b6001600160a01b0384166000908152600160205260409020558015610e455730600090815260016020526040902054610deb90826111a7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e3c9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ea2576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e908585611165565b60405190815260200160405180910390a35b50505050565b60008184841115610ecc5760405162461bcd60e51b81526004016104609190611234565b506000610ed98486611538565b95945050505050565b600082600003610ef457506000610351565b6000610f008385611466565b905082610f0d858361154b565b14610f645760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610460565b9392505050565b6000610f6483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611206565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ff557610ff561156d565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561104e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107291906114b2565b816001815181106110855761108561156d565b6001600160a01b039283166020918202929092010152600a546110ab913091168461091c565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110e4908590600090869030904290600401611583565b600060405180830381600087803b1580156110fe57600080fd5b505af1158015611112573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611161573d6000803e3d6000fd5b5050565b6000610f6483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ea8565b6000806111b483856115f5565b905083811015610f645760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610460565b600081836112275760405162461bcd60e51b81526004016104609190611234565b506000610ed9848661154b565b602081526000825180602084015260005b818110156112625760208186018101516040868401015201611245565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146104a257600080fd5b600080604083850312156112aa57600080fd5b82356112b581611282565b946020939093013593505050565b6000806000606084860312156112d857600080fd5b83356112e381611282565b925060208401356112f381611282565b929592945050506040919091013590565b60006020828403121561131657600080fd5b8135610f6481611282565b6000806040838503121561133457600080fd5b823561133f81611282565b9150602083013561134f81611282565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113ab5780850481111561138f5761138f61135a565b600184161561139d57908102905b60019390931c928002611374565b935093915050565b6000826113c257506001610351565b816113cf57506000610351565b81600181146113e557600281146113ef5761140b565b6001915050610351565b60ff8411156114005761140061135a565b50506001821b610351565b5060208310610133831016604e8410600b841016171561142e575081810a610351565b61143b6000198484611370565b806000190482111561144f5761144f61135a565b029392505050565b6000610f6460ff8416836113b3565b80820281158282048414176103515761035161135a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114c457600080fd5b8151610f6481611282565b6000806000606084860312156114e457600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561150f57600080fd5b81518015158114610f6457600080fd5b6000600182016115315761153161135a565b5060010190565b818103818111156103515761035161135a565b60008261156857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115d55783516001600160a01b03168352602093840193909201916001016115ae565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103515761035161135a56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212208d4bea8b78c365dc0f968dd8834ab4263dac9265cac498badbe621b19de8b44a64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
