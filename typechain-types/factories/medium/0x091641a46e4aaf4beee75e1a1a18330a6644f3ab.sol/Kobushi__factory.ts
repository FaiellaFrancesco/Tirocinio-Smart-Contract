/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Kobushi,
  KobushiInterface,
} from "../../../medium/0x091641a46e4aaf4beee75e1a1a18330a6644f3ab.sol/Kobushi";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_KobushiThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_Kobushiamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119a88061029c6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806393856e1c1161006457806393856e1c146102c757806395d89b4114610119578063a9059cbb146102dd578063dd62ed3e146102fd578063ea414b281461034357600080fd5b8063751039fc1461025f5780638a8c523c146102745780638da5cb5b146102895780638fa30b2c146102b157600080fd5b806320800a00116100dc57806320800a00146101c157806323b872dd146101d8578063313ce567146101f857806370a0823114610214578063715018a61461024a57600080fd5b806306fdde0314610119578063095ea7b3146101585780630faee56f1461018857806318160ddd146101ac57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201825260078152664b6f627573686960c81b6020820152905161014f9190611463565b60405180910390f35b34801561016457600080fd5b506101786101733660046114c6565b610363565b604051901515815260200161014f565b34801561019457600080fd5b5061019e600c5481565b60405190815260200161014f565b3480156101b857600080fd5b5061019e61037a565b3480156101cd57600080fd5b506101d661039b565b005b3480156101e457600080fd5b506101786101f33660046114f2565b61040a565b34801561020457600080fd5b506040516009815260200161014f565b34801561022057600080fd5b5061019e61022f366004611533565b6001600160a01b031660009081526001602052604090205490565b34801561025657600080fd5b506101d66104b5565b34801561026b57600080fd5b506101d6610529565b34801561028057600080fd5b506101d6610555565b34801561029557600080fd5b506000546040516001600160a01b03909116815260200161014f565b3480156102bd57600080fd5b5061019e600e5481565b3480156102d357600080fd5b5061019e600d5481565b3480156102e957600080fd5b506101786102f83660046114c6565b61090d565b34801561030957600080fd5b5061019e610318366004611550565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034f57600080fd5b506101d661035e366004611533565b61091a565b6000610370338484610958565b5060015b92915050565b60006103886009600a611686565b610396906305f5e100611695565b905090565b6000546001600160a01b031633146103ce5760405162461bcd60e51b81526004016103c5906116ac565b60405180910390fd5b600047116103db57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610407573d6000803e3d6000fd5b50565b6000610417848484610a7c565b6004546001600160a01b0316331480159061045457506010546001600160a01b038581169116148061045457506001600160a01b03831661dead14155b156104ab576104ab84336104a68560405180606001604052806028815260200161194b602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f49565b610958565b5060019392505050565b6000546001600160a01b031633146104df5760405162461bcd60e51b81526004016103c5906116ac565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105535760405162461bcd60e51b81526004016103c5906116ac565b565b6000546001600160a01b0316331461057f5760405162461bcd60e51b81526004016103c5906116ac565b601054600160a01b900460ff16156105d95760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103c5565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106229030906106146009600a611686565b6104a6906305f5e100611695565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069991906116e1565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906116e1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561076c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079091906116e1565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d71947306107d8816001600160a01b031660009081526001602052604090205490565b6000806107ed6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610855573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087a91906116fe565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610407919061172c565b6000610370338484610a7c565b3360009081526003602052604090205460ff1661093657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c5565b6001600160a01b038216610a1b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c5565b6001600160a01b038216610b425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c5565b60008111610ba45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103c5565b60006001600160a01b0384163014801590610bc857506001600160a01b0383163014155b15610deb57601054600160a81b900460ff16610c0d57610c0a6064610c0460075460085411610bf957600554610bfd565b6006545b8590610f83565b9061100c565b90505b6010546001600160a01b038581169116148015610c385750600f546001600160a01b03848116911614155b8015610c5d57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7757506004546001600160a01b03848116911614155b15610cbc574360095414610c8f576000600a55436009555b81600a6000828254610ca1919061174e565b909155505060088054906000610cb683611761565b91905055505b6010546001600160a01b038481169116148015610ce257506001600160a01b0384163014155b15610d3d57610cef61104e565b600a541080610d0057504360095414155b610d3d5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103c5565b30600090815260016020526040902054601054600160a81b900460ff16158015610d7457506010546001600160a01b038581169116145b8015610d895750601054600160b01b900460ff165b8015610da357506004546001600160a01b03868116911614155b15610de9578015610ddd576000600c548211610dbf5781610dc3565b600c545b9050610ddb818511610dd557846111dc565b816111dc565b505b47610de747611356565b505b505b6001600160a01b038416600090815260016020526040902054610e0e9083611394565b6001600160a01b038516600090815260016020526040902055610e53610e348383611394565b6001600160a01b038516600090815260016020526040902054906113d6565b6001600160a01b0384166000908152600160205260409020558015610ee65730600090815260016020526040902054610e8c90826113d6565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610edd9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f43576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f318585611394565b60405190815260200160405180910390a35b50505050565b60008184841115610f6d5760405162461bcd60e51b81526004016103c59190611463565b506000610f7a848661177a565b95945050505050565b600082600003610f9557506000610374565b6000610fa18385611695565b905082610fae858361178d565b146110055760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103c5565b9392505050565b600061100583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611435565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e091906116e1565b816000815181106110f3576110f36117c5565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611127576111276117c5565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611173906729a2241af62c0000908690600401611820565b600060405180830381865afa158015611190573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b89190810190611841565b9050806001815181106111cd576111cd6117c5565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611224576112246117c5565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a191906116e1565b816001815181106112b4576112b46117c5565b6001600160a01b039283166020918202929092010152600f546112da9130911684610958565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061131390859060009086903090429060040161190e565b600060405180830381600087803b15801561132d57600080fd5b505af1158015611341573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611390573d6000803e3d6000fd5b5050565b600061100583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f49565b6000806113e3838561174e565b9050838110156110055760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103c5565b600081836114565760405162461bcd60e51b81526004016103c59190611463565b506000610f7a848661178d565b602081526000825180602084015260005b818110156114915760208186018101516040868401015201611474565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461040757600080fd5b600080604083850312156114d957600080fd5b82356114e4816114b1565b946020939093013593505050565b60008060006060848603121561150757600080fd5b8335611512816114b1565b92506020840135611522816114b1565b929592945050506040919091013590565b60006020828403121561154557600080fd5b8135611005816114b1565b6000806040838503121561156357600080fd5b823561156e816114b1565b9150602083013561157e816114b1565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115da578085048111156115be576115be611589565b60018416156115cc57908102905b60019390931c9280026115a3565b935093915050565b6000826115f157506001610374565b816115fe57506000610374565b8160018114611614576002811461161e5761163a565b6001915050610374565b60ff84111561162f5761162f611589565b50506001821b610374565b5060208310610133831016604e8410600b841016171561165d575081810a610374565b61166a600019848461159f565b806000190482111561167e5761167e611589565b029392505050565b600061100560ff8416836115e2565b808202811582820484141761037457610374611589565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116f357600080fd5b8151611005816114b1565b60008060006060848603121561171357600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173e57600080fd5b8151801515811461100557600080fd5b8082018082111561037457610374611589565b60006001820161177357611773611589565b5060010190565b8181038181111561037457610374611589565b6000826117aa57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118165781516001600160a01b03168652602095860195909101906001016117ef565b5093949350505050565b82815260406020820152600061183960408301846117db565b949350505050565b60006020828403121561185357600080fd5b815167ffffffffffffffff81111561186a57600080fd5b8201601f8101841361187b57600080fd5b805167ffffffffffffffff811115611895576118956117af565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118c2576118c26117af565b6040529182526020818401810192908101878411156118e057600080fd5b6020850194505b83851015611903578451808252602095860195909350016118e7565b509695505050505050565b85815284602082015260a06040820152600061192d60a08301866117db565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122069fefda25ed684f1f0ad374dcb9f3a4a8b5bfbb3525659812dcc3b45a4b7a14b64736f6c634300081e0033";

type KobushiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KobushiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kobushi__factory extends ContractFactory {
  constructor(...args: KobushiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Kobushi> {
    return super.deploy(overrides || {}) as Promise<Kobushi>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Kobushi {
    return super.attach(address) as Kobushi;
  }
  override connect(signer: Signer): Kobushi__factory {
    return super.connect(signer) as Kobushi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KobushiInterface {
    return new utils.Interface(_abi) as KobushiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Kobushi {
    return new Contract(address, _abi, signerOrProvider) as Kobushi;
  }
}
