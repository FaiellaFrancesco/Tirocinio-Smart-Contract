/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BEP20Token,
  BEP20TokenInterface,
} from "../../../medium/0xb80c33bc32d2e19fbe4621e1b0d31c1cb3b69f99.sol/BEP20Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600e81526d526f636b737461722047616d657360901b602082015260069061008490826101c1565b50604080518082019091526005808252642929aa20a960d91b6020830152906100ad90826101c1565b506004805460ff191660121790556c01431e0fae6d7217caa000000060038190553360008181526001602052604080822084905551919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916101159190815260200190565b60405180910390a361027f565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061014c57607f821691505b60208210810361016c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101bc57806000526020600020601f840160051c810160208510156101995750805b601f840160051c820191505b818110156101b957600081556001016101a5565b50505b505050565b81516001600160401b038111156101da576101da610122565b6101ee816101e88454610138565b84610172565b6020601f821160018114610222576000831561020a5750848201515b600019600385901b1c1916600184901b1784556101b9565b600084815260208120601f198516915b828110156102525787850151825560209485019460019092019101610232565b50848210156102705786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610b768061028e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146101f9578063a9059cbb1461020c578063dd62ed3e1461021f578063f2fde38b1461025857600080fd5b8063715018a6146101b1578063893d20e8146101bb5780638da5cb5b146101e057806395d89b41146101f157600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806370a082311461018857600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261026b565b60405161010f9190610938565b60405180910390f35b61012b6101263660046109a2565b6102fd565b604051901515815260200161010f565b6003545b60405190815260200161010f565b61012b61015b3660046109cc565b610314565b60045460405160ff909116815260200161010f565b61012b6101833660046109a2565b61037d565b61013f610196366004610a09565b6001600160a01b031660009081526001602052604090205490565b6101b96103b3565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010f565b6000546001600160a01b03166101c8565b61010261045c565b61012b6102073660046109a2565b61046b565b61012b61021a3660046109a2565b6104ba565b61013f61022d366004610a24565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101b9610266366004610a09565b6104c7565b60606006805461027a90610a57565b80601f01602080910402602001604051908101604052809291908181526020018280546102a690610a57565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b5050505050905090565b600061030a33848461052d565b5060015b92915050565b6000610321848484610652565b610373843361036e85604051806060016040528060288152602001610ace602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906107d8565b61052d565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161030a91859061036e9086610812565b6000546001600160a01b031633146104125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60606005805461027a90610a57565b600061030a338461036e85604051806060016040528060258152602001610b1c602591393360009081526002602090815260408083206001600160a01b038d16845290915290205491906107d8565b600061030a338484610652565b6000546001600160a01b031633146105215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610409565b61052a81610878565b50565b6001600160a01b03831661058f5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610409565b6001600160a01b0382166105f05760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610409565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106b65760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610409565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610409565b61075581604051806060016040528060268152602001610af6602691396001600160a01b03861660009081526001602052604090205491906107d8565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107849082610812565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106459085815260200190565b600081848411156107fc5760405162461bcd60e51b81526004016104099190610938565b5060006108098486610aa7565b95945050505050565b60008061081f8385610aba565b9050838110156108715760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610409565b9392505050565b6001600160a01b0381166108dd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610409565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b602081526000825180602084015260005b818110156109665760208186018101516040868401015201610949565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461099d57600080fd5b919050565b600080604083850312156109b557600080fd5b6109be83610986565b946020939093013593505050565b6000806000606084860312156109e157600080fd5b6109ea84610986565b92506109f860208501610986565b929592945050506040919091013590565b600060208284031215610a1b57600080fd5b61087182610986565b60008060408385031215610a3757600080fd5b610a4083610986565b9150610a4e60208401610986565b90509250929050565b600181811c90821680610a6b57607f821691505b602082108103610a8b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030e5761030e610a91565b8082018082111561030e5761030e610a9156fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c6309b8ddabd47817f8815c298737c071a10ad12ee8fc98b534a9a4ce39aa1d064736f6c634300081e0033";

type BEP20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BEP20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BEP20Token__factory extends ContractFactory {
  constructor(...args: BEP20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BEP20Token> {
    return super.deploy(overrides || {}) as Promise<BEP20Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BEP20Token {
    return super.attach(address) as BEP20Token;
  }
  override connect(signer: Signer): BEP20Token__factory {
    return super.connect(signer) as BEP20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BEP20TokenInterface {
    return new utils.Interface(_abi) as BEP20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BEP20Token {
    return new Contract(address, _abi, signerOrProvider) as BEP20Token;
  }
}
