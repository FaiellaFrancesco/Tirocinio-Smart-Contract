/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Closed4MaxProfitAI,
  Closed4MaxProfitAIInterface,
} from "../../../medium/0xa16a14bb04fffee4ca661d858f18905baa8da027.sol/Closed4MaxProfitAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_Closed4MaxProfitAIThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_Closed4MaxProfitAIamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119b38061029c6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806395d89b411161006457806395d89b4114610119578063a9059cbb146102d2578063dd62ed3e146102f2578063dda73bc914610338578063ea414b281461034e57600080fd5b8063751039fc1461026a5780638a8c523c1461027f5780638da5cb5b14610294578063905abaea146102bc57600080fd5b806320800a00116100dc57806320800a00146101cc57806323b872dd146101e3578063313ce5671461020357806370a082311461021f578063715018a61461025557600080fd5b806306fdde0314610119578063095ea7b3146101635780630faee56f1461019357806318160ddd146101b757600080fd5b3661011457005b600080fd5b34801561012557600080fd5b506040805180820182526012815271436c6f736564344d617850726f666974414960701b6020820152905161015a919061146e565b60405180910390f35b34801561016f57600080fd5b5061018361017e3660046114d1565b61036e565b604051901515815260200161015a565b34801561019f57600080fd5b506101a9600c5481565b60405190815260200161015a565b3480156101c357600080fd5b506101a9610385565b3480156101d857600080fd5b506101e16103a6565b005b3480156101ef57600080fd5b506101836101fe3660046114fd565b610415565b34801561020f57600080fd5b506040516009815260200161015a565b34801561022b57600080fd5b506101a961023a36600461153e565b6001600160a01b031660009081526001602052604090205490565b34801561026157600080fd5b506101e16104c0565b34801561027657600080fd5b506101e1610534565b34801561028b57600080fd5b506101e1610560565b3480156102a057600080fd5b506000546040516001600160a01b03909116815260200161015a565b3480156102c857600080fd5b506101a9600d5481565b3480156102de57600080fd5b506101836102ed3660046114d1565b610918565b3480156102fe57600080fd5b506101a961030d36600461155b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034457600080fd5b506101a9600e5481565b34801561035a57600080fd5b506101e161036936600461153e565b610925565b600061037b338484610963565b5060015b92915050565b60006103936009600a611691565b6103a1906305f5e1006116a0565b905090565b6000546001600160a01b031633146103d95760405162461bcd60e51b81526004016103d0906116b7565b60405180910390fd5b600047116103e657600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610412573d6000803e3d6000fd5b50565b6000610422848484610a87565b6004546001600160a01b0316331480159061045f57506010546001600160a01b038581169116148061045f57506001600160a01b03831661dead14155b156104b6576104b684336104b185604051806060016040528060288152602001611956602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f54565b610963565b5060019392505050565b6000546001600160a01b031633146104ea5760405162461bcd60e51b81526004016103d0906116b7565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461055e5760405162461bcd60e51b81526004016103d0906116b7565b565b6000546001600160a01b0316331461058a5760405162461bcd60e51b81526004016103d0906116b7565b601054600160a01b900460ff16156105e45760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103d0565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561062d90309061061f6009600a611691565b6104b1906305f5e1006116a0565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a491906116ec565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a91906116ec565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906116ec565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d71947306107e3816001600160a01b031660009081526001602052604090205490565b6000806107f86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610860573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108859190611709565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190611737565b600061037b338484610a87565b3360009081526003602052604090205460ff1661094157600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d0565b6001600160a01b038216610a265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aeb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d0565b6001600160a01b038216610b4d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d0565b60008111610baf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103d0565b60006001600160a01b0384163014801590610bd357506001600160a01b0383163014155b15610df657601054600160a81b900460ff16610c1857610c156064610c0f60075460085411610c0457600554610c08565b6006545b8590610f8e565b90611017565b90505b6010546001600160a01b038581169116148015610c435750600f546001600160a01b03848116911614155b8015610c6857506001600160a01b03831660009081526003602052604090205460ff16155b8015610c8257506004546001600160a01b03848116911614155b15610cc7574360095414610c9a576000600a55436009555b81600a6000828254610cac9190611759565b909155505060088054906000610cc18361176c565b91905055505b6010546001600160a01b038481169116148015610ced57506001600160a01b0384163014155b15610d4857610cfa611059565b600a541080610d0b57504360095414155b610d485760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103d0565b30600090815260016020526040902054601054600160a81b900460ff16158015610d7f57506010546001600160a01b038581169116145b8015610d945750601054600160b01b900460ff165b8015610dae57506004546001600160a01b03868116911614155b15610df4578015610de8576000600c548211610dca5781610dce565b600c545b9050610de6818511610de057846111e7565b816111e7565b505b47610df247611361565b505b505b6001600160a01b038416600090815260016020526040902054610e19908361139f565b6001600160a01b038516600090815260016020526040902055610e5e610e3f838361139f565b6001600160a01b038516600090815260016020526040902054906113e1565b6001600160a01b0384166000908152600160205260409020558015610ef15730600090815260016020526040902054610e9790826113e1565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ee89085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f4e576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f3c858561139f565b60405190815260200160405180910390a35b50505050565b60008184841115610f785760405162461bcd60e51b81526004016103d0919061146e565b506000610f858486611785565b95945050505050565b600082600003610fa05750600061037f565b6000610fac83856116a0565b905082610fb98583611798565b146110105760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103d0565b9392505050565b600061101083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611440565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb91906116ec565b816000815181106110fe576110fe6117d0565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611132576111326117d0565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061117e906729a2241af62c000090869060040161182b565b600060405180830381865afa15801561119b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111c3919081019061184c565b9050806001815181106111d8576111d86117d0565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061122f5761122f6117d0565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac91906116ec565b816001815181106112bf576112bf6117d0565b6001600160a01b039283166020918202929092010152600f546112e59130911684610963565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061131e908590600090869030904290600401611919565b600060405180830381600087803b15801561133857600080fd5b505af115801561134c573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561139b573d6000803e3d6000fd5b5050565b600061101083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f54565b6000806113ee8385611759565b9050838110156110105760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103d0565b600081836114615760405162461bcd60e51b81526004016103d0919061146e565b506000610f858486611798565b602081526000825180602084015260005b8181101561149c576020818601810151604086840101520161147f565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041257600080fd5b600080604083850312156114e457600080fd5b82356114ef816114bc565b946020939093013593505050565b60008060006060848603121561151257600080fd5b833561151d816114bc565b9250602084013561152d816114bc565b929592945050506040919091013590565b60006020828403121561155057600080fd5b8135611010816114bc565b6000806040838503121561156e57600080fd5b8235611579816114bc565b91506020830135611589816114bc565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115e5578085048111156115c9576115c9611594565b60018416156115d757908102905b60019390931c9280026115ae565b935093915050565b6000826115fc5750600161037f565b816116095750600061037f565b816001811461161f576002811461162957611645565b600191505061037f565b60ff84111561163a5761163a611594565b50506001821b61037f565b5060208310610133831016604e8410600b8410161715611668575081810a61037f565b61167560001984846115aa565b806000190482111561168957611689611594565b029392505050565b600061101060ff8416836115ed565b808202811582820484141761037f5761037f611594565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116fe57600080fd5b8151611010816114bc565b60008060006060848603121561171e57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561174957600080fd5b8151801515811461101057600080fd5b8082018082111561037f5761037f611594565b60006001820161177e5761177e611594565b5060010190565b8181038181111561037f5761037f611594565b6000826117b557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118215781516001600160a01b03168652602095860195909101906001016117fa565b5093949350505050565b82815260406020820152600061184460408301846117e6565b949350505050565b60006020828403121561185e57600080fd5b815167ffffffffffffffff81111561187557600080fd5b8201601f8101841361188657600080fd5b805167ffffffffffffffff8111156118a0576118a06117ba565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118cd576118cd6117ba565b6040529182526020818401810192908101878411156118eb57600080fd5b6020850194505b8385101561190e578451808252602095860195909350016118f2565b509695505050505050565b85815284602082015260a06040820152600061193860a08301866117e6565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206bf1f7a30bdd4c84f0f57ca1a33b485fbdb3f471037ed31ca939f0fcb085566764736f6c634300081e0033";

type Closed4MaxProfitAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Closed4MaxProfitAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Closed4MaxProfitAI__factory extends ContractFactory {
  constructor(...args: Closed4MaxProfitAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Closed4MaxProfitAI> {
    return super.deploy(overrides || {}) as Promise<Closed4MaxProfitAI>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Closed4MaxProfitAI {
    return super.attach(address) as Closed4MaxProfitAI;
  }
  override connect(signer: Signer): Closed4MaxProfitAI__factory {
    return super.connect(signer) as Closed4MaxProfitAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Closed4MaxProfitAIInterface {
    return new utils.Interface(_abi) as Closed4MaxProfitAIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Closed4MaxProfitAI {
    return new Contract(address, _abi, signerOrProvider) as Closed4MaxProfitAI;
  }
}
