/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  BOSS,
  BOSSInterface,
} from "../../../medium/0x12952eb6c6c3bc62175138ffe7719260f5d9d2a1.sol/BOSS";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052601860055560186006556000600755600060085560146009556014600a556014600b556000600c556000600d5560646009600a6100419190610377565b610050906461f313f88061038d565b61005b90600261038d565b61006591906103a4565b600e5560646100766009600a610377565b610085906461f313f88061038d565b61009090600261038d565b61009a91906103a4565b600f556103e86100ac6009600a610377565b6100bb906461f313f88061038d565b6100c690600361038d565b6100d091906103a4565b60105560646100e16009600a610377565b6100f0906461f313f88061038d565b6100fb90600161038d565b61010591906103a4565b6011556013805461ffff60a81b19169055600060148190556015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556101846009600a610377565b610193906461f313f88061038d565b3360009081526001602081905260408220929092556003906101bd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560045490911683529120805490921617905561021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102536009600a610377565b610262906461f313f88061038d565b60405190815260200160405180910390a36103c6565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102c9578085048111156102ad576102ad610278565b60018416156102bb57908102905b60019390931c928002610292565b935093915050565b6000826102e057506001610371565b816102ed57506000610371565b8160018114610303576002811461030d57610329565b6001915050610371565b60ff84111561031e5761031e610278565b50506001821b610371565b5060208310610133831016604e8410600b841016171561034c575081810a610371565b610359600019848461028e565b806000190482111561036d5761036d610278565b0290505b92915050565b600061038660ff8416836102d1565b9392505050565b808202811582820484141761037157610371610278565b6000826103c157634e487b7160e01b600052601260045260246000fd5b500490565b611c1b806103d56000396000f3fe6080604052600436106101395760003560e01c806377b54bad116100ab578063a9059cbb1161006f578063a9059cbb14610367578063bf474bed14610387578063c9567bf91461039d578063dd62ed3e146103b2578063ec1f3f63146103f8578063f42938901461041857600080fd5b806377b54bad146102c65780637d1db4a5146102e65780638da5cb5b146102fc5780638f9a55c01461032457806395d89b411461033a57600080fd5b806323b872dd116100fd57806323b872dd14610215578063313ce5671461023557806351bc3c8514610251578063622565891461026657806370a082311461027b578063715018a6146102b157600080fd5b806306fdde0314610145578063095ea7b3146101955780630faee56f146101c5578063109daa99146101e957806318160ddd1461020057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060408051808201909152601581527442726f776e205468652042656172277320426f737360581b60208201525b60405161018c91906117b7565b60405180910390f35b3480156101a157600080fd5b506101b56101b036600461181a565b61042d565b604051901515815260200161018c565b3480156101d157600080fd5b506101db60115481565b60405190815260200161018c565b3480156101f557600080fd5b506101fe610444565b005b34801561020c57600080fd5b506101db6104b4565b34801561022157600080fd5b506101b5610230366004611846565b6104d6565b34801561024157600080fd5b506040516009815260200161018c565b34801561025d57600080fd5b506101fe61053f565b34801561027257600080fd5b506101fe610592565b34801561028757600080fd5b506101db610296366004611887565b6001600160a01b031660009081526001602052604090205490565b3480156102bd57600080fd5b506101fe610642565b3480156102d257600080fd5b506101b56102e136600461181a565b6106b6565b3480156102f257600080fd5b506101db600e5481565b34801561030857600080fd5b506000546040516001600160a01b03909116815260200161018c565b34801561033057600080fd5b506101db600f5481565b34801561034657600080fd5b50604080518082019091526004815263424f535360e01b602082015261017f565b34801561037357600080fd5b506101b561038236600461181a565b61080e565b34801561039357600080fd5b506101db60105481565b3480156103a957600080fd5b506101fe61081b565b3480156103be57600080fd5b506101db6103cd3660046118a4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561040457600080fd5b506101fe6104133660046118dd565b610c18565b34801561042457600080fd5b506101fe610c5f565b600061043a338484610cec565b5060015b92915050565b6000546001600160a01b031633146104775760405162461bcd60e51b815260040161046e906118f6565b60405180910390fd5b6000600c8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006104c26009600a611a28565b6104d1906461f313f880611a37565b905090565b60006104e3848484610e10565b610535843361053085604051806060016040528060288152602001611bbe602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611421565b610cec565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461055f57600080fd5b30600090815260016020526040902054801561057e5761057e8161145b565b47801561058e5761058e816115d5565b5050565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260040161046e906118f6565b6105c86009600a611a28565b6105d7906461f313f880611a37565b600e556105e66009600a611a28565b6105f5906461f313f880611a37565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106256009600a611a28565b610634906461f313f880611a37565b6040519081526020016104aa565b6000546001600160a01b0316331461066c5760405162461bcd60e51b815260040161046e906118f6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546000906001600160a01b0316336001600160a01b0316146106d957600080fd5b8160000361074c576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190611a4e565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a16004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905284169063a9059cbb906044016020604051808303816000875af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190611a67565b9392505050565b600061043a338484610e10565b6000546001600160a01b031633146108455760405162461bcd60e51b815260040161046e906118f6565b601354600160a01b900460ff161561089f5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161046e565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108e99030906108da6009600a611a28565b610530906461f313f880611a37565b6109243061038261271061091e6125e4610918336001600160a01b031660009081526001602052604090205490565b9061160f565b90611691565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190611a89565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190611a89565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190611a89565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d7194730610adb816001600160a01b031660009081526001602052604090205490565b600080610af06000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b58573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b7d9190611aa6565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611a67565b506013805462ff00ff60a01b19166201000160a01b17905543601655565b6004546001600160a01b0316336001600160a01b031614610c3857600080fd5b6007548111158015610c4c57506008548111155b610c5557600080fd5b6007819055600855565b6004546001600160a01b0316336001600160a01b031614610c7f57600080fd5b4780610ce05760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163742062616c616e6365206d7573742062652067726561746572604482015269207468616e207a65726f60b01b606482015260840161046e565b610ce9816115d5565b50565b6001600160a01b038316610d4e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046e565b6001600160a01b038216610daf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e745760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046e565b6001600160a01b038216610ed65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046e565b60008111610f385760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161046e565b600080546001600160a01b03858116911614801590610f6557506000546001600160a01b03848116911614155b156112de57600d54600003610f9d57610f9a606461091e600954600d5411610f8f57600554610f93565b6007545b859061160f565b90505b600d5415610fc257610fbf606461091e600c548561160f90919063ffffffff16565b90505b601654430361101d576023600d541061101d5760405162461bcd60e51b815260206004820181905260248201527f457863656564732062757973206f6e2074686520666972737420626c6f636b2e604482015260640161046e565b6013546001600160a01b03858116911614801561104857506012546001600160a01b03848116911614155b801561106d57506001600160a01b03831660009081526003602052604090205460ff16155b1561117257600e548211156110c45760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161046e565b600f54826110e7856001600160a01b031660009081526001602052604090205490565b6110f19190611ad4565b111561113f5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161046e565b61115a606461091e600954600d5411610f8f57600554610f93565b600d8054919250600061116c83611ae7565b91905055505b6013546001600160a01b03848116911614801561119857506001600160a01b0384163014155b156111c5576111c2606461091e600a54600d54116111b857600654610f93565b600854859061160f565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156111fc57506013546001600160a01b038581169116145b80156112115750601354600160b01b900460ff165b801561121e575060105481115b801561122d5750600b54600d54115b156112dc576015544311156112425760006014555b6003601454106112945760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161046e565b6112b16112ac846112a7846011546116d3565b6116d3565b61145b565b4780156112c1576112c1476115d5565b601480549060006112d183611ae7565b909155505043601555505b505b801561135857306000908152600160205260409020546112fe90826116e8565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061134f9085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461137b9083611747565b6001600160a01b0385166000908152600160205260409020556113c06113a18383611747565b6001600160a01b038516600090815260016020526040902054906116e8565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61140a8585611747565b60405190815260200160405180910390a350505050565b600081848411156114455760405162461bcd60e51b815260040161046e91906117b7565b5060006114528486611b00565b95945050505050565b6013805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106114a3576114a3611b13565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115209190611a89565b8160018151811061153357611533611b13565b6001600160a01b0392831660209182029290920101526012546115599130911684610cec565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611592908590600090869030904290600401611b29565b600060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561058e573d6000803e3d6000fd5b6000826000036116215750600061043e565b600061162d8385611a37565b90508261163a8583611b9b565b146108075760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161046e565b600061080783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611789565b60008183116116e25782610807565b50919050565b6000806116f58385611ad4565b9050838110156108075760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161046e565b600061080783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611421565b600081836117aa5760405162461bcd60e51b815260040161046e91906117b7565b5060006114528486611b9b565b602081526000825180602084015260005b818110156117e557602081860181015160408684010152016117c8565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610ce957600080fd5b6000806040838503121561182d57600080fd5b823561183881611805565b946020939093013593505050565b60008060006060848603121561185b57600080fd5b833561186681611805565b9250602084013561187681611805565b929592945050506040919091013590565b60006020828403121561189957600080fd5b813561080781611805565b600080604083850312156118b757600080fd5b82356118c281611805565b915060208301356118d281611805565b809150509250929050565b6000602082840312156118ef57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561197c578085048111156119605761196061192b565b600184161561196e57908102905b60019390931c928002611945565b935093915050565b6000826119935750600161043e565b816119a05750600061043e565b81600181146119b657600281146119c0576119dc565b600191505061043e565b60ff8411156119d1576119d161192b565b50506001821b61043e565b5060208310610133831016604e8410600b84101617156119ff575081810a61043e565b611a0c6000198484611941565b8060001904821115611a2057611a2061192b565b029392505050565b600061080760ff841683611984565b808202811582820484141761043e5761043e61192b565b600060208284031215611a6057600080fd5b5051919050565b600060208284031215611a7957600080fd5b8151801515811461080757600080fd5b600060208284031215611a9b57600080fd5b815161080781611805565b600080600060608486031215611abb57600080fd5b5050815160208301516040909301519094929350919050565b8082018082111561043e5761043e61192b565b600060018201611af957611af961192b565b5060010190565b8181038181111561043e5761043e61192b565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611b7b5783516001600160a01b0316835260209384019390920191600101611b54565b50506001600160a01b039590951660608401525050608001529392505050565b600082611bb857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212207b55ee8309d88d9e9f0424d1a7c11f6627cfe70165e411407daeba30c6609bc964736f6c634300081e0033";

type BOSSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BOSSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BOSS__factory extends ContractFactory {
  constructor(...args: BOSSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BOSS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BOSS__factory {
    return super.connect(runner) as BOSS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BOSSInterface {
    return new Interface(_abi) as BOSSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BOSS {
    return new Contract(address, _abi, runner) as unknown as BOSS;
  }
}
