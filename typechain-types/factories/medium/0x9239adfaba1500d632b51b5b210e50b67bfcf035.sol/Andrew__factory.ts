/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Andrew,
  AndrewInterface,
} from "../../../medium/0x9239adfaba1500d632b51b5b210e50b67bfcf035.sol/Andrew";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_AndrewThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_Andrewamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119f08061029c6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc11610095578063a9059cbb11610064578063a9059cbb146102f9578063dd62ed3e14610319578063ea414b281461035f578063f71add5e1461037f578063fe17056a1461039557600080fd5b8063751039fc146102785780638a8c523c1461028d5780638da5cb5b146102a257806395d89b41146102ca57600080fd5b806320800a00116100dc57806320800a00146101da57806323b872dd146101f1578063313ce5671461021157806370a082311461022d578063715018a61461026357600080fd5b806306fdde0314610119578063095ea7b3146101715780630faee56f146101a157806318160ddd146101c557600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152601781527f48494444454e205841492054455354204143434f554e5400000000000000000060208201525b60405161016891906114ab565b60405180910390f35b34801561017d57600080fd5b5061019161018c36600461150e565b6103ab565b6040519015158152602001610168565b3480156101ad57600080fd5b506101b7600c5481565b604051908152602001610168565b3480156101d157600080fd5b506101b76103c2565b3480156101e657600080fd5b506101ef6103e3565b005b3480156101fd57600080fd5b5061019161020c36600461153a565b610452565b34801561021d57600080fd5b5060405160098152602001610168565b34801561023957600080fd5b506101b761024836600461157b565b6001600160a01b031660009081526001602052604090205490565b34801561026f57600080fd5b506101ef6104fd565b34801561028457600080fd5b506101ef610571565b34801561029957600080fd5b506101ef61059d565b3480156102ae57600080fd5b506000546040516001600160a01b039091168152602001610168565b3480156102d657600080fd5b50604080518082019091526006815265416e6472657760d01b602082015261015b565b34801561030557600080fd5b5061019161031436600461150e565b610955565b34801561032557600080fd5b506101b7610334366004611598565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036b57600080fd5b506101ef61037a36600461157b565b610962565b34801561038b57600080fd5b506101b7600e5481565b3480156103a157600080fd5b506101b7600d5481565b60006103b83384846109a0565b5060015b92915050565b60006103d06009600a6116ce565b6103de906305f5e1006116dd565b905090565b6000546001600160a01b031633146104165760405162461bcd60e51b815260040161040d906116f4565b60405180910390fd5b6000471161042357600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561044f573d6000803e3d6000fd5b50565b600061045f848484610ac4565b6004546001600160a01b0316331480159061049c57506010546001600160a01b038581169116148061049c57506001600160a01b03831661dead14155b156104f3576104f384336104ee85604051806060016040528060288152602001611993602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f91565b6109a0565b5060019392505050565b6000546001600160a01b031633146105275760405162461bcd60e51b815260040161040d906116f4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461059b5760405162461bcd60e51b815260040161040d906116f4565b565b6000546001600160a01b031633146105c75760405162461bcd60e51b815260040161040d906116f4565b601054600160a01b900460ff16156106215760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161040d565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561066a90309061065c6009600a6116ce565b6104ee906305f5e1006116dd565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190611729565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190611729565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190611729565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d7194730610820816001600160a01b031660009081526001602052604090205490565b6000806108356000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561089d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c29190611746565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610931573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190611774565b60006103b8338484610ac4565b3360009081526003602052604090205460ff1661097e57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610a025760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161040d565b6001600160a01b038216610a635760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161040d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b285760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161040d565b6001600160a01b038216610b8a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161040d565b60008111610bec5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161040d565b60006001600160a01b0384163014801590610c1057506001600160a01b0383163014155b15610e3357601054600160a81b900460ff16610c5557610c526064610c4c60075460085411610c4157600554610c45565b6006545b8590610fcb565b90611054565b90505b6010546001600160a01b038581169116148015610c805750600f546001600160a01b03848116911614155b8015610ca557506001600160a01b03831660009081526003602052604090205460ff16155b8015610cbf57506004546001600160a01b03848116911614155b15610d04574360095414610cd7576000600a55436009555b81600a6000828254610ce99190611796565b909155505060088054906000610cfe836117a9565b91905055505b6010546001600160a01b038481169116148015610d2a57506001600160a01b0384163014155b15610d8557610d37611096565b600a541080610d4857504360095414155b610d855760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161040d565b30600090815260016020526040902054601054600160a81b900460ff16158015610dbc57506010546001600160a01b038581169116145b8015610dd15750601054600160b01b900460ff165b8015610deb57506004546001600160a01b03868116911614155b15610e31578015610e25576000600c548211610e075781610e0b565b600c545b9050610e23818511610e1d5784611224565b81611224565b505b47610e2f4761139e565b505b505b6001600160a01b038416600090815260016020526040902054610e5690836113dc565b6001600160a01b038516600090815260016020526040902055610e9b610e7c83836113dc565b6001600160a01b0385166000908152600160205260409020549061141e565b6001600160a01b0384166000908152600160205260409020558015610f2e5730600090815260016020526040902054610ed4908261141e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f259085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f8b576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f7985856113dc565b60405190815260200160405180910390a35b50505050565b60008184841115610fb55760405162461bcd60e51b815260040161040d91906114ab565b506000610fc284866117c2565b95945050505050565b600082600003610fdd575060006103bc565b6000610fe983856116dd565b905082610ff685836117d5565b1461104d5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161040d565b9392505050565b600061104d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061147d565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111289190611729565b8160008151811061113b5761113b61180d565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061116f5761116f61180d565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111bb906729a2241af62c0000908690600401611868565b600060405180830381865afa1580156111d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112009190810190611889565b9050806001815181106112155761121561180d565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061126c5761126c61180d565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611729565b816001815181106112fc576112fc61180d565b6001600160a01b039283166020918202929092010152600f5461132291309116846109a0565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061135b908590600090869030904290600401611956565b600060405180830381600087803b15801561137557600080fd5b505af1158015611389573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113d8573d6000803e3d6000fd5b5050565b600061104d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f91565b60008061142b8385611796565b90508381101561104d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161040d565b6000818361149e5760405162461bcd60e51b815260040161040d91906114ab565b506000610fc284866117d5565b602081526000825180602084015260005b818110156114d957602081860181015160408684010152016114bc565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461044f57600080fd5b6000806040838503121561152157600080fd5b823561152c816114f9565b946020939093013593505050565b60008060006060848603121561154f57600080fd5b833561155a816114f9565b9250602084013561156a816114f9565b929592945050506040919091013590565b60006020828403121561158d57600080fd5b813561104d816114f9565b600080604083850312156115ab57600080fd5b82356115b6816114f9565b915060208301356115c6816114f9565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561162257808504811115611606576116066115d1565b600184161561161457908102905b60019390931c9280026115eb565b935093915050565b600082611639575060016103bc565b81611646575060006103bc565b816001811461165c576002811461166657611682565b60019150506103bc565b60ff841115611677576116776115d1565b50506001821b6103bc565b5060208310610133831016604e8410600b84101617156116a5575081810a6103bc565b6116b260001984846115e7565b80600019048211156116c6576116c66115d1565b029392505050565b600061104d60ff84168361162a565b80820281158282048414176103bc576103bc6115d1565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561173b57600080fd5b815161104d816114f9565b60008060006060848603121561175b57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561178657600080fd5b8151801515811461104d57600080fd5b808201808211156103bc576103bc6115d1565b6000600182016117bb576117bb6115d1565b5060010190565b818103818111156103bc576103bc6115d1565b6000826117f257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561185e5781516001600160a01b0316865260209586019590910190600101611837565b5093949350505050565b8281526040602082015260006118816040830184611823565b949350505050565b60006020828403121561189b57600080fd5b815167ffffffffffffffff8111156118b257600080fd5b8201601f810184136118c357600080fd5b805167ffffffffffffffff8111156118dd576118dd6117f7565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561190a5761190a6117f7565b60405291825260208184018101929081018784111561192857600080fd5b6020850194505b8385101561194b5784518082526020958601959093500161192f565b509695505050505050565b85815284602082015260a06040820152600061197560a0830186611823565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209ef8e9db15e728cd9835711cac8e76ce446db16577136203a8b1707dadcd33c064736f6c634300081e0033";

type AndrewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AndrewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Andrew__factory extends ContractFactory {
  constructor(...args: AndrewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Andrew> {
    return super.deploy(overrides || {}) as Promise<Andrew>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Andrew {
    return super.attach(address) as Andrew;
  }
  override connect(signer: Signer): Andrew__factory {
    return super.connect(signer) as Andrew__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AndrewInterface {
    return new utils.Interface(_abi) as AndrewInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Andrew {
    return new Contract(address, _abi, signerOrProvider) as Andrew;
  }
}
