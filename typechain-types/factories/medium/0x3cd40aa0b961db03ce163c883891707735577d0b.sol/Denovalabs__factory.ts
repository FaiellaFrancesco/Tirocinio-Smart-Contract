/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Denovalabs,
  DenovalabsInterface,
} from "../../../medium/0x3cd40aa0b961db03ce163c883891707735577d0b.sol/Denovalabs";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearcontract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openlimiter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "starttx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526006805460ff19166001179055601e600781905560085560056009818155600a828155600b839055600c839055600d929092556000600e556100459161031e565b61005290622625a0610334565b600f556100616009600a61031e565b61006e90622625a0610334565b60105561007d6009600a61031e565b61008a906213d620610334565b6011556100996009600a61031e565b6100a69062632ea0610334565b6012556014805461ffff60a81b191690553480156100c357600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060068054610100600160a81b03191661010033021790556101286009600a61031e565b610136906305f5e100610334565b3360009081526001602081905260408220929092556003906101606000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560065461010090049091168352912080549092161790556101c33390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101fb6009600a61031e565b610209906305f5e100610334565b60405190815260200160405180910390a361034b565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610270578085048111156102545761025461021f565b600184161561026257908102905b60019390931c928002610239565b935093915050565b60008261028757506001610318565b8161029457506000610318565b81600181146102aa57600281146102b4576102d0565b6001915050610318565b60ff8411156102c5576102c561021f565b50506001821b610318565b5060208310610133831016604e8410600b84101617156102f3575081810a610318565b6103006000198484610235565b80600019048211156103145761031461021f565b0290505b92915050565b600061032d60ff841683610278565b9392505050565b80820281158282048414176103185761031861021f565b61188b8061035a6000396000f3fe6080604052600436106101185760003560e01c8063715018a6116100a057806395d89b411161006457806395d89b41146102ef578063a9059cbb1461031d578063bf474bed1461033d578063c876d0b914610353578063dd62ed3e1461036d57600080fd5b8063715018a6146102715780637d1db4a5146102865780637f3acae81461029c5780638da5cb5b146102b15780638f9a55c0146102d957600080fd5b806323b872dd116100e757806323b872dd146101d3578063313ce567146101f35780633bd008ef1461020f57806358fd0ab91461022657806370a082311461023b57600080fd5b806306fdde0314610124578063095ea7b31461016a5780630faee56f1461019a57806318160ddd146101be57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201909152600b81526a44654e6f7661204c61627360a81b60208201525b6040516101619190611456565b60405180910390f35b34801561017657600080fd5b5061018a6101853660046114bc565b6103b3565b6040519015158152602001610161565b3480156101a657600080fd5b506101b060125481565b604051908152602001610161565b3480156101ca57600080fd5b506101b06103ca565b3480156101df57600080fd5b5061018a6101ee3660046114e8565b6103eb565b3480156101ff57600080fd5b5060405160098152602001610161565b34801561021b57600080fd5b50610224610454565b005b34801561023257600080fd5b506102246104ac565b34801561024757600080fd5b506101b0610256366004611529565b6001600160a01b031660009081526001602052604090205490565b34801561027d57600080fd5b50610224610571565b34801561029257600080fd5b506101b0600f5481565b3480156102a857600080fd5b506102246105e5565b3480156102bd57600080fd5b506000546040516001600160a01b039091168152602001610161565b3480156102e557600080fd5b506101b060105481565b3480156102fb57600080fd5b50604080518082019091526005815264444e4f564160d81b6020820152610154565b34801561032957600080fd5b5061018a6103383660046114bc565b6109a1565b34801561034957600080fd5b506101b060115481565b34801561035f57600080fd5b5060065461018a9060ff1681565b34801561037957600080fd5b506101b0610388366004611546565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103c03384846109ae565b5060015b92915050565b60006103d86009600a61167c565b6103e6906305f5e10061168b565b905090565b60006103f8848484610ad2565b61044a84336104458560405180606001604052806028815260200161182e602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110b5565b6109ae565b5060019392505050565b60065461010090046001600160a01b0316336001600160a01b03161461047957600080fd5b30600090815260016020526040902054801561049857610498816110ef565b4780156104a8576104a881611269565b5050565b6000546001600160a01b031633146104df5760405162461bcd60e51b81526004016104d6906116a2565b60405180910390fd5b6104eb6009600a61167c565b6104f9906305f5e10061168b565b600f556105086009600a61167c565b610516906305f5e10061168b565b6010556006805460ff191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105506009600a61167c565b61055e906305f5e10061168b565b60405190815260200160405180910390a1565b6000546001600160a01b0316331461059b5760405162461bcd60e51b81526004016104d6906116a2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461060f5760405162461bcd60e51b81526004016104d6906116a2565b601454600160a01b900460ff16156106695760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d6565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106b29030906106a46009600a61167c565b610445906305f5e10061168b565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610705573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072991906116d7565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af91906116d7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082091906116d7565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610868816001600160a01b031660009081526001602052604090205490565b60008061087d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108e5573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061090a91906116f4565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109879190611722565b506014805462ff00ff60a01b19166201000160a01b179055565b60006103c0338484610ad2565b6001600160a01b038316610a105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d6565b6001600160a01b038216610a715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b365760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d6565b6001600160a01b038216610b985760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d6565b60008111610bfa5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d6565b600080546001600160a01b03858116911614801590610c2757506000546001600160a01b03848116911614155b15610f7257610c586064610c52600b54600e5411610c4757600754610c4b565b6009545b85906112a7565b90611330565b60065490915060ff1615610d40576013546001600160a01b03848116911614801590610c9257506014546001600160a01b03848116911614155b15610d4057326000908152600560205260409020544311610d2d5760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a4016104d6565b3260009081526005602052604090204390555b6014546001600160a01b038581169116148015610d6b57506013546001600160a01b03848116911614155b8015610d9057506001600160a01b03831660009081526003602052604090205460ff16155b15610e7857600f54821115610de75760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d6565b60105482610e0a856001600160a01b031660009081526001602052604090205490565b610e149190611744565b1115610e625760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d6565b600e8054906000610e7283611757565b91905055505b6014546001600160a01b038481169116148015610e9e57506001600160a01b0384163014155b15610ecb57610ec86064610c52600c54600e5411610ebe57600854610c4b565b600a5485906112a7565b90505b30600090815260016020526040902054601454600160a81b900460ff16158015610f0257506014546001600160a01b038581169116145b8015610f175750601454600160b01b900460ff165b8015610f24575060115481115b8015610f335750600d54600e54115b15610f7057610f55610f5084610f4b84601254611372565b611372565b6110ef565b4766b1a2bc2ec50000811115610f6e57610f6e47611269565b505b505b8015610fec5730600090815260016020526040902054610f929082611387565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fe39085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461100f90836113e6565b6001600160a01b03851660009081526001602052604090205561105461103583836113e6565b6001600160a01b03851660009081526001602052604090205490611387565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61109e85856113e6565b60405190815260200160405180910390a350505050565b600081848411156110d95760405162461bcd60e51b81526004016104d69190611456565b5060006110e68486611770565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061113757611137611783565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b491906116d7565b816001815181106111c7576111c7611783565b6001600160a01b0392831660209182029290920101526013546111ed91309116846109ae565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611226908590600090869030904290600401611799565b600060405180830381600087803b15801561124057600080fd5b505af1158015611254573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6006546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156104a8573d6000803e3d6000fd5b6000826000036112b9575060006103c4565b60006112c5838561168b565b9050826112d2858361180b565b146113295760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d6565b9392505050565b600061132983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611428565b60008183116113815782611329565b50919050565b6000806113948385611744565b9050838110156113295760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d6565b600061132983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b5565b600081836114495760405162461bcd60e51b81526004016104d69190611456565b5060006110e6848661180b565b602081526000825180602084015260005b818110156114845760208186018101516040868401015201611467565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146114b957600080fd5b50565b600080604083850312156114cf57600080fd5b82356114da816114a4565b946020939093013593505050565b6000806000606084860312156114fd57600080fd5b8335611508816114a4565b92506020840135611518816114a4565b929592945050506040919091013590565b60006020828403121561153b57600080fd5b8135611329816114a4565b6000806040838503121561155957600080fd5b8235611564816114a4565b91506020830135611574816114a4565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115d0578085048111156115b4576115b461157f565b60018416156115c257908102905b60019390931c928002611599565b935093915050565b6000826115e7575060016103c4565b816115f4575060006103c4565b816001811461160a576002811461161457611630565b60019150506103c4565b60ff8411156116255761162561157f565b50506001821b6103c4565b5060208310610133831016604e8410600b8410161715611653575081810a6103c4565b6116606000198484611595565b80600019048211156116745761167461157f565b029392505050565b600061132960ff8416836115d8565b80820281158282048414176103c4576103c461157f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116e957600080fd5b8151611329816114a4565b60008060006060848603121561170957600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173457600080fd5b8151801515811461132957600080fd5b808201808211156103c4576103c461157f565b6000600182016117695761176961157f565b5060010190565b818103818111156103c4576103c461157f565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156117eb5783516001600160a01b03168352602093840193909201916001016117c4565b50506001600160a01b039590951660608401525050608001529392505050565b60008261182857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204c9f16042f219ca99d1d3d58f02766d627f2cd5d2d4abdb057921396c69081a464736f6c634300081c0033";

type DenovalabsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DenovalabsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Denovalabs__factory extends ContractFactory {
  constructor(...args: DenovalabsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Denovalabs & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Denovalabs__factory {
    return super.connect(runner) as Denovalabs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DenovalabsInterface {
    return new Interface(_abi) as DenovalabsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Denovalabs {
    return new Contract(address, _abi, runner) as unknown as Denovalabs;
  }
}
