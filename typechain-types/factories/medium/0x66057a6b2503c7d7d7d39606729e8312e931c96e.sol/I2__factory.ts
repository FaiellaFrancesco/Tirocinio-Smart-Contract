/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  I2,
  I2Interface,
} from "../../../medium/0x66057a6b2503c7d7d7d39606729e8312e931c96e.sol/I2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "A",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "B",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "C",
        type: "uint256",
      },
    ],
    name: "E1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "D",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "E",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "F",
        type: "uint256",
      },
    ],
    name: "E2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "J",
        type: "address",
      },
      {
        internalType: "address",
        name: "K",
        type: "address",
      },
    ],
    name: "A1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "G",
        type: "address",
      },
    ],
    name: "B1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "D1",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "S1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "H",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "I",
        type: "uint256",
      },
    ],
    name: "T2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "L",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "M",
        type: "uint256",
      },
    ],
    name: "T3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "N",
        type: "address",
      },
      {
        internalType: "address",
        name: "O",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "P",
        type: "uint256",
      },
    ],
    name: "T4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class I2__factory {
  static readonly abi = _abi;
  static createInterface(): I2Interface {
    return new Interface(_abi) as I2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): I2 {
    return new Contract(address, _abi, runner) as unknown as I2;
  }
}
