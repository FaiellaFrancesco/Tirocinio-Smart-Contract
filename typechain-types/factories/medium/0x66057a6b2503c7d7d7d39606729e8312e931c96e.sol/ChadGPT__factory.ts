/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChadGPT,
  ChadGPTInterface,
} from "../../../medium/0x66057a6b2503c7d7d7d39606729e8312e931c96e.sol/ChadGPT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "A",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "B",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "C",
        type: "uint256",
      },
    ],
    name: "E1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "D",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "E",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "F",
        type: "uint256",
      },
    ],
    name: "E2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ad",
        type: "address",
      },
      {
        internalType: "address",
        name: "ae",
        type: "address",
      },
    ],
    name: "A1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Z",
        type: "address",
      },
    ],
    name: "B1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "D1",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "S1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aa",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ab",
        type: "uint256",
      },
    ],
    name: "T2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "af",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ag",
        type: "uint256",
      },
    ],
    name: "T3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ai",
        type: "address",
      },
      {
        internalType: "address",
        name: "aj",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ak",
        type: "uint256",
      },
    ],
    name: "T4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "d",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ap",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "aq",
        type: "uint256",
      },
    ],
    name: "decreaseA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "e",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "am",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "an",
        type: "uint256",
      },
    ],
    name: "increaseA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020016610da185911d41560ca1b8152506040518060400160405280600481526020016310d1d41560e21b8152508160039081620000609190620001f2565b5060046200006f8282620001f2565b50505062000091336c01431e0fae6d7217caa00000006200009760201b60201c565b620002e6565b6001600160a01b038216620000de5760405162461bcd60e51b81526020600482015260096024820152684d494e545f5a45524f60b81b604482015260640160405180910390fd5b8060026000828254620000f29190620002be565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fd9a4303baaecaa226a58e96695917e9cf36a88cfaa084a3fdd8cc9c158f9cd29910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017957607f821691505b6020821081036200019a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014957600081815260208120601f850160051c81016020861015620001c95750805b601f850160051c820191505b81811015620001ea57828155600101620001d5565b505050505050565b81516001600160401b038111156200020e576200020e6200014e565b62000226816200021f845462000164565b84620001a0565b602080601f8311600181146200025e5760008415620002455750858301515b600019600386901b1c1916600185901b178555620001ea565b600085815260208120601f198616915b828110156200028f578886015182559484019460019091019084016200026e565b5085821015620002ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620002e057634e487b7160e01b600052601160045260246000fd5b92915050565b61083a80620002f66000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a2d873c91161008c578063cb76ae1811610066578063cb76ae18146101d9578063ce90f255146101e1578063e34803d81461020a578063ffae15ba1461021d57600080fd5b8063a2d873c9146101a4578063c213fff6146101b7578063c6ca550c146101ca57600080fd5b80637c2efcba116100c85780637c2efcba1461013e5780638a054ac21461015e578063a11efef41461017f578063a1cd73c81461019157600080fd5b80626b314f146100ee57806365d3d024146101165780637826f28f14610129575b600080fd5b6101016100fc3660046106a0565b610243565b60405190151581526020015b60405180910390f35b6101016101243660046106a0565b610271565b6101316102d6565b60405161010d91906106ca565b610131604051806040016040528060018152602001600d60fa1b81525081565b610131604051806040016040528060028152602001615a3960f01b81525081565b6002545b60405190815260200161010d565b61010161019f3660046106a0565b610368565b6101016101b23660046106a0565b610376565b6101836101c5366004610718565b610384565b6040516012815260200161010d565b6101316103af565b6101836101ef36600461074b565b6001600160a01b031660009081526020819052604090205490565b61010161021836600461076d565b6103be565b6101316040518060400160405280600781526020016610da185911d41560ca1b81525081565b6000336102658185856102568383610384565b61026091906107a9565b6103d7565b60019150505b92915050565b6000338161027f8286610384565b9050838110156102be5760405162461bcd60e51b81526020600482015260056024820152644445435f4160d81b60448201526064015b60405180910390fd5b6102cb82868684036103d7565b506001949350505050565b6060600480546102e5906107ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610311906107ca565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b6000336102658185856103d7565b6000336102658185856104d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102e5906107ca565b6000336103cc858285610620565b6102cb8585856104d0565b6001600160a01b0383166104225760405162461bcd60e51b815260206004820152601260248201527120a8282927ab22afad22a927afa7aba722a960711b60448201526064016102b5565b6001600160a01b03821661046f5760405162461bcd60e51b815260206004820152601460248201527320a8282927ab22afad22a927afa9a822a72222a960611b60448201526064016102b5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f42fdff9714d54bfb524dfa5d22e8f1181cfec492f21a8d3e221e66fd30938f25910160405180910390a3505050565b6001600160a01b0383166105155760405162461bcd60e51b815260206004820152600c60248201526b54585f46524f4d5f5a45524f60a01b60448201526064016102b5565b6001600160a01b0382166105585760405162461bcd60e51b815260206004820152600a60248201526954585f544f5f5a45524f60b01b60448201526064016102b5565b6001600160a01b038316600090815260208190526040902054818110156105b85760405162461bcd60e51b8152602060048201526014602482015273494e53554646494349454e545f42414c414e434560601b60448201526064016102b5565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fd9a4303baaecaa226a58e96695917e9cf36a88cfaa084a3fdd8cc9c158f9cd29910160405180910390a35b50505050565b600061062c8484610384565b9050600019811461061a57818110156106775760405162461bcd60e51b815260206004820152600d60248201526c414c4c4f57414e43455f4c4f5760981b60448201526064016102b5565b61061a84848484036103d7565b80356001600160a01b038116811461069b57600080fd5b919050565b600080604083850312156106b357600080fd5b6106bc83610684565b946020939093013593505050565b600060208083528351808285015260005b818110156106f7578581018301518582016040015282016106db565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561072b57600080fd5b61073483610684565b915061074260208401610684565b90509250929050565b60006020828403121561075d57600080fd5b61076682610684565b9392505050565b60008060006060848603121561078257600080fd5b61078b84610684565b925061079960208501610684565b9150604084013590509250925092565b8082018082111561026b57634e487b7160e01b600052601160045260246000fd5b600181811c908216806107de57607f821691505b6020821081036107fe57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220dc52d890e07ff25affa4b27e8a1d1ff6479dce6c45dc8baf044e5a753fdeee2264736f6c63430008130033";

type ChadGPTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChadGPTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChadGPT__factory extends ContractFactory {
  constructor(...args: ChadGPTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ChadGPT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChadGPT__factory {
    return super.connect(runner) as ChadGPT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChadGPTInterface {
    return new Interface(_abi) as ChadGPTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ChadGPT {
    return new Contract(address, _abi, runner) as unknown as ChadGPT;
  }
}
