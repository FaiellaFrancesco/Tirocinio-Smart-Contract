/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xc665be7f384585f9ca73dd073e99282a3f3b6f08.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600555600a6006556000600755600760085560006009556000600b556009600a610030919061031a565b61003e90633b9aca00610330565b600c55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b03166000600080516020611d25833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a3306000600080516020611d2583398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b6119ad806103786000396000f3fe6080604052600436106100f75760003560e01c8063715018a61161008a57806395d89b411161005957806395d89b41146102bf578063a9059cbb146102ed578063dd62ed3e1461030d578063fb201b1d1461035357600080fd5b8063715018a61461024d578063751039fc14610262578063798e5036146102775780638da5cb5b1461029757600080fd5b806320800a00116100c657806320800a00146101c457806323b872dd146101db578063313ce567146101fb57806370a082311461021757600080fd5b806306fdde0314610103578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060408051808201909152601981527f504f5045204f462054484520554e49544544205354415445530000000000000060208201525b6040516101529190611468565b60405180910390f35b34801561016757600080fd5b5061017b6101763660046114cb565b610368565b6040519015158152602001610152565b34801561019757600080fd5b506101a1600c5481565b604051908152602001610152565b3480156101bb57600080fd5b506101a161037f565b3480156101d057600080fd5b506101d96103a0565b005b3480156101e757600080fd5b5061017b6101f63660046114f7565b61040f565b34801561020757600080fd5b5060405160098152602001610152565b34801561022357600080fd5b506101a1610232366004611538565b6001600160a01b031660009081526001602052604090205490565b34801561025957600080fd5b506101d96104ba565b34801561026e57600080fd5b506101d961052e565b34801561028357600080fd5b506101d9610292366004611538565b61055a565b3480156102a357600080fd5b506000546040516001600160a01b039091168152602001610152565b3480156102cb57600080fd5b50604080518082019091526005815264504f54555360d81b6020820152610145565b3480156102f957600080fd5b5061017b6103083660046114cb565b610598565b34801561031957600080fd5b506101a1610328366004611555565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035f57600080fd5b506101d96105a5565b600061037533848461095d565b5060015b92915050565b600061038d6009600a61168b565b61039b90633b9aca0061169a565b905090565b6000546001600160a01b031633146103d35760405162461bcd60e51b81526004016103ca906116b1565b60405180910390fd5b600047116103e057600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561040c573d6000803e3d6000fd5b50565b600061041c848484610a81565b6004546001600160a01b031633148015906104595750600e546001600160a01b038581169116148061045957506001600160a01b03831661dead14155b156104b0576104b084336104ab85604051806060016040528060288152602001611950602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f4e565b61095d565b5060019392505050565b6000546001600160a01b031633146104e45760405162461bcd60e51b81526004016103ca906116b1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105585760405162461bcd60e51b81526004016103ca906116b1565b565b3360009081526003602052604090205460ff1661057657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610375338484610a81565b6000546001600160a01b031633146105cf5760405162461bcd60e51b81526004016103ca906116b1565b600e54600160a01b900460ff16156106295760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103ca565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106729030906106646009600a61168b565b6104ab90633b9aca0061169a565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e991906116e6565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f91906116e6565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e091906116e6565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d7194730610828816001600160a01b031660009081526001602052604090205490565b60008061083d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108a5573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108ca9190611703565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190611731565b6001600160a01b0383166109bf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ca565b6001600160a01b038216610a205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ca565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ca565b6001600160a01b038216610b475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ca565b60008111610ba95760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103ca565b60006001600160a01b0384163014801590610bcd57506001600160a01b0383163014155b15610df057600e54600160a81b900460ff16610c1257610c0f6064610c0960085460095411610bfe57600654610c02565b6007545b8590610f88565b90611011565b90505b600e546001600160a01b038581169116148015610c3d5750600d546001600160a01b03848116911614155b8015610c6257506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7c57506004546001600160a01b03848116911614155b15610cc15743600a5414610c94576000600b5543600a555b81600b6000828254610ca69190611753565b909155505060098054906000610cbb83611766565b91905055505b600e546001600160a01b038481169116148015610ce757506001600160a01b0384163014155b15610d4257610cf4611053565b600b541080610d05575043600a5414155b610d425760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103ca565b30600090815260016020526040902054600e54600160a81b900460ff16158015610d795750600e546001600160a01b038581169116145b8015610d8e5750600e54600160b01b900460ff165b8015610da857506004546001600160a01b03868116911614155b15610dee578015610de2576000600c548211610dc45781610dc8565b600c545b9050610de0818511610dda57846111e1565b816111e1565b505b47610dec4761135b565b505b505b6001600160a01b038416600090815260016020526040902054610e139083611399565b6001600160a01b038516600090815260016020526040902055610e58610e398383611399565b6001600160a01b038516600090815260016020526040902054906113db565b6001600160a01b0384166000908152600160205260409020558015610eeb5730600090815260016020526040902054610e9190826113db565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ee29085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f48576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f368585611399565b60405190815260200160405180910390a35b50505050565b60008184841115610f725760405162461bcd60e51b81526004016103ca9190611468565b506000610f7f848661177f565b95945050505050565b600082600003610f9a57506000610379565b6000610fa6838561169a565b905082610fb38583611792565b1461100a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103ca565b9392505050565b600061100a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061143a565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e591906116e6565b816000815181106110f8576110f86117ca565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061112c5761112c6117ca565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611178906729a2241af62c0000908690600401611825565b600060405180830381865afa158015611195573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111bd9190810190611846565b9050806001815181106111d2576111d26117ca565b60200260200101519250505090565b600e805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611229576112296117ca565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906116e6565b816001815181106112b9576112b96117ca565b6001600160a01b039283166020918202929092010152600d546112df913091168461095d565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611318908590600090869030904290600401611913565b600060405180830381600087803b15801561133257600080fd5b505af1158015611346573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611395573d6000803e3d6000fd5b5050565b600061100a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f4e565b6000806113e88385611753565b90508381101561100a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ca565b6000818361145b5760405162461bcd60e51b81526004016103ca9190611468565b506000610f7f8486611792565b602081526000825180602084015260005b818110156114965760208186018101516040868401015201611479565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461040c57600080fd5b600080604083850312156114de57600080fd5b82356114e9816114b6565b946020939093013593505050565b60008060006060848603121561150c57600080fd5b8335611517816114b6565b92506020840135611527816114b6565b929592945050506040919091013590565b60006020828403121561154a57600080fd5b813561100a816114b6565b6000806040838503121561156857600080fd5b8235611573816114b6565b91506020830135611583816114b6565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115df578085048111156115c3576115c361158e565b60018416156115d157908102905b60019390931c9280026115a8565b935093915050565b6000826115f657506001610379565b8161160357506000610379565b816001811461161957600281146116235761163f565b6001915050610379565b60ff8411156116345761163461158e565b50506001821b610379565b5060208310610133831016604e8410600b8410161715611662575081810a610379565b61166f60001984846115a4565b80600019048211156116835761168361158e565b029392505050565b600061100a60ff8416836115e7565b80820281158282048414176103795761037961158e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116f857600080fd5b815161100a816114b6565b60008060006060848603121561171857600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561174357600080fd5b8151801515811461100a57600080fd5b808201808211156103795761037961158e565b6000600182016117785761177861158e565b5060010190565b818103818111156103795761037961158e565b6000826117af57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561181b5781516001600160a01b03168652602095860195909101906001016117f4565b5093949350505050565b82815260406020820152600061183e60408301846117e0565b949350505050565b60006020828403121561185857600080fd5b815167ffffffffffffffff81111561186f57600080fd5b8201601f8101841361188057600080fd5b805167ffffffffffffffff81111561189a5761189a6117b4565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118c7576118c76117b4565b6040529182526020818401810192908101878411156118e557600080fd5b6020850194505b83851015611908578451808252602095860195909350016118ec565b509695505050505050565b85815284602082015260a06040820152600061193260a08301866117e0565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201dbf8e64c3ef44a403e5e5abd332e25bec689fa4185dac7c35b2f980b3b0d63e64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
