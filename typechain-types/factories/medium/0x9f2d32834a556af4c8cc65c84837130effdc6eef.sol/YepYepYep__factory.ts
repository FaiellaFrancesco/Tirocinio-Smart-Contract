/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YepYepYep,
  YepYepYepInterface,
} from "../../../medium/0x9f2d32834a556af4c8cc65c84837130effdc6eef.sol/YepYepYep";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxWalletSize",
        type: "uint256",
      },
    ],
    name: "MaxWalletSizeAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBuyTax",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSellTax",
        type: "uint256",
      },
    ],
    name: "TaxesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyTax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellTax",
        type: "uint256",
      },
    ],
    name: "modifyFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferEthFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferTaxFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040526014600455601960055560006006556000600755600060085560966009556014600a5560646009600a61003791906105f5565b6100459063767e790061060b565b61005090600261060b565b61005a9190610622565b600c55606461006b6009600a6105f5565b6100799063767e790061060b565b61008490600261060b565b61008e9190610622565b600d55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36100f46009600a6105f5565b6101029063767e790061060b565b33600090815260016020819052604082209290925560039061012c6000546001600160a01b031690565b6001600160a01b0316815260208082019290925260409081016000908120805494151560ff1995861617905530808252600390935290812080548416600190811790915573752404f5e143d20300c5fdc6f229b62f23e8742f9091527fd780a50f6d2986a737d63eae007d08bcd025bd061ef08edf3bb23249c9ca6e81805490931617909155600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556101ff91906101ec6009600a6105f5565b6101fa9063767e790061060b565b6103cd565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610644565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190610644565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036d9190610644565b6001600160a01b03166080523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6103a96009600a6105f5565b6103b79063767e790061060b565b60405190815260200160405180910390a361066d565b6001600160a01b0383166104345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104955760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156105475780850481111561052b5761052b6104f6565b600184161561053957908102905b60019390931c928002610510565b935093915050565b60008261055e575060016105ef565b8161056b575060006105ef565b8160018114610581576002811461058b576105a7565b60019150506105ef565b60ff84111561059c5761059c6104f6565b50506001821b6105ef565b5060208310610133831016604e8410600b84101617156105ca575081810a6105ef565b6105d7600019848461050c565b80600019048211156105eb576105eb6104f6565b0290505b92915050565b600061060460ff84168361054f565b9392505050565b80820281158282048414176105ef576105ef6104f6565b60008261063f57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561065657600080fd5b81516001600160a01b038116811461060457600080fd5b6080516118dc61069d6000396000818161096501528181610e0601528181610f62015261100601526118dc6000f3fe6080604052600436106101395760003560e01c80638da5cb5b116100ab578063bd41dbac1161006f578063bd41dbac14610368578063bf474bed14610388578063c9567bf91461039d578063dd62ed3e146103b2578063ee1c686c146103f8578063f6b20c3b1461040d57600080fd5b80638da5cb5b146102b45780638f9a55c0146102e657806395d89b41146102fc578063a9059cbb14610328578063b2bdfa7b1461034857600080fd5b8063313ce567116100fd578063313ce5671461020b5780633143089e1461022757806370a082311461023e578063715018a614610274578063751039fc146102895780637d1db4a51461029e57600080fd5b806306fdde0314610145578063095ea7b3146101835780630faee56f146101b357806318160ddd146101d657806323b872dd146101eb57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060408051808201909152600381526205965760ec1b60208201525b60405161017a919061148b565b60405180910390f35b34801561018f57600080fd5b506101a361019e3660046114ee565b610422565b604051901515815260200161017a565b3480156101bf57600080fd5b506101c8610439565b60405190815260200161017a565b3480156101e257600080fd5b506101c861046d565b3480156101f757600080fd5b506101a361020636600461151a565b61048e565b34801561021757600080fd5b506040516009815260200161017a565b34801561023357600080fd5b5061023c6104e0565b005b34801561024a57600080fd5b506101c861025936600461155b565b6001600160a01b031660009081526001602052604090205490565b34801561028057600080fd5b5061023c610533565b34801561029557600080fd5b5061023c610609565b3480156102aa57600080fd5b506101c8600c5481565b3480156102c057600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161017a565b3480156102f257600080fd5b506101c8600d5481565b34801561030857600080fd5b5060408051808201909152600381526205945560ec1b602082015261016d565b34801561033457600080fd5b506101a36103433660046114ee565b6106a6565b34801561035457600080fd5b506000546102ce906001600160a01b031681565b34801561037457600080fd5b5061023c610383366004611578565b6106b3565b34801561039457600080fd5b506101c861072e565b3480156103a957600080fd5b5061023c610755565b3480156103be57600080fd5b506101c86103cd36600461159a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561040457600080fd5b5061023c610a05565b34801561041957600080fd5b5061023c610a38565b600061042f338484610aa5565b5060015b92915050565b60646104476009600a6116d0565b6104559063767e79006116df565b6104609060026116df565b61046a91906116f6565b81565b600061047b6009600a6116d0565b6104899063767e79006116df565b905090565b600061049b848484610bc9565b6001600160a01b0384166000908152600260209081526040808320338085529252909120546104d69186916104d1908690611718565b610aa5565b5060019392505050565b3373752404f5e143d20300c5fdc6f229b62f23e8742f1461050057600080fd5b30600090815260016020526040902054801561051f5761051f816112b8565b47801561052f5761052f81611432565b5050565b6000546001600160a01b031633146105665760405162461bcd60e51b815260040161055d9061172b565b60405180910390fd5b600e54600160a01b900460ff166105bf5760405162461bcd60e51b815260206004820152601f60248201527f4f70656e2074726164696e67206265666f72652072656e6f756e63696e672e00604482015260640161055d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106335760405162461bcd60e51b815260040161055d9061172b565b61063f6009600a6116d0565b61064d9063767e79006116df565b600c5561065c6009600a6116d0565b61066a9063767e79006116df565b600d55600c546040519081527f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf906020015b60405180910390a1565b600061042f338484610bc9565b6000546001600160a01b031633146106dd5760405162461bcd60e51b815260040161055d9061172b565b600482905560058190556006829055600781905560408051838152602081018390527f35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4910160405180910390a15050565b606461073c6009600a6116d0565b61074a9063767e79006116df565b6104609060016116df565b6000546001600160a01b0316331461077f5760405162461bcd60e51b815260040161055d9061172b565b600e54600160a01b900460ff16156107d95760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161055d565b60006064600a546107ea6102593390565b6107f491906116df565b6107fe91906116f6565b61080733610259565b6108119190611718565b90506000811161085a5760405162461bcd60e51b815260206004820152601460248201527343616c6c657220686173206e6f20746f6b656e7360601b604482015260640161055d565b610865333083610bc9565b600e546001600160a01b031663f305d7194730610897816001600160a01b031660009081526001602052604090205490565b6000806108ac6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610914573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109399190611760565b5050600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201527f0000000000000000000000000000000000000000000000000000000000000000909116915063095ea7b3906044016020604051808303816000875af11580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d5919061178e565b5050600e805462ff00ff60a01b19166201000160a01b179055600b805463ffffffff19164363ffffffff16179055565b3373752404f5e143d20300c5fdc6f229b62f23e8742f14610a2557600080fd5b478015610a3557610a3581611432565b50565b6000546001600160a01b03163314610a625760405162461bcd60e51b815260040161055d9061172b565b6000600481905560058190556040805182815260208101929092527f35d461df023e70886ad5e68610133ecb7d637c2263453f6ea50daf699cb31ed4910161069c565b6001600160a01b038316610b075760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055d565b6001600160a01b038216610b685760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610c2d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055d565b6001600160a01b038216610c8f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055d565b60008111610cf15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161055d565b600080546001600160a01b03858116911614801590610d1e57506000546001600160a01b03848116911614155b1561117257600e54600160b01b900460ff1615610d6557606460095460085411610d4a57600454610d4e565b6006545b610d5890846116df565b610d6291906116f6565b90505b600b5463ffffffff9081164390911603610e0457600b805460329164010000000090910463ffffffff16906004610d9b836117b0565b91906101000a81548163ffffffff021916908363ffffffff16021790555063ffffffff1610610e045760405162461bcd60e51b8152602060048201526015602482015274457863657373206c61756e636820736e697065727360581b604482015260640161055d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015610e535750600e546001600160a01b03848116911614155b8015610e7857506001600160a01b03831660009081526003602052604090205460ff16155b15610f6057600c54821115610ecf5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161055d565b600d5482610ef2856001600160a01b031660009081526001602052604090205490565b610efc91906117d5565b1115610f4a5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161055d565b60088054906000610f5a836117e8565b91905055505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148015610faa57506001600160a01b0384163014155b15610fdf57606460095460085411610fc457600554610fc8565b6007545b610fd290846116df565b610fdc91906116f6565b90505b30600090815260016020526040902054600e54600160a81b900460ff1615801561103a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b801561104f5750600e54600160b01b900460ff165b801561108a575060646110646009600a6116d0565b6110729063767e79006116df565b61107d9060016116df565b61108791906116f6565b81115b801561109857506005600854115b15611170576010544311156110ad576000600f555b6003600f54106110ff5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161055d565b6111456111408461113b8460646111186009600a6116d0565b6111269063767e79006116df565b6111319060026116df565b61113b91906116f6565b611473565b6112b8565b4780156111555761115547611432565b600f8054906000611165836117e8565b909155505043601055505b505b80156111ed57306000908152600160205260409020546111939082906117d5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111e49085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054611211908390611718565b6001600160a01b0385166000908152600160205260409020556112348183611718565b6001600160a01b03841660009081526001602052604090205461125791906117d5565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6112a18486611718565b60405190815260200160405180910390a350505050565b600e805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061130057611300611801565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d9190611817565b8160018151811061139057611390611801565b6001600160a01b039283166020918202929092010152600e546113b69130911684610aa5565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906113ef908590600090869030904290600401611834565b600060405180830381600087803b15801561140957600080fd5b505af115801561141d573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b60405173752404f5e143d20300c5fdc6f229b62f23e8742f9082156108fc029083906000818181858888f1935050505015801561052f573d6000803e3d6000fd5b60008183116114825782611484565b815b9392505050565b602081526000825180602084015260005b818110156114b9576020818601810151604086840101520161149c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610a3557600080fd5b6000806040838503121561150157600080fd5b823561150c816114d9565b946020939093013593505050565b60008060006060848603121561152f57600080fd5b833561153a816114d9565b9250602084013561154a816114d9565b929592945050506040919091013590565b60006020828403121561156d57600080fd5b8135611484816114d9565b6000806040838503121561158b57600080fd5b50508035926020909101359150565b600080604083850312156115ad57600080fd5b82356115b8816114d9565b915060208301356115c8816114d9565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561162457808504811115611608576116086115d3565b600184161561161657908102905b60019390931c9280026115ed565b935093915050565b60008261163b57506001610433565b8161164857506000610433565b816001811461165e576002811461166857611684565b6001915050610433565b60ff841115611679576116796115d3565b50506001821b610433565b5060208310610133831016604e8410600b84101617156116a7575081810a610433565b6116b460001984846115e9565b80600019048211156116c8576116c86115d3565b029392505050565b600061148460ff84168361162c565b8082028115828204841417610433576104336115d3565b60008261171357634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610433576104336115d3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008060006060848603121561177557600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117a057600080fd5b8151801515811461148457600080fd5b600063ffffffff821663ffffffff81036117cc576117cc6115d3565b60010192915050565b80820180821115610433576104336115d3565b6000600182016117fa576117fa6115d3565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561182957600080fd5b8151611484816114d9565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156118865783516001600160a01b031683526020938401939092019160010161185f565b50506001600160a01b03959095166060840152505060800152939250505056fea264697066735822122079b5fb921b52fc02353782f1d22df99fe91472adf9d04424a2f88ba3c6570d3e64736f6c634300081e0033";

type YepYepYepConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YepYepYepConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YepYepYep__factory extends ContractFactory {
  constructor(...args: YepYepYepConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<YepYepYep> {
    return super.deploy(overrides || {}) as Promise<YepYepYep>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YepYepYep {
    return super.attach(address) as YepYepYep;
  }
  override connect(signer: Signer): YepYepYep__factory {
    return super.connect(signer) as YepYepYep__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YepYepYepInterface {
    return new utils.Interface(_abi) as YepYepYepInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YepYepYep {
    return new Contract(address, _abi, signerOrProvider) as YepYepYep;
  }
}
