/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LETHIMCOOK,
  LETHIMCOOKInterface,
} from "../../../medium/0x66722a4bd7b34a53921bbd91c2c0d7f27e344794.sol/LETHIMCOOK";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removelimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526006805460ff1916600117905560146007819055600881905560006009818155600a828155601c600b908155600c94909455600d93909355600e9190915561004b91610329565b61005990630bebc20061033f565b600f556100686009600a610329565b61007690630bebc20061033f565b6010556100856009600a610329565b61009290620f424061033f565b6011556100a16009600a610329565b6100af90630bebc20061033f565b6012556014805461ffff60a81b191690553480156100cc57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060068054610100600160a81b03191661010033021790556101316009600a610329565b610140906402540be40061033f565b33600090815260016020819052604082209290925560039061016a6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560065461010090049091168352912080549092161790556101cd3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102056009600a610329565b610214906402540be40061033f565b60405190815260200160405180910390a3610356565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561027b5780850481111561025f5761025f61022a565b600184161561026d57908102905b60019390931c928002610244565b935093915050565b60008261029257506001610323565b8161029f57506000610323565b81600181146102b557600281146102bf576102db565b6001915050610323565b60ff8411156102d0576102d061022a565b50506001821b610323565b5060208310610133831016604e8410600b84101617156102fe575081810a610323565b61030b6000198484610240565b806000190482111561031f5761031f61022a565b0290505b92915050565b600061033860ff841683610283565b9392505050565b80820281158282048414176103235761032361022a565b611887806103656000396000f3fe6080604052600436106101185760003560e01c8063715018a6116100a0578063a9059cbb11610064578063a9059cbb14610308578063bf474bed14610328578063c876d0b91461033e578063c9567bf914610358578063dd62ed3e1461036d57600080fd5b8063715018a6146102725780637d1db4a5146102875780638da5cb5b1461029d5780638f9a55c0146102c557806395d89b41146102db57600080fd5b806323b872dd116100e757806323b872dd146101d4578063313ce567146101f457806351bc3c85146102105780635e4ae81b1461022757806370a082311461023c57600080fd5b806306fdde0314610124578063095ea7b31461016b5780630faee56f1461019b57806318160ddd146101bf57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201909152600c81526b4c45542048494d20434f4f4b60a01b60208201525b6040516101629190611452565b60405180910390f35b34801561017757600080fd5b5061018b6101863660046114b8565b6103b3565b6040519015158152602001610162565b3480156101a757600080fd5b506101b160125481565b604051908152602001610162565b3480156101cb57600080fd5b506101b16103ca565b3480156101e057600080fd5b5061018b6101ef3660046114e4565b6103ec565b34801561020057600080fd5b5060405160098152602001610162565b34801561021c57600080fd5b50610225610455565b005b34801561023357600080fd5b506102256104ad565b34801561024857600080fd5b506101b1610257366004611525565b6001600160a01b031660009081526001602052604090205490565b34801561027e57600080fd5b50610225610575565b34801561029357600080fd5b506101b1600f5481565b3480156102a957600080fd5b506000546040516001600160a01b039091168152602001610162565b3480156102d157600080fd5b506101b160105481565b3480156102e757600080fd5b50604080518082019091526004815263434f4f4b60e01b6020820152610155565b34801561031457600080fd5b5061018b6103233660046114b8565b6105e9565b34801561033457600080fd5b506101b160115481565b34801561034a57600080fd5b5060065461018b9060ff1681565b34801561036457600080fd5b506102256105f6565b34801561037957600080fd5b506101b1610388366004611542565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103c03384846109b3565b5060015b92915050565b60006103d86009600a611678565b6103e7906402540be400611687565b905090565b60006103f9848484610ad7565b61044b84336104468560405180606001604052806028815260200161182a602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110b1565b6109b3565b5060019392505050565b60065461010090046001600160a01b0316336001600160a01b03161461047a57600080fd5b30600090815260016020526040902054801561049957610499816110eb565b4780156104a9576104a981611265565b5050565b6000546001600160a01b031633146104e05760405162461bcd60e51b81526004016104d79061169e565b60405180910390fd5b6104ec6009600a611678565b6104fb906402540be400611687565b600f5561050a6009600a611678565b610519906402540be400611687565b6010556006805460ff191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105536009600a611678565b610562906402540be400611687565b60405190815260200160405180910390a1565b6000546001600160a01b0316331461059f5760405162461bcd60e51b81526004016104d79061169e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006103c0338484610ad7565b6000546001600160a01b031633146106205760405162461bcd60e51b81526004016104d79061169e565b601454600160a01b900460ff161561067a5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d7565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106c49030906106b56009600a611678565b610446906402540be400611687565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906116d3565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c191906116d3565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561080e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083291906116d3565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d719473061087a816001600160a01b031660009081526001602052604090205490565b60008061088f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108f7573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061091c91906116f0565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610975573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610999919061171e565b506014805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b038316610a155760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d7565b6001600160a01b038216610a765760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b3b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d7565b6001600160a01b038216610b9d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d7565b60008111610bff5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d7565b600080546001600160a01b03858116911614801590610c2c57506000546001600160a01b03848116911614155b15610f6e57610c5d6064610c57600b54600e5411610c4c57600754610c50565b6009545b85906112a3565b9061132c565b60065490915060ff1615610d45576013546001600160a01b03848116911614801590610c9757506014546001600160a01b03848116911614155b15610d4557326000908152600560205260409020544311610d325760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a4016104d7565b3260009081526005602052604090204390555b6014546001600160a01b038581169116148015610d7057506013546001600160a01b03848116911614155b8015610d9557506001600160a01b03831660009081526003602052604090205460ff16155b15610e7d57600f54821115610dec5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d7565b60105482610e0f856001600160a01b031660009081526001602052604090205490565b610e199190611740565b1115610e675760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d7565b600e8054906000610e7783611753565b91905055505b6014546001600160a01b038481169116148015610ea357506001600160a01b0384163014155b15610ed057610ecd6064610c57600c54600e5411610ec357600854610c50565b600a5485906112a3565b90505b30600090815260016020526040902054601454600160a81b900460ff16158015610f0757506014546001600160a01b038581169116145b8015610f1c5750601454600160b01b900460ff165b8015610f29575060115481115b8015610f385750600d54600e54115b15610f6c57610f5a610f5584610f508460125461136e565b61136e565b6110eb565b478015610f6a57610f6a47611265565b505b505b8015610fe85730600090815260016020526040902054610f8e9082611383565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fdf9085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461100b90836113e2565b6001600160a01b03851660009081526001602052604090205561105061103183836113e2565b6001600160a01b03851660009081526001602052604090205490611383565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61109a85856113e2565b60405190815260200160405180910390a350505050565b600081848411156110d55760405162461bcd60e51b81526004016104d79190611452565b5060006110e2848661176c565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111335761113361177f565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561118c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b091906116d3565b816001815181106111c3576111c361177f565b6001600160a01b0392831660209182029290920101526013546111e991309116846109b3565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611222908590600090869030904290600401611795565b600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6006546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156104a9573d6000803e3d6000fd5b6000826000036112b5575060006103c4565b60006112c18385611687565b9050826112ce8583611807565b146113255760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d7565b9392505050565b600061132583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611424565b600081831161137d5782611325565b50919050565b6000806113908385611740565b9050838110156113255760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d7565b600061132583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b1565b600081836114455760405162461bcd60e51b81526004016104d79190611452565b5060006110e28486611807565b602081526000825180602084015260005b818110156114805760208186018101516040868401015201611463565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146114b557600080fd5b50565b600080604083850312156114cb57600080fd5b82356114d6816114a0565b946020939093013593505050565b6000806000606084860312156114f957600080fd5b8335611504816114a0565b92506020840135611514816114a0565b929592945050506040919091013590565b60006020828403121561153757600080fd5b8135611325816114a0565b6000806040838503121561155557600080fd5b8235611560816114a0565b91506020830135611570816114a0565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115cc578085048111156115b0576115b061157b565b60018416156115be57908102905b60019390931c928002611595565b935093915050565b6000826115e3575060016103c4565b816115f0575060006103c4565b816001811461160657600281146116105761162c565b60019150506103c4565b60ff8411156116215761162161157b565b50506001821b6103c4565b5060208310610133831016604e8410600b841016171561164f575081810a6103c4565b61165c6000198484611591565b80600019048211156116705761167061157b565b029392505050565b600061132560ff8416836115d4565b80820281158282048414176103c4576103c461157b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116e557600080fd5b8151611325816114a0565b60008060006060848603121561170557600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173057600080fd5b8151801515811461132557600080fd5b808201808211156103c4576103c461157b565b6000600182016117655761176561157b565b5060010190565b818103818111156103c4576103c461157b565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156117e75783516001600160a01b03168352602093840193909201916001016117c0565b50506001600160a01b039590951660608401525050608001529392505050565b60008261182457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ffded086870c53c430423dbeec4a4d41d52d4307a6f3cc4548ce0a763e0755be64736f6c634300081a0033";

type LETHIMCOOKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LETHIMCOOKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LETHIMCOOK__factory extends ContractFactory {
  constructor(...args: LETHIMCOOKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LETHIMCOOK & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LETHIMCOOK__factory {
    return super.connect(runner) as LETHIMCOOK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LETHIMCOOKInterface {
    return new Interface(_abi) as LETHIMCOOKInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LETHIMCOOK {
    return new Contract(address, _abi, runner) as unknown as LETHIMCOOK;
  }
}
