/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x346cbe4c002f851e7a1d9839b099fafc14138858.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launchMetaData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueDFEIRETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560006009556009600a61002b919061031a565b61003990633b9aca00610330565b600a556000600b819055600d805461ffff60a81b19169055600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b031660006000805160206119fd833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a33060006000805160206119fd83398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b611685806103786000396000f3fe6080604052600436106101025760003560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb146102d7578063cb0c05f4146102f7578063dd62ed3e1461030c578063ea414b2814610352578063ffdd7cfe1461037257600080fd5b8063715018a614610257578063751039fc1461026e5780638da5cb5b1461028357806395d89b41146102ab57600080fd5b806323b872dd116100d157806323b872dd146101cf578063313ce567146101ef5780636482c89a1461020b57806370a082311461022157600080fd5b806306fdde031461010e578063095ea7b3146101665780630faee56f1461019657806318160ddd146101ba57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152601b81527f31303020476f72696c6c617320567320426f6e6e696520426c7565000000000060208201525b60405161015d9190611253565b60405180910390f35b34801561017257600080fd5b506101866101813660046112b6565b610387565b604051901515815260200161015d565b3480156101a257600080fd5b506101ac600a5481565b60405190815260200161015d565b3480156101c657600080fd5b506101ac61039e565b3480156101db57600080fd5b506101866101ea3660046112e2565b6103bf565b3480156101fb57600080fd5b506040516009815260200161015d565b34801561021757600080fd5b506101ac600b5481565b34801561022d57600080fd5b506101ac61023c366004611323565b6001600160a01b031660009081526001602052604090205490565b34801561026357600080fd5b5061026c61046f565b005b34801561027a57600080fd5b5061026c6104ec565b34801561028f57600080fd5b506000546040516001600160a01b03909116815260200161015d565b3480156102b757600080fd5b5060408051808201909152600381526223ab2160e91b6020820152610150565b3480156102e357600080fd5b506101866102f23660046112b6565b610518565b34801561030357600080fd5b5061026c610525565b34801561031857600080fd5b506101ac610327366004611340565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035e57600080fd5b5061026c61036d366004611323565b61058b565b34801561037e57600080fd5b5061026c6105c9565b6000610394338484610981565b5060015b92915050565b60006103ac6009600a611476565b6103ba90633b9aca00611485565b905090565b60006103cc848484610aa5565b3360009081526003602052604090205460ff1615801561040e5750600d546001600160a01b038581169116148061040e57506001600160a01b03831661dead14155b1561046557610465843361046085604051806060016040528060288152602001611628602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ec7565b610981565b5060019392505050565b6000546001600160a01b031633146104a25760405162461bcd60e51b81526004016104999061149c565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105165760405162461bcd60e51b81526004016104999061149c565b565b6000610394338484610aa5565b6000546001600160a01b0316331461054f5760405162461bcd60e51b81526004016104999061149c565b6000471161055c57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610588573d6000803e3d6000fd5b50565b3360009081526003602052604090205460ff166105a757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105f35760405162461bcd60e51b81526004016104999061149c565b600d54600160a01b900460ff161561064d5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610499565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106969030906106886009600a611476565b61046090633b9aca00611485565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d91906114d1565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079391906114d1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080491906114d1565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d719473061084c816001600160a01b031660009081526001602052604090205490565b6000806108616000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108c9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108ee91906114ee565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610588919061151c565b6001600160a01b0383166109e35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610499565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610499565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b095760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610499565b6001600160a01b038216610b6b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610499565b60008111610bcd5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610499565b60006001600160a01b0384163014801590610bf157506001600160a01b0383163014155b15610d6957600d54600160a81b900460ff16610c3657610c336064610c2d60075460085411610c2257600554610c26565b6006545b8590610f01565b90610f8a565b90505b600d546001600160a01b038581169116148015610c615750600c546001600160a01b03848116911614155b8015610c8657506001600160a01b03831660009081526003602052604090205460ff16155b8015610ca057506004546001600160a01b03848116911614155b15610cbb5760088054906000610cb58361153e565b91905055505b30600090815260016020526040902054600d54600160a81b900460ff16158015610cf25750600d546001600160a01b038581169116145b8015610d075750600d54600160b01b900460ff165b8015610d2157506004546001600160a01b03868116911614155b15610d67578015610d5b576000600a548211610d3d5781610d41565b600a545b9050610d59818511610d535784610fcc565b81610fcc565b505b47610d6547611146565b505b505b6001600160a01b038416600090815260016020526040902054610d8c9083611184565b6001600160a01b038516600090815260016020526040902055610dd1610db28383611184565b6001600160a01b038516600090815260016020526040902054906111c6565b6001600160a01b0384166000908152600160205260409020558015610e645730600090815260016020526040902054610e0a90826111c6565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e5b9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ec1576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eaf8585611184565b60405190815260200160405180910390a35b50505050565b60008184841115610eeb5760405162461bcd60e51b81526004016104999190611253565b506000610ef88486611557565b95945050505050565b600082600003610f1357506000610398565b6000610f1f8385611485565b905082610f2c858361156a565b14610f835760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610499565b9392505050565b6000610f8383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611225565b600d805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110145761101461158c565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561106d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109191906114d1565b816001815181106110a4576110a461158c565b6001600160a01b039283166020918202929092010152600c546110ca9130911684610981565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906111039085906000908690309042906004016115a2565b600060405180830381600087803b15801561111d57600080fd5b505af1158015611131573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611180573d6000803e3d6000fd5b5050565b6000610f8383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ec7565b6000806111d38385611614565b905083811015610f835760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610499565b600081836112465760405162461bcd60e51b81526004016104999190611253565b506000610ef8848661156a565b602081526000825180602084015260005b818110156112815760208186018101516040868401015201611264565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461058857600080fd5b600080604083850312156112c957600080fd5b82356112d4816112a1565b946020939093013593505050565b6000806000606084860312156112f757600080fd5b8335611302816112a1565b92506020840135611312816112a1565b929592945050506040919091013590565b60006020828403121561133557600080fd5b8135610f83816112a1565b6000806040838503121561135357600080fd5b823561135e816112a1565b9150602083013561136e816112a1565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113ca578085048111156113ae576113ae611379565b60018416156113bc57908102905b60019390931c928002611393565b935093915050565b6000826113e157506001610398565b816113ee57506000610398565b8160018114611404576002811461140e5761142a565b6001915050610398565b60ff84111561141f5761141f611379565b50506001821b610398565b5060208310610133831016604e8410600b841016171561144d575081810a610398565b61145a600019848461138f565b806000190482111561146e5761146e611379565b029392505050565b6000610f8360ff8416836113d2565b808202811582820484141761039857610398611379565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114e357600080fd5b8151610f83816112a1565b60008060006060848603121561150357600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561152e57600080fd5b81518015158114610f8357600080fd5b60006001820161155057611550611379565b5060010190565b8181038181111561039857610398611379565b60008261158757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115f45783516001600160a01b03168352602093840193909201916001016115cd565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103985761039861137956fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122053efdebd3301fd52d140c9c7199c2bb84a28e4203d3bd2bd362cf580af1057c564736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
