/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0xa364f3640813e00aed07517efaf161994cd5f245.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearETHFROMCONTRACT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "goForIt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560006009556009600a61002b919061031a565b61003990633b9aca00610330565b600a556000600b819055600d805461ffff60a81b19169055600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b031660006000805160206119f5833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a33060006000805160206119f583398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b61167d806103786000396000f3fe6080604052600436106101025760003560e01c80636482c89a116100955780638da5cb5b116100645780638da5cb5b146102a257806395d89b41146102ca578063a9059cbb146102f9578063dd62ed3e14610319578063ea414b281461035f57600080fd5b80636482c89a1461022c57806370a0823114610242578063715018a614610278578063751039fc1461028d57600080fd5b806323b872dd116100d157806323b872dd146101c4578063313ce567146101e4578063317b31fe14610200578063473eb4dd1461021757600080fd5b806306fdde031461010e578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526012815271436c6f736564344d617850726f666974414960701b60208201525b604051610152919061124b565b60405180910390f35b34801561016757600080fd5b5061017b6101763660046112ae565b61037f565b6040519015158152602001610152565b34801561019757600080fd5b506101a1600a5481565b604051908152602001610152565b3480156101bb57600080fd5b506101a1610396565b3480156101d057600080fd5b5061017b6101df3660046112da565b6103b7565b3480156101f057600080fd5b5060405160098152602001610152565b34801561020c57600080fd5b50610215610467565b005b34801561022357600080fd5b506102156104d6565b34801561023857600080fd5b506101a1600b5481565b34801561024e57600080fd5b506101a161025d36600461131b565b6001600160a01b031660009081526001602052604090205490565b34801561028457600080fd5b5061021561088e565b34801561029957600080fd5b50610215610902565b3480156102ae57600080fd5b506000546040516001600160a01b039091168152602001610152565b3480156102d657600080fd5b5060408051808201909152600681526543344d50414960d01b6020820152610145565b34801561030557600080fd5b5061017b6103143660046112ae565b61092e565b34801561032557600080fd5b506101a1610334366004611338565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036b57600080fd5b5061021561037a36600461131b565b61093b565b600061038c338484610979565b5060015b92915050565b60006103a46009600a61146e565b6103b290633b9aca0061147d565b905090565b60006103c4848484610a9d565b3360009081526003602052604090205460ff161580156104065750600d546001600160a01b038581169116148061040657506001600160a01b03831661dead14155b1561045d5761045d843361045885604051806060016040528060288152602001611620602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ebf565b610979565b5060019392505050565b6000546001600160a01b0316331461049a5760405162461bcd60e51b815260040161049190611494565b60405180910390fd5b600047116104a757600080fd5b60405133904780156108fc02916000818181858888f193505050501580156104d3573d6000803e3d6000fd5b50565b6000546001600160a01b031633146105005760405162461bcd60e51b815260040161049190611494565b600d54600160a01b900460ff161561055a5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610491565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105a39030906105956009600a61146e565b61045890633b9aca0061147d565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a91906114c9565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a091906114c9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071191906114c9565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d7194730610759816001600160a01b031660009081526001602052604090205490565b60008061076e6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107d6573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107fb91906114e6565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561086a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190611514565b6000546001600160a01b031633146108b85760405162461bcd60e51b815260040161049190611494565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461092c5760405162461bcd60e51b815260040161049190611494565b565b600061038c338484610a9d565b3360009081526003602052604090205460ff1661095757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610491565b6001600160a01b038216610a3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610491565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610491565b6001600160a01b038216610b635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610491565b60008111610bc55760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610491565b60006001600160a01b0384163014801590610be957506001600160a01b0383163014155b15610d6157600d54600160a81b900460ff16610c2e57610c2b6064610c2560075460085411610c1a57600554610c1e565b6006545b8590610ef9565b90610f82565b90505b600d546001600160a01b038581169116148015610c595750600c546001600160a01b03848116911614155b8015610c7e57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9857506004546001600160a01b03848116911614155b15610cb35760088054906000610cad83611536565b91905055505b30600090815260016020526040902054600d54600160a81b900460ff16158015610cea5750600d546001600160a01b038581169116145b8015610cff5750600d54600160b01b900460ff165b8015610d1957506004546001600160a01b03868116911614155b15610d5f578015610d53576000600a548211610d355781610d39565b600a545b9050610d51818511610d4b5784610fc4565b81610fc4565b505b47610d5d4761113e565b505b505b6001600160a01b038416600090815260016020526040902054610d84908361117c565b6001600160a01b038516600090815260016020526040902055610dc9610daa838361117c565b6001600160a01b038516600090815260016020526040902054906111be565b6001600160a01b0384166000908152600160205260409020558015610e5c5730600090815260016020526040902054610e0290826111be565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e539085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb9576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea7858561117c565b60405190815260200160405180910390a35b50505050565b60008184841115610ee35760405162461bcd60e51b8152600401610491919061124b565b506000610ef0848661154f565b95945050505050565b600082600003610f0b57506000610390565b6000610f17838561147d565b905082610f248583611562565b14610f7b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610491565b9392505050565b6000610f7b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061121d565b600d805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061100c5761100c611584565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611065573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108991906114c9565b8160018151811061109c5761109c611584565b6001600160a01b039283166020918202929092010152600c546110c29130911684610979565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110fb90859060009086903090429060040161159a565b600060405180830381600087803b15801561111557600080fd5b505af1158015611129573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611178573d6000803e3d6000fd5b5050565b6000610f7b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebf565b6000806111cb838561160c565b905083811015610f7b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610491565b6000818361123e5760405162461bcd60e51b8152600401610491919061124b565b506000610ef08486611562565b602081526000825180602084015260005b81811015611279576020818601810151604086840101520161125c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146104d357600080fd5b600080604083850312156112c157600080fd5b82356112cc81611299565b946020939093013593505050565b6000806000606084860312156112ef57600080fd5b83356112fa81611299565b9250602084013561130a81611299565b929592945050506040919091013590565b60006020828403121561132d57600080fd5b8135610f7b81611299565b6000806040838503121561134b57600080fd5b823561135681611299565b9150602083013561136681611299565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113c2578085048111156113a6576113a6611371565b60018416156113b457908102905b60019390931c92800261138b565b935093915050565b6000826113d957506001610390565b816113e657506000610390565b81600181146113fc576002811461140657611422565b6001915050610390565b60ff84111561141757611417611371565b50506001821b610390565b5060208310610133831016604e8410600b8410161715611445575081810a610390565b6114526000198484611387565b806000190482111561146657611466611371565b029392505050565b6000610f7b60ff8416836113ca565b808202811582820484141761039057610390611371565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114db57600080fd5b8151610f7b81611299565b6000806000606084860312156114fb57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561152657600080fd5b81518015158114610f7b57600080fd5b60006001820161154857611548611371565b5060010190565b8181038181111561039057610390611371565b60008261157f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115ec5783516001600160a01b03168352602093840193909201916001016115c5565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103905761039061137156fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212202e6743776a633e1ece268f5086c05029860344b774cba8e7ae3c74bfcf5b0cba64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
