/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Fefe,
  FefeInterface,
} from "../../../medium/0x84ac09c22b6d3671a079a8b46095406f9e51664e.sol/Fefe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526011600655601160075560006008556000600955600a8055600a600b556005600c556000600d556000600e556009600a62000040919062000349565b6200004f90621e848062000361565b600f55620000606009600a62000349565b6200006f90621e848062000361565b601055620000806009600a62000349565b6200008f90620f424062000361565b601155620000a06009600a62000349565b620000af90621c61a062000361565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d757600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001396009600a62000349565b62000149906305f5e10062000361565b336000908152600160208190526040822092909255600390620001746000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d33390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200020d6009600a62000349565b6200021d906305f5e10062000361565b60405190815260200160405180910390a36200037b565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028b5781600019048211156200026f576200026f62000234565b808516156200027d57918102915b93841c93908002906200024f565b509250929050565b600082620002a45750600162000343565b81620002b35750600062000343565b8160018114620002cc5760028114620002d757620002f7565b600191505062000343565b60ff841115620002eb57620002eb62000234565b50506001821b62000343565b5060208310610133831016604e8410600b84101617156200031c575081810a62000343565b6200032883836200024a565b80600019048211156200033f576200033f62000234565b0290505b92915050565b60006200035a60ff84168362000293565b9392505050565b808202811582820484141762000343576200034362000234565b611c68806200038b6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103c8578063bf474bed146103e8578063c9567bf9146103fe578063d34628cc14610413578063dd62ed3e14610433578063ec1f3f631461047957600080fd5b8063715018a61461031d578063751039fc146103325780637d1db4a5146103475780638da5cb5b1461035d5780638f9a55c01461038557806395d89b411461039b57600080fd5b8063313ce56711610108578063313ce5671461024857806331c2d847146102645780633bbac5791461028457806351bc3c85146102bd5780636fc3eaec146102d257806370a08231146102e757600080fd5b806306fdde031461015b578063095ea7b3146101a85780630faee56f146101d8578063109daa99146101fc57806318160ddd1461021357806323b872dd1461022857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152601281527146656665206279204d61747420467572696560701b60208201525b60405161019f9190611733565b60405180910390f35b3480156101b457600080fd5b506101c86101c33660046117a7565b610499565b604051901515815260200161019f565b3480156101e457600080fd5b506101ee60125481565b60405190815260200161019f565b34801561020857600080fd5b506102116104b0565b005b34801561021f57600080fd5b506101ee610520565b34801561023457600080fd5b506101c86102433660046117d3565b610541565b34801561025457600080fd5b506040516009815260200161019f565b34801561027057600080fd5b5061021161027f36600461182a565b6105aa565b34801561029057600080fd5b506101c861029f3660046118ef565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102c957600080fd5b50610211610636565b3480156102de57600080fd5b50610211610685565b3480156102f357600080fd5b506101ee6103023660046118ef565b6001600160a01b031660009081526001602052604090205490565b34801561032957600080fd5b506102116106b2565b34801561033e57600080fd5b50610211610726565b34801561035357600080fd5b506101ee600f5481565b34801561036957600080fd5b506000546040516001600160a01b03909116815260200161019f565b34801561039157600080fd5b506101ee60105481565b3480156103a757600080fd5b506040805180820190915260048152634645464560e01b6020820152610192565b3480156103d457600080fd5b506101c86103e33660046117a7565b6107d3565b3480156103f457600080fd5b506101ee60115481565b34801561040a57600080fd5b506102116107e0565b34801561041f57600080fd5b5061021161042e36600461182a565b610b9c565b34801561043f57600080fd5b506101ee61044e36600461190c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561048557600080fd5b50610211610494366004611945565b610c24565b60006104a6338484610c6b565b5060015b92915050565b6000546001600160a01b031633146104e35760405162461bcd60e51b81526004016104da9061195e565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061052e6009600a611a8d565b61053c906305f5e100611a9c565b905090565b600061054e848484610d8f565b6105a0843361059b85604051806060016040528060288152602001611c0b602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611396565b610c6b565b5060019392505050565b6000546001600160a01b031633146105d45760405162461bcd60e51b81526004016104da9061195e565b60005b8151811015610632576000600460008484815181106105f8576105f8611ab3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105d7565b5050565b6005546001600160a01b0316336001600160a01b03161461065657600080fd5b30600090815260016020526040902054801561067557610675816113d0565b478015610632576106328161154a565b6005546001600160a01b0316336001600160a01b0316146106a557600080fd5b476106af8161154a565b50565b6000546001600160a01b031633146106dc5760405162461bcd60e51b81526004016104da9061195e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107505760405162461bcd60e51b81526004016104da9061195e565b61075c6009600a611a8d565b61076a906305f5e100611a9c565b600f556107796009600a611a8d565b610787906305f5e100611a9c565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b76009600a611a8d565b6107c5906305f5e100611a9c565b604051908152602001610516565b60006104a6338484610d8f565b6000546001600160a01b0316331461080a5760405162461bcd60e51b81526004016104da9061195e565b601454600160a01b900460ff16156108645760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104da565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108ad90309061089f6009600a611a8d565b61059b906305f5e100611a9c565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611ac9565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109aa9190611ac9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b9190611ac9565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a63816001600160a01b031660009081526001602052604090205490565b600080610a786000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ae0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b059190611ae6565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190611b14565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bc65760405162461bcd60e51b81526004016104da9061195e565b60005b815181101561063257600160046000848481518110610bea57610bea611ab3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc9565b6005546001600160a01b0316336001600160a01b031614610c4457600080fd5b6008548111158015610c5857506009548111155b610c6157600080fd5b6008819055600955565b6001600160a01b038316610ccd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104da565b6001600160a01b038216610d2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104da565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610df35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104da565b6001600160a01b038216610e555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104da565b60008111610eb75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104da565b600080546001600160a01b03858116911614801590610ee457506000546001600160a01b03848116911614155b15611253576001600160a01b03841660009081526004602052604090205460ff16158015610f2b57506001600160a01b03831660009081526004602052604090205460ff16155b610f3457600080fd5b600e54600003610f6d57610f6a6064610f64600a54600e5411610f5957600654610f5d565b6008545b8590611584565b9061160d565b90505b600e5415610f9257610f8f6064610f64600d548561158490919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fbd57506013546001600160a01b03848116911614155b8015610fe257506001600160a01b03831660009081526003602052604090205460ff16155b156110e757600f548211156110395760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104da565b6010548261105c856001600160a01b031660009081526001602052604090205490565b6110669190611b36565b11156110b45760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104da565b6110cf6064610f64600a54600e5411610f5957600654610f5d565b600e805491925060006110e183611b49565b91905055505b6014546001600160a01b03848116911614801561110d57506001600160a01b0384163014155b1561113a576111376064610f64600b54600e541161112d57600754610f5d565b6009548590611584565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561117157506014546001600160a01b038581169116145b80156111865750601454600160b01b900460ff165b8015611193575060115481115b80156111a25750600c54600e54115b15611251576016544311156111b75760006015555b6003601554106112095760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104da565b6112266112218461121c8460125461164f565b61164f565b6113d0565b478015611236576112364761154a565b6015805490600061124683611b49565b909155505043601655505b505b80156112cd57306000908152600160205260409020546112739082611664565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112c49085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112f090836116c3565b6001600160a01b03851660009081526001602052604090205561133561131683836116c3565b6001600160a01b03851660009081526001602052604090205490611664565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137f85856116c3565b60405190815260200160405180910390a350505050565b600081848411156113ba5760405162461bcd60e51b81526004016104da9190611733565b5060006113c78486611b62565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141857611418611ab3565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190611ac9565b816001815181106114a8576114a8611ab3565b6001600160a01b0392831660209182029290920101526013546114ce9130911684610c6b565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611507908590600090869030904290600401611b75565b600060405180830381600087803b15801561152157600080fd5b505af1158015611535573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610632573d6000803e3d6000fd5b600082600003611596575060006104aa565b60006115a28385611a9c565b9050826115af8583611be8565b146116065760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104da565b9392505050565b600061160683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611705565b600081831161165e5782611606565b50919050565b6000806116718385611b36565b9050838110156116065760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104da565b600061160683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611396565b600081836117265760405162461bcd60e51b81526004016104da9190611733565b5060006113c78486611be8565b60006020808352835180602085015260005b8181101561176157858101830151858201604001528201611745565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106af57600080fd5b80356117a281611782565b919050565b600080604083850312156117ba57600080fd5b82356117c581611782565b946020939093013593505050565b6000806000606084860312156117e857600080fd5b83356117f381611782565b9250602084013561180381611782565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183d57600080fd5b823567ffffffffffffffff8082111561185557600080fd5b818501915085601f83011261186957600080fd5b81358181111561187b5761187b611814565b8060051b604051601f19603f830116810181811085821117156118a0576118a0611814565b6040529182528482019250838101850191888311156118be57600080fd5b938501935b828510156118e3576118d485611797565b845293850193928501926118c3565b98975050505050505050565b60006020828403121561190157600080fd5b813561160681611782565b6000806040838503121561191f57600080fd5b823561192a81611782565b9150602083013561193a81611782565b809150509250929050565b60006020828403121561195757600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119e45781600019048211156119ca576119ca611993565b808516156119d757918102915b93841c93908002906119ae565b509250929050565b6000826119fb575060016104aa565b81611a08575060006104aa565b8160018114611a1e5760028114611a2857611a44565b60019150506104aa565b60ff841115611a3957611a39611993565b50506001821b6104aa565b5060208310610133831016604e8410600b8410161715611a67575081810a6104aa565b611a7183836119a9565b8060001904821115611a8557611a85611993565b029392505050565b600061160660ff8416836119ec565b80820281158282048414176104aa576104aa611993565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611adb57600080fd5b815161160681611782565b600080600060608486031215611afb57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b2657600080fd5b8151801515811461160657600080fd5b808201808211156104aa576104aa611993565b600060018201611b5b57611b5b611993565b5060010190565b818103818111156104aa576104aa611993565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bc75784516001600160a01b031683529383019391830191600101611ba2565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c0557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220f1d158e62f2612f3f5770e9e14fa7b27ddef83419c58bb9a3c391c21153beb2d64736f6c63430008170033";

type FefeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FefeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fefe__factory extends ContractFactory {
  constructor(...args: FefeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Fefe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Fefe__factory {
    return super.connect(runner) as Fefe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FefeInterface {
    return new Interface(_abi) as FefeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Fefe {
    return new Contract(address, _abi, runner) as unknown as Fefe;
  }
}
