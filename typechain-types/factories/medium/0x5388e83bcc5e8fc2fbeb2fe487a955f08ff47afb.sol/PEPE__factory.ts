/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PEPE,
  PEPEInterface,
} from "../../../medium/0x5388e83bcc5e8fc2fbeb2fe487a955f08ff47afb.sol/PEPE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556017600a556017600b556017600c556046600d556000600e556012600a620000419190620004f0565b620000509062e4e1c062000508565b600f55620000616012600a620004f0565b62000071906301312d0062000508565b601055620000826012600a620004f0565b62000091906298968062000508565b601155620000a26012600a620004f0565b620000b1906298968062000508565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013b6012600a620004f0565b6200014b90633b9aca0062000508565b336000908152600160208190526040822092909255600390620001766000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600384528281208054861660019081179091556005549092168152829020805490941617909255601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155825163c45a015560e01b81529251909263c45a01559260048083019391928290030181865afa1580156200022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000255919062000522565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002de919062000522565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200032c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000352919062000522565b601480546001600160a01b0319166001600160a01b03929092169190911790556200037a3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003b46012600a620004f0565b620003c490633b9aca0062000508565b60405190815260200160405180910390a36200054d565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000432578160001904821115620004165762000416620003db565b808516156200042457918102915b93841c9390800290620003f6565b509250929050565b6000826200044b57506001620004ea565b816200045a57506000620004ea565b81600181146200047357600281146200047e576200049e565b6001915050620004ea565b60ff841115620004925762000492620003db565b50506001821b620004ea565b5060208310610133831016604e8410600b8410161715620004c3575081810a620004ea565b620004cf8383620003f1565b8060001904821115620004e657620004e6620003db565b0290505b92915050565b60006200050160ff8416836200043a565b9392505050565b8082028115828204841417620004ea57620004ea620003db565b6000602082840312156200053557600080fd5b81516001600160a01b03811681146200050157600080fd5b611c6b806200055d6000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103d6578063bf474bed146103f6578063c9567bf91461040c578063d34628cc14610421578063dd62ed3e14610441578063ec1f3f631461048757600080fd5b8063751039fc146103205780637d1db4a5146103355780638cd4426d1461034b5780638da5cb5b1461036b5780638f9a55c01461039357806395d89b41146103a957600080fd5b8063313ce56711610108578063313ce5671461024b57806331c2d847146102675780633bbac5791461028757806351bc3c85146102c057806370a08231146102d5578063715018a61461030b57600080fd5b806306fdde031461015b578063095ea7b3146101ab5780630faee56f146101db578063109daa99146101ff57806318160ddd1461021657806323b872dd1461022b57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506040805180820190915260158152742832b83290313c9020b4bcb0b730902ab232b9b2b760591b60208201525b6040516101a2919061171a565b60405180910390f35b3480156101b757600080fd5b506101cb6101c6366004611791565b6104a7565b60405190151581526020016101a2565b3480156101e757600080fd5b506101f160125481565b6040519081526020016101a2565b34801561020b57600080fd5b506102146104be565b005b34801561022257600080fd5b506101f161052e565b34801561023757600080fd5b506101cb6102463660046117bd565b61054f565b34801561025757600080fd5b50604051601281526020016101a2565b34801561027357600080fd5b50610214610282366004611814565b6105b8565b34801561029357600080fd5b506101cb6102a23660046118d9565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102cc57600080fd5b50610214610644565b3480156102e157600080fd5b506101f16102f03660046118d9565b6001600160a01b031660009081526001602052604090205490565b34801561031757600080fd5b506102146106aa565b34801561032c57600080fd5b5061021461071e565b34801561034157600080fd5b506101f1600f5481565b34801561035757600080fd5b50610214610366366004611791565b6107cb565b34801561037757600080fd5b506000546040516001600160a01b0390911681526020016101a2565b34801561039f57600080fd5b506101f160105481565b3480156103b557600080fd5b506040805180820190915260048152635045504560e01b6020820152610195565b3480156103e257600080fd5b506101cb6103f1366004611791565b6108f8565b34801561040257600080fd5b506101f160115481565b34801561041857600080fd5b50610214610905565b34801561042d57600080fd5b5061021461043c366004611814565b610b6f565b34801561044d57600080fd5b506101f161045c3660046118f6565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561049357600080fd5b506102146104a236600461192f565b610bf7565b60006104b4338484610c3e565b5060015b92915050565b6000546001600160a01b031633146104f15760405162461bcd60e51b81526004016104e890611948565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061053c6012600a611a77565b61054a90633b9aca00611a86565b905090565b600061055c848484610d62565b6105ae84336105a985604051806060016040528060288152602001611c0e602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061137d565b610c3e565b5060019392505050565b6000546001600160a01b031633146105e25760405162461bcd60e51b81526004016104e890611948565b60005b81518110156106405760006004600084848151811061060657610606611a9d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105e5565b5050565b6005546001600160a01b0316336001600160a01b03161461066457600080fd5b30600090815260016020526040902054801580159061068c5750601454600160b01b900460ff165b1561069a5761069a816113b7565b4780156106405761064081611531565b6000546001600160a01b031633146106d45760405162461bcd60e51b81526004016104e890611948565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016104e890611948565b6107546012600a611a77565b61076290633b9aca00611a86565b600f556107716012600a611a77565b61077f90633b9aca00611a86565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107af6012600a611a77565b6107bd90633b9aca00611a86565b604051908152602001610524565b6000546001600160a01b031633146107f55760405162461bcd60e51b81526004016104e890611948565b6040516370a0823160e01b8152306004820152600090610879906064906108739085906001600160a01b038816906370a0823190602401602060405180830381865afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190611ab3565b9061156b565b906115f4565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190611acc565b50505050565b60006104b4338484610d62565b6000546001600160a01b0316331461092f5760405162461bcd60e51b81526004016104e890611948565b601454600160a01b900460ff16156109895760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104e8565b6014546001600160a01b03166109d85760405162461bcd60e51b815260206004820152601460248201527314185a5c881b9bdd081a5b9a5d1a585b1a5e995960621b60448201526064016104e8565b601354610a049030906001600160a01b03166109f66012600a611a77565b6105a990633b9aca00611a86565b6013546001600160a01b031663f305d7194730610a36816001600160a01b031660009081526001602052604090205490565b600080610a4b6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ab3573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ad89190611aee565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b559190611acc565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610b995760405162461bcd60e51b81526004016104e890611948565b60005b815181101561064057600160046000848481518110610bbd57610bbd611a9d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b9c565b6005546001600160a01b0316336001600160a01b031614610c1757600080fd5b6008548111158015610c2b57506009548111155b610c3457600080fd5b6008819055600955565b6001600160a01b038316610ca05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e8565b6001600160a01b038216610d015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e8565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dc65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e8565b6001600160a01b038216610e285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e8565b60008111610e8a5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104e8565b600080546001600160a01b03858116911614801590610eb757506000546001600160a01b03848116911614155b8015610ed157506005546001600160a01b03848116911614155b1561123a576001600160a01b03841660009081526004602052604090205460ff16158015610f1857506001600160a01b03831660009081526004602052604090205460ff16155b610f2157600080fd5b600e54600003610f5457610f516064610873600a54600e5411610f4657600654610f4a565b6008545b859061156b565b90505b600e5415610f7957610f766064610873600d548561156b90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fa457506013546001600160a01b03848116911614155b8015610fc957506001600160a01b03831660009081526003602052604090205460ff16155b156110ce57600f548211156110205760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104e8565b60105482611043856001600160a01b031660009081526001602052604090205490565b61104d9190611b1c565b111561109b5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104e8565b6110b66064610873600a54600e5411610f4657600654610f4a565b600e805491925060006110c883611b2f565b91905055505b6014546001600160a01b0384811691161480156110f457506001600160a01b0384163014155b156111215761111e6064610873600b54600e541161111457600754610f4a565b600954859061156b565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561115857506014546001600160a01b038581169116145b801561116d5750601454600160b01b900460ff165b801561117a575060115481115b80156111895750600c54600e54115b156112385760165443111561119e5760006015555b6003601554106111f05760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104e8565b61120d6112088461120384601254611636565b611636565b6113b7565b47801561121d5761121d47611531565b6015805490600061122d83611b2f565b909155505043601655505b505b80156112b4573060009081526001602052604090205461125a908261164b565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112ab9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112d790836116aa565b6001600160a01b03851660009081526001602052604090205561131c6112fd83836116aa565b6001600160a01b0385166000908152600160205260409020549061164b565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61136685856116aa565b60405190815260200160405180910390a350505050565b600081848411156113a15760405162461bcd60e51b81526004016104e8919061171a565b5060006113ae8486611b48565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106113ff576113ff611a9d565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147c9190611b5b565b8160018151811061148f5761148f611a9d565b6001600160a01b0392831660209182029290920101526013546114b59130911684610c3e565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906114ee908590600090869030904290600401611b78565b600060405180830381600087803b15801561150857600080fd5b505af115801561151c573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610640573d6000803e3d6000fd5b60008260000361157d575060006104b8565b60006115898385611a86565b9050826115968583611beb565b146115ed5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104e8565b9392505050565b60006115ed83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116ec565b600081831161164557826115ed565b50919050565b6000806116588385611b1c565b9050838110156115ed5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104e8565b60006115ed83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061137d565b6000818361170d5760405162461bcd60e51b81526004016104e8919061171a565b5060006113ae8486611beb565b60006020808352835180602085015260005b818110156117485785810183015185820160400152820161172c565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461177e57600080fd5b50565b803561178c81611769565b919050565b600080604083850312156117a457600080fd5b82356117af81611769565b946020939093013593505050565b6000806000606084860312156117d257600080fd5b83356117dd81611769565b925060208401356117ed81611769565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561182757600080fd5b823567ffffffffffffffff8082111561183f57600080fd5b818501915085601f83011261185357600080fd5b813581811115611865576118656117fe565b8060051b604051601f19603f8301168101818110858211171561188a5761188a6117fe565b6040529182528482019250838101850191888311156118a857600080fd5b938501935b828510156118cd576118be85611781565b845293850193928501926118ad565b98975050505050505050565b6000602082840312156118eb57600080fd5b81356115ed81611769565b6000806040838503121561190957600080fd5b823561191481611769565b9150602083013561192481611769565b809150509250929050565b60006020828403121561194157600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119ce5781600019048211156119b4576119b461197d565b808516156119c157918102915b93841c9390800290611998565b509250929050565b6000826119e5575060016104b8565b816119f2575060006104b8565b8160018114611a085760028114611a1257611a2e565b60019150506104b8565b60ff841115611a2357611a2361197d565b50506001821b6104b8565b5060208310610133831016604e8410600b8410161715611a51575081810a6104b8565b611a5b8383611993565b8060001904821115611a6f57611a6f61197d565b029392505050565b60006115ed60ff8416836119d6565b80820281158282048414176104b8576104b861197d565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ac557600080fd5b5051919050565b600060208284031215611ade57600080fd5b815180151581146115ed57600080fd5b600080600060608486031215611b0357600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104b8576104b861197d565b600060018201611b4157611b4161197d565b5060010190565b818103818111156104b8576104b861197d565b600060208284031215611b6d57600080fd5b81516115ed81611769565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bca5784516001600160a01b031683529383019391830191600101611ba5565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c0857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220f005087de69d03b16826ed8e337f50853bbb0e368e786ffe26e16cbcf65c134964736f6c63430008170033";

type PEPEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PEPEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PEPE__factory extends ContractFactory {
  constructor(...args: PEPEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PEPE> {
    return super.deploy(overrides || {}) as Promise<PEPE>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PEPE {
    return super.attach(address) as PEPE;
  }
  override connect(signer: Signer): PEPE__factory {
    return super.connect(signer) as PEPE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PEPEInterface {
    return new utils.Interface(_abi) as PEPEInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PEPE {
    return new Contract(address, _abi, signerOrProvider) as PEPE;
  }
}
