/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x8532c9433f1c22f39326df7cd16c5909e74566bf.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueMUETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600c6005556000600655600c600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600c55600e805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061198083398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061198083398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611610806103706000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b411461010f578063a9059cbb14610276578063dd62ed3e14610296578063ea414b28146102dc57600080fd5b806370a08231146101ee578063715018a6146102245780638a8c523c146102395780638da5cb5b1461024e57600080fd5b80630faee56f116100c65780630faee56f1461017957806318160ddd1461019d57806323b872dd146101b2578063313ce567146101d257600080fd5b806301d5c0f7146100f857806306fdde031461010f578063095ea7b31461014957600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061010d6102fc565b005b34801561011b57600080fd5b5060408051808201825260028152614d5560f01b6020820152905161014091906111de565b60405180910390f35b34801561015557600080fd5b50610169610164366004611241565b61036b565b6040519015158152602001610140565b34801561018557600080fd5b5061018f600c5481565b604051908152602001610140565b3480156101a957600080fd5b5061018f610382565b3480156101be57600080fd5b506101696101cd36600461126d565b6103a3565b3480156101de57600080fd5b5060405160098152602001610140565b3480156101fa57600080fd5b5061018f6102093660046112ae565b6001600160a01b031660009081526001602052604090205490565b34801561023057600080fd5b5061010d610461565b34801561024557600080fd5b5061010d6104d5565b34801561025a57600080fd5b506000546040516001600160a01b039091168152602001610140565b34801561028257600080fd5b50610169610291366004611241565b61088d565b3480156102a257600080fd5b5061018f6102b13660046112cb565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102e857600080fd5b5061010d6102f73660046112ae565b61089a565b6000546001600160a01b0316331461032f5760405162461bcd60e51b815260040161032690611304565b60405180910390fd5b6000471161033c57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610368573d6000803e3d6000fd5b50565b60006103783384846108d8565b5060015b92915050565b60006103906009600a611436565b61039e906319133850611445565b905090565b60006103b08484846109fc565b6004546001600160a01b031633148015906104005750600e546001600160a01b03858116911614806103ed57506001600160a01b03831661dead14155b8061040057506001600160a01b03841630145b15610457576104578433610452856040518060600160405280602881526020016115b3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e52565b6108d8565b5060019392505050565b6000546001600160a01b0316331461048b5760405162461bcd60e51b815260040161032690611304565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104ff5760405162461bcd60e51b815260040161032690611304565b600e54600160a01b900460ff16156105595760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610326565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105a29030906105946009600a611436565b610452906319133850611445565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061145c565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f919061145c565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610710919061145c565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d7194730610758816001600160a01b031660009081526001602052604090205490565b60008061076d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107d5573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107fa9190611479565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906114a7565b60006103783384846109fc565b3360009081526003602052604090205460ff166108b657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661093a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610326565b6001600160a01b03821661099b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610326565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610326565b6001600160a01b038216610ac25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610326565b60008111610b245760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610326565b60006001600160a01b0384163014801590610b4857506001600160a01b0383163014155b15610cf457600e546001600160a01b038581169116148015610b785750600d546001600160a01b03848116911614155b8015610b9d57506001600160a01b03831660009081526003602052604090205460ff16155b8015610bb757506004546001600160a01b03848116911614155b15610c0057610be86064610be260075460085411610bd757600554610bdb565b6006545b8590610e8c565b90610f15565b600880549192506000610bfa836114c9565b91905055505b30600090815260016020526040902054600e54600160a81b900460ff16158015610c375750600e546001600160a01b038581169116145b8015610c4c5750600e54600160b01b900460ff165b8015610c6657506004546001600160a01b03868116911614155b15610cf257843b15610cb15760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610326565b8015610ce6576000600c548211610cc85781610ccc565b600c545b9050610ce4818511610cde5784610f57565b81610f57565b505b47610cf0476110d1565b505b505b6001600160a01b038416600090815260016020526040902054610d17908361110f565b6001600160a01b038516600090815260016020526040902055610d5c610d3d838361110f565b6001600160a01b03851660009081526001602052604090205490611151565b6001600160a01b0384166000908152600160205260409020558015610def5730600090815260016020526040902054610d959082611151565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610de69085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e4c576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e3a858561110f565b60405190815260200160405180910390a35b50505050565b60008184841115610e765760405162461bcd60e51b815260040161032691906111de565b506000610e8384866114e2565b95945050505050565b600082600003610e9e5750600061037c565b6000610eaa8385611445565b905082610eb785836114f5565b14610f0e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610326565b9392505050565b6000610f0e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111b0565b600e805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f9f57610f9f611517565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101c919061145c565b8160018151811061102f5761102f611517565b6001600160a01b039283166020918202929092010152600d5461105591309116846108d8565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061108e90859060009086903090429060040161152d565b600060405180830381600087803b1580156110a857600080fd5b505af11580156110bc573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561110b573d6000803e3d6000fd5b5050565b6000610f0e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e52565b60008061115e838561159f565b905083811015610f0e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610326565b600081836111d15760405162461bcd60e51b815260040161032691906111de565b506000610e8384866114f5565b602081526000825180602084015260005b8181101561120c57602081860181015160408684010152016111ef565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461036857600080fd5b6000806040838503121561125457600080fd5b823561125f8161122c565b946020939093013593505050565b60008060006060848603121561128257600080fd5b833561128d8161122c565b9250602084013561129d8161122c565b929592945050506040919091013590565b6000602082840312156112c057600080fd5b8135610f0e8161122c565b600080604083850312156112de57600080fd5b82356112e98161122c565b915060208301356112f98161122c565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561138a5780850481111561136e5761136e611339565b600184161561137c57908102905b60019390931c928002611353565b935093915050565b6000826113a15750600161037c565b816113ae5750600061037c565b81600181146113c457600281146113ce576113ea565b600191505061037c565b60ff8411156113df576113df611339565b50506001821b61037c565b5060208310610133831016604e8410600b841016171561140d575081810a61037c565b61141a600019848461134f565b806000190482111561142e5761142e611339565b029392505050565b6000610f0e60ff841683611392565b808202811582820484141761037c5761037c611339565b60006020828403121561146e57600080fd5b8151610f0e8161122c565b60008060006060848603121561148e57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156114b957600080fd5b81518015158114610f0e57600080fd5b6000600182016114db576114db611339565b5060010190565b8181038181111561037c5761037c611339565b60008261151257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b8181101561157f5783516001600160a01b0316835260209384019390920191600101611558565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561037c5761037c61133956fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d35aa9c0d132a478a5b00a606afbba3f80ca90c6a25480f93b7458b573f8938364736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
