/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VotingSystem,
  VotingSystemInterface,
} from "../../medium/VotingSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106a58061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f1461005157806335facf7814610066578063c7f758a814610079578063da35c664146100a5575b600080fd5b61006461005f366004610391565b6100bc565b005b6100646100743660046103aa565b6101ea565b61008c610087366004610391565b6102b9565b60405161009c9493929190610423565b60405180910390f35b6100ae60015481565b60405190815260200161009c565b600081815260208190526040902060028101544211156101165760405162461bcd60e51b815260206004820152601060248201526f159bdd1a5b99c81a185cc8195b99195960821b60448201526064015b60405180910390fd5b33600090815260038201602052604090205460ff16156101685760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161010d565b60018101805490600061017a8361049e565b909155505033600081815260038301602052604090819020805460ff19166001179055517f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b916101de918591909182526001600160a01b0316602082015260400190565b60405180910390a15050565b600081116102315760405162461bcd60e51b815260206004820152601460248201527304475726174696f6e206d757374206265203e20360641b604482015260640161010d565b600180549060006102418361049e565b9091555050600154600090815260208190526040902080610263848683610556565b5061026e8242610616565b600282018190556001546040517ff5dc0da9afa6d080780a49fd8c680f03d2ddf3c067cd6d0c85360c096644d2d3926102ab92918891889161062f565b60405180910390a150505050565b6000818152602081815260408083206001810154600282015433865260038301909452918420548154606095948594859493849391929160ff909116908490610301906104cd565b80601f016020809104026020016040519081016040528092919081815260200182805461032d906104cd565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b505050505093509450945094509450509193509193565b6000602082840312156103a357600080fd5b5035919050565b6000806000604084860312156103bf57600080fd5b833567ffffffffffffffff8111156103d657600080fd5b8401601f810186136103e757600080fd5b803567ffffffffffffffff8111156103fe57600080fd5b86602082840101111561041057600080fd5b6020918201979096509401359392505050565b608081526000855180608084015260005b8181101561045157602081890181015160a0868401015201610434565b50600060a0828501015260a0601f19601f830116840101915050846020830152836040830152821515606083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016104b0576104b0610488565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806104e157607f821691505b60208210810361050157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561055157806000526020600020601f840160051c8101602085101561052e5750805b601f840160051c820191505b8181101561054e576000815560010161053a565b50505b505050565b67ffffffffffffffff83111561056e5761056e6104b7565b6105828361057c83546104cd565b83610507565b6000601f8411600181146105b6576000851561059e5750838201355b600019600387901b1c1916600186901b17835561054e565b600083815260209020601f19861690835b828110156105e757868501358255602094850194600190920191016105c7565b50868210156106045760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8082018082111561062957610629610488565b92915050565b848152606060208201528260608201528284608083013760006080848301015260006080601f19601f86011683010190508260408301529594505050505056fea2646970667358221220916d5ac2a42df0fa3468382bb6beb8f80896ad5966e1cab8574bc2c3689ba9cf64736f6c634300081e0033";

type VotingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingSystem__factory extends ContractFactory {
  constructor(...args: VotingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VotingSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VotingSystem__factory {
    return super.connect(runner) as VotingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingSystemInterface {
    return new Interface(_abi) as VotingSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotingSystem {
    return new Contract(address, _abi, runner) as unknown as VotingSystem;
  }
}
