/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x0904eb9758a54a984bf5272c874fbdca518f9371.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560006009556009600a61002b919061031a565b61003990633b9aca00610330565b600a556000600b819055600d805461ffff60a81b19169055600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b031660006000805160206119f1833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a33060006000805160206119f183398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b611679806103786000396000f3fe6080604052600436106101025760003560e01c80636482c89a116100955780638da5cb5b116100645780638da5cb5b1461029d57806395d89b41146102c5578063a9059cbb146102f5578063dd62ed3e14610315578063ea414b281461035b57600080fd5b80636482c89a1461022757806370a082311461023d578063715018a614610273578063751039fc1461028857600080fd5b806318160ddd116100d157806318160ddd146101c157806320800a00146101d657806323b872dd146101eb578063313ce5671461020b57600080fd5b806301339c211461010e57806306fdde0314610125578063095ea7b31461016d5780630faee56f1461019d57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5061012361037b565b005b34801561013157600080fd5b5060408051808201909152600d81526c04d4f474e414c44205452554d5609c1b60208201525b6040516101649190611247565b60405180910390f35b34801561017957600080fd5b5061018d6101883660046112aa565b610744565b6040519015158152602001610164565b3480156101a957600080fd5b506101b3600a5481565b604051908152602001610164565b3480156101cd57600080fd5b506101b361075b565b3480156101e257600080fd5b5061012361077c565b3480156101f757600080fd5b5061018d6102063660046112d6565b6107df565b34801561021757600080fd5b5060405160098152602001610164565b34801561023357600080fd5b506101b3600b5481565b34801561024957600080fd5b506101b3610258366004611317565b6001600160a01b031660009081526001602052604090205490565b34801561027f57600080fd5b5061012361088a565b34801561029457600080fd5b506101236108fe565b3480156102a957600080fd5b506000546040516001600160a01b039091168152602001610164565b3480156102d157600080fd5b506040805180820190915260078152661353d1d390531160ca1b6020820152610157565b34801561030157600080fd5b5061018d6103103660046112aa565b61092a565b34801561032157600080fd5b506101b3610330366004611334565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036757600080fd5b50610123610376366004611317565b610937565b6000546001600160a01b031633146103ae5760405162461bcd60e51b81526004016103a59061136d565b60405180910390fd5b600d54600160a01b900460ff16156104085760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103a5565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556104569030906104436009600a61149f565b61045190633b9aca006114ae565b610975565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd91906114c5565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055391906114c5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c491906114c5565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d719473061060c816001600160a01b031660009081526001602052604090205490565b6000806106216000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610689573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106ae91906114e2565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190611510565b50565b6000610751338484610975565b5060015b92915050565b60006107696009600a61149f565b61077790633b9aca006114ae565b905090565b6000546001600160a01b031633146107a65760405162461bcd60e51b81526004016103a59061136d565b600047116107b357600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610741573d6000803e3d6000fd5b60006107ec848484610a99565b3360009081526003602052604090205460ff1615801561082e5750600d546001600160a01b038581169116148061082e57506001600160a01b03831661dead14155b156108805761088084336104518560405180606001604052806028815260200161161c602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ebb565b5060019392505050565b6000546001600160a01b031633146108b45760405162461bcd60e51b81526004016103a59061136d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146109285760405162461bcd60e51b81526004016103a59061136d565b565b6000610751338484610a99565b3360009081526003602052604090205460ff1661095357600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a5565b6001600160a01b038216610a385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610afd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a5565b6001600160a01b038216610b5f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a5565b60008111610bc15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103a5565b60006001600160a01b0384163014801590610be557506001600160a01b0383163014155b15610d5d57600d54600160a81b900460ff16610c2a57610c276064610c2160075460085411610c1657600554610c1a565b6006545b8590610ef5565b90610f7e565b90505b600d546001600160a01b038581169116148015610c555750600c546001600160a01b03848116911614155b8015610c7a57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c9457506004546001600160a01b03848116911614155b15610caf5760088054906000610ca983611532565b91905055505b30600090815260016020526040902054600d54600160a81b900460ff16158015610ce65750600d546001600160a01b038581169116145b8015610cfb5750600d54600160b01b900460ff165b8015610d1557506004546001600160a01b03868116911614155b15610d5b578015610d4f576000600a548211610d315781610d35565b600a545b9050610d4d818511610d475784610fc0565b81610fc0565b505b47610d594761113a565b505b505b6001600160a01b038416600090815260016020526040902054610d809083611178565b6001600160a01b038516600090815260016020526040902055610dc5610da68383611178565b6001600160a01b038516600090815260016020526040902054906111ba565b6001600160a01b0384166000908152600160205260409020558015610e585730600090815260016020526040902054610dfe90826111ba565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e4f9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb5576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea38585611178565b60405190815260200160405180910390a35b50505050565b60008184841115610edf5760405162461bcd60e51b81526004016103a59190611247565b506000610eec848661154b565b95945050505050565b600082600003610f0757506000610755565b6000610f1383856114ae565b905082610f20858361155e565b14610f775760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103a5565b9392505050565b6000610f7783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611219565b600d805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061100857611008611580565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108591906114c5565b8160018151811061109857611098611580565b6001600160a01b039283166020918202929092010152600c546110be9130911684610975565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110f7908590600090869030904290600401611596565b600060405180830381600087803b15801561111157600080fd5b505af1158015611125573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611174573d6000803e3d6000fd5b5050565b6000610f7783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebb565b6000806111c78385611608565b905083811015610f775760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103a5565b6000818361123a5760405162461bcd60e51b81526004016103a59190611247565b506000610eec848661155e565b602081526000825180602084015260005b818110156112755760208186018101516040868401015201611258565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461074157600080fd5b600080604083850312156112bd57600080fd5b82356112c881611295565b946020939093013593505050565b6000806000606084860312156112eb57600080fd5b83356112f681611295565b9250602084013561130681611295565b929592945050506040919091013590565b60006020828403121561132957600080fd5b8135610f7781611295565b6000806040838503121561134757600080fd5b823561135281611295565b9150602083013561136281611295565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113f3578085048111156113d7576113d76113a2565b60018416156113e557908102905b60019390931c9280026113bc565b935093915050565b60008261140a57506001610755565b8161141757506000610755565b816001811461142d576002811461143757611453565b6001915050610755565b60ff841115611448576114486113a2565b50506001821b610755565b5060208310610133831016604e8410600b8410161715611476575081810a610755565b61148360001984846113b8565b8060001904821115611497576114976113a2565b029392505050565b6000610f7760ff8416836113fb565b8082028115828204841417610755576107556113a2565b6000602082840312156114d757600080fd5b8151610f7781611295565b6000806000606084860312156114f757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561152257600080fd5b81518015158114610f7757600080fd5b600060018201611544576115446113a2565b5060010190565b81810381811115610755576107556113a2565b60008261157b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115e85783516001600160a01b03168352602093840193909201916001016115c1565b50506001600160a01b039590951660608401525050608001529392505050565b80820180821115610755576107556113a256fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204aabce5661083a6fb8cb021349fec3bf1a0f2ecb9a47e71ca79a67e4f9f5167364736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
