/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  James,
  JamesInterface,
} from "../../../medium/0x007bb844c6b62959f63c278ff09e40d456ccdc4e.sol/James";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526017600655601b600755600060085560006009556017600a556017600b556017600c556000600d556000600e5560646009600a620000439190620003bb565b6200005390633b9aca00620003d3565b6200005f9190620003ed565b6200006c906002620003d3565b600f5560646200007f6009600a620003bb565b6200008f90633b9aca00620003d3565b6200009b9190620003ed565b620000a8906002620003d3565b6010556103e8620000bc6009600a620003bb565b620000cc90633b9aca00620003d3565b620000d89190620003ed565b620000e5906001620003d3565b6011556064620000f86009600a620003bb565b6200010890633b9aca00620003d3565b620001149190620003ed565b62000121906001620003d3565b6012556014805461ffff60a81b19169055600060158190556016553480156200014957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001ab6009600a620003bb565b620001bb90633b9aca00620003d3565b336000908152600160208190526040822092909255600390620001e66000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620002453390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200027f6009600a620003bb565b6200028f90633b9aca00620003d3565b60405190815260200160405180910390a362000410565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002fd578160001904821115620002e157620002e1620002a6565b80851615620002ef57918102915b93841c9390800290620002c1565b509250929050565b6000826200031657506001620003b5565b816200032557506000620003b5565b81600181146200033e5760028114620003495762000369565b6001915050620003b5565b60ff8411156200035d576200035d620002a6565b50506001821b620003b5565b5060208310610133831016604e8410600b84101617156200038e575081810a620003b5565b6200039a8383620002bc565b8060001904821115620003b157620003b1620002a6565b0290505b92915050565b6000620003cc60ff84168362000305565b9392505050565b8082028115828204841417620003b557620003b5620002a6565b6000826200040b57634e487b7160e01b600052601260045260246000fd5b500490565b611d9480620004206000396000f3fe60806040526004361061014f5760003560e01c80638cd4426d116100b6578063a9059cbb1161006f578063a9059cbb146103bc578063bf474bed146103dc578063c97c1821146103f2578063d34628cc14610412578063dd62ed3e14610432578063ec1f3f631461047857600080fd5b80638cd4426d146102e25780638da5cb5b146103025780638f9a55c01461032a57806395d89b41146103405780639b64fd321461036e5780639c6dc8431461038357600080fd5b806351bc3c851161010857806351bc3c851461024057806370a0823114610257578063715018a61461028d578063751039fc146102a25780637d1db4a5146102b75780638a8c523c146102cd57600080fd5b806306fdde031461015b578063095ea7b31461019b5780630faee56f146101cb57806318160ddd146101ef57806323b872dd14610204578063313ce5671461022457600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506040805180820190915260058152644a616d657360d81b60208201525b6040516101929190611843565b60405180910390f35b3480156101a757600080fd5b506101bb6101b63660046118ba565b610498565b6040519015158152602001610192565b3480156101d757600080fd5b506101e160125481565b604051908152602001610192565b3480156101fb57600080fd5b506101e16104af565b34801561021057600080fd5b506101bb61021f3660046118e6565b6104d0565b34801561023057600080fd5b5060405160098152602001610192565b34801561024c57600080fd5b50610255610539565b005b34801561026357600080fd5b506101e1610272366004611927565b6001600160a01b031660009081526001602052604090205490565b34801561029957600080fd5b506102556105a3565b3480156102ae57600080fd5b50610255610620565b3480156102c357600080fd5b506101e1600f5481565b3480156102d957600080fd5b506102556106d3565b3480156102ee57600080fd5b506102556102fd3660046118ba565b610a8f565b34801561030e57600080fd5b506000546040516001600160a01b039091168152602001610192565b34801561033657600080fd5b506101e160105481565b34801561034c57600080fd5b506040805180820190915260058152644a414d455360d81b6020820152610185565b34801561037a57600080fd5b50610255610bbc565b34801561038f57600080fd5b506101bb61039e366004611927565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156103c857600080fd5b506101bb6103d73660046118ba565b610c1d565b3480156103e857600080fd5b506101e160115481565b3480156103fe57600080fd5b5061025561040d36600461195a565b610c2a565b34801561041e57600080fd5b5061025561042d36600461195a565b610cb2565b34801561043e57600080fd5b506101e161044d366004611a1f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561048457600080fd5b50610255610493366004611a58565b610d3a565b60006104a5338484610d81565b5060015b92915050565b60006104bd6009600a611b6b565b6104cb90633b9aca00611b7a565b905090565b60006104dd848484610ea5565b61052f843361052a85604051806060016040528060288152602001611d37602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114a6565b610d81565b5060019392505050565b6005546001600160a01b0316336001600160a01b03161461055957600080fd5b3060009081526001602052604090205480158015906105815750601454600160b01b900460ff165b1561058f5761058f816114e0565b47801561059f5761059f8161165a565b5050565b6000546001600160a01b031633146105d65760405162461bcd60e51b81526004016105cd90611b91565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461064a5760405162461bcd60e51b81526004016105cd90611b91565b6106566009600a611b6b565b61066490633b9aca00611b7a565b600f556106736009600a611b6b565b61068190633b9aca00611b7a565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106b16009600a611b6b565b6106bf90633b9aca00611b7a565b6040519081526020015b60405180910390a1565b6000546001600160a01b031633146106fd5760405162461bcd60e51b81526004016105cd90611b91565b601454600160a01b900460ff16156107575760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105cd565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556107a09030906107926009600a611b6b565b61052a90633b9aca00611b7a565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108179190611bc6565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190611bc6565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190611bc6565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610956816001600160a01b031660009081526001602052604090205490565b60008061096b6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156109d3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109f89190611be3565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a759190611c11565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610ab95760405162461bcd60e51b81526004016105cd90611b91565b6040516370a0823160e01b8152306004820152600090610b3d90606490610b379085906001600160a01b038816906370a0823190602401602060405180830381865afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b319190611c33565b90611694565b9061171d565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af1158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb69190611c11565b50505050565b6000546001600160a01b03163314610be65760405162461bcd60e51b81526004016105cd90611b91565b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020016106c9565b60006104a5338484610ea5565b6000546001600160a01b03163314610c545760405162461bcd60e51b81526004016105cd90611b91565b60005b815181101561059f57600060046000848481518110610c7857610c78611c4c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610c57565b6000546001600160a01b03163314610cdc5760405162461bcd60e51b81526004016105cd90611b91565b60005b815181101561059f57600160046000848481518110610d0057610d00611c4c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cdf565b6005546001600160a01b0316336001600160a01b031614610d5a57600080fd5b6008548111158015610d6e57506009548111155b610d7757600080fd5b6008819055600955565b6001600160a01b038316610de35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105cd565b6001600160a01b038216610e445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105cd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f095760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105cd565b6001600160a01b038216610f6b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105cd565b60008111610fcd5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105cd565b600080546001600160a01b03858116911614801590610ffa57506000546001600160a01b03848116911614155b15611363576001600160a01b03841660009081526004602052604090205460ff1615801561104157506001600160a01b03831660009081526004602052604090205460ff16155b61104a57600080fd5b600e5460000361107d5761107a6064610b37600a54600e541161106f57600654611073565b6008545b8590611694565b90505b600e54156110a25761109f6064610b37600d548561169490919063ffffffff16565b90505b6014546001600160a01b0385811691161480156110cd57506013546001600160a01b03848116911614155b80156110f257506001600160a01b03831660009081526003602052604090205460ff16155b156111f757600f548211156111495760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016105cd565b6010548261116c856001600160a01b031660009081526001602052604090205490565b6111769190611c62565b11156111c45760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105cd565b6111df6064610b37600a54600e541161106f57600654611073565b600e805491925060006111f183611c75565b91905055505b6014546001600160a01b03848116911614801561121d57506001600160a01b0384163014155b1561124a576112476064610b37600b54600e541161123d57600754611073565b6009548590611694565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561128157506014546001600160a01b038581169116145b80156112965750601454600160b01b900460ff165b80156112a3575060115481115b80156112b25750600c54600e54115b15611361576016544311156112c75760006015555b6003601554106113195760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016105cd565b6113366113318461132c8460125461175f565b61175f565b6114e0565b478015611346576113464761165a565b6015805490600061135683611c75565b909155505043601655505b505b80156113dd57306000908152600160205260409020546113839082611774565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113d49085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461140090836117d3565b6001600160a01b03851660009081526001602052604090205561144561142683836117d3565b6001600160a01b03851660009081526001602052604090205490611774565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61148f85856117d3565b60405190815260200160405180910390a350505050565b600081848411156114ca5760405162461bcd60e51b81526004016105cd9190611843565b5060006114d78486611c8e565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061152857611528611c4c565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a59190611bc6565b816001815181106115b8576115b8611c4c565b6001600160a01b0392831660209182029290920101526013546115de9130911684610d81565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611617908590600090869030904290600401611ca1565b600060405180830381600087803b15801561163157600080fd5b505af1158015611645573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561059f573d6000803e3d6000fd5b6000826000036116a6575060006104a9565b60006116b28385611b7a565b9050826116bf8583611d14565b146117165760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016105cd565b9392505050565b600061171683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611815565b600081831161176e5782611716565b50919050565b6000806117818385611c62565b9050838110156117165760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105cd565b600061171683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114a6565b600081836118365760405162461bcd60e51b81526004016105cd9190611843565b5060006114d78486611d14565b60006020808352835180602085015260005b8181101561187157858101830151858201604001528201611855565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118a757600080fd5b50565b80356118b581611892565b919050565b600080604083850312156118cd57600080fd5b82356118d881611892565b946020939093013593505050565b6000806000606084860312156118fb57600080fd5b833561190681611892565b9250602084013561191681611892565b929592945050506040919091013590565b60006020828403121561193957600080fd5b813561171681611892565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561196d57600080fd5b823567ffffffffffffffff8082111561198557600080fd5b818501915085601f83011261199957600080fd5b8135818111156119ab576119ab611944565b8060051b604051601f19603f830116810181811085821117156119d0576119d0611944565b6040529182528482019250838101850191888311156119ee57600080fd5b938501935b82851015611a1357611a04856118aa565b845293850193928501926119f3565b98975050505050505050565b60008060408385031215611a3257600080fd5b8235611a3d81611892565b91506020830135611a4d81611892565b809150509250929050565b600060208284031215611a6a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611ac2578160001904821115611aa857611aa8611a71565b80851615611ab557918102915b93841c9390800290611a8c565b509250929050565b600082611ad9575060016104a9565b81611ae6575060006104a9565b8160018114611afc5760028114611b0657611b22565b60019150506104a9565b60ff841115611b1757611b17611a71565b50506001821b6104a9565b5060208310610133831016604e8410600b8410161715611b45575081810a6104a9565b611b4f8383611a87565b8060001904821115611b6357611b63611a71565b029392505050565b600061171660ff841683611aca565b80820281158282048414176104a9576104a9611a71565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611bd857600080fd5b815161171681611892565b600080600060608486031215611bf857600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611c2357600080fd5b8151801515811461171657600080fd5b600060208284031215611c4557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156104a9576104a9611a71565b600060018201611c8757611c87611a71565b5060010190565b818103818111156104a9576104a9611a71565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611cf35784516001600160a01b031683529383019391830191600101611cce565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d3157634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206f9e838271c1e2280c9222b21e48bfb04facde54c0ca5555fbdfcd4f5726a56e64736f6c63430008170033";

type JamesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JamesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class James__factory extends ContractFactory {
  constructor(...args: JamesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<James> {
    return super.deploy(overrides || {}) as Promise<James>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): James {
    return super.attach(address) as James;
  }
  override connect(signer: Signer): James__factory {
    return super.connect(signer) as James__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JamesInterface {
    return new utils.Interface(_abi) as JamesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): James {
    return new Contract(address, _abi, signerOrProvider) as James;
  }
}
