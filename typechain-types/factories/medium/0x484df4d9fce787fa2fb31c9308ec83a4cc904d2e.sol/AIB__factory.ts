/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AIB,
  AIBInterface,
} from "../../../medium/0x484df4d9fce787fa2fb31c9308ec83a4cc904d2e.sol/AIB";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526006805460ff191660019081179091556011600781905560085560006009818155600a828155600b849055600c939093556014600d55600e9190915561004991610359565b61005690620249f061036f565b600f556100656009600a610359565b61007290620249f061036f565b6010556100816009600a610359565b61008e90620124f861036f565b60115561009d6009600a610359565b6100aa90620124f861036f565b6012556014805461ffff60a81b191690553480156100c757600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d179055600680547479439e500ae717279dff4bf8cdc352737665992f00610100600160a81b03199091161790556101656009600a610359565b610172906298968061036f565b33600090815260016020819052604082209290925560039061019c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560065461010090049091168352912080549092161790556101ff3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102376009600a610359565b610244906298968061036f565b60405190815260200160405180910390a3610386565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102ab5780850481111561028f5761028f61025a565b600184161561029d57908102905b60019390931c928002610274565b935093915050565b6000826102c257506001610353565b816102cf57506000610353565b81600181146102e557600281146102ef5761030b565b6001915050610353565b60ff8411156103005761030061025a565b50506001821b610353565b5060208310610133831016604e8410600b841016171561032e575081810a610353565b61033b6000198484610270565b806000190482111561034f5761034f61025a565b0290505b92915050565b600061036860ff8416836102b3565b9392505050565b80820281158282048414176103535761035361025a565b611924806103956000396000f3fe6080604052600436106101235760003560e01c80637d1db4a5116100a0578063bf474bed11610064578063bf474bed14610335578063c876d0b91461034b578063d163364914610365578063dd62ed3e14610385578063f4293890146103cb57600080fd5b80637d1db4a5146102955780638da5cb5b146102ab5780638f9a55c0146102d357806395d89b41146102e9578063a9059cbb1461031557600080fd5b8063313ce567116100e7578063313ce5671461020257806351bc3c851461021e57806370a0823114610235578063715018a61461026b578063751039fc1461028057600080fd5b806306fdde031461012f578063095ea7b3146101795780630faee56f146101a957806318160ddd146101cd57806323b872dd146101e257600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5060408051808201909152600f81526e416d6572696361204973204261636b60881b60208201525b60405161017091906114d9565b60405180910390f35b34801561018557600080fd5b5061019961019436600461153c565b6103e0565b6040519015158152602001610170565b3480156101b557600080fd5b506101bf60125481565b604051908152602001610170565b3480156101d957600080fd5b506101bf6103f7565b3480156101ee57600080fd5b506101996101fd366004611568565b610417565b34801561020e57600080fd5b5060405160098152602001610170565b34801561022a57600080fd5b50610233610480565b005b34801561024157600080fd5b506101bf6102503660046115a9565b6001600160a01b031660009081526001602052604090205490565b34801561027757600080fd5b506102336104d8565b34801561028c57600080fd5b50610233610555565b3480156102a157600080fd5b506101bf600f5481565b3480156102b757600080fd5b506000546040516001600160a01b039091168152602001610170565b3480156102df57600080fd5b506101bf60105481565b3480156102f557600080fd5b5060408051808201909152600381526220a4a160e91b6020820152610163565b34801561032157600080fd5b5061019961033036600461153c565b61060e565b34801561034157600080fd5b506101bf60115481565b34801561035757600080fd5b506006546101999060ff1681565b34801561037157600080fd5b506102336103803660046115c6565b61061b565b34801561039157600080fd5b506101bf6103a03660046115df565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103d757600080fd5b506102336109f9565b60006103ed338484610a31565b5060015b92915050565b60006104056009600a611715565b6104129062989680611724565b905090565b6000610424848484610b55565b6104768433610471856040518060600160405280602881526020016118c7602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611138565b610a31565b5060019392505050565b60065461010090046001600160a01b0316336001600160a01b0316146104a557600080fd5b3060009081526001602052604090205480156104c4576104c481611172565b4780156104d4576104d4816112ec565b5050565b6000546001600160a01b0316331461050b5760405162461bcd60e51b81526004016105029061173b565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461057f5760405162461bcd60e51b81526004016105029061173b565b61058b6009600a611715565b6105989062989680611724565b600f556105a76009600a611715565b6105b49062989680611724565b6010556006805460ff191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105ee6009600a611715565b6105fb9062989680611724565b60405190815260200160405180910390a1565b60006103ed338484610b55565b6000546001600160a01b031633146106455760405162461bcd60e51b81526004016105029061173b565b601454600160a01b900460ff161561069f5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610502565b8043146106e05760405162461bcd60e51b815260206004820152600f60248201526e696e636f727265637420626c6f636b60881b6044820152606401610502565b306000818152600160205260409020546013549091610708916001600160a01b031683610a31565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611770565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108059190611770565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611770565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d71947306108be816001600160a01b031660009081526001602052604090205490565b6000806108d36000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561093b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610960919061178d565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd91906117bb565b50506014805462ff00ff60a01b19166201000160a01b17905550565b60065461010090046001600160a01b0316336001600160a01b031614610a1e57600080fd5b478015610a2e57610a2e816112ec565b50565b6001600160a01b038316610a935760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610502565b6001600160a01b038216610af45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610502565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bb95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610502565b6001600160a01b038216610c1b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610502565b60008111610c7d5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610502565b600080546001600160a01b03858116911614801590610caa57506000546001600160a01b03848116911614155b15610ff557610cdb6064610cd5600b54600e5411610cca57600754610cce565b6009545b859061132a565b906113b3565b60065490915060ff1615610dc3576013546001600160a01b03848116911614801590610d1557506014546001600160a01b03848116911614155b15610dc357326000908152600560205260409020544311610db05760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a401610502565b3260009081526005602052604090204390555b6014546001600160a01b038581169116148015610dee57506013546001600160a01b03848116911614155b8015610e1357506001600160a01b03831660009081526003602052604090205460ff16155b15610efb57600f54821115610e6a5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610502565b60105482610e8d856001600160a01b031660009081526001602052604090205490565b610e9791906117dd565b1115610ee55760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610502565b600e8054906000610ef5836117f0565b91905055505b6014546001600160a01b038481169116148015610f2157506001600160a01b0384163014155b15610f4e57610f4b6064610cd5600c54600e5411610f4157600854610cce565b600a54859061132a565b90505b30600090815260016020526040902054601454600160a81b900460ff16158015610f8557506014546001600160a01b038581169116145b8015610f9a5750601454600160b01b900460ff165b8015610fa7575060115481115b8015610fb65750600d54600e54115b15610ff357610fd8610fd384610fce846012546113f5565b6113f5565b611172565b4766b1a2bc2ec50000811115610ff157610ff1476112ec565b505b505b801561106f5730600090815260016020526040902054611015908261140a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110669085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546110929083611469565b6001600160a01b0385166000908152600160205260409020556110d76110b88383611469565b6001600160a01b0385166000908152600160205260409020549061140a565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6111218585611469565b60405190815260200160405180910390a350505050565b6000818484111561115c5760405162461bcd60e51b815260040161050291906114d9565b5060006111698486611809565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111ba576111ba61181c565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112379190611770565b8160018151811061124a5761124a61181c565b6001600160a01b0392831660209182029290920101526013546112709130911684610a31565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906112a9908590600090869030904290600401611832565b600060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6006546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156104d4573d6000803e3d6000fd5b60008260000361133c575060006103f1565b60006113488385611724565b90508261135585836118a4565b146113ac5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610502565b9392505050565b60006113ac83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114ab565b600081831161140457826113ac565b50919050565b60008061141783856117dd565b9050838110156113ac5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610502565b60006113ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611138565b600081836114cc5760405162461bcd60e51b815260040161050291906114d9565b50600061116984866118a4565b602081526000825180602084015260005b8181101561150757602081860181015160408684010152016114ea565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610a2e57600080fd5b6000806040838503121561154f57600080fd5b823561155a81611527565b946020939093013593505050565b60008060006060848603121561157d57600080fd5b833561158881611527565b9250602084013561159881611527565b929592945050506040919091013590565b6000602082840312156115bb57600080fd5b81356113ac81611527565b6000602082840312156115d857600080fd5b5035919050565b600080604083850312156115f257600080fd5b82356115fd81611527565b9150602083013561160d81611527565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156116695780850481111561164d5761164d611618565b600184161561165b57908102905b60019390931c928002611632565b935093915050565b600082611680575060016103f1565b8161168d575060006103f1565b81600181146116a357600281146116ad576116c9565b60019150506103f1565b60ff8411156116be576116be611618565b50506001821b6103f1565b5060208310610133831016604e8410600b84101617156116ec575081810a6103f1565b6116f9600019848461162e565b806000190482111561170d5761170d611618565b029392505050565b60006113ac60ff841683611671565b80820281158282048414176103f1576103f1611618565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561178257600080fd5b81516113ac81611527565b6000806000606084860312156117a257600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117cd57600080fd5b815180151581146113ac57600080fd5b808201808211156103f1576103f1611618565b60006001820161180257611802611618565b5060010190565b818103818111156103f1576103f1611618565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156118845783516001600160a01b031683526020938401939092019160010161185d565b50506001600160a01b039590951660608401525050608001529392505050565b6000826118c157634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212208d91440c03b2e90146b718156e517b3e462a6cb9517d3ca86fd88b796443911a64736f6c634300081c0033";

type AIBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIB__factory extends ContractFactory {
  constructor(...args: AIBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AIB> {
    return super.deploy(overrides || {}) as Promise<AIB>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AIB {
    return super.attach(address) as AIB;
  }
  override connect(signer: Signer): AIB__factory {
    return super.connect(signer) as AIB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIBInterface {
    return new utils.Interface(_abi) as AIBInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AIB {
    return new Contract(address, _abi, signerOrProvider) as AIB;
  }
}
