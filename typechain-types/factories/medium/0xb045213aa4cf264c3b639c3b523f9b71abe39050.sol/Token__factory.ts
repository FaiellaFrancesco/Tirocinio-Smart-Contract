/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xb045213aa4cf264c3b639c3b523f9b71abe39050.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalTokenTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initTokenDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokenETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b611859806102c66000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102ad578063a9059cbb146102e0578063ba18ed0d14610300578063dd62ed3e14610316578063ea414b281461035c57600080fd5b806370a0823114610225578063715018a61461025b5780638a8c523c146102705780638da5cb5b1461028557600080fd5b806318160ddd116100d157806318160ddd146101be57806323b872dd146101d3578063313ce567146101f35780635ce74cbf1461020f57600080fd5b8063022321f21461010e57806306fdde0314610125578063095ea7b31461016a5780630faee56f1461019a57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5061012361037c565b005b34801561013157600080fd5b5060408051808201909152600a8152695374726177626572727960b01b60208201525b6040516101619190611336565b60405180910390f35b34801561017657600080fd5b5061018a610185366004611399565b6103eb565b6040519015158152602001610161565b3480156101a657600080fd5b506101b0600b5481565b604051908152602001610161565b3480156101ca57600080fd5b506101b0610402565b3480156101df57600080fd5b5061018a6101ee3660046113c5565b610423565b3480156101ff57600080fd5b5060405160098152602001610161565b34801561021b57600080fd5b506101b0600d5481565b34801561023157600080fd5b506101b0610240366004611406565b6001600160a01b031660009081526001602052604090205490565b34801561026757600080fd5b506101236104e6565b34801561027c57600080fd5b5061012361055a565b34801561029157600080fd5b506000546040516001600160a01b039091168152602001610161565b3480156102b957600080fd5b5060408051808201909152600a8152695354524157424552525960b01b6020820152610154565b3480156102ec57600080fd5b5061018a6102fb366004611399565b610912565b34801561030c57600080fd5b506101b0600c5481565b34801561032257600080fd5b506101b0610331366004611423565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036857600080fd5b50610123610377366004611406565b61091f565b6000546001600160a01b031633146103af5760405162461bcd60e51b81526004016103a69061145c565b60405180910390fd5b600047116103bc57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e8573d6000803e3d6000fd5b50565b60006103f833848461095d565b5060015b92915050565b60006104106009600a61158e565b61041e906305f5e10061159d565b905090565b6000610430848484610a81565b3360009081526003602052604090205460ff161580156104855750600f546001600160a01b038581169116148061047257506001600160a01b03831661dead14155b8061048557506001600160a01b03841630145b156104dc576104dc84336104d7856040518060600160405280602881526020016117fc602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f0e565b61095d565b5060019392505050565b6000546001600160a01b031633146105105760405162461bcd60e51b81526004016103a69061145c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105845760405162461bcd60e51b81526004016103a69061145c565b600f54600160a01b900460ff16156105de5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103a6565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106279030906106196009600a61158e565b6104d7906305f5e10061159d565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e91906115b4565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906115b4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906115b4565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107dd816001600160a01b031660009081526001602052604090205490565b6000806107f26000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561085a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087f91906115d1565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e891906115ff565b60006103f8338484610a81565b3360009081526003602052604090205460ff1661093b57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109bf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a6565b6001600160a01b038216610a205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a6565b6001600160a01b038216610b475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a6565b60008111610ba95760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103a6565b60006001600160a01b0384163014801590610bcd57506001600160a01b0383163014155b15610db057600f546001600160a01b038581169116148015610bfd5750600e546001600160a01b03848116911614155b8015610c2257506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3c57506004546001600160a01b03848116911614155b15610c81574360095414610c54576000600a55436009555b81600a6000828254610c669190611621565b909155505060088054906000610c7b83611634565b91905055505b600f546001600160a01b038481169116148015610ca757506001600160a01b0384163014155b15610d0257610cb4610f48565b600a541080610cc557504360095414155b610d025760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103a6565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d395750600f546001600160a01b038581169116145b8015610d4e5750600f54600160b01b900460ff165b8015610d6857506004546001600160a01b03868116911614155b15610dae578015610da2576000600b548211610d845781610d88565b600b545b9050610da0818511610d9a57846110d6565b816110d6565b505b47610dac47611250565b505b505b6001600160a01b038416600090815260016020526040902054610dd3908361128e565b6001600160a01b038516600090815260016020526040902055610e18610df9838361128e565b6001600160a01b038516600090815260016020526040902054906112d7565b6001600160a01b0384166000908152600160205260409020558015610eab5730600090815260016020526040902054610e5190826112d7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ea29085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f08576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ef6858561128e565b60405190815260200160405180910390a35b50505050565b60008184841115610f325760405162461bcd60e51b81526004016103a69190611336565b506000610f3f848661164d565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda91906115b4565b81600081518110610fed57610fed611676565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061102157611021611676565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061106d906729a2241af62c00009086906004016116d1565b600060405180830381865afa15801561108a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b291908101906116f2565b9050806001815181106110c7576110c7611676565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061111e5761111e611676565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906115b4565b816001815181106111ae576111ae611676565b6001600160a01b039283166020918202929092010152600e546111d4913091168461095d565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061120d9085906000908690309042906004016117bf565b600060405180830381600087803b15801561122757600080fd5b505af115801561123b573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561128a573d6000803e3d6000fd5b5050565b60006112d083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f0e565b9392505050565b6000806112e48385611621565b9050838110156112d05760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103a6565b602081526000825180602084015260005b818110156113645760208186018101516040868401015201611347565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e857600080fd5b600080604083850312156113ac57600080fd5b82356113b781611384565b946020939093013593505050565b6000806000606084860312156113da57600080fd5b83356113e581611384565b925060208401356113f581611384565b929592945050506040919091013590565b60006020828403121561141857600080fd5b81356112d081611384565b6000806040838503121561143657600080fd5b823561144181611384565b9150602083013561145181611384565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114e2578085048111156114c6576114c6611491565b60018416156114d457908102905b60019390931c9280026114ab565b935093915050565b6000826114f9575060016103fc565b81611506575060006103fc565b816001811461151c576002811461152657611542565b60019150506103fc565b60ff84111561153757611537611491565b50506001821b6103fc565b5060208310610133831016604e8410600b8410161715611565575081810a6103fc565b61157260001984846114a7565b806000190482111561158657611586611491565b029392505050565b60006112d060ff8416836114ea565b80820281158282048414176103fc576103fc611491565b6000602082840312156115c657600080fd5b81516112d081611384565b6000806000606084860312156115e657600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561161157600080fd5b815180151581146112d057600080fd5b808201808211156103fc576103fc611491565b60006001820161164657611646611491565b5060010190565b818103818111156103fc576103fc611491565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116c75781516001600160a01b03168652602095860195909101906001016116a0565b5093949350505050565b8281526040602082015260006116ea604083018461168c565b949350505050565b60006020828403121561170457600080fd5b815167ffffffffffffffff81111561171b57600080fd5b8201601f8101841361172c57600080fd5b805167ffffffffffffffff81111561174657611746611660565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561177357611773611660565b60405291825260208184018101929081018784111561179157600080fd5b6020850194505b838510156117b457845180825260209586019590935001611798565b509695505050505050565b85815284602082015260a0604082015260006117de60a083018661168c565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212200e977621eb6ff0c4087f78bf5c6aa58531034d0cbc9b9aa6ffa081e9c2e8049a64736f6c634300081d0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
