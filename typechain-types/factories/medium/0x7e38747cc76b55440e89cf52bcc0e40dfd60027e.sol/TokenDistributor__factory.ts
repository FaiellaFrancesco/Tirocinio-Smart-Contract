/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenDistributor,
  TokenDistributorInterface,
} from "../../../medium/0x7e38747cc76b55440e89cf52bcc0e40dfd60027e.sol/TokenDistributor";

const _abi = [
  {
    inputs: [],
    name: "ArrayMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "PERMIT2",
    outputs: [
      {
        internalType: "contract IPermit2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "distributeContractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "distributeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct IPermit2.TokenPermissions[]",
            name: "permitted",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IPermit2.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IPermit2.SignatureTransferDetails[]",
        name: "transferDetails",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "vanilla",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405273badc0de628760964219b6b45eed756f6b5405026608052348015602757600080fd5b50608051610a396100576000396000818160ed0152818161013a015281816101e501526103a70152610a396000f3fe60806040526004361061004e5760003560e01c80632ac4dfdc1461005a5780633a9ce0401461007c5780636afdd8501461009c5780638da5cb5b146100db578063ea3883b71461010f57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007a6100753660046105b8565b61012f565b005b34801561008857600080fd5b5061007a6100973660046106e3565b6101da565b3480156100a857600080fd5b506100bf6e22d473030f116ddee9f6b43ac78ba381565b6040516001600160a01b03909116815260200160405180910390f35b3480156100e757600080fd5b506100bf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561011b57600080fd5b5061007a61012a366004610797565b61039c565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461016457600080fd5b60405163edd9444b60e01b81526e22d473030f116ddee9f6b43ac78ba39063edd9444b906101a0908990899089908990899089906004016108ae565b600060405180830381600087803b1580156101ba57600080fd5b505af11580156101ce573d6000803e3d6000fd5b50505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020f57600080fd5b858414158061021e5750838214155b1561023c5760405163b7c1140d60e01b815260040160405180910390fd5b60005b8481101561039257600088888381811061025b5761025b61099c565b905060200201602081019061027091906109b2565b6001600160a01b03166323b872dd60e01b848989868181106102945761029461099c565b90506020020160208101906102a991906109b2565b8888878181106102bb576102bb61099c565b6040516001600160a01b0395861660248201529490931660448501525060209091020135606482015260840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161032591906109d4565b6000604051808303816000865af19150503d8060008114610362576040519150601f19603f3d011682016040523d82523d6000602084013e610367565b606091505b5050905080610389576040516312171d8360e31b815260040160405180910390fd5b5060010161023f565b5050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d157600080fd5b84831415806103e05750828114155b156103fe5760405163b7c1140d60e01b815260040160405180910390fd5b60005b8381101561054b57600087878381811061041d5761041d61099c565b905060200201602081019061043291906109b2565b6001600160a01b031663a9059cbb60e01b8787858181106104555761045561099c565b905060200201602081019061046a91906109b2565b86868681811061047c5761047c61099c565b6040516001600160a01b039094166024850152602002919091013560448301525060640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516104de91906109d4565b6000604051808303816000865af19150503d806000811461051b576040519150601f19603f3d011682016040523d82523d6000602084013e610520565b606091505b5050905080610542576040516312171d8360e31b815260040160405180910390fd5b50600101610401565b50505050505050565b80356001600160a01b038116811461056b57600080fd5b919050565b60008083601f84011261058257600080fd5b5081356001600160401b0381111561059957600080fd5b6020830191508360208285010111156105b157600080fd5b9250929050565b600080600080600080608087890312156105d157600080fd5b86356001600160401b038111156105e757600080fd5b87016060818a0312156105f957600080fd5b955060208701356001600160401b0381111561061457600080fd5b8701601f8101891361062557600080fd5b80356001600160401b0381111561063b57600080fd5b8960208260061b840101111561065057600080fd5b6020919091019550935061066660408801610554565b925060608701356001600160401b0381111561068157600080fd5b61068d89828a01610570565b979a9699509497509295939492505050565b60008083601f8401126106b157600080fd5b5081356001600160401b038111156106c857600080fd5b6020830191508360208260051b85010111156105b157600080fd5b60008060008060008060006080888a0312156106fe57600080fd5b87356001600160401b0381111561071457600080fd5b6107208a828b0161069f565b90985096505060208801356001600160401b0381111561073f57600080fd5b61074b8a828b0161069f565b90965094505060408801356001600160401b0381111561076a57600080fd5b6107768a828b0161069f565b9094509250610789905060608901610554565b905092959891949750929550565b600080600080600080606087890312156107b057600080fd5b86356001600160401b038111156107c657600080fd5b6107d289828a0161069f565b90975095505060208701356001600160401b038111156107f157600080fd5b6107fd89828a0161069f565b90955093505060408701356001600160401b0381111561081c57600080fd5b61068d89828a0161069f565b6001600160a01b0361083982610554565b168252602090810135910152565b81835260208301925060008160005b8481101561087b576108688683610828565b6040958601959190910190600101610856565b5093949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60808152600060e082018835601e198a36030181126108cc57600080fd5b89016020810190356001600160401b038111156108e857600080fd5b8060061b36038213156108fa57600080fd5b60606080860152918290529060009061010085015b81831015610934576109218185610828565b604093840193600193909301920161090f565b60208c81013560a088015260408d013560c08801819052878303918801919091529350610962818b8d610847565b935050505061097c60408401876001600160a01b03169052565b828103606084015261098f818587610885565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109c457600080fd5b6109cd82610554565b9392505050565b6000825160005b818110156109f557602081860181015185830152016109db565b50600092019182525091905056fea26469706673582212206ba3caee1cc9c092672673560332c20b4c71474582cdfcdc1388d1cc40bcfafe64736f6c634300081e0033";

type TokenDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenDistributor__factory extends ContractFactory {
  constructor(...args: TokenDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenDistributor__factory {
    return super.connect(runner) as TokenDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenDistributorInterface {
    return new Interface(_abi) as TokenDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenDistributor {
    return new Contract(address, _abi, runner) as unknown as TokenDistributor;
  }
}
