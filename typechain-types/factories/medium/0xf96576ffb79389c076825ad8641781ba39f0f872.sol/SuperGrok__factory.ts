/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SuperGrok,
  SuperGrokInterface,
} from "../../../medium/0xf96576ffb79389c076825ad8641781ba39f0f872.sol/SuperGrok";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556014600a55601e600b556014600c556000600d556009600a61003a919061030b565b610049906401f5806640610321565b600e556100586009600a61030b565b610067906401f5806640610321565b600f556100766009600a61030b565b6100849063fac03320610321565b6010556100936009600a61030b565b6100a19063fac03320610321565b6011556013805461ffff60a81b1916905560006014819055601581905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319163317905561011b6009600a61030b565b61012a906461f313f880610321565b3360009081526001602081905260408220929092556003906101546000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556005549091168352912080549092161790556101b23390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101ea6009600a61030b565b6101f9906461f313f880610321565b60405190815260200160405180910390a3610338565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156102605781600019048211156102465761024661020f565b8085161561025357918102915b93841c939080029061022a565b509250929050565b60008261027757506001610305565b8161028457506000610305565b816001811461029a57600281146102a4576102c0565b6001915050610305565b60ff8411156102b5576102b561020f565b50506001821b610305565b5060208310610133831016604e8410600b84101617156102e3575081810a610305565b6102ed8383610225565b80600019048211156103015761030161020f565b0290505b92915050565b600061031a60ff841683610268565b9392505050565b80820281158282048414176103055761030561020f565b611b8c806103476000396000f3fe6080604052600436106101395760003560e01c8063751039fc116100ab578063a9059cbb1161006f578063a9059cbb1461034f578063bf474bed1461036f578063c9567bf914610385578063d34628cc1461039a578063dd62ed3e146103ba578063ec1f3f631461040057600080fd5b8063751039fc146102e65780637d1db4a5146102fb5780638da5cb5b146103115780638f9a55c01461033957806395d89b411461014557600080fd5b8063313ce567116100fd578063313ce5671461020f57806331c2d8471461022b5780633bbac5791461024d57806351bc3c851461028657806370a082311461029b578063715018a6146102d157600080fd5b806306fdde0314610145578063095ea7b3146101865780630faee56f146101b657806318160ddd146101da57806323b872dd146101ef57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506040805180820182526009815268537570657247726f6b60b81b6020820152905161017d9190611654565b60405180910390f35b34801561019257600080fd5b506101a66101a13660046116cb565b610420565b604051901515815260200161017d565b3480156101c257600080fd5b506101cc60115481565b60405190815260200161017d565b3480156101e657600080fd5b506101cc610437565b3480156101fb57600080fd5b506101a661020a3660046116f7565b610459565b34801561021b57600080fd5b506040516009815260200161017d565b34801561023757600080fd5b5061024b61024636600461174e565b6104c2565b005b34801561025957600080fd5b506101a6610268366004611813565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561029257600080fd5b5061024b610557565b3480156102a757600080fd5b506101cc6102b6366004611813565b6001600160a01b031660009081526001602052604090205490565b3480156102dd57600080fd5b5061024b6105a6565b3480156102f257600080fd5b5061024b610655565b34801561030757600080fd5b506101cc600e5481565b34801561031d57600080fd5b506000546040516001600160a01b03909116815260200161017d565b34801561034557600080fd5b506101cc600f5481565b34801561035b57600080fd5b506101a661036a3660046116cb565b61070a565b34801561037b57600080fd5b506101cc60105481565b34801561039157600080fd5b5061024b610717565b3480156103a657600080fd5b5061024b6103b536600461174e565b610b0f565b3480156103c657600080fd5b506101cc6103d5366004611830565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561040c57600080fd5b5061024b61041b366004611869565b610b97565b600061042d338484610bde565b5060015b92915050565b60006104456009600a61197c565b610454906461f313f88061198b565b905090565b6000610466848484610d02565b6104b884336104b385604051806060016040528060288152602001611b2f602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906112b7565b610bde565b5060019392505050565b6000546001600160a01b031633146104f55760405162461bcd60e51b81526004016104ec906119a2565b60405180910390fd5b60005b815181101561055357600060046000848481518110610519576105196119d7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016104f8565b5050565b6005546001600160a01b0316336001600160a01b03161461057757600080fd5b30600090815260016020526040902054801561059657610596816112f1565b478015610553576105538161146b565b6000546001600160a01b031633146105d05760405162461bcd60e51b81526004016104ec906119a2565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561060a573d6000803e3d6000fd5b50600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461067f5760405162461bcd60e51b81526004016104ec906119a2565b61068b6009600a61197c565b61069a906461f313f88061198b565b600e556106a96009600a61197c565b6106b8906461f313f88061198b565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106e86009600a61197c565b6106f7906461f313f88061198b565b60405190815260200160405180910390a1565b600061042d338484610d02565b6000546001600160a01b031633146107415760405162461bcd60e51b81526004016104ec906119a2565b601354600160a01b900460ff161561079b5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ec565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556107ce3033600019610bde565b6108073061036a6064610801605f6107fb336001600160a01b031660009081526001602052604090205490565b906114a5565b9061152e565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f91906119ed565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090591906119ed565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610952573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097691906119ed565b601380546001600160a01b0319166001600160a01b039283161790556012546109a491309116600019610bde565b6012546001600160a01b031663f305d71947306109d6816001600160a01b031660009081526001602052604090205490565b6000806109eb6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a53573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a789190611a0a565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af59190611a38565b506013805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610b395760405162461bcd60e51b81526004016104ec906119a2565b60005b815181101561055357600160046000848481518110610b5d57610b5d6119d7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b3c565b6005546001600160a01b0316336001600160a01b031614610bb757600080fd5b6008548111158015610bcb57506009548111155b610bd457600080fd5b6008819055600955565b6001600160a01b038316610c405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ec565b6001600160a01b038216610ca15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ec565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d665760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ec565b6001600160a01b038216610dc85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ec565b60008111610e2a5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ec565b600080546001600160a01b03858116911614801590610e5757506000546001600160a01b03848116911614155b15611174576001600160a01b03841660009081526004602052604090205460ff16158015610e9e57506001600160a01b03831660009081526004602052604090205460ff16155b610ea757600080fd5b610ecd6064610801600a54600d5411610ec257600654610ec6565b6008545b85906114a5565b6013549091506001600160a01b038581169116148015610efb57506012546001600160a01b03848116911614155b8015610f2057506001600160a01b03831660009081526003602052604090205460ff16155b1561100857600e54821115610f775760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104ec565b600f5482610f9a856001600160a01b031660009081526001602052604090205490565b610fa49190611a5a565b1115610ff25760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ec565b600d805490600061100283611a6d565b91905055505b6013546001600160a01b03848116911614801561102e57506001600160a01b0384163014155b1561105b576110586064610801600b54600d541161104e57600754610ec6565b60095485906114a5565b90505b30600090815260016020526040902054601354600160a81b900460ff1615801561109257506013546001600160a01b038581169116145b80156110a75750601354600160b01b900460ff165b80156110b4575060105481115b80156110c35750600c54600d54115b15611172576015544311156110d85760006014555b60036014541061112a5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ec565b6111476111428461113d84601154611570565b611570565b6112f1565b478015611157576111574761146b565b6014805490600061116783611a6d565b909155505043601555505b505b80156111ee57306000908152600160205260409020546111949082611585565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111e59085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461121190836115e4565b6001600160a01b03851660009081526001602052604090205561125661123783836115e4565b6001600160a01b03851660009081526001602052604090205490611585565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6112a085856115e4565b60405190815260200160405180910390a350505050565b600081848411156112db5760405162461bcd60e51b81526004016104ec9190611654565b5060006112e88486611a86565b95945050505050565b6013805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611339576113396119d7565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b691906119ed565b816001815181106113c9576113c96119d7565b6001600160a01b0392831660209182029290920101526012546113ef9130911684610bde565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611428908590600090869030904290600401611a99565b600060405180830381600087803b15801561144257600080fd5b505af1158015611456573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610553573d6000803e3d6000fd5b6000826000036114b757506000610431565b60006114c3838561198b565b9050826114d08583611b0c565b146115275760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ec565b9392505050565b600061152783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611626565b600081831161157f5782611527565b50919050565b6000806115928385611a5a565b9050838110156115275760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ec565b600061152783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b7565b600081836116475760405162461bcd60e51b81526004016104ec9190611654565b5060006112e88486611b0c565b60006020808352835180602085015260005b8181101561168257858101830151858201604001528201611666565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146116b857600080fd5b50565b80356116c6816116a3565b919050565b600080604083850312156116de57600080fd5b82356116e9816116a3565b946020939093013593505050565b60008060006060848603121561170c57600080fd5b8335611717816116a3565b92506020840135611727816116a3565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561176157600080fd5b823567ffffffffffffffff8082111561177957600080fd5b818501915085601f83011261178d57600080fd5b81358181111561179f5761179f611738565b8060051b604051601f19603f830116810181811085821117156117c4576117c4611738565b6040529182528482019250838101850191888311156117e257600080fd5b938501935b82851015611807576117f8856116bb565b845293850193928501926117e7565b98975050505050505050565b60006020828403121561182557600080fd5b8135611527816116a3565b6000806040838503121561184357600080fd5b823561184e816116a3565b9150602083013561185e816116a3565b809150509250929050565b60006020828403121561187b57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156118d35781600019048211156118b9576118b9611882565b808516156118c657918102915b93841c939080029061189d565b509250929050565b6000826118ea57506001610431565b816118f757506000610431565b816001811461190d576002811461191757611933565b6001915050610431565b60ff84111561192857611928611882565b50506001821b610431565b5060208310610133831016604e8410600b8410161715611956575081810a610431565b6119608383611898565b806000190482111561197457611974611882565b029392505050565b600061152760ff8416836118db565b808202811582820484141761043157610431611882565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119ff57600080fd5b8151611527816116a3565b600080600060608486031215611a1f57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611a4a57600080fd5b8151801515811461152757600080fd5b8082018082111561043157610431611882565b600060018201611a7f57611a7f611882565b5060010190565b8181038181111561043157610431611882565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611aeb5784516001600160a01b031683529383019391830191600101611ac6565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611b2957634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a98f5d53b7d026c90c12e498d61135575d1181713ece8ee62462f666630e602f64736f6c63430008190033";

type SuperGrokConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperGrokConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperGrok__factory extends ContractFactory {
  constructor(...args: SuperGrokConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<SuperGrok> {
    return super.deploy(overrides || {}) as Promise<SuperGrok>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SuperGrok {
    return super.attach(address) as SuperGrok;
  }
  override connect(signer: Signer): SuperGrok__factory {
    return super.connect(signer) as SuperGrok__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperGrokInterface {
    return new utils.Interface(_abi) as SuperGrokInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperGrok {
    return new Contract(address, _abi, signerOrProvider) as SuperGrok;
  }
}
