/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x3d9c461dafc39761d778b9d772b6caa5b6faa562.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueSIXETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061199583398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061199583398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611625806103706000396000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a578063a9059cbb11610059578063a9059cbb14610264578063b16dbdbd14610284578063dd62ed3e14610299578063ea414b28146102df57600080fd5b8063715018a6146102105780638a8c523c146102275780638da5cb5b1461023c57806395d89b41146100f857600080fd5b806318160ddd116100c657806318160ddd1461018957806323b872dd1461019e578063313ce567146101be57806370a08231146101da57600080fd5b806306fdde03146100f8578063095ea7b3146101355780630faee56f1461016557600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506040805180820182526005815264036393432360dc1b6020820152905161012c91906111f3565b60405180910390f35b34801561014157600080fd5b50610155610150366004611256565b6102ff565b604051901515815260200161012c565b34801561017157600080fd5b5061017b60095481565b60405190815260200161012c565b34801561019557600080fd5b5061017b610316565b3480156101aa57600080fd5b506101556101b9366004611282565b610337565b3480156101ca57600080fd5b506040516009815260200161012c565b3480156101e657600080fd5b5061017b6101f53660046112c3565b6001600160a01b031660009081526001602052604090205490565b34801561021c57600080fd5b506102256103f5565b005b34801561023357600080fd5b50610225610472565b34801561024857600080fd5b506000546040516001600160a01b03909116815260200161012c565b34801561027057600080fd5b5061015561027f366004611256565b61082d565b34801561029057600080fd5b5061022561083a565b3480156102a557600080fd5b5061017b6102b43660046112e0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102eb57600080fd5b506102256102fa3660046112c3565b61089d565b600061030c3384846108db565b5060015b92915050565b60006103246009600a611416565b610332906319133850611425565b905090565b60006103448484846109ff565b6004546001600160a01b031633148015906103945750600b546001600160a01b038581169116148061038157506001600160a01b03831661dead14155b8061039457506001600160a01b03841630145b156103eb576103eb84336103e6856040518060600160405280602881526020016115c8602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e67565b6108db565b5060019392505050565b6000546001600160a01b031633146104285760405162461bcd60e51b815260040161041f9061143c565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461049c5760405162461bcd60e51b815260040161041f9061143c565b600b54600160a01b900460ff16156104f65760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161041f565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561053f9130919061053190600990611416565b6103e6906319133850611425565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b69190611471565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190611471565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190611471565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306106f5816001600160a01b031660009081526001602052604090205490565b60008061070a6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610772573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610797919061148e565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a91906114bc565b50565b600061030c3384846109ff565b6000546001600160a01b031633146108645760405162461bcd60e51b815260040161041f9061143c565b6000471161087157600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561082a573d6000803e3d6000fd5b3360009081526003602052604090205460ff166108b957600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661093d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041f565b6001600160a01b03821661099e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041f565b6001600160a01b038216610ac55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041f565b60008111610b275760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161041f565b60006001600160a01b0384163014801590610b4b57506001600160a01b0383163014155b15610d0957600b54600160a81b900460ff16610b9057610b8d6064610b8760075460085411610b7c57600554610b80565b6006545b8590610ea1565b90610f2a565b90505b600b546001600160a01b038581169116148015610bbb5750600a546001600160a01b03848116911614155b8015610be057506001600160a01b03831660009081526003602052604090205460ff16155b8015610bfa57506004546001600160a01b03848116911614155b15610c155760088054906000610c0f836114de565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c4c5750600b546001600160a01b038581169116145b8015610c615750600b54600160b01b900460ff165b8015610c7b57506004546001600160a01b03868116911614155b15610d0757843b15610cc65760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161041f565b8015610cfb5760006009548211610cdd5781610ce1565b6009545b9050610cf9818511610cf35784610f6c565b81610f6c565b505b47610d05476110e6565b505b505b6001600160a01b038416600090815260016020526040902054610d2c9083611124565b6001600160a01b038516600090815260016020526040902055610d71610d528383611124565b6001600160a01b03851660009081526001602052604090205490611166565b6001600160a01b0384166000908152600160205260409020558015610e045730600090815260016020526040902054610daa9082611166565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dfb9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e61576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e4f8585611124565b60405190815260200160405180910390a35b50505050565b60008184841115610e8b5760405162461bcd60e51b815260040161041f91906111f3565b506000610e9884866114f7565b95945050505050565b600082600003610eb357506000610310565b6000610ebf8385611425565b905082610ecc858361150a565b14610f235760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161041f565b9392505050565b6000610f2383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111c5565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fb457610fb461152c565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110319190611471565b816001815181106110445761104461152c565b6001600160a01b039283166020918202929092010152600a5461106a91309116846108db565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110a3908590600090869030904290600401611542565b600060405180830381600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611120573d6000803e3d6000fd5b5050565b6000610f2383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e67565b60008061117383856115b4565b905083811015610f235760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161041f565b600081836111e65760405162461bcd60e51b815260040161041f91906111f3565b506000610e98848661150a565b602081526000825180602084015260005b818110156112215760208186018101516040868401015201611204565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461082a57600080fd5b6000806040838503121561126957600080fd5b823561127481611241565b946020939093013593505050565b60008060006060848603121561129757600080fd5b83356112a281611241565b925060208401356112b281611241565b929592945050506040919091013590565b6000602082840312156112d557600080fd5b8135610f2381611241565b600080604083850312156112f357600080fd5b82356112fe81611241565b9150602083013561130e81611241565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561136a5780850481111561134e5761134e611319565b600184161561135c57908102905b60019390931c928002611333565b935093915050565b60008261138157506001610310565b8161138e57506000610310565b81600181146113a457600281146113ae576113ca565b6001915050610310565b60ff8411156113bf576113bf611319565b50506001821b610310565b5060208310610133831016604e8410600b84101617156113ed575081810a610310565b6113fa600019848461132f565b806000190482111561140e5761140e611319565b029392505050565b6000610f2360ff841683611372565b808202811582820484141761031057610310611319565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561148357600080fd5b8151610f2381611241565b6000806000606084860312156114a357600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156114ce57600080fd5b81518015158114610f2357600080fd5b6000600182016114f0576114f0611319565b5060010190565b8181038181111561031057610310611319565b60008261152757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115945783516001600160a01b031683526020938401939092019160010161156d565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103105761031061131956fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c8ed0a669844e06f8f80ee8bc7a2b615d7cfe23982ce53c93bfbf2299b2c2d1d64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
