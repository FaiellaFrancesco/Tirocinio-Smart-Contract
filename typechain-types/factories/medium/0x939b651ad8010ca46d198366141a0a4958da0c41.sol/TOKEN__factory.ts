/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x939b651ad8010ca46d198366141a0a4958da0c41.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560006009556009600a61002b919061031a565b61003990633b9aca00610330565b600a556000600b819055600d805461ffff60a81b19169055600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b031660006000805160206119b8833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a33060006000805160206119b883398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b611640806103786000396000f3fe6080604052600436106101025760003560e01c80636482c89a116100955780638da5cb5b116100645780638da5cb5b1461029457806395d89b4114610125578063a9059cbb146102bc578063dd62ed3e146102dc578063ea414b281461032257600080fd5b80636482c89a1461021e57806370a0823114610234578063715018a61461026a578063751039fc1461027f57600080fd5b806318160ddd116100d157806318160ddd146101b857806320800a00146101cd57806323b872dd146101e2578063313ce5671461020257600080fd5b806301339c211461010e57806306fdde0314610125578063095ea7b3146101645780630faee56f1461019457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123610342565b005b34801561013157600080fd5b5060408051808201825260078152662827a822a627a760c91b6020820152905161015b919061120e565b60405180910390f35b34801561017057600080fd5b5061018461017f366004611271565b61070b565b604051901515815260200161015b565b3480156101a057600080fd5b506101aa600a5481565b60405190815260200161015b565b3480156101c457600080fd5b506101aa610722565b3480156101d957600080fd5b50610123610743565b3480156101ee57600080fd5b506101846101fd36600461129d565b6107a6565b34801561020e57600080fd5b506040516009815260200161015b565b34801561022a57600080fd5b506101aa600b5481565b34801561024057600080fd5b506101aa61024f3660046112de565b6001600160a01b031660009081526001602052604090205490565b34801561027657600080fd5b50610123610851565b34801561028b57600080fd5b506101236108c5565b3480156102a057600080fd5b506000546040516001600160a01b03909116815260200161015b565b3480156102c857600080fd5b506101846102d7366004611271565b6108f1565b3480156102e857600080fd5b506101aa6102f73660046112fb565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032e57600080fd5b5061012361033d3660046112de565b6108fe565b6000546001600160a01b031633146103755760405162461bcd60e51b815260040161036c90611334565b60405180910390fd5b600d54600160a01b900460ff16156103cf5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161036c565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561041d90309061040a6009600a611466565b61041890633b9aca00611475565b61093c565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610494919061148c565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a919061148c565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b919061148c565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d71947306105d3816001600160a01b031660009081526001602052604090205490565b6000806105e86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610650573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061067591906114a9565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070891906114d7565b50565b600061071833848461093c565b5060015b92915050565b60006107306009600a611466565b61073e90633b9aca00611475565b905090565b6000546001600160a01b0316331461076d5760405162461bcd60e51b815260040161036c90611334565b6000471161077a57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610708573d6000803e3d6000fd5b60006107b3848484610a60565b3360009081526003602052604090205460ff161580156107f55750600d546001600160a01b03858116911614806107f557506001600160a01b03831661dead14155b15610847576108478433610418856040518060600160405280602881526020016115e3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e82565b5060019392505050565b6000546001600160a01b0316331461087b5760405162461bcd60e51b815260040161036c90611334565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108ef5760405162461bcd60e51b815260040161036c90611334565b565b6000610718338484610a60565b3360009081526003602052604090205460ff1661091a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661099e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036c565b6001600160a01b0382166109ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ac45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036c565b6001600160a01b038216610b265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036c565b60008111610b885760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161036c565b60006001600160a01b0384163014801590610bac57506001600160a01b0383163014155b15610d2457600d54600160a81b900460ff16610bf157610bee6064610be860075460085411610bdd57600554610be1565b6006545b8590610ebc565b90610f45565b90505b600d546001600160a01b038581169116148015610c1c5750600c546001600160a01b03848116911614155b8015610c4157506001600160a01b03831660009081526003602052604090205460ff16155b8015610c5b57506004546001600160a01b03848116911614155b15610c765760088054906000610c70836114f9565b91905055505b30600090815260016020526040902054600d54600160a81b900460ff16158015610cad5750600d546001600160a01b038581169116145b8015610cc25750600d54600160b01b900460ff165b8015610cdc57506004546001600160a01b03868116911614155b15610d22578015610d16576000600a548211610cf85781610cfc565b600a545b9050610d14818511610d0e5784610f87565b81610f87565b505b47610d2047611101565b505b505b6001600160a01b038416600090815260016020526040902054610d47908361113f565b6001600160a01b038516600090815260016020526040902055610d8c610d6d838361113f565b6001600160a01b03851660009081526001602052604090205490611181565b6001600160a01b0384166000908152600160205260409020558015610e1f5730600090815260016020526040902054610dc59082611181565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e169085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e7c576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e6a858561113f565b60405190815260200160405180910390a35b50505050565b60008184841115610ea65760405162461bcd60e51b815260040161036c919061120e565b506000610eb38486611512565b95945050505050565b600082600003610ece5750600061071c565b6000610eda8385611475565b905082610ee78583611525565b14610f3e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161036c565b9392505050565b6000610f3e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111e0565b600d805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fcf57610fcf611547565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611028573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104c919061148c565b8160018151811061105f5761105f611547565b6001600160a01b039283166020918202929092010152600c54611085913091168461093c565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110be90859060009086903090429060040161155d565b600060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561113b573d6000803e3d6000fd5b5050565b6000610f3e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e82565b60008061118e83856115cf565b905083811015610f3e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161036c565b600081836112015760405162461bcd60e51b815260040161036c919061120e565b506000610eb38486611525565b602081526000825180602084015260005b8181101561123c576020818601810151604086840101520161121f565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461070857600080fd5b6000806040838503121561128457600080fd5b823561128f8161125c565b946020939093013593505050565b6000806000606084860312156112b257600080fd5b83356112bd8161125c565b925060208401356112cd8161125c565b929592945050506040919091013590565b6000602082840312156112f057600080fd5b8135610f3e8161125c565b6000806040838503121561130e57600080fd5b82356113198161125c565b915060208301356113298161125c565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113ba5780850481111561139e5761139e611369565b60018416156113ac57908102905b60019390931c928002611383565b935093915050565b6000826113d15750600161071c565b816113de5750600061071c565b81600181146113f457600281146113fe5761141a565b600191505061071c565b60ff84111561140f5761140f611369565b50506001821b61071c565b5060208310610133831016604e8410600b841016171561143d575081810a61071c565b61144a600019848461137f565b806000190482111561145e5761145e611369565b029392505050565b6000610f3e60ff8416836113c2565b808202811582820484141761071c5761071c611369565b60006020828403121561149e57600080fd5b8151610f3e8161125c565b6000806000606084860312156114be57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156114e957600080fd5b81518015158114610f3e57600080fd5b60006001820161150b5761150b611369565b5060010190565b8181038181111561071c5761071c611369565b60008261154257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115af5783516001600160a01b0316835260209384019390920191600101611588565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561071c5761071c61136956fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122064240b3bb26916b04cb04b8751f4a15a31707e5b5a9df55402a6b1a1756d7d8e64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
