/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DegenCash,
  DegenCashInterface,
} from "../../../medium/0x01aa2ade4ffc24760f5e344b259df33edcd0b5e6.sol/DegenCash";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "add_QjcEk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_add_QjcEk",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_var_ujPobv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "update_var_ujPobv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082019091526009815268088cacecadc86c2e6d60bb1b602082015260009061003e9082610182565b5060408051808201909152600381526244474360e81b60208201526001906100669082610182565b506100736012600a61033f565b61008290640737be7600610352565b600281905533600081815260046020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36100db6103e842610369565b60035561038b565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010d57607f821691505b60208210810361012d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017d57806000526020600020601f840160051c8101602085101561015a5750805b601f840160051c820191505b8181101561017a5760008155600101610166565b50505b505050565b81516001600160401b0381111561019b5761019b6100e3565b6101af816101a984546100f9565b84610133565b6020601f8211600181146101e357600083156101cb5750848201515b600019600385901b1c1916600184901b17845561017a565b600084815260208120601f198516915b8281101561021357878501518255602094850194600190920191016101f3565b50848210156102315786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102915780850481111561027557610275610240565b600184161561028357908102905b60019390931c92800261025a565b935093915050565b6000826102a857506001610339565b816102b557506000610339565b81600181146102cb57600281146102d5576102f1565b6001915050610339565b60ff8411156102e6576102e6610240565b50506001821b610339565b5060208310610133831016604e8410600b8410161715610314575081810a610339565b6103216000198484610256565b806000190482111561033557610335610240565b0290505b92915050565b600061034b8383610299565b9392505050565b808202811582820484141761033957610339610240565b60008261038657634e487b7160e01b600052601260045260246000fd5b500690565b6107998061039a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634e76e2b91161008c57806395d89b411161006657806395d89b411461019a578063a9059cbb146101a2578063dd62ed3e146101b5578063eed285d5146101e057600080fd5b80634e76e2b91461015d578063708e979a1461016557806370a082311461017a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806310909fa11461011557806318160ddd1461012757806323b872dd14610130578063313ce56714610143575b600080fd5b6100dc6101f3565b6040516100e99190610568565b60405180910390f35b6101056101003660046105d2565b610281565b60405190151581526020016100e9565b6006545b6040519081526020016100e9565b61011960025481565b61010561013e3660046105fc565b6102ee565b61014b601281565b60405160ff90911681526020016100e9565b600354610119565b610178610173366004610639565b600355565b005b610119610188366004610652565b60046020526000908152604090205481565b6100dc61049e565b6101056101b03660046105d2565b6104ab565b6101196101c3366004610674565b600560209081526000928352604080842090915290825290205481565b6101786101ee366004610639565b600655565b60008054610200906106a7565b80601f016020809104026020016040519081016040528092919081815260200182805461022c906106a7565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102dc9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526004602052604081205482111561032f5760405162461bcd60e51b8152600401610326906106e1565b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610326565b6001600160a01b038416600090815260046020526040812080548492906103db90849061073d565b90915550506001600160a01b03831660009081526004602052604081208054849290610408908490610750565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061044090849061073d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161048c91815260200190565b60405180910390a35060019392505050565b60018054610200906106a7565b336000908152600460205260408120548211156104da5760405162461bcd60e51b8152600401610326906106e1565b33600090815260046020526040812080548492906104f990849061073d565b90915550506001600160a01b03831660009081526004602052604081208054849290610526908490610750565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102dc565b602081526000825180602084015260005b818110156105965760208186018101516040868401015201610579565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105cd57600080fd5b919050565b600080604083850312156105e557600080fd5b6105ee836105b6565b946020939093013593505050565b60008060006060848603121561061157600080fd5b61061a846105b6565b9250610628602085016105b6565b929592945050506040919091013590565b60006020828403121561064b57600080fd5b5035919050565b60006020828403121561066457600080fd5b61066d826105b6565b9392505050565b6000806040838503121561068757600080fd5b610690836105b6565b915061069e602084016105b6565b90509250929050565b600181811c908216806106bb57607f821691505b6020821081036106db57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102e8576102e8610727565b808201808211156102e8576102e861072756fea2646970667358221220af15a92bf4ecbaa83ff946eaddacdf154e1c65881444ce4904c29a18fac7e5e564736f6c634300081e0033";

type DegenCashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenCashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenCash__factory extends ContractFactory {
  constructor(...args: DegenCashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DegenCash> {
    return super.deploy(overrides || {}) as Promise<DegenCash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DegenCash {
    return super.attach(address) as DegenCash;
  }
  override connect(signer: Signer): DegenCash__factory {
    return super.connect(signer) as DegenCash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenCashInterface {
    return new utils.Interface(_abi) as DegenCashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DegenCash {
    return new Contract(address, _abi, signerOrProvider) as DegenCash;
  }
}
