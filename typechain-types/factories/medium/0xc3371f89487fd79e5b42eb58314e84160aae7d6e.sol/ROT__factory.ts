/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ROT,
  ROTInterface,
} from "../../../medium/0xc3371f89487fd79e5b42eb58314e84160aae7d6e.sol/ROT";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceBuyTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceSellTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260186006556017600755600060085560006009556017600a556017600b556017600c556000600d556000600e5560646009600a620000439190620003a4565b62000054906461f313f880620003bc565b620000609190620003d6565b6200006d906002620003bc565b600f556064620000806009600a620003a4565b62000091906461f313f880620003bc565b6200009d9190620003d6565b620000aa906002620003bc565b6010556103e8620000be6009600a620003a4565b620000cf906461f313f880620003bc565b620000db9190620003d6565b620000e8906001620003bc565b6011556064620000fb6009600a620003a4565b6200010c906461f313f880620003bc565b620001189190620003d6565b62000125906001620003bc565b6012556014805461ffff60a81b1916905560006015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001a16009600a620003a4565b620001b2906461f313f880620003bc565b306000908152600160208190526040822092909255600390620001dd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553080825260039094528281208054861660019081179091556005549092168152918220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002676009600a620003a4565b62000278906461f313f880620003bc565b60405190815260200160405180910390a3620003f9565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002e6578160001904821115620002ca57620002ca6200028f565b80851615620002d857918102915b93841c9390800290620002aa565b509250929050565b600082620002ff575060016200039e565b816200030e575060006200039e565b8160018114620003275760028114620003325762000352565b60019150506200039e565b60ff8411156200034657620003466200028f565b50506001821b6200039e565b5060208310610133831016604e8410600b841016171562000377575081810a6200039e565b620003838383620002a5565b80600019048211156200039a576200039a6200028f565b0290505b92915050565b6000620003b560ff841683620002ee565b9392505050565b80820281158282048414176200039e576200039e6200028f565b600082620003f457634e487b7160e01b600052601260045260246000fd5b500490565b611d1d80620004096000396000f3fe6080604052600436106101855760003560e01c8063751039fc116100d1578063bf474bed1161008a578063d34628cc11610064578063d34628cc14610456578063dd62ed3e14610476578063ec1f3f63146104bc578063f2fde38b146104dc57600080fd5b8063bf474bed14610415578063c36956a01461042b578063c9567bf91461044157600080fd5b8063751039fc146103605780637d1db4a5146103755780638da5cb5b1461038b5780638f9a55c0146103b357806395d89b41146103c9578063a9059cbb146103f557600080fd5b8063313ce5671161013e57806351bc3c851161011857806351bc3c85146102eb5780636fc3eaec1461030057806370a0823114610315578063715018a61461034b57600080fd5b8063313ce5671461027457806331c2d847146102905780633bbac579146102b257600080fd5b806306fdde0314610191578063095ea7b3146101d55780630c193045146102055780630faee56f1461022957806318160ddd1461023f57806323b872dd1461025457600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b5060408051808201909152600981526812185c1c1e48149bdd60ba1b60208201525b6040516101cc91906117eb565b60405180910390f35b3480156101e157600080fd5b506101f56101f036600461185e565b6104fc565b60405190151581526020016101cc565b34801561021157600080fd5b5061021b600a5481565b6040519081526020016101cc565b34801561023557600080fd5b5061021b60125481565b34801561024b57600080fd5b5061021b610513565b34801561026057600080fd5b506101f561026f36600461188a565b610535565b34801561028057600080fd5b50604051600981526020016101cc565b34801561029c57600080fd5b506102b06102ab3660046118e1565b61059e565b005b3480156102be57600080fd5b506101f56102cd3660046119a6565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102f757600080fd5b506102b061063d565b34801561030c57600080fd5b506102b061068c565b34801561032157600080fd5b5061021b6103303660046119a6565b6001600160a01b031660009081526001602052604090205490565b34801561035757600080fd5b506102b06106b9565b34801561036c57600080fd5b506102b061072d565b34801561038157600080fd5b5061021b600f5481565b34801561039757600080fd5b506000546040516001600160a01b0390911681526020016101cc565b3480156103bf57600080fd5b5061021b60105481565b3480156103d557600080fd5b506040805180820190915260038152621493d560ea1b60208201526101bf565b34801561040157600080fd5b506101f561041036600461185e565b6107e2565b34801561042157600080fd5b5061021b60115481565b34801561043757600080fd5b5061021b600b5481565b34801561044d57600080fd5b506102b06107ef565b34801561046257600080fd5b506102b06104713660046118e1565b610bac565b34801561048257600080fd5b5061021b6104913660046119c3565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104c857600080fd5b506102b06104d73660046119fc565b610c3e565b3480156104e857600080fd5b506102b06104f73660046119a6565b610c85565b6000610509338484610d6f565b5060015b92915050565b60006105216009600a611b0f565b610530906461f313f880611b1e565b905090565b6000610542848484610e93565b610594843361058f85604051806060016040528060288152602001611cc0602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061144e565b610d6f565b5060019392505050565b6000546001600160a01b031633146105d15760405162461bcd60e51b81526004016105c890611b35565b60405180910390fd5b60005b8151811015610639576000600460008484815181106105f5576105f5611b6a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061063181611b80565b9150506105d4565b5050565b6005546001600160a01b0316336001600160a01b03161461065d57600080fd5b30600090815260016020526040902054801561067c5761067c81611488565b4780156106395761063981611602565b6005546001600160a01b0316336001600160a01b0316146106ac57600080fd5b476106b681611602565b50565b6000546001600160a01b031633146106e35760405162461bcd60e51b81526004016105c890611b35565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107575760405162461bcd60e51b81526004016105c890611b35565b6107636009600a611b0f565b610772906461f313f880611b1e565b600f556107816009600a611b0f565b610790906461f313f880611b1e565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107c06009600a611b0f565b6107cf906461f313f880611b1e565b60405190815260200160405180910390a1565b6000610509338484610e93565b6000546001600160a01b031633146108195760405162461bcd60e51b81526004016105c890611b35565b601454600160a01b900460ff16156108735760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105c8565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108bd9030906108ae6009600a611b0f565b61058f906461f313f880611b1e565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190611b99565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190611b99565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611b99565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a73816001600160a01b031660009081526001602052604090205490565b600080610a886000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610af0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b159190611bb6565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b929190611be4565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bd65760405162461bcd60e51b81526004016105c890611b35565b60005b815181101561063957600160046000848481518110610bfa57610bfa611b6a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c3681611b80565b915050610bd9565b6005546001600160a01b0316336001600160a01b031614610c5e57600080fd5b6008548111158015610c7257506009548111155b610c7b57600080fd5b6008819055600955565b6000546001600160a01b03163314610caf5760405162461bcd60e51b81526004016105c890611b35565b6001600160a01b038116610d145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105c8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610dd15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c8565b6001600160a01b038216610e325760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c8565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ef75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105c8565b6001600160a01b038216610f595760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c8565b60008111610fbb5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105c8565b600080546001600160a01b03858116911614801590610fe857506000546001600160a01b03848116911614155b1561130b576001600160a01b03841660009081526004602052604090205460ff1615801561102f57506001600160a01b03831660009081526004602052604090205460ff16155b61103857600080fd5b611064606461105e600a54600e541161105357600654611057565b6008545b859061163c565b906116c5565b6014549091506001600160a01b03858116911614801561109257506013546001600160a01b03848116911614155b80156110b757506001600160a01b03831660009081526003602052604090205460ff16155b1561119f57600f5482111561110e5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016105c8565b60105482611131856001600160a01b031660009081526001602052604090205490565b61113b9190611c06565b11156111895760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105c8565b600e805490600061119983611b80565b91905055505b6014546001600160a01b0384811691161480156111c557506001600160a01b0384163014155b156111f2576111ef606461105e600b54600e54116111e557600754611057565b600954859061163c565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561122957506014546001600160a01b038581169116145b801561123e5750601454600160b01b900460ff165b801561124b575060115481115b801561125a5750600c54600e54115b156113095760165443111561126f5760006015555b6005601554106112c15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920352073656c6c732070657220626c6f636b2100000000000000000060448201526064016105c8565b6112de6112d9846112d484601254611707565b611707565b611488565b4780156112ee576112ee47611602565b601580549060006112fe83611b80565b909155505043601655505b505b8015611385573060009081526001602052604090205461132b908261171c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061137c9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113a8908361177b565b6001600160a01b0385166000908152600160205260409020556113ed6113ce838361177b565b6001600160a01b0385166000908152600160205260409020549061171c565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611437858561177b565b60405190815260200160405180910390a350505050565b600081848411156114725760405162461bcd60e51b81526004016105c891906117eb565b50600061147f8486611c19565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106114d0576114d0611b6a565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d9190611b99565b8160018151811061156057611560611b6a565b6001600160a01b0392831660209182029290920101526013546115869130911684610d6f565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906115bf908590600090869030904290600401611c2c565b600060405180830381600087803b1580156115d957600080fd5b505af11580156115ed573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610639573d6000803e3d6000fd5b60008260000361164e5750600061050d565b600061165a8385611b1e565b9050826116678583611c9d565b146116be5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016105c8565b9392505050565b60006116be83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506117bd565b600081831161171657826116be565b50919050565b6000806117298385611c06565b9050838110156116be5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105c8565b60006116be83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061144e565b600081836117de5760405162461bcd60e51b81526004016105c891906117eb565b50600061147f8486611c9d565b600060208083528351808285015260005b81811015611818578581018301518582016040015282016117fc565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106b657600080fd5b803561185981611839565b919050565b6000806040838503121561187157600080fd5b823561187c81611839565b946020939093013593505050565b60008060006060848603121561189f57600080fd5b83356118aa81611839565b925060208401356118ba81611839565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118f457600080fd5b823567ffffffffffffffff8082111561190c57600080fd5b818501915085601f83011261192057600080fd5b813581811115611932576119326118cb565b8060051b604051601f19603f83011681018181108582111715611957576119576118cb565b60405291825284820192508381018501918883111561197557600080fd5b938501935b8285101561199a5761198b8561184e565b8452938501939285019261197a565b98975050505050505050565b6000602082840312156119b857600080fd5b81356116be81611839565b600080604083850312156119d657600080fd5b82356119e181611839565b915060208301356119f181611839565b809150509250929050565b600060208284031215611a0e57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a66578160001904821115611a4c57611a4c611a15565b80851615611a5957918102915b93841c9390800290611a30565b509250929050565b600082611a7d5750600161050d565b81611a8a5750600061050d565b8160018114611aa05760028114611aaa57611ac6565b600191505061050d565b60ff841115611abb57611abb611a15565b50506001821b61050d565b5060208310610133831016604e8410600b8410161715611ae9575081810a61050d565b611af38383611a2b565b8060001904821115611b0757611b07611a15565b029392505050565b60006116be60ff841683611a6e565b808202811582820484141761050d5761050d611a15565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611b9257611b92611a15565b5060010190565b600060208284031215611bab57600080fd5b81516116be81611839565b600080600060608486031215611bcb57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611bf657600080fd5b815180151581146116be57600080fd5b8082018082111561050d5761050d611a15565b8181038181111561050d5761050d611a15565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c7c5784516001600160a01b031683529383019391830191600101611c57565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611cba57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220464fbdc65b608b316e8f30afde205338e9a036ca35d313efa0d802d196bf615264736f6c63430008150033";

type ROTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ROTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ROT__factory extends ContractFactory {
  constructor(...args: ROTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ROT> {
    return super.deploy(overrides || {}) as Promise<ROT>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ROT {
    return super.attach(address) as ROT;
  }
  override connect(signer: Signer): ROT__factory {
    return super.connect(signer) as ROT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ROTInterface {
    return new utils.Interface(_abi) as ROTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ROT {
    return new Contract(address, _abi, signerOrProvider) as ROT;
  }
}
