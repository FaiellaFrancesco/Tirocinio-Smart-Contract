/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../medium/0x6c9f6b977b27e65b686ea6a57633f9aca2fd9280.sol/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "revokeAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cc1380380610cc183398101604081905261002f91610195565b600161003b85826102a7565b50600061004884826102a7565b506002805460ff191660ff8416179055600381905580600460006100693390565b6001600160a01b03168152602081019190915260400160002055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040516100cb91815260200190565b60405180910390a350505050610365565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261010357600080fd5b81516001600160401b0381111561011c5761011c6100dc565b604051601f8201601f19908116603f011681016001600160401b038111828210171561014a5761014a6100dc565b60405281815283820160200185101561016257600080fd5b60005b8281101561018157602081860181015183830182015201610165565b506000918101602001919091529392505050565b600080600080608085870312156101ab57600080fd5b84516001600160401b038111156101c157600080fd5b6101cd878288016100f2565b602087015190955090506001600160401b038111156101eb57600080fd5b6101f7878288016100f2565b935050604085015160ff8116811461020e57600080fd5b6060959095015193969295505050565b600181811c9082168061023257607f821691505b60208210810361025257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102a257806000526020600020601f840160051c8101602085101561027f5750805b601f840160051c820191505b8181101561029f576000815560010161028b565b50505b505050565b81516001600160401b038111156102c0576102c06100dc565b6102d4816102ce845461021e565b84610258565b6020601f82116001811461030857600083156102f05750848201515b600019600385901b1c1916600184901b17845561029f565b600084815260208120601f198516915b828110156103385787850151825560209485019460019092019101610318565b50848210156103565786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61094d806103746000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a457c2d711610066578063a457c2d7146101b7578063a9059cbb146101ca578063ad11fe44146101dd578063dd62ed3e146101f057600080fd5b806342966c681461017157806370a082311461018657806395d89b41146101af57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f578063395093511461015e575b600080fd5b6100dc610229565b6040516100e99190610762565b60405180910390f35b6101056101003660046107cc565b6102b7565b60405190151581526020016100e9565b61011e60035481565b6040519081526020016100e9565b61010561013a3660046107f6565b6102ce565b60025461014c9060ff1681565b60405160ff90911681526020016100e9565b61010561016c3660046107cc565b61031d565b61018461017f366004610833565b610354565b005b61011e61019436600461084c565b6001600160a01b031660009081526004602052604090205490565b6100dc6103ba565b6101056101c53660046107cc565b6103c7565b6101056101d83660046107cc565b6103fe565b6101846101eb36600461084c565b61040b565b61011e6101fe36600461086e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60008054610236906108a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610262906108a1565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b505050505081565b60006102c4338484610413565b5060015b92915050565b6001600160a01b03831660009081526005602090815260408083203380855292528220546103089186916103039086906108f1565b610413565b610313848484610521565b5060019392505050565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916102c4918590610303908690610904565b336000908152600460205260409020548111156103ab573360008181526004602081905260409182902054915163391434e360e21b8152908101929092526024820152604481018290526064015b60405180910390fd5b6103b733600083610645565b50565b60018054610236906108a1565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916102c49185906103039086906108f1565b60006102c4338484610521565b6103b7338260005b6001600160a01b0383166104695760405162461bcd60e51b815260206004820152601d60248201527f417070726f76652066726f6d20746865207a65726f206164647265737300000060448201526064016103a2565b6001600160a01b0382166104bf5760405162461bcd60e51b815260206004820152601b60248201527f417070726f766520746f20746865207a65726f2061646472657373000000000060448201526064016103a2565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105775760405162461bcd60e51b815260206004820152601e60248201527f5472616e736665722066726f6d20746865207a65726f2061646472657373000060448201526064016103a2565b6001600160a01b0382166105cd5760405162461bcd60e51b815260206004820152601c60248201527f5472616e7366657220746f20746865207a65726f20616464726573730000000060448201526064016103a2565b6001600160a01b0383166000908152600460205260409020548111156106355760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657220616d6f756e7420657863656564732062616c616e63650060448201526064016103a2565b610640838383610645565b505050565b6001600160a01b0383166106705780600360008282546106659190610904565b909155506106e29050565b6001600160a01b038316600090815260046020526040902054818110156106c35760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a2565b6001600160a01b03841660009081526004602052604090209082900390555b6001600160a01b0382166106fe5760038054829003905561071d565b6001600160a01b03821660009081526004602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161051491815260200190565b602081526000825180602084015260005b818110156107905760208186018101516040868401015201610773565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146107c757600080fd5b919050565b600080604083850312156107df57600080fd5b6107e8836107b0565b946020939093013593505050565b60008060006060848603121561080b57600080fd5b610814846107b0565b9250610822602085016107b0565b929592945050506040919091013590565b60006020828403121561084557600080fd5b5035919050565b60006020828403121561085e57600080fd5b610867826107b0565b9392505050565b6000806040838503121561088157600080fd5b61088a836107b0565b9150610898602084016107b0565b90509250929050565b600181811c908216806108b557607f821691505b6020821081036108d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102c8576102c86108db565b808201808211156102c8576102c86108db56fea26469706673582212208bffb70fceb02658947d6f860857c7ac0cd4f0769dceb41b2dc97219bc7191ff64736f6c634300081e0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _symbol: string,
    _name: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _symbol,
      _name,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _symbol: string,
    _name: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _symbol,
      _name,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<
      ERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20__factory {
    return super.connect(runner) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20 {
    return new Contract(address, _abi, runner) as unknown as ERC20;
  }
}
