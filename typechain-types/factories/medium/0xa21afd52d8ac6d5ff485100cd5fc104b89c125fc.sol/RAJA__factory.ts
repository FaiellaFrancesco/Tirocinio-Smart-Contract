/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RAJA,
  RAJAInterface,
} from "../../../medium/0xa21afd52d8ac6d5ff485100cd5fc104b89c125fc.sol/RAJA";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052601760055560176006556000600755600060085560176009556017600a556014600b556000600c556000600d5560646009600a6100419190610377565b610050906461f313f88061038d565b61005b90600261038d565b61006591906103a4565b600e5560646100766009600a610377565b610085906461f313f88061038d565b61009090600261038d565b61009a91906103a4565b600f556103e86100ac6009600a610377565b6100bb906461f313f88061038d565b6100c690600361038d565b6100d091906103a4565b60105560646100e16009600a610377565b6100f0906461f313f88061038d565b6100fb90600161038d565b61010591906103a4565b6011556013805461ffff60a81b19169055600060148190556015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556101846009600a610377565b610193906461f313f88061038d565b3360009081526001602081905260408220929092556003906101bd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560045490911683529120805490921617905561021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102536009600a610377565b610262906461f313f88061038d565b60405190815260200160405180910390a36103c6565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102c9578085048111156102ad576102ad610278565b60018416156102bb57908102905b60019390931c928002610292565b935093915050565b6000826102e057506001610371565b816102ed57506000610371565b8160018114610303576002811461030d57610329565b6001915050610371565b60ff84111561031e5761031e610278565b50506001821b610371565b5060208310610133831016604e8410600b841016171561034c575081810a610371565b610359600019848461028e565b806000190482111561036d5761036d610278565b0290505b92915050565b600061038660ff8416836102d1565b9392505050565b808202811582820484141761037157610371610278565b6000826103c157634e487b7160e01b600052601260045260246000fd5b500490565b611c0a806103d56000396000f3fe6080604052600436106101395760003560e01c806377b54bad116100ab578063a9059cbb1161006f578063a9059cbb14610356578063bf474bed14610376578063c9567bf91461038c578063dd62ed3e146103a1578063ec1f3f63146103e7578063f42938901461040757600080fd5b806377b54bad146102b55780637d1db4a5146102d55780638da5cb5b146102eb5780638f9a55c01461031357806395d89b411461032957600080fd5b806323b872dd116100fd57806323b872dd14610204578063313ce5671461022457806351bc3c8514610240578063622565891461025557806370a082311461026a578063715018a6146102a057600080fd5b806306fdde0314610145578063095ea7b3146101845780630faee56f146101b4578063109daa99146101d857806318160ddd146101ef57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060408051808201909152600481526352616a6160e01b60208201525b60405161017b91906117a6565b60405180910390f35b34801561019057600080fd5b506101a461019f366004611809565b61041c565b604051901515815260200161017b565b3480156101c057600080fd5b506101ca60115481565b60405190815260200161017b565b3480156101e457600080fd5b506101ed610433565b005b3480156101fb57600080fd5b506101ca6104a3565b34801561021057600080fd5b506101a461021f366004611835565b6104c5565b34801561023057600080fd5b506040516009815260200161017b565b34801561024c57600080fd5b506101ed61052e565b34801561026157600080fd5b506101ed610581565b34801561027657600080fd5b506101ca610285366004611876565b6001600160a01b031660009081526001602052604090205490565b3480156102ac57600080fd5b506101ed610631565b3480156102c157600080fd5b506101a46102d0366004611809565b6106a5565b3480156102e157600080fd5b506101ca600e5481565b3480156102f757600080fd5b506000546040516001600160a01b03909116815260200161017b565b34801561031f57600080fd5b506101ca600f5481565b34801561033557600080fd5b5060408051808201909152600481526352414a4160e01b602082015261016e565b34801561036257600080fd5b506101a4610371366004611809565b6107fd565b34801561038257600080fd5b506101ca60105481565b34801561039857600080fd5b506101ed61080a565b3480156103ad57600080fd5b506101ca6103bc366004611893565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103f357600080fd5b506101ed6104023660046118cc565b610c07565b34801561041357600080fd5b506101ed610c4e565b6000610429338484610cdb565b5060015b92915050565b6000546001600160a01b031633146104665760405162461bcd60e51b815260040161045d906118e5565b60405180910390fd5b6000600c8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006104b16009600a611a17565b6104c0906461f313f880611a26565b905090565b60006104d2848484610dff565b610524843361051f85604051806060016040528060288152602001611bad602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611410565b610cdb565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461054e57600080fd5b30600090815260016020526040902054801561056d5761056d8161144a565b47801561057d5761057d816115c4565b5050565b6000546001600160a01b031633146105ab5760405162461bcd60e51b815260040161045d906118e5565b6105b76009600a611a17565b6105c6906461f313f880611a26565b600e556105d56009600a611a17565b6105e4906461f313f880611a26565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106146009600a611a17565b610623906461f313f880611a26565b604051908152602001610499565b6000546001600160a01b0316331461065b5760405162461bcd60e51b815260040161045d906118e5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546000906001600160a01b0316336001600160a01b0316146106c857600080fd5b8160000361073b576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190611a3d565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a16004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905284169063a9059cbb906044016020604051808303816000875af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611a56565b9392505050565b6000610429338484610dff565b6000546001600160a01b031633146108345760405162461bcd60e51b815260040161045d906118e5565b601354600160a01b900460ff161561088e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161045d565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108d89030906108c96009600a611a17565b61051f906461f313f880611a26565b6109133061037161271061090d6125e4610907336001600160a01b031660009081526001602052604090205490565b906115fe565b90611680565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190611a78565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611a78565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190611a78565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d7194730610aca816001600160a01b031660009081526001602052604090205490565b600080610adf6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b47573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b6c9190611a95565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611a56565b506013805462ff00ff60a01b19166201000160a01b17905543601655565b6004546001600160a01b0316336001600160a01b031614610c2757600080fd5b6007548111158015610c3b57506008548111155b610c4457600080fd5b6007819055600855565b6004546001600160a01b0316336001600160a01b031614610c6e57600080fd5b4780610ccf5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163742062616c616e6365206d7573742062652067726561746572604482015269207468616e207a65726f60b01b606482015260840161045d565b610cd8816115c4565b50565b6001600160a01b038316610d3d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045d565b6001600160a01b038216610d9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045d565b6001600160a01b038216610ec55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045d565b60008111610f275760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161045d565b600080546001600160a01b03858116911614801590610f5457506000546001600160a01b03848116911614155b156112cd57600d54600003610f8c57610f89606461090d600954600d5411610f7e57600554610f82565b6007545b85906115fe565b90505b600d5415610fb157610fae606461090d600c54856115fe90919063ffffffff16565b90505b601654430361100c576023600d541061100c5760405162461bcd60e51b815260206004820181905260248201527f457863656564732062757973206f6e2074686520666972737420626c6f636b2e604482015260640161045d565b6013546001600160a01b03858116911614801561103757506012546001600160a01b03848116911614155b801561105c57506001600160a01b03831660009081526003602052604090205460ff16155b1561116157600e548211156110b35760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161045d565b600f54826110d6856001600160a01b031660009081526001602052604090205490565b6110e09190611ac3565b111561112e5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161045d565b611149606461090d600954600d5411610f7e57600554610f82565b600d8054919250600061115b83611ad6565b91905055505b6013546001600160a01b03848116911614801561118757506001600160a01b0384163014155b156111b4576111b1606461090d600a54600d54116111a757600654610f82565b60085485906115fe565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156111eb57506013546001600160a01b038581169116145b80156112005750601354600160b01b900460ff165b801561120d575060105481115b801561121c5750600b54600d54115b156112cb576015544311156112315760006014555b6003601454106112835760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161045d565b6112a061129b84611296846011546116c2565b6116c2565b61144a565b4780156112b0576112b0476115c4565b601480549060006112c083611ad6565b909155505043601555505b505b801561134757306000908152600160205260409020546112ed90826116d7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061133e9085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461136a9083611736565b6001600160a01b0385166000908152600160205260409020556113af6113908383611736565b6001600160a01b038516600090815260016020526040902054906116d7565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6113f98585611736565b60405190815260200160405180910390a350505050565b600081848411156114345760405162461bcd60e51b815260040161045d91906117a6565b5060006114418486611aef565b95945050505050565b6013805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061149257611492611b02565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150f9190611a78565b8160018151811061152257611522611b02565b6001600160a01b0392831660209182029290920101526012546115489130911684610cdb565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611581908590600090869030904290600401611b18565b600060405180830381600087803b15801561159b57600080fd5b505af11580156115af573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561057d573d6000803e3d6000fd5b6000826000036116105750600061042d565b600061161c8385611a26565b9050826116298583611b8a565b146107f65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161045d565b60006107f683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611778565b60008183116116d157826107f6565b50919050565b6000806116e48385611ac3565b9050838110156107f65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161045d565b60006107f683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611410565b600081836117995760405162461bcd60e51b815260040161045d91906117a6565b5060006114418486611b8a565b602081526000825180602084015260005b818110156117d457602081860181015160408684010152016117b7565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610cd857600080fd5b6000806040838503121561181c57600080fd5b8235611827816117f4565b946020939093013593505050565b60008060006060848603121561184a57600080fd5b8335611855816117f4565b92506020840135611865816117f4565b929592945050506040919091013590565b60006020828403121561188857600080fd5b81356107f6816117f4565b600080604083850312156118a657600080fd5b82356118b1816117f4565b915060208301356118c1816117f4565b809150509250929050565b6000602082840312156118de57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561196b5780850481111561194f5761194f61191a565b600184161561195d57908102905b60019390931c928002611934565b935093915050565b6000826119825750600161042d565b8161198f5750600061042d565b81600181146119a557600281146119af576119cb565b600191505061042d565b60ff8411156119c0576119c061191a565b50506001821b61042d565b5060208310610133831016604e8410600b84101617156119ee575081810a61042d565b6119fb6000198484611930565b8060001904821115611a0f57611a0f61191a565b029392505050565b60006107f660ff841683611973565b808202811582820484141761042d5761042d61191a565b600060208284031215611a4f57600080fd5b5051919050565b600060208284031215611a6857600080fd5b815180151581146107f657600080fd5b600060208284031215611a8a57600080fd5b81516107f6816117f4565b600080600060608486031215611aaa57600080fd5b5050815160208301516040909301519094929350919050565b8082018082111561042d5761042d61191a565b600060018201611ae857611ae861191a565b5060010190565b8181038181111561042d5761042d61191a565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611b6a5783516001600160a01b0316835260209384019390920191600101611b43565b50506001600160a01b039590951660608401525050608001529392505050565b600082611ba757634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212207545b7388f56e0e380d9cb1ea7f015b61b4fc323475f1d968820223b08a3c4f064736f6c634300081e0033";

type RAJAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RAJAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RAJA__factory extends ContractFactory {
  constructor(...args: RAJAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<RAJA> {
    return super.deploy(overrides || {}) as Promise<RAJA>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RAJA {
    return super.attach(address) as RAJA;
  }
  override connect(signer: Signer): RAJA__factory {
    return super.connect(signer) as RAJA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RAJAInterface {
    return new utils.Interface(_abi) as RAJAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RAJA {
    return new Contract(address, _abi, signerOrProvider) as RAJA;
  }
}
