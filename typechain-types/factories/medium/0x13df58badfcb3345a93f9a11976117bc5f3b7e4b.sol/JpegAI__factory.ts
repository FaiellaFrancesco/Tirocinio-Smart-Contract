/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JpegAI,
  JpegAIInterface,
} from "../../../medium/0x13df58badfcb3345a93f9a11976117bc5f3b7e4b.sol/JpegAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_JpegAIThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_JpegAIamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119a78061029c6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc11610095578063a9059cbb11610064578063a9059cbb146102b0578063c26ba005146102d0578063c8d52940146102e6578063dd62ed3e146102fc578063ea414b281461034257600080fd5b8063751039fc1461025e5780638a8c523c146102735780638da5cb5b1461028857806395d89b411461011957600080fd5b806320800a00116100dc57806320800a00146101c057806323b872dd146101d7578063313ce567146101f757806370a0823114610213578063715018a61461024957600080fd5b806306fdde0314610119578063095ea7b3146101575780630faee56f1461018757806318160ddd146101ab57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201825260068152654a706567414960d01b6020820152905161014e9190611462565b60405180910390f35b34801561016357600080fd5b506101776101723660046114c5565b610362565b604051901515815260200161014e565b34801561019357600080fd5b5061019d600c5481565b60405190815260200161014e565b3480156101b757600080fd5b5061019d610379565b3480156101cc57600080fd5b506101d561039a565b005b3480156101e357600080fd5b506101776101f23660046114f1565b610409565b34801561020357600080fd5b506040516009815260200161014e565b34801561021f57600080fd5b5061019d61022e366004611532565b6001600160a01b031660009081526001602052604090205490565b34801561025557600080fd5b506101d56104b4565b34801561026a57600080fd5b506101d5610528565b34801561027f57600080fd5b506101d5610554565b34801561029457600080fd5b506000546040516001600160a01b03909116815260200161014e565b3480156102bc57600080fd5b506101776102cb3660046114c5565b61090c565b3480156102dc57600080fd5b5061019d600e5481565b3480156102f257600080fd5b5061019d600d5481565b34801561030857600080fd5b5061019d61031736600461154f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034e57600080fd5b506101d561035d366004611532565b610919565b600061036f338484610957565b5060015b92915050565b60006103876009600a611685565b610395906305f5e100611694565b905090565b6000546001600160a01b031633146103cd5760405162461bcd60e51b81526004016103c4906116ab565b60405180910390fd5b600047116103da57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610406573d6000803e3d6000fd5b50565b6000610416848484610a7b565b6004546001600160a01b0316331480159061045357506010546001600160a01b038581169116148061045357506001600160a01b03831661dead14155b156104aa576104aa84336104a58560405180606001604052806028815260200161194a602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f48565b610957565b5060019392505050565b6000546001600160a01b031633146104de5760405162461bcd60e51b81526004016103c4906116ab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105525760405162461bcd60e51b81526004016103c4906116ab565b565b6000546001600160a01b0316331461057e5760405162461bcd60e51b81526004016103c4906116ab565b601054600160a01b900460ff16156105d85760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103c4565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106219030906106136009600a611685565b6104a5906305f5e100611694565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069891906116e0565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e91906116e0565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f91906116e0565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d71947306107d7816001600160a01b031660009081526001602052604090205490565b6000806107ec6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610854573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087991906116fd565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610406919061172b565b600061036f338484610a7b565b3360009081526003602052604090205460ff1661093557600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109b95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c4565b6001600160a01b038216610a1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c4565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610adf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c4565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c4565b60008111610ba35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103c4565b60006001600160a01b0384163014801590610bc757506001600160a01b0383163014155b15610dea57601054600160a81b900460ff16610c0c57610c096064610c0360075460085411610bf857600554610bfc565b6006545b8590610f82565b9061100b565b90505b6010546001600160a01b038581169116148015610c375750600f546001600160a01b03848116911614155b8015610c5c57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7657506004546001600160a01b03848116911614155b15610cbb574360095414610c8e576000600a55436009555b81600a6000828254610ca0919061174d565b909155505060088054906000610cb583611760565b91905055505b6010546001600160a01b038481169116148015610ce157506001600160a01b0384163014155b15610d3c57610cee61104d565b600a541080610cff57504360095414155b610d3c5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103c4565b30600090815260016020526040902054601054600160a81b900460ff16158015610d7357506010546001600160a01b038581169116145b8015610d885750601054600160b01b900460ff165b8015610da257506004546001600160a01b03868116911614155b15610de8578015610ddc576000600c548211610dbe5781610dc2565b600c545b9050610dda818511610dd457846111db565b816111db565b505b47610de647611355565b505b505b6001600160a01b038416600090815260016020526040902054610e0d9083611393565b6001600160a01b038516600090815260016020526040902055610e52610e338383611393565b6001600160a01b038516600090815260016020526040902054906113d5565b6001600160a01b0384166000908152600160205260409020558015610ee55730600090815260016020526040902054610e8b90826113d5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610edc9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f42576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f308585611393565b60405190815260200160405180910390a35b50505050565b60008184841115610f6c5760405162461bcd60e51b81526004016103c49190611462565b506000610f798486611779565b95945050505050565b600082600003610f9457506000610373565b6000610fa08385611694565b905082610fad858361178c565b146110045760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103c4565b9392505050565b600061100483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611434565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df91906116e0565b816000815181106110f2576110f26117c4565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611126576111266117c4565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611172906729a2241af62c000090869060040161181f565b600060405180830381865afa15801561118f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b79190810190611840565b9050806001815181106111cc576111cc6117c4565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611223576112236117c4565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561127c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a091906116e0565b816001815181106112b3576112b36117c4565b6001600160a01b039283166020918202929092010152600f546112d99130911684610957565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061131290859060009086903090429060040161190d565b600060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561138f573d6000803e3d6000fd5b5050565b600061100483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f48565b6000806113e2838561174d565b9050838110156110045760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103c4565b600081836114555760405162461bcd60e51b81526004016103c49190611462565b506000610f79848661178c565b602081526000825180602084015260005b818110156114905760208186018101516040868401015201611473565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461040657600080fd5b600080604083850312156114d857600080fd5b82356114e3816114b0565b946020939093013593505050565b60008060006060848603121561150657600080fd5b8335611511816114b0565b92506020840135611521816114b0565b929592945050506040919091013590565b60006020828403121561154457600080fd5b8135611004816114b0565b6000806040838503121561156257600080fd5b823561156d816114b0565b9150602083013561157d816114b0565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115d9578085048111156115bd576115bd611588565b60018416156115cb57908102905b60019390931c9280026115a2565b935093915050565b6000826115f057506001610373565b816115fd57506000610373565b8160018114611613576002811461161d57611639565b6001915050610373565b60ff84111561162e5761162e611588565b50506001821b610373565b5060208310610133831016604e8410600b841016171561165c575081810a610373565b611669600019848461159e565b806000190482111561167d5761167d611588565b029392505050565b600061100460ff8416836115e1565b808202811582820484141761037357610373611588565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116f257600080fd5b8151611004816114b0565b60008060006060848603121561171257600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173d57600080fd5b8151801515811461100457600080fd5b8082018082111561037357610373611588565b60006001820161177257611772611588565b5060010190565b8181038181111561037357610373611588565b6000826117a957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118155781516001600160a01b03168652602095860195909101906001016117ee565b5093949350505050565b82815260406020820152600061183860408301846117da565b949350505050565b60006020828403121561185257600080fd5b815167ffffffffffffffff81111561186957600080fd5b8201601f8101841361187a57600080fd5b805167ffffffffffffffff811115611894576118946117ae565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118c1576118c16117ae565b6040529182526020818401810192908101878411156118df57600080fd5b6020850194505b83851015611902578451808252602095860195909350016118e6565b509695505050505050565b85815284602082015260a06040820152600061192c60a08301866117da565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201e019fa6c5aac7a7586891334bd2f0eff29906751381b41aaba02b92ea30d40464736f6c634300081e0033";

type JpegAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JpegAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JpegAI__factory extends ContractFactory {
  constructor(...args: JpegAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<JpegAI> {
    return super.deploy(overrides || {}) as Promise<JpegAI>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JpegAI {
    return super.attach(address) as JpegAI;
  }
  override connect(signer: Signer): JpegAI__factory {
    return super.connect(signer) as JpegAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JpegAIInterface {
    return new utils.Interface(_abi) as JpegAIInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JpegAI {
    return new Contract(address, _abi, signerOrProvider) as JpegAI;
  }
}
