/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NFTDistributor,
  NFTDistributorInterface,
} from "../../../medium/0x000006c6dc68a12cbb9b07a6771579ac17800000.sol/NFTDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contracts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "batchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contracts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "batchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b5073f0e5395708cf5e35c12cdcc89fdcabd4d47fa5456080526080516108d46100506000396000818160d10152818161015801526102ef01526108d46000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a02146100675780638a1b5a5e146100a45780638b7b064a146100b95780638da5cb5b146100cc578063bc197c811461010b578063f23a6e611461012d575b600080fd5b610086610075366004610517565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b76100b23660046105cb565b61014d565b005b6100b76100c7366004610660565b6102e4565b6100f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161009b565b610086610119366004610727565b63bc197c8160e01b98975050505050505050565b61008661013b3660046107ee565b63f23a6e6160e01b9695505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101c45760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b60448201526064015b60405180910390fd5b84831461020c5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016101bb565b60005b858110156102db5786868281811061022957610229610866565b905060200201602081019061023e919061087c565b6001600160a01b03166342842e0e848488888681811061026057610260610866565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156102b757600080fd5b505af11580156102cb573d6000803e3d6000fd5b50506001909201915061020f9050565b50505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103565760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b60448201526064016101bb565b868514801561036457508483145b6103a95760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016101bb565b60005b878110156104a7578888828181106103c6576103c6610866565b90506020020160208101906103db919061087c565b6001600160a01b031663f242432a84848a8a868181106103fd576103fd610866565b9050602002013589898781811061041657610416610866565b6040516001600160e01b031960e089901b1681526001600160a01b03968716600482015295909416602486015250604484019190915260209091020135606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561048357600080fd5b505af1158015610497573d6000803e3d6000fd5b5050600190920191506103ac9050565b505050505050505050565b80356001600160a01b03811681146104c957600080fd5b919050565b60008083601f8401126104e057600080fd5b50813567ffffffffffffffff8111156104f857600080fd5b60208301915083602082850101111561051057600080fd5b9250929050565b60008060008060006080868803121561052f57600080fd5b610538866104b2565b9450610546602087016104b2565b935060408601359250606086013567ffffffffffffffff81111561056957600080fd5b610575888289016104ce565b969995985093965092949392505050565b60008083601f84011261059857600080fd5b50813567ffffffffffffffff8111156105b057600080fd5b6020830191508360208260051b850101111561051057600080fd5b600080600080600080608087890312156105e457600080fd5b863567ffffffffffffffff8111156105fb57600080fd5b61060789828a01610586565b909750955050602087013567ffffffffffffffff81111561062757600080fd5b61063389828a01610586565b90955093506106469050604088016104b2565b9150610654606088016104b2565b90509295509295509295565b60008060008060008060008060a0898b03121561067c57600080fd5b883567ffffffffffffffff81111561069357600080fd5b61069f8b828c01610586565b909950975050602089013567ffffffffffffffff8111156106bf57600080fd5b6106cb8b828c01610586565b909750955050604089013567ffffffffffffffff8111156106eb57600080fd5b6106f78b828c01610586565b909550935061070a905060608a016104b2565b915061071860808a016104b2565b90509295985092959890939650565b60008060008060008060008060a0898b03121561074357600080fd5b61074c896104b2565b975061075a60208a016104b2565b9650604089013567ffffffffffffffff81111561077657600080fd5b6107828b828c01610586565b909750955050606089013567ffffffffffffffff8111156107a257600080fd5b6107ae8b828c01610586565b909550935050608089013567ffffffffffffffff8111156107ce57600080fd5b6107da8b828c016104ce565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561080757600080fd5b610810876104b2565b955061081e602088016104b2565b94506040870135935060608701359250608087013567ffffffffffffffff81111561084857600080fd5b61085489828a016104ce565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561088e57600080fd5b610897826104b2565b939250505056fea2646970667358221220bc2f290c2c8776a21f40f7786a477dd9d94267fb972bc0ce24e523584ce490bc64736f6c634300081e0033";

type NFTDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDistributor__factory extends ContractFactory {
  constructor(...args: NFTDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTDistributor__factory {
    return super.connect(runner) as NFTDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDistributorInterface {
    return new Interface(_abi) as NFTDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTDistributor {
    return new Contract(address, _abi, runner) as unknown as NFTDistributor;
  }
}
