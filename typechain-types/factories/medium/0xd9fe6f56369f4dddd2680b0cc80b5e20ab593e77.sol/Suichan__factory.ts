/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Suichan,
  SuichanInterface,
} from "../../../medium/0xd9fe6f56369f4dddd2680b0cc80b5e20ab593e77.sol/Suichan";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526012600655601260075560006008556000600955600a8055600a600b556005600c556000600d556000600e556009600a62000040919062000349565b6200004f90621e848062000361565b600f55620000606009600a62000349565b6200006f90621e848062000361565b601055620000806009600a62000349565b6200008f90620f424062000361565b601155620000a06009600a62000349565b620000af90621c61a062000361565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d757600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001396009600a62000349565b62000149906305f5e10062000361565b336000908152600160208190526040822092909255600390620001746000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d33390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200020d6009600a62000349565b6200021d906305f5e10062000361565b60405190815260200160405180910390a36200037b565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028b5781600019048211156200026f576200026f62000234565b808516156200027d57918102915b93841c93908002906200024f565b509250929050565b600082620002a45750600162000343565b81620002b35750600062000343565b8160018114620002cc5760028114620002d757620002f7565b600191505062000343565b60ff841115620002eb57620002eb62000234565b50506001821b62000343565b5060208310610133831016604e8410600b84101617156200031c575081810a62000343565b6200032883836200024a565b80600019048211156200033f576200033f62000234565b0290505b92915050565b60006200035a60ff84168362000293565b9392505050565b808202811582820484141762000343576200034362000234565b611c61806200038b6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103c1578063bf474bed146103e1578063c9567bf9146103f7578063d34628cc1461040c578063dd62ed3e1461042c578063ec1f3f631461047257600080fd5b8063715018a614610313578063751039fc146103285780637d1db4a51461033d5780638da5cb5b146103535780638f9a55c01461037b57806395d89b411461039157600080fd5b8063313ce56711610108578063313ce5671461023e57806331c2d8471461025a5780633bbac5791461027a57806351bc3c85146102b35780636fc3eaec146102c857806370a08231146102dd57600080fd5b806306fdde031461015b578063095ea7b31461019e5780630faee56f146101ce578063109daa99146101f257806318160ddd1461020957806323b872dd1461021e57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152600881526729bab496a1b430b760c11b60208201525b604051610195919061172c565b60405180910390f35b3480156101aa57600080fd5b506101be6101b93660046117a0565b610492565b6040519015158152602001610195565b3480156101da57600080fd5b506101e460125481565b604051908152602001610195565b3480156101fe57600080fd5b506102076104a9565b005b34801561021557600080fd5b506101e4610519565b34801561022a57600080fd5b506101be6102393660046117cc565b61053a565b34801561024a57600080fd5b5060405160098152602001610195565b34801561026657600080fd5b50610207610275366004611823565b6105a3565b34801561028657600080fd5b506101be6102953660046118e8565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102bf57600080fd5b5061020761062f565b3480156102d457600080fd5b5061020761067e565b3480156102e957600080fd5b506101e46102f83660046118e8565b6001600160a01b031660009081526001602052604090205490565b34801561031f57600080fd5b506102076106ab565b34801561033457600080fd5b5061020761071f565b34801561034957600080fd5b506101e4600f5481565b34801561035f57600080fd5b506000546040516001600160a01b039091168152602001610195565b34801561038757600080fd5b506101e460105481565b34801561039d57600080fd5b5060408051808201909152600781526629aaa4a1a420a760c91b6020820152610188565b3480156103cd57600080fd5b506101be6103dc3660046117a0565b6107cc565b3480156103ed57600080fd5b506101e460115481565b34801561040357600080fd5b506102076107d9565b34801561041857600080fd5b50610207610427366004611823565b610b95565b34801561043857600080fd5b506101e4610447366004611905565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047e57600080fd5b5061020761048d36600461193e565b610c1d565b600061049f338484610c64565b5060015b92915050565b6000546001600160a01b031633146104dc5760405162461bcd60e51b81526004016104d390611957565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105276009600a611a86565b610535906305f5e100611a95565b905090565b6000610547848484610d88565b610599843361059485604051806060016040528060288152602001611c04602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061138f565b610c64565b5060019392505050565b6000546001600160a01b031633146105cd5760405162461bcd60e51b81526004016104d390611957565b60005b815181101561062b576000600460008484815181106105f1576105f1611aac565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105d0565b5050565b6005546001600160a01b0316336001600160a01b03161461064f57600080fd5b30600090815260016020526040902054801561066e5761066e816113c9565b47801561062b5761062b81611543565b6005546001600160a01b0316336001600160a01b03161461069e57600080fd5b476106a881611543565b50565b6000546001600160a01b031633146106d55760405162461bcd60e51b81526004016104d390611957565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107495760405162461bcd60e51b81526004016104d390611957565b6107556009600a611a86565b610763906305f5e100611a95565b600f556107726009600a611a86565b610780906305f5e100611a95565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b06009600a611a86565b6107be906305f5e100611a95565b60405190815260200161050f565b600061049f338484610d88565b6000546001600160a01b031633146108035760405162461bcd60e51b81526004016104d390611957565b601454600160a01b900460ff161561085d5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d3565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108a69030906108986009600a611a86565b610594906305f5e100611a95565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d9190611ac2565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190611ac2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611ac2565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a5c816001600160a01b031660009081526001602052604090205490565b600080610a716000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ad9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610afe9190611adf565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7b9190611b0d565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bbf5760405162461bcd60e51b81526004016104d390611957565b60005b815181101561062b57600160046000848481518110610be357610be3611aac565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc2565b6005546001600160a01b0316336001600160a01b031614610c3d57600080fd5b6008548111158015610c5157506009548111155b610c5a57600080fd5b6008819055600955565b6001600160a01b038316610cc65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d3565b6001600160a01b038216610d275760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d3565b6001600160a01b038216610e4e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d3565b60008111610eb05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d3565b600080546001600160a01b03858116911614801590610edd57506000546001600160a01b03848116911614155b1561124c576001600160a01b03841660009081526004602052604090205460ff16158015610f2457506001600160a01b03831660009081526004602052604090205460ff16155b610f2d57600080fd5b600e54600003610f6657610f636064610f5d600a54600e5411610f5257600654610f56565b6008545b859061157d565b90611606565b90505b600e5415610f8b57610f886064610f5d600d548561157d90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fb657506013546001600160a01b03848116911614155b8015610fdb57506001600160a01b03831660009081526003602052604090205460ff16155b156110e057600f548211156110325760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d3565b60105482611055856001600160a01b031660009081526001602052604090205490565b61105f9190611b2f565b11156110ad5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d3565b6110c86064610f5d600a54600e5411610f5257600654610f56565b600e805491925060006110da83611b42565b91905055505b6014546001600160a01b03848116911614801561110657506001600160a01b0384163014155b15611133576111306064610f5d600b54600e541161112657600754610f56565b600954859061157d565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116a57506014546001600160a01b038581169116145b801561117f5750601454600160b01b900460ff165b801561118c575060115481115b801561119b5750600c54600e54115b1561124a576016544311156111b05760006015555b6003601554106112025760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d3565b61121f61121a8461121584601254611648565b611648565b6113c9565b47801561122f5761122f47611543565b6015805490600061123f83611b42565b909155505043601655505b505b80156112c6573060009081526001602052604090205461126c908261165d565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bd9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112e990836116bc565b6001600160a01b03851660009081526001602052604090205561132e61130f83836116bc565b6001600160a01b0385166000908152600160205260409020549061165d565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137885856116bc565b60405190815260200160405180910390a350505050565b600081848411156113b35760405162461bcd60e51b81526004016104d3919061172c565b5060006113c08486611b5b565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141157611411611aac565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561146a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148e9190611ac2565b816001815181106114a1576114a1611aac565b6001600160a01b0392831660209182029290920101526013546114c79130911684610c64565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611500908590600090869030904290600401611b6e565b600060405180830381600087803b15801561151a57600080fd5b505af115801561152e573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561062b573d6000803e3d6000fd5b60008260000361158f575060006104a3565b600061159b8385611a95565b9050826115a88583611be1565b146115ff5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d3565b9392505050565b60006115ff83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116fe565b600081831161165757826115ff565b50919050565b60008061166a8385611b2f565b9050838110156115ff5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d3565b60006115ff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138f565b6000818361171f5760405162461bcd60e51b81526004016104d3919061172c565b5060006113c08486611be1565b60006020808352835180602085015260005b8181101561175a5785810183015185820160400152820161173e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106a857600080fd5b803561179b8161177b565b919050565b600080604083850312156117b357600080fd5b82356117be8161177b565b946020939093013593505050565b6000806000606084860312156117e157600080fd5b83356117ec8161177b565b925060208401356117fc8161177b565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183657600080fd5b823567ffffffffffffffff8082111561184e57600080fd5b818501915085601f83011261186257600080fd5b8135818111156118745761187461180d565b8060051b604051601f19603f830116810181811085821117156118995761189961180d565b6040529182528482019250838101850191888311156118b757600080fd5b938501935b828510156118dc576118cd85611790565b845293850193928501926118bc565b98975050505050505050565b6000602082840312156118fa57600080fd5b81356115ff8161177b565b6000806040838503121561191857600080fd5b82356119238161177b565b915060208301356119338161177b565b809150509250929050565b60006020828403121561195057600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119dd5781600019048211156119c3576119c361198c565b808516156119d057918102915b93841c93908002906119a7565b509250929050565b6000826119f4575060016104a3565b81611a01575060006104a3565b8160018114611a175760028114611a2157611a3d565b60019150506104a3565b60ff841115611a3257611a3261198c565b50506001821b6104a3565b5060208310610133831016604e8410600b8410161715611a60575081810a6104a3565b611a6a83836119a2565b8060001904821115611a7e57611a7e61198c565b029392505050565b60006115ff60ff8416836119e5565b80820281158282048414176104a3576104a361198c565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ad457600080fd5b81516115ff8161177b565b600080600060608486031215611af457600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b1f57600080fd5b815180151581146115ff57600080fd5b808201808211156104a3576104a361198c565b600060018201611b5457611b5461198c565b5060010190565b818103818111156104a3576104a361198c565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bc05784516001600160a01b031683529383019391830191600101611b9b565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611bfe57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212200577c45b17ab75743657e8ec52706999e62a4296252e634895722113f6f2013464736f6c63430008170033";

type SuichanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuichanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Suichan__factory extends ContractFactory {
  constructor(...args: SuichanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Suichan> {
    return super.deploy(overrides || {}) as Promise<Suichan>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Suichan {
    return super.attach(address) as Suichan;
  }
  override connect(signer: Signer): Suichan__factory {
    return super.connect(signer) as Suichan__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuichanInterface {
    return new utils.Interface(_abi) as SuichanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Suichan {
    return new Contract(address, _abi, signerOrProvider) as Suichan;
  }
}
