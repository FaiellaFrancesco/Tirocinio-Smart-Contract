/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BatchPresale,
  BatchPresaleInterface,
} from "../../../medium/0x7ae7d70e42f23b673b16a73f967c39d5fdcb154e.sol/BatchPresale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_payment",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "addStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "convertEthToUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flipPresaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentStageIdActive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthToUsdPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxStage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxStage",
        type: "uint256",
      },
    ],
    name: "setMaxStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentAddress",
        type: "address",
      },
    ],
    name: "setPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setPresaleTokenAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "setStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSold",
        type: "uint256",
      },
    ],
    name: "setTotalSold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stages",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMetadata",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405269d3c21bcecceda10000006005556006805460ff19166001179055600060078190556004600955600a5534801561003a57600080fd5b50604051611c63380380611c638339810160408190526100599161050c565b338061007f57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610088816104a0565b50600180546001600160a01b039384166001600160a01b0319918216811783556002805483169091178155600480549686169683169690961786556003805494909516939091169290921783556040805160a08082018352838252600560208084019182526618de76816d800084860190815263673dded1606080870191825263674081d1608080890191825260008b8152600880885299517fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac55f5596517fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac5605593517fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac5615591517fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac5625590517fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac56355865180860188528981528084018b8152661c6bf526340000828a019081526367680ed18385019081526366c4f5928487019081528d89528a885293517f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea90415591517f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904255517f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904355517f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904455517f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904555865180860188528a8152808401998a52661ff973cafa80008189019081526367923ed182840190815263679390518386019081529c875288865291517f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264555599517f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264565598517f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264575597517f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264585597517f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264595584519283018552888352828101958652662386f26fc100009483019485526368090b78968301968752636838404d9783019788529088905291909152517f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b85590517f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b955517f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624ba55517f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624bb55517f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624bc55600a5561054f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461050757600080fd5b919050565b60008060006060848603121561052157600080fd5b61052a846104f0565b9250610538602085016104f0565b9150610546604085016104f0565b90509250925092565b6117058061055e6000396000f3fe60806040526004361061019c5760003560e01c806377311049116100ec578063b0335ffc1161008a578063e08d411411610064578063e08d4114146104b1578063f2fde38b146104c6578063f5b2cad7146104e6578063fc0c546a1461050657600080fd5b8063b0335ffc1461045c578063c086381e1461047c578063d3f7836e1461049c57600080fd5b80638b250eff116100c65780638b250eff146103f25780638da5cb5b146104085780639106d7ba14610426578063ae101f311461043c57600080fd5b8063773110491461034b578063845ddcb2146103605780638b190376146103d257600080fd5b80634571a7f111610159578063633423be11610133578063633423be146102be578063715018a6146102f6578063724e78da1461030b578063741bef1a1461032b57600080fd5b80634571a7f11461024b57806353135ca0146102745780635e1e10041461029e57600080fd5b806306b091f9146101a1578063144fa6d7146101c357806324600fc3146101e35780632d296bf1146101f85780633151338e1461020b578063378515981461022b575b600080fd5b3480156101ad57600080fd5b506101c16101bc36600461135c565b610526565b005b3480156101cf57600080fd5b506101c16101de366004611386565b6106b4565b3480156101ef57600080fd5b506101c1610737565b6101c16102063660046113a8565b61079b565b34801561021757600080fd5b506101c16102263660046113a8565b610ced565b34801561023757600080fd5b506101c16102463660046113a8565b610cfa565b34801561025757600080fd5b5061026160095481565b6040519081526020015b60405180910390f35b34801561028057600080fd5b5060065461028e9060ff1681565b604051901515815260200161026b565b3480156102aa57600080fd5b506101c16102b9366004611386565b610d07565b3480156102ca57600080fd5b506004546102de906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b34801561030257600080fd5b506101c1610d31565b34801561031757600080fd5b506101c1610326366004611386565b610d43565b34801561033757600080fd5b506003546102de906001600160a01b031681565b34801561035757600080fd5b506101c1610dbc565b34801561036c57600080fd5b506103aa61037b3660046113a8565b600860205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a00161026b565b3480156103de57600080fd5b506101c16103ed3660046113a8565b610dd8565b3480156103fe57600080fd5b5061026160055481565b34801561041457600080fd5b506000546001600160a01b03166102de565b34801561043257600080fd5b5061026160075481565b34801561044857600080fd5b506101c16104573660046113c1565b610de5565b34801561046857600080fd5b506101c16104773660046113f3565b610f74565b34801561048857600080fd5b506102616104973660046113a8565b6110de565b3480156104a857600080fd5b5061026161118b565b3480156104bd57600080fd5b50610261611210565b3480156104d257600080fd5b506101c16104e1366004611386565b611285565b3480156104f257600080fd5b506002546102de906001600160a01b031681565b34801561051257600080fd5b506001546102de906001600160a01b031681565b61052e6112c3565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b919061142e565b9050818110156105eb5760405162461bcd60e51b81526020600482015260166024820152754578636565647320746f6b656e2062616c616e63652160501b60448201526064015b60405180910390fd5b60015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201859052600092169063a9059cbb906044016020604051808303816000875af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190611447565b9050806106ae5760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e2160381b60448201526064016105e2565b50505050565b6106bc6112c3565b6001600160a01b03811661070b5760405162461bcd60e51b8152602060048201526016602482015275546f6b656e206973207a65726f20616464726573732160501b60448201526064016105e2565b600180546001600160a01b039092166001600160a01b0319928316811790915560028054909216179055565b61073f6112c3565b60405133904780156108fc02916000818181858888f193505050506107995760405162461bcd60e51b815260206004820152601060248201526f4661696c65642077697468647261772160801b60448201526064016105e2565b565b60065460ff166107e65760405162461bcd60e51b815260206004820152601660248201527550726573616c65206973206e6f74206163746976652160501b60448201526064016105e2565b60006107f0611210565b9050600081116108425760405162461bcd60e51b815260206004820152601960248201527f537461676520696e666f206e6f7420617661696c61626c65210000000000000060448201526064016105e2565b600081815260086020526040902060018101546002820154600383015460049093015491929091428211156108b95760405162461bcd60e51b815260206004820152601c60248201527f50726573616c6520686173206e6f74207374617274656420796574210000000060448201526064016105e2565b428110156108f85760405162461bcd60e51b815260206004820152600c60248201526b50726573616c6520656e642160a01b60448201526064016105e2565b6000610904848861147f565b90506000610919670de0b6b3a76400006110de565b90506000610927828461149c565b90508034101561096f5760405162461bcd60e51b81526020600482015260136024820152724e6f7420656e6f756768207061796d656e742160681b60448201526064016105e2565b60006109838a670de0b6b3a764000061147f565b9050600060646109938a8d61147f565b61099d919061149c565b90506109b1670de0b6b3a76400008261147f565b905060006109bf82846114be565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a91906114d1565b60ff1690506000610a4c8260126114f4565b90506000610a5b82600a6115ee565b610a65908561149c565b6001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad2919061142e565b811115610b355760405162461bcd60e51b815260206004820152602b60248201527f50726573616c6520636f6e747261637420646f65736e2774206861766520656e60448201526a6f75676820746f6b656e2160a81b60648201526084016105e2565b60055481600754610b4691906114be565b1115610b945760405162461bcd60e51b815260206004820152601d60248201527f50726573616c6520746f6b656e20616d6f756e7420657863656564732100000060448201526064016105e2565b6004546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050610c085760405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f207472616e7366657220455448207061796d656e74210060448201526064016105e2565b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7d9190611447565b610cc55760405162461bcd60e51b81526020600482015260196024820152784661696c656420746f207472616e7366657220746f6b656e2160381b60448201526064016105e2565b8060076000828254610cd791906114be565b9091555050505050505050505050505050505050565b610cf56112c3565b600555565b610d026112c3565b600755565b610d0f6112c3565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610d396112c3565b61079960006112f0565b610d4b6112c3565b6001600160a01b038116610d9a5760405162461bcd60e51b8152602060048201526016602482015275546f6b656e206973207a65726f20616464726573732160501b60448201526064016105e2565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610dc46112c3565b6006805460ff19811660ff90911615179055565b610de06112c3565b600955565b610ded6112c3565b6000600a546001610dfe91906114be565b9050600954811115610e4b5760405162461bcd60e51b81526020600482015260166024820152754d6178696d756d20737461676520657863636564732160501b60448201526064016105e2565b6064851115610e6c5760405162461bcd60e51b81526004016105e2906115fa565b600083118015610e7c5750600082115b610eb85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420646174652160981b60448201526064016105e2565b818310610f075760405162461bcd60e51b815260206004820152601c60248201527f456e64206461746520736d616c6c6572207468616e207374617274210000000060448201526064016105e2565b6001600a6000828254610f1a91906114be565b90915550506040805160a08101825282815260208082019788528183019687526060820195865260808201948552600093845260089052912090518155935160018501559151600284015551600383015551600490910155565b610f7c6112c3565b6000858152600860205260409020548514610fcd5760405162461bcd60e51b8152602060048201526011602482015270494420646f65736e27742065786973742160781b60448201526064016105e2565b6064841115610fee5760405162461bcd60e51b81526004016105e2906115fa565b600082118015610ffe5750600081115b61103a5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420646174652160981b60448201526064016105e2565b8082106110895760405162461bcd60e51b815260206004820152601c60248201527f456e64206461746520736d616c6c6572207468616e207374617274210000000060448201526064016105e2565b6040805160a08101825286815260208082019687528183019586526060820194855260808201938452600097885260089052952094518555925160018501559051600284015551600383015551600490910155565b6000806110e961118b565b90506000600360009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906114d1565b61116f90600a61163b565b611179838661147f565b611183919061149c565b949350505050565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156111e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112059190611664565b509195945050505050565b600a546000908190810361122657506000919050565b60015b600a54811161127f57600081815260086020526040902060030154421080159061126457506000818152600860205260409020600401544211155b1561126d578091505b80611277816116b6565b915050611229565b50919050565b61128d6112c3565b6001600160a01b0381166112b757604051631e4fbdf760e01b8152600060048201526024016105e2565b6112c0816112f0565b50565b6000546001600160a01b031633146107995760405163118cdaa760e01b81523360048201526024016105e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461135757600080fd5b919050565b6000806040838503121561136f57600080fd5b61137883611340565b946020939093013593505050565b60006020828403121561139857600080fd5b6113a182611340565b9392505050565b6000602082840312156113ba57600080fd5b5035919050565b600080600080608085870312156113d757600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a0868803121561140b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561144057600080fd5b5051919050565b60006020828403121561145957600080fd5b815180151581146113a157600080fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761149657611496611469565b92915050565b6000826114b957634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561149657611496611469565b6000602082840312156114e357600080fd5b815160ff811681146113a157600080fd5b8181038181111561149657611496611469565b6001815b60018411156115425780850481111561152657611526611469565b600184161561153457908102905b60019390931c92800261150b565b935093915050565b60008261155957506001611496565b8161156657506000611496565b816001811461157c5760028114611586576115a2565b6001915050611496565b60ff84111561159757611597611469565b50506001821b611496565b5060208310610133831016604e8410600b84101617156115c5575081810a611496565b6115d26000198484611507565b80600019048211156115e6576115e6611469565b029392505050565b60006113a1838361154a565b60208082526021908201527f426f6e75732073686f756c64206265206265747765656e203020616e642031306040820152600360fc1b606082015260800190565b60006113a160ff84168361154a565b805169ffffffffffffffffffff8116811461135757600080fd5b600080600080600060a0868803121561167c57600080fd5b6116858661164a565b602087015160408801516060890151929750909550935091506116aa6080870161164a565b90509295509295909350565b6000600182016116c8576116c8611469565b506001019056fea264697066735822122071aa8a0e2b94e9fdba0ab635e831d5a1aa47dd60a6efc7ab6df8ab323af097bc64736f6c634300081e0033";

type BatchPresaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPresaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPresale__factory extends ContractFactory {
  constructor(...args: BatchPresaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _payment: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BatchPresale> {
    return super.deploy(
      _payment,
      _token,
      _priceFeed,
      overrides || {}
    ) as Promise<BatchPresale>;
  }
  override getDeployTransaction(
    _payment: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _payment,
      _token,
      _priceFeed,
      overrides || {}
    );
  }
  override attach(address: string): BatchPresale {
    return super.attach(address) as BatchPresale;
  }
  override connect(signer: Signer): BatchPresale__factory {
    return super.connect(signer) as BatchPresale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPresaleInterface {
    return new utils.Interface(_abi) as BatchPresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchPresale {
    return new Contract(address, _abi, signerOrProvider) as BatchPresale;
  }
}
