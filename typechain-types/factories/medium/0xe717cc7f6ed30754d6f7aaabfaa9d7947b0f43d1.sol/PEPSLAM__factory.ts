/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PEPSLAM,
  PEPSLAMInterface,
} from "../../../medium/0xe717cc7f6ed30754d6f7aaabfaa9d7947b0f43d1.sol/PEPSLAM";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260058055600f6006556000600755600060085560196009556019600a556028600b556000600c5560646009600a6200003d9190620003e1565b6200004e906461f313f880620003f9565b6200005a919062000413565b62000067906002620003f9565b600d5560646200007a6009600a620003e1565b6200008b906461f313f880620003f9565b62000097919062000413565b620000a4906002620003f9565b600e556103e8620000b86009600a620003e1565b620000c9906461f313f880620003f9565b620000d5919062000413565b620000e2906005620003f9565b600f556103e8620000f66009600a620003e1565b62000107906461f313f880620003f9565b62000113919062000413565b62000120906005620003f9565b6010556012805462ffffff60a01b191690553480156200013f57600080fd5b506200014b336200027c565b600480546001600160a01b0319167373dc7c80f801b81d7ebb756eff94da8908880b8c1790556200017f6009600a620003e1565b62000190906461f313f880620003f9565b336000908152600160208190526040822092909255600390620001bb6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905560045490911681526003909252808220805484166001908117909155308352912080549092161790556200021a3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002546009600a620003e1565b62000265906461f313f880620003f9565b60405190815260200160405180910390a362000436565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000323578160001904821115620003075762000307620002cc565b808516156200031557918102915b93841c9390800290620002e7565b509250929050565b6000826200033c57506001620003db565b816200034b57506000620003db565b81600181146200036457600281146200036f576200038f565b6001915050620003db565b60ff841115620003835762000383620002cc565b50506001821b620003db565b5060208310610133831016604e8410600b8410161715620003b4575081810a620003db565b620003c08383620002e2565b8060001904821115620003d757620003d7620002cc565b0290505b92915050565b6000620003f260ff8416836200032b565b9392505050565b8082028115828204841417620003db57620003db620002cc565b6000826200043157634e487b7160e01b600052601260045260246000fd5b500490565b61186880620004466000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806395d89b411161006457806395d89b4114610119578063a9059cbb146102c8578063bf474bed146102e8578063c9567bf9146102fe578063dd62ed3e1461031357600080fd5b8063751039fc1461025f5780637d1db4a5146102745780638da5cb5b1461028a5780638f9a55c0146102b257600080fd5b806323b872dd116100dc57806323b872dd146101c1578063313ce567146101e157806351bc3c85146101fd57806370a0823114610214578063715018a61461024a57600080fd5b806306fdde0314610119578063095ea7b3146101585780630faee56f1461018857806318160ddd146101ac57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b506040805180820182526007815266504550534c414d60c81b6020820152905161014f9190611434565b60405180910390f35b34801561016457600080fd5b5061017861017336600461149b565b610359565b604051901515815260200161014f565b34801561019457600080fd5b5061019e60105481565b60405190815260200161014f565b3480156101b857600080fd5b5061019e610370565b3480156101cd57600080fd5b506101786101dc3660046114c7565b610392565b3480156101ed57600080fd5b506040516009815260200161014f565b34801561020957600080fd5b506102126103fc565b005b34801561022057600080fd5b5061019e61022f366004611508565b6001600160a01b031660009081526001602052604090205490565b34801561025657600080fd5b50610212610462565b34801561026b57600080fd5b506102126104a1565b34801561028057600080fd5b5061019e600d5481565b34801561029657600080fd5b506000546040516001600160a01b03909116815260200161014f565b3480156102be57600080fd5b5061019e600e5481565b3480156102d457600080fd5b506101786102e336600461149b565b610556565b3480156102f457600080fd5b5061019e600f5481565b34801561030a57600080fd5b50610212610563565b34801561031f57600080fd5b5061019e61032e366004611525565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000610366338484610920565b5060015b92915050565b600061037e6009600a611658565b61038d906461f313f880611667565b905090565b600061039f848484610a44565b6103f184336103ec8560405180606001604052806028815260200161180b602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f7b565b610920565b5060015b9392505050565b3360009081526003602052604090205460ff1661041857600080fd5b3060009081526001602052604090205480158015906104405750601254600160b01b900460ff165b1561044e5761044e81610fb5565b47801561045e5761045e8161112f565b5050565b6000546001600160a01b031633146104955760405162461bcd60e51b815260040161048c9061167e565b60405180910390fd5b61049f6000611169565b565b6000546001600160a01b031633146104cb5760405162461bcd60e51b815260040161048c9061167e565b6104d76009600a611658565b6104e6906461f313f880611667565b600d556104f56009600a611658565b610504906461f313f880611667565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105346009600a611658565b610543906461f313f880611667565b60405190815260200160405180910390a1565b6000610366338484610a44565b6000546001600160a01b0316331461058d5760405162461bcd60e51b815260040161048c9061167e565b601254600160a01b900460ff16156105e75760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161048c565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106319030906106226009600a611658565b6103ec906461f313f880611667565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a891906116b3565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e91906116b3565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f91906116b3565b601280546001600160a01b039283166001600160a01b03199091161790556011541663f305d71947306107e7816001600160a01b031660009081526001602052604090205490565b6000806107fc6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610864573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061088991906116d0565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090691906116fe565b506012805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b0383166109825760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048c565b6001600160a01b0382166109e35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048c565b6001600160a01b038216610b0a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048c565b60008111610b6c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161048c565b600080546001600160a01b03858116911614801590610b9957506000546001600160a01b03848116911614155b15610e3857601254600160a01b900460ff1680610bbf5750601254600160b01b900460ff165b8015610bcd57506000600c54115b15610be057610bdd8285856111b9565b90505b610c0c6064610c06600954600c5411610bfb57600554610bff565b6007545b859061128c565b9061130e565b6012549091506001600160a01b038581169116148015610c3a57506011546001600160a01b03848116911614155b8015610c5f57506001600160a01b03831660009081526003602052604090205460ff16155b15610d4757600d54821115610cb65760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161048c565b600e5482610cd9856001600160a01b031660009081526001602052604090205490565b610ce39190611720565b1115610d315760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161048c565b600c8054906000610d4183611733565b91905055505b6012546001600160a01b038481169116148015610d6d57506001600160a01b0384163014155b15610d9a57610d976064610c06600a54600c5411610d8d57600654610bff565b600854859061128c565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610dd157506012546001600160a01b038581169116145b8015610de65750601254600160b01b900460ff165b8015610df35750600f5481115b8015610e025750600b54600c54115b15610e3657610e24610e1f84610e1a84601054611350565b611350565b610fb5565b478015610e3457610e344761112f565b505b505b8015610eb25730600090815260016020526040902054610e589082611365565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ea99085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610ed590836113c4565b6001600160a01b038516600090815260016020526040902055610f1a610efb83836113c4565b6001600160a01b03851660009081526001602052604090205490611365565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6485856113c4565b60405190815260200160405180910390a350505050565b60008184841115610f9f5760405162461bcd60e51b815260040161048c9190611434565b506000610fac848661174c565b95945050505050565b6012805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ffd57610ffd61175f565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107a91906116b3565b8160018151811061108d5761108d61175f565b6001600160a01b0392831660209182029290920101526011546110b39130911684610920565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac947906110ec908590600090869030904290600401611775565b600060405180830381600087803b15801561110657600080fd5b505af115801561111a573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561045e573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b03831630148015906111e357503360009081526003602052604090205460ff165b80156111ef5750333b15155b1561122057506001600160a01b038216600090815260026020908152604080832033845290915281208490556103f5565b813b1515801561123f57503360009081526003602052604090205460ff165b801561125957506012546001600160a01b03838116911614155b15611282576001600160a01b0382166000908152600360205260409020805460ff191660011790555b5060009392505050565b60008260000361129e5750600061036a565b60006112aa8385611667565b9050826112b785836117e8565b146103f55760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161048c565b60006103f583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611406565b600081831161135f57826103f5565b50919050565b6000806113728385611720565b9050838110156103f55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161048c565b60006103f583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f7b565b600081836114275760405162461bcd60e51b815260040161048c9190611434565b506000610fac84866117e8565b60006020808352835180602085015260005b8181101561146257858101830151858201604001528201611446565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461149857600080fd5b50565b600080604083850312156114ae57600080fd5b82356114b981611483565b946020939093013593505050565b6000806000606084860312156114dc57600080fd5b83356114e781611483565b925060208401356114f781611483565b929592945050506040919091013590565b60006020828403121561151a57600080fd5b81356103f581611483565b6000806040838503121561153857600080fd5b823561154381611483565b9150602083013561155381611483565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115af5781600019048211156115955761159561155e565b808516156115a257918102915b93841c9390800290611579565b509250929050565b6000826115c65750600161036a565b816115d35750600061036a565b81600181146115e957600281146115f35761160f565b600191505061036a565b60ff8411156116045761160461155e565b50506001821b61036a565b5060208310610133831016604e8410600b8410161715611632575081810a61036a565b61163c8383611574565b80600019048211156116505761165061155e565b029392505050565b60006103f560ff8416836115b7565b808202811582820484141761036a5761036a61155e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116c557600080fd5b81516103f581611483565b6000806000606084860312156116e557600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561171057600080fd5b815180151581146103f557600080fd5b8082018082111561036a5761036a61155e565b6000600182016117455761174561155e565b5060010190565b8181038181111561036a5761036a61155e565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156117c75784516001600160a01b0316835293830193918301916001016117a2565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261180557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220cba7cd7a63eab9219a4fbbb57ee6b056aa922498915df5c0f39cb85bc1c739c964736f6c63430008170033";

type PEPSLAMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PEPSLAMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PEPSLAM__factory extends ContractFactory {
  constructor(...args: PEPSLAMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PEPSLAM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PEPSLAM__factory {
    return super.connect(runner) as PEPSLAM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PEPSLAMInterface {
    return new Interface(_abi) as PEPSLAMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PEPSLAM {
    return new Contract(address, _abi, runner) as unknown as PEPSLAM;
  }
}
