/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OptimaAI,
  OptimaAIInterface,
} from "../../../medium/0x6cdf01dd5563f3b8998975fc55a53c2dd7595eda.sol/OptimaAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "add_FCprx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_add_FCprx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_var_MfXZpV",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "update_var_MfXZpV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805180820190915260088152674f7074696d61414960c01b602082015260009061003d9082610184565b506040805180820190915260068152654f505449414960d01b60208201526001906100689082610184565b506100756012600a610341565b61008490640737be7600610354565b600281905533600081815260046020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36100dd6103e84261036b565b60035561038d565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010f57607f821691505b60208210810361012f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017f57806000526020600020601f840160051c8101602085101561015c5750805b601f840160051c820191505b8181101561017c5760008155600101610168565b50505b505050565b81516001600160401b0381111561019d5761019d6100e5565b6101b1816101ab84546100fb565b84610135565b6020601f8211600181146101e557600083156101cd5750848201515b600019600385901b1c1916600184901b17845561017c565b600084815260208120601f198516915b8281101561021557878501518255602094850194600190920191016101f5565b50848210156102335786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102935780850481111561027757610277610242565b600184161561028557908102905b60019390931c92800261025c565b935093915050565b6000826102aa5750600161033b565b816102b75750600061033b565b81600181146102cd57600281146102d7576102f3565b600191505061033b565b60ff8411156102e8576102e8610242565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610316575081810a61033b565b6103236000198484610258565b806000190482111561033757610337610242565b0290505b92915050565b600061034d838361029b565b9392505050565b808202811582820484141761033b5761033b610242565b60008261038857634e487b7160e01b600052601260045260246000fd5b500690565b6107998061039c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806396a70ebe1161006657806396a70ebe1461019a578063a9059cbb146101ad578063a9abf911146101c0578063dd62ed3e146101c857600080fd5b806370a082311461015d578063859811ea1461017d57806395d89b411461019257600080fd5b806306fdde03146100d457806308581760146100f2578063095ea7b31461010457806318160ddd1461012757806323b872dd14610130578063313ce56714610143575b600080fd5b6100dc6101f3565b6040516100e99190610568565b60405180910390f35b6003545b6040519081526020016100e9565b6101176101123660046105d2565b610281565b60405190151581526020016100e9565b6100f660025481565b61011761013e3660046105fc565b6102ee565b61014b601281565b60405160ff90911681526020016100e9565b6100f661016b366004610639565b60046020526000908152604090205481565b61019061018b36600461065b565b600355565b005b6100dc61049e565b6101906101a836600461065b565b600655565b6101176101bb3660046105d2565b6104ab565b6006546100f6565b6100f66101d6366004610674565b600560209081526000928352604080842090915290825290205481565b60008054610200906106a7565b80601f016020809104026020016040519081016040528092919081815260200182805461022c906106a7565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102dc9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526004602052604081205482111561032f5760405162461bcd60e51b8152600401610326906106e1565b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610326565b6001600160a01b038416600090815260046020526040812080548492906103db90849061073d565b90915550506001600160a01b03831660009081526004602052604081208054849290610408908490610750565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061044090849061073d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161048c91815260200190565b60405180910390a35060019392505050565b60018054610200906106a7565b336000908152600460205260408120548211156104da5760405162461bcd60e51b8152600401610326906106e1565b33600090815260046020526040812080548492906104f990849061073d565b90915550506001600160a01b03831660009081526004602052604081208054849290610526908490610750565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102dc565b602081526000825180602084015260005b818110156105965760208186018101516040868401015201610579565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105cd57600080fd5b919050565b600080604083850312156105e557600080fd5b6105ee836105b6565b946020939093013593505050565b60008060006060848603121561061157600080fd5b61061a846105b6565b9250610628602085016105b6565b929592945050506040919091013590565b60006020828403121561064b57600080fd5b610654826105b6565b9392505050565b60006020828403121561066d57600080fd5b5035919050565b6000806040838503121561068757600080fd5b610690836105b6565b915061069e602084016105b6565b90509250929050565b600181811c908216806106bb57607f821691505b6020821081036106db57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102e8576102e8610727565b808201808211156102e8576102e861072756fea2646970667358221220371a36e444ea6229b647d6f381f69299847d9a12b2165978bb21095fe6e95fd364736f6c634300081e0033";

type OptimaAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimaAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimaAI__factory extends ContractFactory {
  constructor(...args: OptimaAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimaAI> {
    return super.deploy(overrides || {}) as Promise<OptimaAI>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimaAI {
    return super.attach(address) as OptimaAI;
  }
  override connect(signer: Signer): OptimaAI__factory {
    return super.connect(signer) as OptimaAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimaAIInterface {
    return new utils.Interface(_abi) as OptimaAIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimaAI {
    return new Contract(address, _abi, signerOrProvider) as OptimaAI;
  }
}
