/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UnifyAI,
  UnifyAIInterface,
} from "../../../medium/0x9382d19736e46e032c8afa65669d863f2de39196.sol/UnifyAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526006805460ff1916600117905560196007819055600881905560056009819055600a908155601e600b819055600c55600d919091556000600e556200004c9060129062000355565b6200005b90629896806200036d565b600f556200006c6012600a62000355565b6200007b90629896806200036d565b6010556200008c6012600a62000355565b6200009b90629896806200036d565b601155620000ac6012600a62000355565b620000bb90629896806200036d565b6012556014805461ffff60a81b19169055348015620000d957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060068054610100600160a81b0319166101003302179055620001406012600a62000355565b6200015090633b9aca006200036d565b3360009081526001602081905260408220929092556003906200017b6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556006546101009004909116835291208054909216179055620001df3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002196012600a62000355565b6200022990633b9aca006200036d565b60405190815260200160405180910390a362000387565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002975781600019048211156200027b576200027b62000240565b808516156200028957918102915b93841c93908002906200025b565b509250929050565b600082620002b0575060016200034f565b81620002bf575060006200034f565b8160018114620002d85760028114620002e35762000303565b60019150506200034f565b60ff841115620002f757620002f762000240565b50506001821b6200034f565b5060208310610133831016604e8410600b841016171562000328575081810a6200034f565b62000334838362000256565b80600019048211156200034b576200034b62000240565b0290505b92915050565b60006200036660ff8416836200029f565b9392505050565b80820281158282048414176200034f576200034f62000240565b61188480620003976000396000f3fe6080604052600436106101185760003560e01c8063751039fc116100a0578063a9059cbb11610064578063a9059cbb14610305578063bf474bed14610325578063c876d0b91461033b578063c9567bf914610355578063dd62ed3e1461036a57600080fd5b8063751039fc1461026e5780637d1db4a5146102835780638da5cb5b146102995780638f9a55c0146102c157806395d89b41146102d757600080fd5b806323b872dd116100e757806323b872dd146101d0578063313ce567146101f057806351bc3c851461020c57806370a0823114610223578063715018a61461025957600080fd5b806306fdde0314610124578063095ea7b3146101675780630faee56f1461019757806318160ddd146101bb57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b50604080518082019091526008815267556e69667920414960c01b60208201525b60405161015e9190611453565b60405180910390f35b34801561017357600080fd5b506101876101823660046114b9565b6103b0565b604051901515815260200161015e565b3480156101a357600080fd5b506101ad60125481565b60405190815260200161015e565b3480156101c757600080fd5b506101ad6103c7565b3480156101dc57600080fd5b506101876101eb3660046114e5565b6103e8565b3480156101fc57600080fd5b506040516012815260200161015e565b34801561021857600080fd5b50610221610451565b005b34801561022f57600080fd5b506101ad61023e366004611526565b6001600160a01b031660009081526001602052604090205490565b34801561026557600080fd5b506102216104a9565b34801561027a57600080fd5b50610221610526565b34801561028f57600080fd5b506101ad600f5481565b3480156102a557600080fd5b506000546040516001600160a01b03909116815260200161015e565b3480156102cd57600080fd5b506101ad60105481565b3480156102e357600080fd5b50604080518082019091526005815264554e49465960d81b6020820152610151565b34801561031157600080fd5b506101876103203660046114b9565b6105e2565b34801561033157600080fd5b506101ad60115481565b34801561034757600080fd5b506006546101879060ff1681565b34801561036157600080fd5b506102216105ef565b34801561037657600080fd5b506101ad610385366004611543565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103bd3384846109ab565b5060015b92915050565b60006103d56012600a611676565b6103e390633b9aca00611685565b905090565b60006103f5848484610acf565b610447843361044285604051806060016040528060288152602001611827602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110b2565b6109ab565b5060019392505050565b60065461010090046001600160a01b0316336001600160a01b03161461047657600080fd5b30600090815260016020526040902054801561049557610495816110ec565b4780156104a5576104a581611266565b5050565b6000546001600160a01b031633146104dc5760405162461bcd60e51b81526004016104d39061169c565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105505760405162461bcd60e51b81526004016104d39061169c565b61055c6012600a611676565b61056a90633b9aca00611685565b600f556105796012600a611676565b61058790633b9aca00611685565b6010556006805460ff191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105c16012600a611676565b6105cf90633b9aca00611685565b60405190815260200160405180910390a1565b60006103bd338484610acf565b6000546001600160a01b031633146106195760405162461bcd60e51b81526004016104d39061169c565b601454600160a01b900460ff16156106735760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d3565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106bc9030906106ae6012600a611676565b61044290633b9aca00611685565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906116d1565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906116d1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a91906116d1565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610872816001600160a01b031660009081526001602052604090205490565b6000806108876000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108ef573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061091491906116ee565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561096d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610991919061171c565b506014805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b038316610a0d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d3565b6001600160a01b038216610a6e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b335760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d3565b6001600160a01b038216610b955760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d3565b60008111610bf75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d3565b600080546001600160a01b03858116911614801590610c2457506000546001600160a01b03848116911614155b15610f6f57610c556064610c4f600b54600e5411610c4457600754610c48565b6009545b85906112a4565b9061132d565b60065490915060ff1615610d3d576013546001600160a01b03848116911614801590610c8f57506014546001600160a01b03848116911614155b15610d3d57326000908152600560205260409020544311610d2a5760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a4016104d3565b3260009081526005602052604090204390555b6014546001600160a01b038581169116148015610d6857506013546001600160a01b03848116911614155b8015610d8d57506001600160a01b03831660009081526003602052604090205460ff16155b15610e7557600f54821115610de45760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d3565b60105482610e07856001600160a01b031660009081526001602052604090205490565b610e11919061173e565b1115610e5f5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d3565b600e8054906000610e6f83611751565b91905055505b6014546001600160a01b038481169116148015610e9b57506001600160a01b0384163014155b15610ec857610ec56064610c4f600c54600e5411610ebb57600854610c48565b600a5485906112a4565b90505b30600090815260016020526040902054601454600160a81b900460ff16158015610eff57506014546001600160a01b038581169116145b8015610f145750601454600160b01b900460ff165b8015610f21575060115481115b8015610f305750600d54600e54115b15610f6d57610f52610f4d84610f488460125461136f565b61136f565b6110ec565b4766b1a2bc2ec50000811115610f6b57610f6b47611266565b505b505b8015610fe95730600090815260016020526040902054610f8f9082611384565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fe09085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461100c90836113e3565b6001600160a01b03851660009081526001602052604090205561105161103283836113e3565b6001600160a01b03851660009081526001602052604090205490611384565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61109b85856113e3565b60405190815260200160405180910390a350505050565b600081848411156110d65760405162461bcd60e51b81526004016104d39190611453565b5060006110e3848661176a565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111345761113461177d565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561118d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b191906116d1565b816001815181106111c4576111c461177d565b6001600160a01b0392831660209182029290920101526013546111ea91309116846109ab565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611223908590600090869030904290600401611793565b600060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6006546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156104a5573d6000803e3d6000fd5b6000826000036112b6575060006103c1565b60006112c28385611685565b9050826112cf8583611804565b146113265760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d3565b9392505050565b600061132683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600081831161137e5782611326565b50919050565b600080611391838561173e565b9050838110156113265760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d3565b600061132683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b2565b600081836114465760405162461bcd60e51b81526004016104d39190611453565b5060006110e38486611804565b600060208083528351808285015260005b8181101561148057858101830151858201604001528201611464565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146114b657600080fd5b50565b600080604083850312156114cc57600080fd5b82356114d7816114a1565b946020939093013593505050565b6000806000606084860312156114fa57600080fd5b8335611505816114a1565b92506020840135611515816114a1565b929592945050506040919091013590565b60006020828403121561153857600080fd5b8135611326816114a1565b6000806040838503121561155657600080fd5b8235611561816114a1565b91506020830135611571816114a1565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115cd5781600019048211156115b3576115b361157c565b808516156115c057918102915b93841c9390800290611597565b509250929050565b6000826115e4575060016103c1565b816115f1575060006103c1565b816001811461160757600281146116115761162d565b60019150506103c1565b60ff8411156116225761162261157c565b50506001821b6103c1565b5060208310610133831016604e8410600b8410161715611650575081810a6103c1565b61165a8383611592565b806000190482111561166e5761166e61157c565b029392505050565b600061132660ff8416836115d5565b80820281158282048414176103c1576103c161157c565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116e357600080fd5b8151611326816114a1565b60008060006060848603121561170357600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561172e57600080fd5b8151801515811461132657600080fd5b808201808211156103c1576103c161157c565b6000600182016117635761176361157c565b5060010190565b818103818111156103c1576103c161157c565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156117e35784516001600160a01b0316835293830193918301916001016117be565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261182157634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220e1ed2722de5addc8329fd16f2bee4f4ee79ee20dc59ce2076aa4fff310e4992a64736f6c63430008140033";

type UnifyAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnifyAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnifyAI__factory extends ContractFactory {
  constructor(...args: UnifyAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnifyAI> {
    return super.deploy(overrides || {}) as Promise<UnifyAI>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UnifyAI {
    return super.attach(address) as UnifyAI;
  }
  override connect(signer: Signer): UnifyAI__factory {
    return super.connect(signer) as UnifyAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnifyAIInterface {
    return new utils.Interface(_abi) as UnifyAIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnifyAI {
    return new Contract(address, _abi, signerOrProvider) as UnifyAI;
  }
}
