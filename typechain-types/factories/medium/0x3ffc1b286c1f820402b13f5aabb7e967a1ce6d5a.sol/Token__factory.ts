/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x3ffc1b286c1f820402b13f5aabb7e967a1ce6d5a.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueKIROJTS5LETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206117ff83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206117ff83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61148f806103706000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b411461010f578063a9059cbb14610278578063dd62ed3e14610298578063ea414b28146102de57600080fd5b806370a08231146101f0578063715018a614610226578063816846241461023b5780638da5cb5b1461025057600080fd5b80630faee56f116100c65780630faee56f1461017b57806318160ddd1461019f57806323b872dd146101b4578063313ce567146101d457600080fd5b806301339c21146100f857806306fdde031461010f578063095ea7b31461014b57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061010d6102fe565b005b34801561011b57600080fd5b5060408051808201825260048152634b49524f60e01b60208201529051610142919061107f565b60405180910390f35b34801561015757600080fd5b5061016b6101663660046110e2565b6106c7565b6040519015158152602001610142565b34801561018757600080fd5b5061019160095481565b604051908152602001610142565b3480156101ab57600080fd5b506101916106de565b3480156101c057600080fd5b5061016b6101cf36600461110e565b6106ff565b3480156101e057600080fd5b5060405160098152602001610142565b3480156101fc57600080fd5b5061019161020b36600461114f565b6001600160a01b031660009081526001602052604090205490565b34801561023257600080fd5b5061010d6107bd565b34801561024757600080fd5b5061010d610831565b34801561025c57600080fd5b506000546040516001600160a01b039091168152602001610142565b34801561028457600080fd5b5061016b6102933660046110e2565b610894565b3480156102a457600080fd5b506101916102b336600461116c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102ea57600080fd5b5061010d6102f936600461114f565b6108a1565b6000546001600160a01b031633146103315760405162461bcd60e51b8152600401610328906111a5565b60405180910390fd5b600b54600160a01b900460ff161561038b5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610328565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556103d9913091906103c6906009906112d7565b6103d490633b9aca006112e6565b6108df565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045091906112fd565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d691906112fd565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906112fd565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d719473061058f816001600160a01b031660009081526001602052604090205490565b6000806105a46000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561060c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610631919061131a565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190611348565b50565b60006106d43384846108df565b5060015b92915050565b60006106ec6009600a6112d7565b6106fa90633b9aca006112e6565b905090565b600061070c848484610a03565b3360009081526003602052604090205460ff161580156107615750600b546001600160a01b038581169116148061074e57506001600160a01b03831661dead14155b8061076157506001600160a01b03841630145b156107b3576107b384336103d485604051806060016040528060288152602001611432602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610de5565b5060019392505050565b6000546001600160a01b031633146107e75760405162461bcd60e51b8152600401610328906111a5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461085b5760405162461bcd60e51b8152600401610328906111a5565b6000471161086857600080fd5b60405133904780156108fc02916000818181858888f193505050501580156106c4573d6000803e3d6000fd5b60006106d4338484610a03565b3360009081526003602052604090205460ff166108bd57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109415760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610328565b6001600160a01b0382166109a25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610328565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610328565b6001600160a01b038216610ac95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610328565b60008111610b2b5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610328565b60006001600160a01b0384163014801590610b4f57506001600160a01b0383163014155b15610c8757600b546001600160a01b038581169116148015610b7f5750600a546001600160a01b03848116911614155b8015610ba457506001600160a01b03831660009081526003602052604090205460ff16155b8015610bbe57506004546001600160a01b03848116911614155b15610bd95760088054906000610bd38361136a565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c105750600b546001600160a01b038581169116145b8015610c255750600b54600160b01b900460ff165b8015610c3f57506004546001600160a01b03868116911614155b15610c85578015610c795760006009548211610c5b5781610c5f565b6009545b9050610c77818511610c715784610e1f565b81610e1f565b505b47610c8347610f99565b505b505b6001600160a01b038416600090815260016020526040902054610caa9083610fd7565b6001600160a01b038516600090815260016020526040902055610cef610cd08383610fd7565b6001600160a01b03851660009081526001602052604090205490611020565b6001600160a01b0384166000908152600160205260409020558015610d825730600090815260016020526040902054610d289082611020565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d799085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ddf576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610dcd8585610fd7565b60405190815260200160405180910390a35b50505050565b60008184841115610e095760405162461bcd60e51b8152600401610328919061107f565b506000610e168486611383565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610e6757610e67611396565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee491906112fd565b81600181518110610ef757610ef7611396565b6001600160a01b039283166020918202929092010152600a54610f1d91309116846108df565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610f569085906000908690309042906004016113ac565b600060405180830381600087803b158015610f7057600080fd5b505af1158015610f84573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610fd3573d6000803e3d6000fd5b5050565b600061101983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610de5565b9392505050565b60008061102d838561141e565b9050838110156110195760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610328565b602081526000825180602084015260005b818110156110ad5760208186018101516040868401015201611090565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106c457600080fd5b600080604083850312156110f557600080fd5b8235611100816110cd565b946020939093013593505050565b60008060006060848603121561112357600080fd5b833561112e816110cd565b9250602084013561113e816110cd565b929592945050506040919091013590565b60006020828403121561116157600080fd5b8135611019816110cd565b6000806040838503121561117f57600080fd5b823561118a816110cd565b9150602083013561119a816110cd565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561122b5780850481111561120f5761120f6111da565b600184161561121d57908102905b60019390931c9280026111f4565b935093915050565b600082611242575060016106d8565b8161124f575060006106d8565b8160018114611265576002811461126f5761128b565b60019150506106d8565b60ff841115611280576112806111da565b50506001821b6106d8565b5060208310610133831016604e8410600b84101617156112ae575081810a6106d8565b6112bb60001984846111f0565b80600019048211156112cf576112cf6111da565b029392505050565b600061101960ff841683611233565b80820281158282048414176106d8576106d86111da565b60006020828403121561130f57600080fd5b8151611019816110cd565b60008060006060848603121561132f57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561135a57600080fd5b8151801515811461101957600080fd5b60006001820161137c5761137c6111da565b5060010190565b818103818111156106d8576106d86111da565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156113fe5783516001600160a01b03168352602093840193909201916001016113d7565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156106d8576106d86111da56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b4c658dade3aa7ae7bda39cd004b60ef46273de177ce505e6f26a5fb0436ec8864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
