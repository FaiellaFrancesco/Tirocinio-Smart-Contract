/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../medium/0xde036907899e23fff6d5a4f61e66a75c7867d80d.sol/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
    ],
    name: "OwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "wl",
        type: "address[]",
      },
    ],
    name: "addWLs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flipState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526004805460ff60a01b1916600160a01b17905534801561002357600080fd5b506040516110b63803806110b6833981016040819052610042916101ec565b600161004e85826102fe565b50600061005b84826102fe565b506002805460ff191660ff841617905560038190556100773390565b600480546001600160a01b0319166001600160a01b0392909216919091179055600354600560006100a53390565b6001600160a01b03168152602081019190915260400160002055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405161010791815260200190565b60405180910390a35050336000908152600760205260409020805460ff19166001179055506103bc9050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261015a57600080fd5b81516001600160401b0381111561017357610173610133565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101a1576101a1610133565b6040528181528382016020018510156101b957600080fd5b60005b828110156101d8576020818601810151838301820152016101bc565b506000918101602001919091529392505050565b6000806000806080858703121561020257600080fd5b84516001600160401b0381111561021857600080fd5b61022487828801610149565b602087015190955090506001600160401b0381111561024257600080fd5b61024e87828801610149565b935050604085015160ff8116811461026557600080fd5b6060959095015193969295505050565b600181811c9082168061028957607f821691505b6020821081036102a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102f957806000526020600020601f840160051c810160208510156102d65750805b601f840160051c820191505b818110156102f657600081556001016102e2565b50505b505050565b81516001600160401b0381111561031757610317610133565b61032b816103258454610275565b846102af565b6020601f82116001811461035f57600083156103475750848201515b600019600385901b1c1916600184901b1784556102f6565b600084815260208120601f198516915b8281101561038f578785015182556020948501946001909201910161036f565b50848210156103ad5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610ceb806103cb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a61161009757806395d89b411161006657806395d89b411461022e578063a457c2d714610236578063a9059cbb14610249578063dd62ed3e1461025c57600080fd5b8063715018a6146101e057806371ce6b4a146101e85780638da5cb5b146101fb5780638e9203511461022657600080fd5b8063313ce567116100d3578063313ce56714610170578063395093511461018f57806342966c68146101a257806370a08231146101b757600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd1461015d575b600080fd5b61010d610295565b60405161011a9190610a43565b60405180910390f35b610136610131366004610aad565b610323565b604051901515815260200161011a565b61014f60035481565b60405190815260200161011a565b61013661016b366004610ad7565b61033a565b60025461017d9060ff1681565b60405160ff909116815260200161011a565b61013661019d366004610aad565b610389565b6101b56101b0366004610b14565b6103bf565b005b61014f6101c5366004610b2d565b6001600160a01b031660009081526005602052604090205490565b6101b56103cc565b6101b56101f6366004610b48565b610452565b60045461020e906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b6101b56104f2565b61010d610534565b610136610244366004610aad565b610541565b610136610257366004610aad565b610577565b61014f61026a366004610bbf565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b600080546102a290610bf2565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610bf2565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505081565b6000610330338484610584565b5060015b92915050565b6001600160a01b038316600090815260066020908152604080832033808552925282205461037491869161036f908690610c42565b610584565b61037f848484610692565b5060019392505050565b3360008181526006602090815260408083206001600160a01b0387168452909152812054909161033091859061036f908661082a565b6103c93382610890565b50565b6004546001600160a01b0316336001600160a01b0316146104085760405162461bcd60e51b81526004016103ff90610c55565b60405180910390fd5b6004546040516001600160a01b03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600480546001600160a01b0319169055565b6004546001600160a01b0316336001600160a01b0316146104855760405162461bcd60e51b81526004016103ff90610c55565b60005b818110156104ed576001600760008585858181106104a8576104a8610c8c565b90506020020160208101906104bd9190610b2d565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610488565b505050565b6004546001600160a01b0316336001600160a01b0316146105255760405162461bcd60e51b81526004016103ff90610c55565b6004805460ff60a01b19169055565b600180546102a290610bf2565b3360008181526006602090815260408083206001600160a01b0387168452909152812054909161033091859061036f90866108ca565b6000610330338484610692565b6001600160a01b0383166105da5760405162461bcd60e51b815260206004820152601d60248201527f417070726f76652066726f6d20746865207a65726f206164647265737300000060448201526064016103ff565b6001600160a01b0382166106305760405162461bcd60e51b815260206004820152601b60248201527f417070726f766520746f20746865207a65726f2061646472657373000000000060448201526064016103ff565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106e85760405162461bcd60e51b815260206004820152601e60248201527f5472616e736665722066726f6d20746865207a65726f2061646472657373000060448201526064016103ff565b6001600160a01b03821661073e5760405162461bcd60e51b815260206004820152601c60248201527f5472616e7366657220746f20746865207a65726f20616464726573730000000060448201526064016103ff565b6001600160a01b0383166000908152600560205260409020548111156107a65760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657220616d6f756e7420657863656564732062616c616e63650060448201526064016103ff565b600454600160a01b900460ff161561081f576001600160a01b03821660009081526007602052604090205460ff1680156107ef57503260009081526007602052604090205460ff165b61081f5760405162461bcd60e51b81526020600482015260016024820152603760f91b60448201526064016103ff565b6104ed838383610926565b6000806108378385610ca2565b9050838110156108895760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ff565b9392505050565b6001600160a01b0382166108ba57604051634b637e8f60e11b8152600060048201526024016103ff565b6108c682600083610926565b5050565b60008282111561091c5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016103ff565b6108898284610c42565b6001600160a01b0383166109515780600360008282546109469190610ca2565b909155506109c39050565b6001600160a01b038316600090815260056020526040902054818110156109a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103ff565b6001600160a01b03841660009081526005602052604090209082900390555b6001600160a01b0382166109df576003805482900390556109fe565b6001600160a01b03821660009081526005602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068591815260200190565b602081526000825180602084015260005b81811015610a715760208186018101516040868401015201610a54565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610aa857600080fd5b919050565b60008060408385031215610ac057600080fd5b610ac983610a91565b946020939093013593505050565b600080600060608486031215610aec57600080fd5b610af584610a91565b9250610b0360208501610a91565b929592945050506040919091013590565b600060208284031215610b2657600080fd5b5035919050565b600060208284031215610b3f57600080fd5b61088982610a91565b60008060208385031215610b5b57600080fd5b823567ffffffffffffffff811115610b7257600080fd5b8301601f81018513610b8357600080fd5b803567ffffffffffffffff811115610b9a57600080fd5b8560208260051b8401011115610baf57600080fd5b6020919091019590945092505050565b60008060408385031215610bd257600080fd5b610bdb83610a91565b9150610be960208401610a91565b90509250929050565b600181811c90821680610c0657607f821691505b602082108103610c2657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033457610334610c2c565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561033457610334610c2c56fea2646970667358221220beee046dd8ec6677c794657a695bff61f1bb3946d409ef95f5d480e4db3a250864736f6c634300081e0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _symbol: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      _symbol,
      _name,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    _symbol: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _symbol,
      _name,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
