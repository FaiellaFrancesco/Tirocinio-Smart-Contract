/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenMintERC20Token,
  TokenMintERC20TokenInterface,
} from "../../../medium/0x4494b256908654709e35c1d16a15363bf9d4648b.sol/TokenMintERC20Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a600655600a600755600060085560006009556001600a556001600b556014600c556000600d556000600e556012600a62000041919062000349565b6200005090620f424062000361565b600f55620000616012600a62000349565b6200007090620f424062000361565b601055620000816012600a62000349565b6200008f9061271062000361565b601155620000a06012600a62000349565b620000af90620f424062000361565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d757600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001396012600a62000349565b62000149906305f5e10062000361565b336000908152600160208190526040822092909255600390620001746000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d33390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200020d6012600a62000349565b6200021d906305f5e10062000361565b60405190815260200160405180910390a36200037b565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028b5781600019048211156200026f576200026f62000234565b808516156200027d57918102915b93841c93908002906200024f565b509250929050565b600082620002a45750600162000343565b81620002b35750600062000343565b8160018114620002cc5760028114620002d757620002f7565b600191505062000343565b60ff841115620002eb57620002eb62000234565b50506001821b62000343565b5060208310610133831016604e8410600b84101617156200031c575081810a62000343565b6200032883836200024a565b80600019048211156200033f576200033f62000234565b0290505b92915050565b60006200035a60ff84168362000293565b9392505050565b808202811582820484141762000343576200034362000234565b611c62806200038b6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103c2578063bf474bed146103e2578063c9567bf9146103f8578063d34628cc1461040d578063dd62ed3e1461042d578063ec1f3f631461047357600080fd5b8063715018a614610317578063751039fc1461032c5780637d1db4a5146103415780638da5cb5b146103575780638f9a55c01461037f57806395d89b411461039557600080fd5b8063313ce56711610108578063313ce5671461024257806331c2d8471461025e5780633bbac5791461027e57806351bc3c85146102b75780636fc3eaec146102cc57806370a08231146102e157600080fd5b806306fdde031461015b578063095ea7b3146101a25780630faee56f146101d2578063109daa99146101f657806318160ddd1461020d57806323b872dd1461022257600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152600c81526b4c65742048696d20436f6f6b60a01b60208201525b604051610199919061172d565b60405180910390f35b3480156101ae57600080fd5b506101c26101bd3660046117a1565b610493565b6040519015158152602001610199565b3480156101de57600080fd5b506101e860125481565b604051908152602001610199565b34801561020257600080fd5b5061020b6104aa565b005b34801561021957600080fd5b506101e861051a565b34801561022e57600080fd5b506101c261023d3660046117cd565b61053b565b34801561024e57600080fd5b5060405160128152602001610199565b34801561026a57600080fd5b5061020b610279366004611824565b6105a4565b34801561028a57600080fd5b506101c26102993660046118e9565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102c357600080fd5b5061020b610630565b3480156102d857600080fd5b5061020b61067f565b3480156102ed57600080fd5b506101e86102fc3660046118e9565b6001600160a01b031660009081526001602052604090205490565b34801561032357600080fd5b5061020b6106ac565b34801561033857600080fd5b5061020b610720565b34801561034d57600080fd5b506101e8600f5481565b34801561036357600080fd5b506000546040516001600160a01b039091168152602001610199565b34801561038b57600080fd5b506101e860105481565b3480156103a157600080fd5b50604080518082019091526004815263434f4f4b60e01b602082015261018c565b3480156103ce57600080fd5b506101c26103dd3660046117a1565b6107cd565b3480156103ee57600080fd5b506101e860115481565b34801561040457600080fd5b5061020b6107da565b34801561041957600080fd5b5061020b610428366004611824565b610b96565b34801561043957600080fd5b506101e8610448366004611906565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047f57600080fd5b5061020b61048e36600461193f565b610c1e565b60006104a0338484610c65565b5060015b92915050565b6000546001600160a01b031633146104dd5760405162461bcd60e51b81526004016104d490611958565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105286012600a611a87565b610536906305f5e100611a96565b905090565b6000610548848484610d89565b61059a843361059585604051806060016040528060288152602001611c05602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611390565b610c65565b5060019392505050565b6000546001600160a01b031633146105ce5760405162461bcd60e51b81526004016104d490611958565b60005b815181101561062c576000600460008484815181106105f2576105f2611aad565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105d1565b5050565b6005546001600160a01b0316336001600160a01b03161461065057600080fd5b30600090815260016020526040902054801561066f5761066f816113ca565b47801561062c5761062c81611544565b6005546001600160a01b0316336001600160a01b03161461069f57600080fd5b476106a981611544565b50565b6000546001600160a01b031633146106d65760405162461bcd60e51b81526004016104d490611958565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461074a5760405162461bcd60e51b81526004016104d490611958565b6107566012600a611a87565b610764906305f5e100611a96565b600f556107736012600a611a87565b610781906305f5e100611a96565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b16012600a611a87565b6107bf906305f5e100611a96565b604051908152602001610510565b60006104a0338484610d89565b6000546001600160a01b031633146108045760405162461bcd60e51b81526004016104d490611958565b601454600160a01b900460ff161561085e5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d4565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108a79030906108996012600a611a87565b610595906305f5e100611a96565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190611ac3565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190611ac3565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a159190611ac3565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a5d816001600160a01b031660009081526001602052604090205490565b600080610a726000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ada573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610aff9190611ae0565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c9190611b0e565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bc05760405162461bcd60e51b81526004016104d490611958565b60005b815181101561062c57600160046000848481518110610be457610be4611aad565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc3565b6005546001600160a01b0316336001600160a01b031614610c3e57600080fd5b6008548111158015610c5257506009548111155b610c5b57600080fd5b6008819055600955565b6001600160a01b038316610cc75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d4565b6001600160a01b038216610d285760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d4565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ded5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d4565b6001600160a01b038216610e4f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d4565b60008111610eb15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d4565b600080546001600160a01b03858116911614801590610ede57506000546001600160a01b03848116911614155b1561124d576001600160a01b03841660009081526004602052604090205460ff16158015610f2557506001600160a01b03831660009081526004602052604090205460ff16155b610f2e57600080fd5b600e54600003610f6757610f646064610f5e600a54600e5411610f5357600654610f57565b6008545b859061157e565b90611607565b90505b600e5415610f8c57610f896064610f5e600d548561157e90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fb757506013546001600160a01b03848116911614155b8015610fdc57506001600160a01b03831660009081526003602052604090205460ff16155b156110e157600f548211156110335760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d4565b60105482611056856001600160a01b031660009081526001602052604090205490565b6110609190611b30565b11156110ae5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d4565b6110c96064610f5e600a54600e5411610f5357600654610f57565b600e805491925060006110db83611b43565b91905055505b6014546001600160a01b03848116911614801561110757506001600160a01b0384163014155b15611134576111316064610f5e600b54600e541161112757600754610f57565b600954859061157e565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116b57506014546001600160a01b038581169116145b80156111805750601454600160b01b900460ff165b801561118d575060115481115b801561119c5750600c54600e54115b1561124b576016544311156111b15760006015555b6003601554106112035760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d4565b61122061121b8461121684601254611649565b611649565b6113ca565b4780156112305761123047611544565b6015805490600061124083611b43565b909155505043601655505b505b80156112c7573060009081526001602052604090205461126d908261165e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112be9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112ea90836116bd565b6001600160a01b03851660009081526001602052604090205561132f61131083836116bd565b6001600160a01b0385166000908152600160205260409020549061165e565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137985856116bd565b60405190815260200160405180910390a350505050565b600081848411156113b45760405162461bcd60e51b81526004016104d4919061172d565b5060006113c18486611b5c565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141257611412611aad565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148f9190611ac3565b816001815181106114a2576114a2611aad565b6001600160a01b0392831660209182029290920101526013546114c89130911684610c65565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611501908590600090869030904290600401611b6f565b600060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561062c573d6000803e3d6000fd5b600082600003611590575060006104a4565b600061159c8385611a96565b9050826115a98583611be2565b146116005760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d4565b9392505050565b600061160083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116ff565b60008183116116585782611600565b50919050565b60008061166b8385611b30565b9050838110156116005760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d4565b600061160083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611390565b600081836117205760405162461bcd60e51b81526004016104d4919061172d565b5060006113c18486611be2565b60006020808352835180602085015260005b8181101561175b5785810183015185820160400152820161173f565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106a957600080fd5b803561179c8161177c565b919050565b600080604083850312156117b457600080fd5b82356117bf8161177c565b946020939093013593505050565b6000806000606084860312156117e257600080fd5b83356117ed8161177c565b925060208401356117fd8161177c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183757600080fd5b823567ffffffffffffffff8082111561184f57600080fd5b818501915085601f83011261186357600080fd5b8135818111156118755761187561180e565b8060051b604051601f19603f8301168101818110858211171561189a5761189a61180e565b6040529182528482019250838101850191888311156118b857600080fd5b938501935b828510156118dd576118ce85611791565b845293850193928501926118bd565b98975050505050505050565b6000602082840312156118fb57600080fd5b81356116008161177c565b6000806040838503121561191957600080fd5b82356119248161177c565b915060208301356119348161177c565b809150509250929050565b60006020828403121561195157600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119de5781600019048211156119c4576119c461198d565b808516156119d157918102915b93841c93908002906119a8565b509250929050565b6000826119f5575060016104a4565b81611a02575060006104a4565b8160018114611a185760028114611a2257611a3e565b60019150506104a4565b60ff841115611a3357611a3361198d565b50506001821b6104a4565b5060208310610133831016604e8410600b8410161715611a61575081810a6104a4565b611a6b83836119a3565b8060001904821115611a7f57611a7f61198d565b029392505050565b600061160060ff8416836119e6565b80820281158282048414176104a4576104a461198d565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ad557600080fd5b81516116008161177c565b600080600060608486031215611af557600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b2057600080fd5b8151801515811461160057600080fd5b808201808211156104a4576104a461198d565b600060018201611b5557611b5561198d565b5060010190565b818103818111156104a4576104a461198d565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bc15784516001600160a01b031683529383019391830191600101611b9c565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611bff57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220bd616a0e8408b078d492753de120beb702151ca87ec54a8537b09652893fc7a264736f6c63430008170033";

type TokenMintERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMintERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMintERC20Token__factory extends ContractFactory {
  constructor(...args: TokenMintERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenMintERC20Token> {
    return super.deploy(overrides || {}) as Promise<TokenMintERC20Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenMintERC20Token {
    return super.attach(address) as TokenMintERC20Token;
  }
  override connect(signer: Signer): TokenMintERC20Token__factory {
    return super.connect(signer) as TokenMintERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMintERC20TokenInterface {
    return new utils.Interface(_abi) as TokenMintERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMintERC20Token {
    return new Contract(address, _abi, signerOrProvider) as TokenMintERC20Token;
  }
}
