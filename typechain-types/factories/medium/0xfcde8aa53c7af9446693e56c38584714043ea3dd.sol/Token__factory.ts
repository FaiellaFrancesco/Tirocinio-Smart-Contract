/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xfcde8aa53c7af9446693e56c38584714043ea3dd.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueSTRAWBERRYETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206119da83398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206119da83398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61166a806103706000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b411461028b578063a9059cbb146102be578063dd62ed3e146102de578063ea414b281461032457600080fd5b806370a0823114610203578063715018a6146102395780638a8c523c1461024e5780638da5cb5b1461026357600080fd5b806318160ddd116100c657806318160ddd1461019b57806323b872dd146101b057806323d625fa146101d0578063313ce567146101e757600080fd5b806306fdde03146100f8578063095ea7b3146101475780630faee56f1461017757600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50604080518082019091526014815273436f636f726f204f726967696e616c204e616d6560601b60208201525b60405161013e9190611238565b60405180910390f35b34801561015357600080fd5b5061016761016236600461129b565b610344565b604051901515815260200161013e565b34801561018357600080fd5b5061018d60095481565b60405190815260200161013e565b3480156101a757600080fd5b5061018d61035b565b3480156101bc57600080fd5b506101676101cb3660046112c7565b61037c565b3480156101dc57600080fd5b506101e561043a565b005b3480156101f357600080fd5b506040516009815260200161013e565b34801561020f57600080fd5b5061018d61021e366004611308565b6001600160a01b031660009081526001602052604090205490565b34801561024557600080fd5b506101e56104a9565b34801561025a57600080fd5b506101e561051d565b34801561026f57600080fd5b506000546040516001600160a01b03909116815260200161013e565b34801561029757600080fd5b5060408051808201909152600a8152695354524157424552525960b01b6020820152610131565b3480156102ca57600080fd5b506101676102d936600461129b565b6108d5565b3480156102ea57600080fd5b5061018d6102f9366004611325565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561033057600080fd5b506101e561033f366004611308565b6108e2565b6000610351338484610920565b5060015b92915050565b60006103696009600a61145b565b61037790631913385061146a565b905090565b6000610389848484610a44565b6004546001600160a01b031633148015906103d95750600b546001600160a01b03858116911614806103c657506001600160a01b03831661dead14155b806103d957506001600160a01b03841630145b1561043057610430843361042b8560405180606001604052806028815260200161160d602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eac565b610920565b5060019392505050565b6000546001600160a01b0316331461046d5760405162461bcd60e51b815260040161046490611481565b60405180910390fd5b6000471161047a57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156104a6573d6000803e3d6000fd5b50565b6000546001600160a01b031633146104d35760405162461bcd60e51b815260040161046490611481565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105475760405162461bcd60e51b815260040161046490611481565b600b54600160a01b900460ff16156105a15760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610464565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556105ea913091906105dc9060099061145b565b61042b90631913385061146a565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066191906114b6565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e791906114b6565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610734573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075891906114b6565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306107a0816001600160a01b031660009081526001602052604090205490565b6000806107b56000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561081d573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061084291906114d3565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611501565b6000610351338484610a44565b3360009081526003602052604090205460ff166108fe57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109825760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610464565b6001600160a01b0382166109e35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610464565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610464565b6001600160a01b038216610b0a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610464565b60008111610b6c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610464565b60006001600160a01b0384163014801590610b9057506001600160a01b0383163014155b15610d4e57600b54600160a81b900460ff16610bd557610bd26064610bcc60075460085411610bc157600554610bc5565b6006545b8590610ee6565b90610f6f565b90505b600b546001600160a01b038581169116148015610c005750600a546001600160a01b03848116911614155b8015610c2557506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3f57506004546001600160a01b03848116911614155b15610c5a5760088054906000610c5483611523565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c915750600b546001600160a01b038581169116145b8015610ca65750600b54600160b01b900460ff165b8015610cc057506004546001600160a01b03868116911614155b15610d4c57843b15610d0b5760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610464565b8015610d405760006009548211610d225781610d26565b6009545b9050610d3e818511610d385784610fb1565b81610fb1565b505b47610d4a4761112b565b505b505b6001600160a01b038416600090815260016020526040902054610d719083611169565b6001600160a01b038516600090815260016020526040902055610db6610d978383611169565b6001600160a01b038516600090815260016020526040902054906111ab565b6001600160a01b0384166000908152600160205260409020558015610e495730600090815260016020526040902054610def90826111ab565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e409085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ea6576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e948585611169565b60405190815260200160405180910390a35b50505050565b60008184841115610ed05760405162461bcd60e51b81526004016104649190611238565b506000610edd848661153c565b95945050505050565b600082600003610ef857506000610355565b6000610f04838561146a565b905082610f11858361154f565b14610f685760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610464565b9392505050565b6000610f6883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061120a565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ff957610ff9611571565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611052573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107691906114b6565b8160018151811061108957611089611571565b6001600160a01b039283166020918202929092010152600a546110af9130911684610920565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110e8908590600090869030904290600401611587565b600060405180830381600087803b15801561110257600080fd5b505af1158015611116573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611165573d6000803e3d6000fd5b5050565b6000610f6883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eac565b6000806111b883856115f9565b905083811015610f685760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610464565b6000818361122b5760405162461bcd60e51b81526004016104649190611238565b506000610edd848661154f565b602081526000825180602084015260005b818110156112665760208186018101516040868401015201611249565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146104a657600080fd5b600080604083850312156112ae57600080fd5b82356112b981611286565b946020939093013593505050565b6000806000606084860312156112dc57600080fd5b83356112e781611286565b925060208401356112f781611286565b929592945050506040919091013590565b60006020828403121561131a57600080fd5b8135610f6881611286565b6000806040838503121561133857600080fd5b823561134381611286565b9150602083013561135381611286565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113af578085048111156113935761139361135e565b60018416156113a157908102905b60019390931c928002611378565b935093915050565b6000826113c657506001610355565b816113d357506000610355565b81600181146113e957600281146113f35761140f565b6001915050610355565b60ff8411156114045761140461135e565b50506001821b610355565b5060208310610133831016604e8410600b8410161715611432575081810a610355565b61143f6000198484611374565b80600019048211156114535761145361135e565b029392505050565b6000610f6860ff8416836113b7565b80820281158282048414176103555761035561135e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114c857600080fd5b8151610f6881611286565b6000806000606084860312156114e857600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561151357600080fd5b81518015158114610f6857600080fd5b6000600182016115355761153561135e565b5060010190565b818103818111156103555761035561135e565b60008261156c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115d95783516001600160a01b03168352602093840193909201916001016115b2565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103555761035561135e56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c2f214897459e2ac8e62fb0cc19f50393d1fa1ba9536f724007dc7da1d45614c64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
