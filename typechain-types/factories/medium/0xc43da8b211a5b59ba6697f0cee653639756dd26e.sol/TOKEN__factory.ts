/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0xc43da8b211a5b59ba6697f0cee653639756dd26e.sol/TOKEN";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint160",
        name: "version_",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600280546001600160a01b031916600117905534801561002357600080fd5b506040516110133803806110138339810160408190526100429161029d565b338061006857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b600180546001600160a01b0319166001600160a01b03831617905561008c81610194565b50600280546001600160a01b0319166001600160a01b03831617905560066100b484826103b1565b5060056100c183826103b1565b50600960a08190526100d490600a61056e565b6100e290633b9aca00610584565b6080819052600360006100fd6000546001600160a01b031690565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461012c919061059b565b90915550506000546001600160a01b03166001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160405161018491815260200190565b60405180910390a35050506105ae565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261020b57600080fd5b81516001600160401b03811115610224576102246101e4565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610252576102526101e4565b60405281815283820160200185101561026a57600080fd5b60005b828110156102895760208186018101518383018201520161026d565b506000918101602001919091529392505050565b6000806000606084860312156102b257600080fd5b83516001600160401b038111156102c857600080fd5b6102d4868287016101fa565b602086015190945090506001600160401b038111156102f257600080fd5b6102fe868287016101fa565b604086015190935090506001600160a01b038116811461031d57600080fd5b809150509250925092565b600181811c9082168061033c57607f821691505b60208210810361035c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103ac57806000526020600020601f840160051c810160208510156103895750805b601f840160051c820191505b818110156103a95760008155600101610395565b50505b505050565b81516001600160401b038111156103ca576103ca6101e4565b6103de816103d88454610328565b84610362565b6020601f82116001811461041257600083156103fa5750848201515b600019600385901b1c1916600184901b1784556103a9565b600084815260208120601f198516915b828110156104425787850151825560209485019460019092019101610422565b50848210156104605786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156104c0578085048111156104a4576104a461046f565b60018416156104b257908102905b60019390931c928002610489565b935093915050565b6000826104d757506001610568565b816104e457506000610568565b81600181146104fa576002811461050457610520565b6001915050610568565b60ff8411156105155761051561046f565b50506001821b610568565b5060208310610133831016604e8410600b8410161715610543575081810a610568565b6105506000198484610485565b80600019048211156105645761056461046f565b0290505b92915050565b600061057d60ff8416836104c8565b9392505050565b80820281158282048414176105685761056861046f565b808201808211156105685761056861046f565b60805160a051610a416105d260003960006101470152600060ff0152610a416000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101a45780638da5cb5b146101ae57806395d89b41146101c9578063a9059cbb146101d1578063dd62ed3e146101e4578063f2fde38b1461021d57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461012f578063313ce5671461014257806370a082311461017b575b600080fd5b6100c1610230565b6040516100ce919061086f565b60405180910390f35b6100ea6100e53660046108d9565b6102be565b60405190151581526020016100ce565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100ce565b6100ea61013d366004610903565b610380565b6101697f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100ce565b610121610189366004610940565b6001600160a01b031660009081526003602052604090205490565b6101ac6103a2565b005b6000546040516001600160a01b0390911681526020016100ce565b6100c16103b6565b6100ea6101df3660046108d9565b6103c3565b6101216101f2366004610962565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6101ac61022b366004610940565b6103d9565b6006805461023d90610995565b80601f016020809104026020016040519081016040528092919081815260200182805461026990610995565b80156102b65780601f1061028b576101008083540402835291602001916102b6565b820191906000526020600020905b81548152906001019060200180831161029957829003601f168201915b505050505081565b60006001600160a01b03831661031b5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420617070726f766520746865203020616464726573730000000060448201526064015b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b92915050565b600061038d843384610417565b6103988484846104c5565b5060019392505050565b6103aa61069f565b6103b460006106cc565b565b6005805461023d90610995565b60006103d03384846104c5565b50600192915050565b6103e161069f565b6001600160a01b03811661040b57604051631e4fbdf760e01b815260006004820152602401610312565b610414816106cc565b50565b6001600160a01b03838116600090815260046020908152604080832093861683529290522054600019811480159061045d57506002546001600160a01b03848116911614155b156104bf57818110156104b25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610312565b6104bf848484840361071c565b50505050565b6001600160a01b0382166105145760405162461bcd60e51b815260206004820152601660248201527563616e6e6f74206265207a65726f206164647265737360501b6044820152606401610312565b816001600160a01b0316836001600160a01b0316036105755760405162461bcd60e51b815260206004820152601f60248201527f796f752063616e6e6f74207472616e7366657220746f20796f757273656c66006044820152606401610312565b61057f8383610838565b6105f15760405162461bcd60e51b815260206004820152603d60248201527f5468697320746f6b656e206973206e6f74206c61756e6368656420616e64206360448201527f616e6e6f74206265206c6973746564206f6e206465786573207965742e0000006064820152608401610312565b6001600160a01b038316600090815260036020526040812080548392906106199084906109e5565b90915550506001600160a01b038216600090815260036020526040812080548392906106469084906109f8565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161069291815260200190565b60405180910390a3505050565b6000546001600160a01b031633146103b45760405163118cdaa760e01b8152336004820152602401610312565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03831661077e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610312565b6001600160a01b0382166107df5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610312565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610692565b600080546001600160a01b038481169116148061086257506000546001600160a01b038381169116145b156103d05750600161037a565b602081526000825180602084015260005b8181101561089d5760208186018101516040868401015201610880565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108d457600080fd5b919050565b600080604083850312156108ec57600080fd5b6108f5836108bd565b946020939093013593505050565b60008060006060848603121561091857600080fd5b610921846108bd565b925061092f602085016108bd565b929592945050506040919091013590565b60006020828403121561095257600080fd5b61095b826108bd565b9392505050565b6000806040838503121561097557600080fd5b61097e836108bd565b915061098c602084016108bd565b90509250929050565b600181811c908216806109a957607f821691505b6020821081036109c957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561037a5761037a6109cf565b8082018082111561037a5761037a6109cf56fea2646970667358221220b0f7b47a720e0a883bf91b4fc632f8ef20b0b3b1d74db3d80fa7ee49aaa401af64736f6c634300081c0033";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    version_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      version_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    version_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, version_, overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
