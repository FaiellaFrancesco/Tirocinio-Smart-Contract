/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MYTOKEN,
  MYTOKENInterface,
} from "../../../medium/0x7aab1ddb08f8371e53efc25e6bd71a1d064dabf2.sol/MYTOKEN";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e28380380610e2883398101604081905261002f9161017f565b600061003b8582610291565b5060016100488482610291565b506002805460ff191660ff841690811790915561006690600a61044e565b6100709082610461565b600381905533600081815260056020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050610478565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100ed57600080fd5b81516001600160401b03811115610106576101066100c6565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610134576101346100c6565b60405281815283820160200185101561014c57600080fd5b60005b8281101561016b5760208186018101518383018201520161014f565b506000918101602001919091529392505050565b6000806000806080858703121561019557600080fd5b84516001600160401b038111156101ab57600080fd5b6101b7878288016100dc565b602087015190955090506001600160401b038111156101d557600080fd5b6101e1878288016100dc565b935050604085015160ff811681146101f857600080fd5b6060959095015193969295505050565b600181811c9082168061021c57607f821691505b60208210810361023c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028c57806000526020600020601f840160051c810160208510156102695750805b601f840160051c820191505b818110156102895760008155600101610275565b50505b505050565b81516001600160401b038111156102aa576102aa6100c6565b6102be816102b88454610208565b84610242565b6020601f8211600181146102f257600083156102da5750848201515b600019600385901b1c1916600184901b178455610289565b600084815260208120601f198516915b828110156103225787850151825560209485019460019092019101610302565b50848210156103405786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103a0578085048111156103845761038461034f565b600184161561039257908102905b60019390931c928002610369565b935093915050565b6000826103b757506001610448565b816103c457506000610448565b81600181146103da57600281146103e457610400565b6001915050610448565b60ff8411156103f5576103f561034f565b50506001821b610448565b5060208310610133831016604e8410600b8410161715610423575081810a610448565b6104306000198484610365565b80600019048211156104445761044461034f565b0290505b92915050565b600061045a83836103a8565b9392505050565b80820281158282048414176104485761044861034f565b6109a1806104876000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806347b5dd541161007157806347b5dd541461015857806355d0a1d01461016157806370a082311461016957806395d89b4114610189578063a9059cbb14610191578063dd62ed3e146101a457600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101cf565b6040516100ce9190610729565b60405180910390f35b6100ea6100e5366004610793565b61025d565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f3660046107bd565b6102ca565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6101566101513660046107fa565b610506565b005b61010360045481565b600454610103565b610103610177366004610813565b60056020526000908152604090205481565b6100c1610637565b6100ea61019f366004610793565b610644565b6101036101b2366004610835565b600660209081526000928352604080842090915290825290205481565b600080546101dc90610868565b80601f016020809104026020016040519081016040528092919081815260200182805461020890610868565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102b89086815260200190565b60405180910390a35060015b92915050565b60006001600160a01b0384166103375760405162461bcd60e51b815260206004820152602760248201527f4d59544f4b454e3a207472616e736665722066726f6d20746865207a65726f206044820152666164647265737360c81b60648201526084015b60405180910390fd5b6001600160a01b03831661035d5760405162461bcd60e51b815260040161032e906108a2565b6001600160a01b0384166000908152600560205260409020548211156103955760405162461bcd60e51b815260040161032e906108e7565b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561041b5760405162461bcd60e51b815260206004820152602a60248201527f4d59544f4b454e3a207472616e7366657220616d6f756e74206578636565647360448201526920616c6c6f77616e636560b01b606482015260840161032e565b6001600160a01b03841660009081526005602052604081208054849290610443908490610945565b90915550506001600160a01b03831660009081526005602052604081208054849290610470908490610958565b90915550506001600160a01b0384166000908152600660209081526040808320338452909152812080548492906104a8908490610945565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104f491815260200190565b60405180910390a35060019392505050565b336000908152600560205260409020548111156105715760405162461bcd60e51b8152602060048201526024808201527f4d59544f4b454e3a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b606482015260840161032e565b3360009081526005602052604081208054839290610590908490610945565b9250508190555080600360008282546105a99190610945565b9250508190555080600460008282546105c29190610958565b909155505060405181815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a360405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250565b600180546101dc90610868565b60006001600160a01b03831661066c5760405162461bcd60e51b815260040161032e906108a2565b3360009081526005602052604090205482111561069b5760405162461bcd60e51b815260040161032e906108e7565b33600090815260056020526040812080548492906106ba908490610945565b90915550506001600160a01b038316600090815260056020526040812080548492906106e7908490610958565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102b8565b602081526000825180602084015260005b81811015610757576020818601810151604086840101520161073a565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461078e57600080fd5b919050565b600080604083850312156107a657600080fd5b6107af83610777565b946020939093013593505050565b6000806000606084860312156107d257600080fd5b6107db84610777565b92506107e960208501610777565b929592945050506040919091013590565b60006020828403121561080c57600080fd5b5035919050565b60006020828403121561082557600080fd5b61082e82610777565b9392505050565b6000806040838503121561084857600080fd5b61085183610777565b915061085f60208401610777565b90509250929050565b600181811c9082168061087c57607f821691505b60208210810361089c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f4d59544f4b454e3a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526028908201527f4d59544f4b454e3a207472616e7366657220616d6f756e7420657863656564736040820152672062616c616e636560c01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102c4576102c461092f565b808201808211156102c4576102c461092f56fea26469706673582212203342adf2beb78e6bb82b268f4eb894617715a6eecfc8f2e14c8b5be6c591571064736f6c634300081e0033";

type MYTOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MYTOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MYTOKEN__factory extends ContractFactory {
  constructor(...args: MYTOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    ) as Promise<
      MYTOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MYTOKEN__factory {
    return super.connect(runner) as MYTOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MYTOKENInterface {
    return new Interface(_abi) as MYTOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MYTOKEN {
    return new Contract(address, _abi, runner) as unknown as MYTOKEN;
  }
}
