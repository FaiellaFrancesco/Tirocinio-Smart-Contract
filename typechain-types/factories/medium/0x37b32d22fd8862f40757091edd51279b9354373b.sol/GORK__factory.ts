/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GORK,
  GORKInterface,
} from "../../../medium/0x37b32d22fd8862f40757091edd51279b9354373b.sol/GORK";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260146006556014600755600060085560006009556017600a556017600b556017600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fa56ea006200036a565b601155620000a66009600a62000352565b620000b69063fa56ea006200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611dc180620003946000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103d5578063bf474bed146103f5578063c9567bf91461040b578063d34628cc14610420578063dd62ed3e14610440578063ec1f3f631461048657600080fd5b8063751039fc1461031f5780637d1db4a5146103345780638cd4426d1461034a5780638da5cb5b1461036a5780638f9a55c01461039257806395d89b41146103a857600080fd5b8063313ce56711610108578063313ce5671461024a57806331c2d847146102665780633bbac5791461028657806351bc3c85146102bf57806370a08231146102d4578063715018a61461030a57600080fd5b806306fdde031461015b578063095ea7b3146101aa5780630faee56f146101da578063109daa99146101fe57806318160ddd1461021557806323b872dd1461022a57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506040805180820190915260148152734772656174657374204f662052617265204b656b60601b60208201525b6040516101a19190611870565b60405180910390f35b3480156101b657600080fd5b506101ca6101c53660046118e7565b6104a6565b60405190151581526020016101a1565b3480156101e657600080fd5b506101f060125481565b6040519081526020016101a1565b34801561020a57600080fd5b506102136104bd565b005b34801561022157600080fd5b506101f061052d565b34801561023657600080fd5b506101ca610245366004611913565b61054f565b34801561025657600080fd5b50604051600981526020016101a1565b34801561027257600080fd5b5061021361028136600461196a565b6105b8565b34801561029257600080fd5b506101ca6102a1366004611a2f565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102cb57600080fd5b50610213610644565b3480156102e057600080fd5b506101f06102ef366004611a2f565b6001600160a01b031660009081526001602052604090205490565b34801561031657600080fd5b506102136106aa565b34801561032b57600080fd5b5061021361071e565b34801561034057600080fd5b506101f0600f5481565b34801561035657600080fd5b506102136103653660046118e7565b6107ce565b34801561037657600080fd5b506000546040516001600160a01b0390911681526020016101a1565b34801561039e57600080fd5b506101f060105481565b3480156103b457600080fd5b50604080518082019091526004815263474f524b60e01b6020820152610194565b3480156103e157600080fd5b506101ca6103f03660046118e7565b6108fb565b34801561040157600080fd5b506101f060115481565b34801561041757600080fd5b50610213610908565b34801561042c57600080fd5b5061021361043b36600461196a565b610cc5565b34801561044c57600080fd5b506101f061045b366004611a4c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561049257600080fd5b506102136104a1366004611a85565b610d4d565b60006104b3338484610d94565b5060015b92915050565b6000546001600160a01b031633146104f05760405162461bcd60e51b81526004016104e790611a9e565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061053b6009600a611bcd565b61054a906461f313f880611bdc565b905090565b600061055c848484610eb8565b6105ae84336105a985604051806060016040528060288152602001611d64602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114d3565b610d94565b5060019392505050565b6000546001600160a01b031633146105e25760405162461bcd60e51b81526004016104e790611a9e565b60005b81518110156106405760006004600084848151811061060657610606611bf3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105e5565b5050565b6005546001600160a01b0316336001600160a01b03161461066457600080fd5b30600090815260016020526040902054801580159061068c5750601454600160b01b900460ff165b1561069a5761069a8161150d565b4780156106405761064081611687565b6000546001600160a01b031633146106d45760405162461bcd60e51b81526004016104e790611a9e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016104e790611a9e565b6107546009600a611bcd565b610763906461f313f880611bdc565b600f556107726009600a611bcd565b610781906461f313f880611bdc565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b16009600a611bcd565b6107c0906461f313f880611bdc565b604051908152602001610523565b6000546001600160a01b031633146107f85760405162461bcd60e51b81526004016104e790611a9e565b6040516370a0823160e01b815230600482015260009061087c906064906108769085906001600160a01b038816906370a0823190602401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611c09565b906116c1565b9061174a565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611c22565b50505050565b60006104b3338484610eb8565b6000546001600160a01b031633146109325760405162461bcd60e51b81526004016104e790611a9e565b601454600160a01b900460ff161561098c5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104e7565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109d69030906109c76009600a611bcd565b6105a9906461f313f880611bdc565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190611c44565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad39190611c44565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b449190611c44565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610b8c816001600160a01b031660009081526001602052604090205490565b600080610ba16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c09573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c2e9190611c61565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab9190611c22565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610cef5760405162461bcd60e51b81526004016104e790611a9e565b60005b815181101561064057600160046000848481518110610d1357610d13611bf3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cf2565b6005546001600160a01b0316336001600160a01b031614610d6d57600080fd5b6008548111158015610d8157506009548111155b610d8a57600080fd5b6008819055600955565b6001600160a01b038316610df65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e7565b6001600160a01b038216610e575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f1c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e7565b6001600160a01b038216610f7e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e7565b60008111610fe05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104e7565b600080546001600160a01b0385811691161480159061100d57506000546001600160a01b03848116911614155b801561102757506005546001600160a01b03848116911614155b15611390576001600160a01b03841660009081526004602052604090205460ff1615801561106e57506001600160a01b03831660009081526004602052604090205460ff16155b61107757600080fd5b600e546000036110aa576110a76064610876600a54600e541161109c576006546110a0565b6008545b85906116c1565b90505b600e54156110cf576110cc6064610876600d54856116c190919063ffffffff16565b90505b6014546001600160a01b0385811691161480156110fa57506013546001600160a01b03848116911614155b801561111f57506001600160a01b03831660009081526003602052604090205460ff16155b1561122457600f548211156111765760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104e7565b60105482611199856001600160a01b031660009081526001602052604090205490565b6111a39190611c8f565b11156111f15760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104e7565b61120c6064610876600a54600e541161109c576006546110a0565b600e8054919250600061121e83611ca2565b91905055505b6014546001600160a01b03848116911614801561124a57506001600160a01b0384163014155b15611277576112746064610876600b54600e541161126a576007546110a0565b60095485906116c1565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156112ae57506014546001600160a01b038581169116145b80156112c35750601454600160b01b900460ff165b80156112d0575060115481115b80156112df5750600c54600e54115b1561138e576016544311156112f45760006015555b6003601554106113465760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104e7565b61136361135e846113598460125461178c565b61178c565b61150d565b4780156113735761137347611687565b6015805490600061138383611ca2565b909155505043601655505b505b801561140a57306000908152600160205260409020546113b090826117a1565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114019085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461142d9083611800565b6001600160a01b0385166000908152600160205260409020556114726114538383611800565b6001600160a01b038516600090815260016020526040902054906117a1565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114bc8585611800565b60405190815260200160405180910390a350505050565b600081848411156114f75760405162461bcd60e51b81526004016104e79190611870565b5060006115048486611cbb565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061155557611555611bf3565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156115ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d29190611c44565b816001815181106115e5576115e5611bf3565b6001600160a01b03928316602091820292909201015260135461160b9130911684610d94565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611644908590600090869030904290600401611cce565b600060405180830381600087803b15801561165e57600080fd5b505af1158015611672573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610640573d6000803e3d6000fd5b6000826000036116d3575060006104b7565b60006116df8385611bdc565b9050826116ec8583611d41565b146117435760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104e7565b9392505050565b600061174383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611842565b600081831161179b5782611743565b50919050565b6000806117ae8385611c8f565b9050838110156117435760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104e7565b600061174383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114d3565b600081836118635760405162461bcd60e51b81526004016104e79190611870565b5060006115048486611d41565b60006020808352835180602085015260005b8181101561189e57858101830151858201604001528201611882565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118d457600080fd5b50565b80356118e2816118bf565b919050565b600080604083850312156118fa57600080fd5b8235611905816118bf565b946020939093013593505050565b60008060006060848603121561192857600080fd5b8335611933816118bf565b92506020840135611943816118bf565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561197d57600080fd5b823567ffffffffffffffff8082111561199557600080fd5b818501915085601f8301126119a957600080fd5b8135818111156119bb576119bb611954565b8060051b604051601f19603f830116810181811085821117156119e0576119e0611954565b6040529182528482019250838101850191888311156119fe57600080fd5b938501935b82851015611a2357611a14856118d7565b84529385019392850192611a03565b98975050505050505050565b600060208284031215611a4157600080fd5b8135611743816118bf565b60008060408385031215611a5f57600080fd5b8235611a6a816118bf565b91506020830135611a7a816118bf565b809150509250929050565b600060208284031215611a9757600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b24578160001904821115611b0a57611b0a611ad3565b80851615611b1757918102915b93841c9390800290611aee565b509250929050565b600082611b3b575060016104b7565b81611b48575060006104b7565b8160018114611b5e5760028114611b6857611b84565b60019150506104b7565b60ff841115611b7957611b79611ad3565b50506001821b6104b7565b5060208310610133831016604e8410600b8410161715611ba7575081810a6104b7565b611bb18383611ae9565b8060001904821115611bc557611bc5611ad3565b029392505050565b600061174360ff841683611b2c565b80820281158282048414176104b7576104b7611ad3565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c1b57600080fd5b5051919050565b600060208284031215611c3457600080fd5b8151801515811461174357600080fd5b600060208284031215611c5657600080fd5b8151611743816118bf565b600080600060608486031215611c7657600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104b7576104b7611ad3565b600060018201611cb457611cb4611ad3565b5060010190565b818103818111156104b7576104b7611ad3565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d205784516001600160a01b031683529383019391830191600101611cfb565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d5e57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220fb33ee73e16dcb299b448404110f7ebacb6c8bc817a401acc98e32bf1dad252164736f6c63430008170033";

type GORKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GORKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GORK__factory extends ContractFactory {
  constructor(...args: GORKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GORK> {
    return super.deploy(overrides || {}) as Promise<GORK>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GORK {
    return super.attach(address) as GORK;
  }
  override connect(signer: Signer): GORK__factory {
    return super.connect(signer) as GORK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GORKInterface {
    return new utils.Interface(_abi) as GORKInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GORK {
    return new Contract(address, _abi, signerOrProvider) as GORK;
  }
}
