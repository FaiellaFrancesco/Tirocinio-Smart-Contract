/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NOVARIC,
  NOVARICInterface,
} from "../../../medium/0x8faf4f82887165cc78358a8f13fd4881f3f3ff73.sol/NOVARIC";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MODE_NORMAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODE_OWNER_ONLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODE_RESTRICTED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_mode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mode",
        type: "uint256",
      },
    ],
    name: "setMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f9e380380610f9e83398101604081905261002f916101ee565b604051806040016040528060078152602001664e4f564152494360c81b8152506040518060400160405280600381526020016209cacb60eb1b815250816003908161007a91906102a6565b50600461008782826102a6565b5050506100a061009b6100b560201b60201c565b6100b9565b6100aa338261010b565b50600060065561038b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101655760405162461bcd60e51b815260206004820152601b60248201527f45524332303a206d696e7420746f207a65726f20616464726573730000000000604482015260640160405180910390fd5b80600260008282546101779190610364565b90915550506001600160a01b038216600090815260208190526040812080548392906101a4908490610364565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006020828403121561020057600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061023157607f821691505b60208210810361025157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102a157806000526020600020601f840160051c8101602085101561027e5750805b601f840160051c820191505b8181101561029e576000815560010161028a565b50505b505050565b81516001600160401b038111156102bf576102bf610207565b6102d3816102cd845461021d565b84610257565b6020601f82116001811461030757600083156102ef5750848201515b600019600385901b1c1916600184901b17845561029e565b600084815260208120601f198516915b828110156103375787850151825560209485019460019092019101610317565b50848210156103555786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561038557634e487b7160e01b600052601160045260246000fd5b92915050565b610c048061039a6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806395d89b4111610097578063d6d27bf111610066578063d6d27bf1146101f2578063d72dd3b4146101fa578063dd62ed3e1461020f578063f2fde38b1461024857600080fd5b806395d89b41146101c6578063a9059cbb146101ce578063b455c093146101e1578063c5c03af3146101e957600080fd5b8063313ce567116100d3578063313ce5671461016b5780633af3d7831461017a57806370a08231146101825780638da5cb5b146101ab57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61025b565b60405161011a9190610989565b60405180910390f35b6101366101313660046109f3565b6102ed565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610a1d565b610304565b6040516012815260200161011a565b61014a600081565b61014a610190366004610a5a565b6001600160a01b031660009081526020819052604090205490565b6005546040516001600160a01b03909116815260200161011a565b61010d61039c565b6101366101dc3660046109f3565b6103ab565b61014a600181565b61014a60065481565b61014a600281565b61020d610208366004610a7c565b610438565b005b61014a61021d366004610a95565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61020d610256366004610a5a565b6104e0565b60606003805461026a90610ac8565b80601f016020809104026020016040519081016040528092919081815260200182805461029690610ac8565b80156102e35780601f106102b8576101008083540402835291602001916102e3565b820191906000526020600020905b8154815290600101906020018083116102c657829003601f168201915b5050505050905090565b60006102fa3384846105ab565b5060015b92915050565b60008383600160065403610365576005546001600160a01b038381169116148061033b57506005546001600160a01b038281169116145b6103605760405162461bcd60e51b815260040161035790610b02565b60405180910390fd5b610387565b6002600654036103875760405162461bcd60e51b815260040161035790610b47565b6103928686866106b9565b9695505050505050565b60606004805461026a90610ac8565b60003383600160065403610403576005546001600160a01b03838116911614806103e257506005546001600160a01b038281169116145b6103fe5760405162461bcd60e51b815260040161035790610b02565b610425565b6002600654036104255760405162461bcd60e51b815260040161035790610b47565b61042f85856106db565b95945050505050565b6005546001600160a01b031633146104925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610357565b60028111156104db5760405162461bcd60e51b81526020600482015260156024820152744e4f56415249433a20496e76616c6964206d6f646560581b6044820152606401610357565b600655565b6005546001600160a01b0316331461053a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610357565b6001600160a01b03811661059f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610357565b6105a8816106e8565b50565b6001600160a01b0383166106015760405162461bcd60e51b815260206004820181905260248201527f45524332303a20617070726f76652066726f6d207a65726f20616464726573736044820152606401610357565b6001600160a01b0382166106575760405162461bcd60e51b815260206004820152601e60248201527f45524332303a20617070726f766520746f207a65726f206164647265737300006044820152606401610357565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106c684338461073a565b6106d18484846107ca565b5060019392505050565b60006102fa3384846107ca565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054818110156107b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610357565b6107c484846107bf8585610ba8565b6105ab565b50505050565b6001600160a01b03831661082a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a207472616e736665722066726f6d207a65726f206164647265736044820152607360f81b6064820152608401610357565b6001600160a01b0382166108805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a207472616e7366657220746f207a65726f2061646472657373006044820152606401610357565b6001600160a01b0383166000908152602081905260409020548111156108e85760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742062616c616e636500000000006044820152606401610357565b6001600160a01b03831660009081526020819052604081208054839290610910908490610ba8565b90915550506001600160a01b0382166000908152602081905260408120805483929061093d908490610bbb565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106ac91815260200190565b602081526000825180602084015260005b818110156109b7576020818601810151604086840101520161099a565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146109ee57600080fd5b919050565b60008060408385031215610a0657600080fd5b610a0f836109d7565b946020939093013593505050565b600080600060608486031215610a3257600080fd5b610a3b846109d7565b9250610a49602085016109d7565b929592945050506040919091013590565b600060208284031215610a6c57600080fd5b610a75826109d7565b9392505050565b600060208284031215610a8e57600080fd5b5035919050565b60008060408385031215610aa857600080fd5b610ab1836109d7565b9150610abf602084016109d7565b90509250929050565b600181811c90821680610adc57607f821691505b602082108103610afc57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f4e4f56415249433a204f6e6c79206f776e6572207472616e736665727320616c6040820152641b1bddd95960da1b606082015260800190565b6020808252602b908201527f4e4f56415249433a205472616e7366657273206172652063757272656e746c7960408201526a081c995cdd1c9a58dd195960aa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102fe576102fe610b92565b808201808211156102fe576102fe610b9256fea2646970667358221220136231cd3d41860d0d9793019991c3641861ca3d4ae96bfd27265bbe409e506c64736f6c634300081e0033";

type NOVARICConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NOVARICConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NOVARIC__factory extends ContractFactory {
  constructor(...args: NOVARICConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override deploy(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSupply, overrides || {}) as Promise<
      NOVARIC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NOVARIC__factory {
    return super.connect(runner) as NOVARIC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NOVARICInterface {
    return new Interface(_abi) as NOVARICInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NOVARIC {
    return new Contract(address, _abi, runner) as unknown as NOVARIC;
  }
}
