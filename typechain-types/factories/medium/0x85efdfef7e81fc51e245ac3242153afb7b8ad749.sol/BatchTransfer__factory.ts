/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BatchTransfer,
  BatchTransferInterface,
} from "../../../medium/0x85efdfef7e81fc51e245ac3242153afb7b8ad749.sol/BatchTransfer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferTokenByTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50600080546001600160a01b031916331790556109f1806100316000396000f3fe60806040526004361061004e5760003560e01c8063828105f51461005a578063894760691461007c5780638da5cb5b1461009c578063a0ce91d8146100d8578063e086e5ec146100eb57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007a61007536600461080f565b610100565b005b34801561008857600080fd5b5061007a610097366004610895565b61026c565b3480156100a857600080fd5b506000546100bc906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007a6100e63660046108b7565b610425565b3480156100f757600080fd5b5061007a610685565b8281146101465760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064015b60405180910390fd5b60005b8381101561026457856001600160a01b03166323b872dd3387878581811061017357610173610928565b90506020020160208101906101889190610895565b86868681811061019a5761019a610928565b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152506020909102013560448201526064016020604051808303816000875af11580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a919061093e565b61025c5760405162461bcd60e51b8152602060048201526013602482015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b604482015260640161013d565b600101610149565b505050505050565b6000546001600160a01b031633146102b25760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161013d565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610960565b9050600081116103665760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e20746f20776974686472617760601b604482015260640161013d565b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd919061093e565b6104215760405162461bcd60e51b815260206004820152601560248201527415da5d1a191c985dc81d1bdad95b8819985a5b1959605a1b604482015260640161013d565b5050565b8281146104665760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161013d565b6000805b828110156104a05783838281811061048457610484610928565b9050602002013582610496919061098f565b915060010161046a565b50803410156104e95760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b604482015260640161013d565b60005b848110156105d457600086868381811061050857610508610928565b905060200201602081019061051d9190610895565b6001600160a01b031685858481811061053857610538610928565b9050602002013560405160006040518083038185875af1925050503d806000811461057f576040519150601f19603f3d011682016040523d82523d6000602084013e610584565b606091505b50509050806105cb5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161013d565b506001016104ec565b5060006105e182346109a8565b9050801561026457600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610636576040519150601f19603f3d011682016040523d82523d6000602084013e61063b565b606091505b505090508061067c5760405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b604482015260640161013d565b50505050505050565b6000546001600160a01b031633146106cb5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161013d565b478061070e5760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b604482015260640161013d565b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461075b576040519150601f19603f3d011682016040523d82523d6000602084013e610760565b606091505b50509050806104215760405162461bcd60e51b815260206004820152601360248201527215da5d1a191c985dc81155120819985a5b1959606a1b604482015260640161013d565b80356001600160a01b03811681146107be57600080fd5b919050565b60008083601f8401126107d557600080fd5b50813567ffffffffffffffff8111156107ed57600080fd5b6020830191508360208260051b850101111561080857600080fd5b9250929050565b60008060008060006060868803121561082757600080fd5b610830866107a7565b9450602086013567ffffffffffffffff81111561084c57600080fd5b610858888289016107c3565b909550935050604086013567ffffffffffffffff81111561087857600080fd5b610884888289016107c3565b969995985093965092949392505050565b6000602082840312156108a757600080fd5b6108b0826107a7565b9392505050565b600080600080604085870312156108cd57600080fd5b843567ffffffffffffffff8111156108e457600080fd5b6108f0878288016107c3565b909550935050602085013567ffffffffffffffff81111561091057600080fd5b61091c878288016107c3565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561095057600080fd5b815180151581146108b057600080fd5b60006020828403121561097257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109a2576109a2610979565b92915050565b818103818111156109a2576109a261097956fea2646970667358221220f7e3777e4195a0c1196bde492d751f13f907e165023d1f6b5e0ea7661fe4399964736f6c634300081e0033";

type BatchTransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchTransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchTransfer__factory extends ContractFactory {
  constructor(...args: BatchTransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BatchTransfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BatchTransfer__factory {
    return super.connect(runner) as BatchTransfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTransferInterface {
    return new Interface(_abi) as BatchTransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchTransfer {
    return new Contract(address, _abi, runner) as unknown as BatchTransfer;
  }
}
