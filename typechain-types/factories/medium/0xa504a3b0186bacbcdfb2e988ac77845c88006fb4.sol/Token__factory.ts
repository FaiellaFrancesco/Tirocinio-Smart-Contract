/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xa504a3b0186bacbcdfb2e988ac77845c88006fb4.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueCYBERCABETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206119d283398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206119d283398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611662806103706000396000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a578063a9059cbb11610059578063a9059cbb146102a1578063acbd58ad146102c1578063dd62ed3e146102d6578063ea414b281461031c57600080fd5b8063715018a61461021c5780638a8c523c146102335780638da5cb5b1461024857806395d89b411461027057600080fd5b806318160ddd116100c657806318160ddd1461019557806323b872dd146101aa578063313ce567146101ca57806370a08231146101e657600080fd5b806306fdde03146100f8578063095ea7b3146101415780630faee56f1461017157600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5060408051808201909152600e81526d5465736c6120526f626f7461786960901b60208201525b6040516101389190611230565b60405180910390f35b34801561014d57600080fd5b5061016161015c366004611293565b61033c565b6040519015158152602001610138565b34801561017d57600080fd5b5061018760095481565b604051908152602001610138565b3480156101a157600080fd5b50610187610353565b3480156101b657600080fd5b506101616101c53660046112bf565b610374565b3480156101d657600080fd5b5060405160098152602001610138565b3480156101f257600080fd5b50610187610201366004611300565b6001600160a01b031660009081526001602052604090205490565b34801561022857600080fd5b50610231610432565b005b34801561023f57600080fd5b506102316104af565b34801561025457600080fd5b506000546040516001600160a01b039091168152602001610138565b34801561027c57600080fd5b5060408051808201909152600881526721aca122a921a0a160c11b602082015261012b565b3480156102ad57600080fd5b506101616102bc366004611293565b61086a565b3480156102cd57600080fd5b50610231610877565b3480156102e257600080fd5b506101876102f136600461131d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032857600080fd5b50610231610337366004611300565b6108da565b6000610349338484610918565b5060015b92915050565b60006103616009600a611453565b61036f906319133850611462565b905090565b6000610381848484610a3c565b6004546001600160a01b031633148015906103d15750600b546001600160a01b03858116911614806103be57506001600160a01b03831661dead14155b806103d157506001600160a01b03841630145b1561042857610428843361042385604051806060016040528060288152602001611605602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ea4565b610918565b5060019392505050565b6000546001600160a01b031633146104655760405162461bcd60e51b815260040161045c90611479565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104d95760405162461bcd60e51b815260040161045c90611479565b600b54600160a01b900460ff16156105335760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161045c565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561057c9130919061056e90600990611453565b610423906319133850611462565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f391906114ae565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067991906114ae565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea91906114ae565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d7194730610732816001600160a01b031660009081526001602052604090205490565b6000806107476000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107af573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107d491906114cb565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086791906114f9565b50565b6000610349338484610a3c565b6000546001600160a01b031633146108a15760405162461bcd60e51b815260040161045c90611479565b600047116108ae57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610867573d6000803e3d6000fd5b3360009081526003602052604090205460ff166108f657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661097a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045c565b6001600160a01b0382166109db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045c565b6001600160a01b038216610b025760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045c565b60008111610b645760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161045c565b60006001600160a01b0384163014801590610b8857506001600160a01b0383163014155b15610d4657600b54600160a81b900460ff16610bcd57610bca6064610bc460075460085411610bb957600554610bbd565b6006545b8590610ede565b90610f67565b90505b600b546001600160a01b038581169116148015610bf85750600a546001600160a01b03848116911614155b8015610c1d57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3757506004546001600160a01b03848116911614155b15610c525760088054906000610c4c8361151b565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c895750600b546001600160a01b038581169116145b8015610c9e5750600b54600160b01b900460ff165b8015610cb857506004546001600160a01b03868116911614155b15610d4457843b15610d035760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161045c565b8015610d385760006009548211610d1a5781610d1e565b6009545b9050610d36818511610d305784610fa9565b81610fa9565b505b47610d4247611123565b505b505b6001600160a01b038416600090815260016020526040902054610d699083611161565b6001600160a01b038516600090815260016020526040902055610dae610d8f8383611161565b6001600160a01b038516600090815260016020526040902054906111a3565b6001600160a01b0384166000908152600160205260409020558015610e415730600090815260016020526040902054610de790826111a3565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e389085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e9e576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e8c8585611161565b60405190815260200160405180910390a35b50505050565b60008184841115610ec85760405162461bcd60e51b815260040161045c9190611230565b506000610ed58486611534565b95945050505050565b600082600003610ef05750600061034d565b6000610efc8385611462565b905082610f098583611547565b14610f605760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161045c565b9392505050565b6000610f6083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611202565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ff157610ff1611569565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561104a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106e91906114ae565b8160018151811061108157611081611569565b6001600160a01b039283166020918202929092010152600a546110a79130911684610918565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110e090859060009086903090429060040161157f565b600060405180830381600087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561115d573d6000803e3d6000fd5b5050565b6000610f6083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ea4565b6000806111b083856115f1565b905083811015610f605760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161045c565b600081836112235760405162461bcd60e51b815260040161045c9190611230565b506000610ed58486611547565b602081526000825180602084015260005b8181101561125e5760208186018101516040868401015201611241565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461086757600080fd5b600080604083850312156112a657600080fd5b82356112b18161127e565b946020939093013593505050565b6000806000606084860312156112d457600080fd5b83356112df8161127e565b925060208401356112ef8161127e565b929592945050506040919091013590565b60006020828403121561131257600080fd5b8135610f608161127e565b6000806040838503121561133057600080fd5b823561133b8161127e565b9150602083013561134b8161127e565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113a75780850481111561138b5761138b611356565b600184161561139957908102905b60019390931c928002611370565b935093915050565b6000826113be5750600161034d565b816113cb5750600061034d565b81600181146113e157600281146113eb57611407565b600191505061034d565b60ff8411156113fc576113fc611356565b50506001821b61034d565b5060208310610133831016604e8410600b841016171561142a575081810a61034d565b611437600019848461136c565b806000190482111561144b5761144b611356565b029392505050565b6000610f6060ff8416836113af565b808202811582820484141761034d5761034d611356565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114c057600080fd5b8151610f608161127e565b6000806000606084860312156114e057600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561150b57600080fd5b81518015158114610f6057600080fd5b60006001820161152d5761152d611356565b5060010190565b8181038181111561034d5761034d611356565b60008261156457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115d15783516001600160a01b03168352602093840193909201916001016115aa565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561034d5761034d61135656fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220db0e596c0b1d4178e8ba40e7037ed4366d7b4fcfc08accc0f21d3388b442756e64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
