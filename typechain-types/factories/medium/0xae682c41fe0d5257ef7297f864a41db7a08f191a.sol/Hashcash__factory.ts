/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Hashcash,
  HashcashInterface,
} from "../../../medium/0xae682c41fe0d5257ef7297f864a41db7a08f191a.sol/Hashcash";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "Launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526018600655601860075560006008556000600955601c600a55601c600b55601a600c556000600d556009600a6200003c91906200033f565b6200004d906401f580664062000357565b600e556200005e6009600a6200033f565b6200006f906401f580664062000357565b600f55620000806009600a6200033f565b620000909063fac0332062000357565b601055620000a16009600a6200033f565b620000b19063fac0332062000357565b6011556013805461ffff60a81b1916905560006014819055601581905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200012d6009600a6200033f565b6200013e906461f313f88062000357565b336000908152600160208190526040822092909255600390620001696000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001c83390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002026009600a6200033f565b62000213906461f313f88062000357565b60405190815260200160405180910390a362000371565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002815781600019048211156200026557620002656200022a565b808516156200027357918102915b93841c939080029062000245565b509250929050565b6000826200029a5750600162000339565b81620002a95750600062000339565b8160018114620002c25760028114620002cd57620002ed565b600191505062000339565b60ff841115620002e157620002e16200022a565b50506001821b62000339565b5060208310610133831016604e8410600b841016171562000312575081810a62000339565b6200031e838362000240565b80600019048211156200033557620003356200022a565b0290505b92915050565b60006200035060ff84168362000289565b9392505050565b80820281158282048414176200033957620003396200022a565b611b2080620003816000396000f3fe6080604052600436106101395760003560e01c806370a08231116100ab5780638f9a55c01161006f5780638f9a55c01461036257806395d89b411461015c578063a9059cbb14610378578063bf474bed14610398578063d34628cc146103ae578063dd62ed3e146103ce57600080fd5b806370a08231146102c4578063715018a6146102fa578063751039fc1461030f5780637d1db4a5146103245780638da5cb5b1461033a57600080fd5b806323b872dd116100fd57806323b872dd14610205578063313ce5671461022557806331c2d847146102415780633bbac5791461026157806351bc3c851461029a5780636fc3eaec146102af57600080fd5b806302ac81681461014557806306fdde031461015c578063095ea7b31461019c5780630faee56f146101cc57806318160ddd146101f057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5061015a610414565b005b34801561016857600080fd5b506040805180820182526008815267090c2e6d0c6c2e6d60c31b602082015290516101939190611607565b60405180910390f35b3480156101a857600080fd5b506101bc6101b736600461167a565b610815565b6040519015158152602001610193565b3480156101d857600080fd5b506101e260115481565b604051908152602001610193565b3480156101fc57600080fd5b506101e261082c565b34801561021157600080fd5b506101bc6102203660046116a6565b61084e565b34801561023157600080fd5b5060405160098152602001610193565b34801561024d57600080fd5b5061015a61025c3660046116fd565b6108b7565b34801561026d57600080fd5b506101bc61027c3660046117c2565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102a657600080fd5b5061015a61094d565b3480156102bb57600080fd5b5061015a61099c565b3480156102d057600080fd5b506101e26102df3660046117c2565b6001600160a01b031660009081526001602052604090205490565b34801561030657600080fd5b5061015a6109c9565b34801561031b57600080fd5b5061015a610a3d565b34801561033057600080fd5b506101e2600e5481565b34801561034657600080fd5b506000546040516001600160a01b039091168152602001610193565b34801561036e57600080fd5b506101e2600f5481565b34801561038457600080fd5b506101bc61039336600461167a565b610af2565b3480156103a457600080fd5b506101e260105481565b3480156103ba57600080fd5b5061015a6103c93660046116fd565b610aff565b3480156103da57600080fd5b506101e26103e93660046117df565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000546001600160a01b031633146104475760405162461bcd60e51b815260040161043e90611818565b60405180910390fd5b601354600160a01b900460ff16156104a15760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161043e565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556104d43033600019610b91565b61050d3061039360646105076062610501336001600160a01b031660009081526001602052604090205490565b90610cb5565b90610d3e565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610585919061184d565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b919061184d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c919061184d565b601380546001600160a01b0319166001600160a01b039283161790556012546106aa91309116600019610b91565b6012546001600160a01b031663f305d71947306106dc816001600160a01b031660009081526001602052604090205490565b6000806106f16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610759573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061077e919061186a565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190611898565b506013805462ff00ff60a01b19166201000160a01b179055565b6000610822338484610b91565b5060015b92915050565b600061083a6009600a6119b4565b610849906461f313f8806119c3565b905090565b600061085b848484610d80565b6108ad84336108a885604051806060016040528060288152602001611ac3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611335565b610b91565b5060019392505050565b6000546001600160a01b031633146108e15760405162461bcd60e51b815260040161043e90611818565b60005b815181101561094957600060046000848481518110610905576109056119da565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610941816119f0565b9150506108e4565b5050565b6005546001600160a01b0316336001600160a01b03161461096d57600080fd5b30600090815260016020526040902054801561098c5761098c8161136f565b47801561094957610949816114e9565b6005546001600160a01b0316336001600160a01b0316146109bc57600080fd5b476109c6816114e9565b50565b6000546001600160a01b031633146109f35760405162461bcd60e51b815260040161043e90611818565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610a675760405162461bcd60e51b815260040161043e90611818565b610a736009600a6119b4565b610a82906461f313f8806119c3565b600e55610a916009600a6119b4565b610aa0906461f313f8806119c3565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf610ad06009600a6119b4565b610adf906461f313f8806119c3565b60405190815260200160405180910390a1565b6000610822338484610d80565b6000546001600160a01b03163314610b295760405162461bcd60e51b815260040161043e90611818565b60005b815181101561094957600160046000848481518110610b4d57610b4d6119da565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610b89816119f0565b915050610b2c565b6001600160a01b038316610bf35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043e565b6001600160a01b038216610c545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600082600003610cc757506000610826565b6000610cd383856119c3565b905082610ce08583611a09565b14610d375760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161043e565b9392505050565b6000610d3783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611523565b6001600160a01b038316610de45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043e565b6001600160a01b038216610e465760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043e565b60008111610ea85760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161043e565b600080546001600160a01b03858116911614801590610ed557506000546001600160a01b03848116911614155b156111f2576001600160a01b03841660009081526004602052604090205460ff16158015610f1c57506001600160a01b03831660009081526004602052604090205460ff16155b610f2557600080fd5b610f4b6064610507600a54600d5411610f4057600654610f44565b6008545b8590610cb5565b6013549091506001600160a01b038581169116148015610f7957506012546001600160a01b03848116911614155b8015610f9e57506001600160a01b03831660009081526003602052604090205460ff16155b1561108657600e54821115610ff55760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161043e565b600f5482611018856001600160a01b031660009081526001602052604090205490565b6110229190611a2b565b11156110705760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161043e565b600d8054906000611080836119f0565b91905055505b6013546001600160a01b0384811691161480156110ac57506001600160a01b0384163014155b156110d9576110d66064610507600b54600d54116110cc57600754610f44565b6009548590610cb5565b90505b30600090815260016020526040902054601354600160a81b900460ff1615801561111057506013546001600160a01b038581169116145b80156111255750601354600160b01b900460ff165b8015611132575060105481115b80156111415750600c54600d54115b156111f0576015544311156111565760006014555b6003601454106111a85760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161043e565b6111c56111c0846111bb84601154611551565b611551565b61136f565b4780156111d5576111d5476114e9565b601480549060006111e5836119f0565b909155505043601555505b505b801561126c57306000908152600160205260409020546112129082611566565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112639085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461128f90836115c5565b6001600160a01b0385166000908152600160205260409020556112d46112b583836115c5565b6001600160a01b03851660009081526001602052604090205490611566565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61131e85856115c5565b60405190815260200160405180910390a350505050565b600081848411156113595760405162461bcd60e51b815260040161043e9190611607565b5060006113668486611a3e565b95945050505050565b6013805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106113b7576113b76119da565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611410573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611434919061184d565b81600181518110611447576114476119da565b6001600160a01b03928316602091820292909201015260125461146d9130911684610b91565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac947906114a6908590600090869030904290600401611a51565b600060405180830381600087803b1580156114c057600080fd5b505af11580156114d4573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610949573d6000803e3d6000fd5b600081836115445760405162461bcd60e51b815260040161043e9190611607565b5060006113668486611a09565b60008183116115605782610d37565b50919050565b6000806115738385611a2b565b905083811015610d375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161043e565b6000610d3783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611335565b600060208083528351808285015260005b8181101561163457858101830151858201604001528201611618565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146109c657600080fd5b803561167581611655565b919050565b6000806040838503121561168d57600080fd5b823561169881611655565b946020939093013593505050565b6000806000606084860312156116bb57600080fd5b83356116c681611655565b925060208401356116d681611655565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561171057600080fd5b823567ffffffffffffffff8082111561172857600080fd5b818501915085601f83011261173c57600080fd5b81358181111561174e5761174e6116e7565b8060051b604051601f19603f83011681018181108582111715611773576117736116e7565b60405291825284820192508381018501918883111561179157600080fd5b938501935b828510156117b6576117a78561166a565b84529385019392850192611796565b98975050505050505050565b6000602082840312156117d457600080fd5b8135610d3781611655565b600080604083850312156117f257600080fd5b82356117fd81611655565b9150602083013561180d81611655565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561185f57600080fd5b8151610d3781611655565b60008060006060848603121561187f57600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156118aa57600080fd5b81518015158114610d3757600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561190b5781600019048211156118f1576118f16118ba565b808516156118fe57918102915b93841c93908002906118d5565b509250929050565b60008261192257506001610826565b8161192f57506000610826565b8160018114611945576002811461194f5761196b565b6001915050610826565b60ff841115611960576119606118ba565b50506001821b610826565b5060208310610133831016604e8410600b841016171561198e575081810a610826565b61199883836118d0565b80600019048211156119ac576119ac6118ba565b029392505050565b6000610d3760ff841683611913565b8082028115828204841417610826576108266118ba565b634e487b7160e01b600052603260045260246000fd5b600060018201611a0257611a026118ba565b5060010190565b600082611a2657634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610826576108266118ba565b81810381811115610826576108266118ba565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611aa15784516001600160a01b031683529383019391830191600101611a7c565b50506001600160a01b0396909616606085015250505060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206f5f243d40f1ecc4e575edeb931c378ddf5cf3b64b7f1357af10189440eacf5d64736f6c63430008140033";

type HashcashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashcashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hashcash__factory extends ContractFactory {
  constructor(...args: HashcashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Hashcash> {
    return super.deploy(overrides || {}) as Promise<Hashcash>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hashcash {
    return super.attach(address) as Hashcash;
  }
  override connect(signer: Signer): Hashcash__factory {
    return super.connect(signer) as Hashcash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashcashInterface {
    return new utils.Interface(_abi) as HashcashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Hashcash {
    return new Contract(address, _abi, signerOrProvider) as Hashcash;
  }
}
