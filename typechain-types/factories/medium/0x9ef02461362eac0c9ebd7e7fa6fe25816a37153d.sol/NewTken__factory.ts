/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NewTken,
  NewTkenInterface,
} from "../../../medium/0x9ef02461362eac0c9ebd7e7fa6fe25816a37153d.sol/NewTken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressRemovedFromBlacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceBuyTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceSellTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addToBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "bulkBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "bulkRemoveFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlacklist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526007805460ff19169055600a60098190558080556005600b819055600c556045600d556101a4600e55601e600f556000601055620000459060089062000350565b62000055906301312d0062000368565b601155620000666008600a62000350565b62000076906301c9c38062000368565b601255620000876008600a62000350565b6200009690625b8d8062000368565b601355620000a76008600a62000350565b620000b690625b8d8062000368565b6014556016805461ffff60a81b19169055348015620000d457600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060078054610100600160a81b03191661010033021790556200013b6008600a62000350565b6200014b90633b9aca0062000368565b336000908152600160208190526040822092909255600390620001766000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556007546101009004909116835291208054909216179055620001da3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002146008600a62000350565b6200022490633b9aca0062000368565b60405190815260200160405180910390a362000382565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002925781600019048211156200027657620002766200023b565b808516156200028457918102915b93841c939080029062000256565b509250929050565b600082620002ab575060016200034a565b81620002ba575060006200034a565b8160018114620002d35760028114620002de57620002fe565b60019150506200034a565b60ff841115620002f257620002f26200023b565b50506001821b6200034a565b5060208310610133831016604e8410600b841016171562000323575081810a6200034a565b6200032f838362000251565b80600019048211156200034657620003466200023b565b0290505b92915050565b60006200036160ff8416836200029a565b9392505050565b80820281158282048414176200034a576200034a6200023b565b6125ae80620003926000396000f3fe6080604052600436106101e75760003560e01c8063715018a611610102578063a9059cbb11610095578063dd62ed3e11610064578063dd62ed3e14610572578063fb0a8fc3146105b8578063fb201b1d146105d8578063fe575a87146105ed57600080fd5b8063a9059cbb1461050c578063bf474bed1461052c578063c36956a014610542578063c876d0b91461055857600080fd5b80638f9a55c0116100d15780638f9a55c0146104a057806395d89b41146104b65780639e78fb4f146104e2578063a0ef91df146104f757600080fd5b8063715018a614610438578063751039fc1461044d5780637d1db4a5146104625780638da5cb5b1461047857600080fd5b8063315a095d1161017a57806351bc3c851161014957806351bc3c85146103ad578063537df3b6146103c257806357376198146103e257806370a082311461040257600080fd5b8063315a095d14610312578063338d6c30146103325780633bbac5791461035457806344337ea11461038d57600080fd5b80631259ccb5116101b65780631259ccb51461029f57806318160ddd146102c157806323b872dd146102d6578063313ce567146102f657600080fd5b806306fdde03146101f3578063095ea7b3146102355780630c193045146102655780630faee56f1461028957600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b506040805180820190915260078152662732bbaa35b2b760c91b60208201525b60405161022c91906120ba565b60405180910390f35b34801561024157600080fd5b5061025561025036600461211d565b610626565b604051901515815260200161022c565b34801561027157600080fd5b5061027b600d5481565b60405190815260200161022c565b34801561029557600080fd5b5061027b60145481565b3480156102ab57600080fd5b506102bf6102ba366004612149565b61063d565b005b3480156102cd57600080fd5b5061027b610881565b3480156102e257600080fd5b506102556102f13660046121be565b6108a2565b34801561030257600080fd5b506040516008815260200161022c565b34801561031e57600080fd5b506102bf61032d3660046121ff565b61090b565b34801561033e57600080fd5b506103476109ae565b60405161022c919061225c565b34801561036057600080fd5b5061025561036f36600461226f565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561039957600080fd5b506102bf6103a836600461226f565b610a10565b3480156103b957600080fd5b506102bf610b2f565b3480156103ce57600080fd5b506102bf6103dd36600461226f565b610b83565b3480156103ee57600080fd5b506102bf6103fd36600461211d565b610d73565b34801561040e57600080fd5b5061027b61041d36600461226f565b6001600160a01b031660009081526001602052604090205490565b34801561044457600080fd5b506102bf610e34565b34801561045957600080fd5b506102bf610ea8565b34801561046e57600080fd5b5061027b60115481565b34801561048457600080fd5b506000546040516001600160a01b03909116815260200161022c565b3480156104ac57600080fd5b5061027b60125481565b3480156104c257600080fd5b5060408051808201909152600381526213951560ea1b602082015261021f565b3480156104ee57600080fd5b506102bf610f6e565b34801561050357600080fd5b506102bf611313565b34801561051857600080fd5b5061025561052736600461211d565b6113b1565b34801561053857600080fd5b5061027b60135481565b34801561054e57600080fd5b5061027b600e5481565b34801561056457600080fd5b506007546102559060ff1681565b34801561057e57600080fd5b5061027b61058d36600461228c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156105c457600080fd5b506102bf6105d3366004612149565b6113be565b3480156105e457600080fd5b506102bf611521565b3480156105f957600080fd5b5061025561060836600461226f565b6001600160a01b031660009081526006602052604090205460ff1690565b6000610633338484611564565b5060015b92915050565b6000546001600160a01b031633146106705760405162461bcd60e51b8152600401610667906122c5565b60405180910390fd5b806106b55760405162461bcd60e51b8152602060048201526015602482015274139bc81859191c995cdcd95cc81c1c9bdd9a591959605a1b6044820152606401610667565b60005b8181101561087c5760008383838181106106d4576106d46122fa565b90506020020160208101906106e9919061226f565b6001600160a01b03811660009081526006602052604090205490915060ff1615610869576001600160a01b0381166000908152600660205260408120805460ff191690555b60085481101561083357816001600160a01b031660088281548110610755576107556122fa565b6000918252602090912001546001600160a01b031603610821576008805461077f90600190612326565b8154811061078f5761078f6122fa565b600091825260209091200154600880546001600160a01b0390921691839081106107bb576107bb6122fa565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060088054806107fa576107fa612339565b600082815260209020810160001990810180546001600160a01b0319169055019055610833565b8061082b8161234f565b91505061072e565b506040516001600160a01b038216907f5339e76deb16eade3efd8544d1f683635ff55e3866c7a2fae6aee23211cd5f0390600090a25b50806108748161234f565b9150506106b8565b505050565b600061088f6008600a61244c565b61089d90633b9aca0061245b565b905090565b60006108af848484611688565b61090184336108fc85604051806060016040528060288152602001612551602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611d00565b611564565b5060019392505050565b60075461010090046001600160a01b0316336001600160a01b03161461093057600080fd5b600061093e6008600a61244c565b610948908361245b565b306000908152600160205260409020549091508111156109a15760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610667565b6109aa81611d3a565b5050565b60606008805480602002602001604051908101604052809291908181526020018280548015610a0657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109e8575b5050505050905090565b6000546001600160a01b03163314610a3a5760405162461bcd60e51b8152600401610667906122c5565b6001600160a01b03811660009081526006602052604090205460ff1615610aa35760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320616c726561647920626c61636b6c697374656400000000006044820152606401610667565b6001600160a01b038116600081815260066020526040808220805460ff1916600190811790915560088054918201815583527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b03191684179055517fdaf49ab9345b6cb75bcb5a7f726bff9183c34dcf5c098c385730f9fd893765f69190a250565b60075461010090046001600160a01b0316336001600160a01b031614610b5457600080fd5b306000908152600160205260409020548015610b7357610b7381611d3a565b4780156109aa576109aa81611ecd565b6000546001600160a01b03163314610bad5760405162461bcd60e51b8152600401610667906122c5565b6001600160a01b03811660009081526006602052604090205460ff16610c155760405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f7420626c61636b6c69737465640000000000000000006044820152606401610667565b6001600160a01b0381166000908152600660205260408120805460ff191690555b600854811015610d3b57816001600160a01b031660088281548110610c5d57610c5d6122fa565b6000918252602090912001546001600160a01b031603610d295760088054610c8790600190612326565b81548110610c9757610c976122fa565b600091825260209091200154600880546001600160a01b039092169183908110610cc357610cc36122fa565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506008805480610d0257610d02612339565b600082815260209020810160001990810180546001600160a01b0319169055019055610d3b565b80610d338161234f565b915050610c36565b506040516001600160a01b038216907f5339e76deb16eade3efd8544d1f683635ff55e3866c7a2fae6aee23211cd5f0390600090a250565b60075461010090046001600160a01b0316336001600160a01b031614610d9857600080fd5b6000610da66008600a61244c565b610db0908361245b565b60075460405163a9059cbb60e01b81526001600160a01b03610100909204821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af1158015610e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2e9190612472565b50505050565b6000546001600160a01b03163314610e5e5760405162461bcd60e51b8152600401610667906122c5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610ed25760405162461bcd60e51b8152600401610667906122c5565b610ede6008600a61244c565b610eec90633b9aca0061245b565b601155610efb6008600a61244c565b610f0990633b9aca0061245b565b6012556007805460ff191690556014600e819055600d557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf610f4d6008600a61244c565b610f5b90633b9aca0061245b565b60405190815260200160405180910390a1565b6000546001600160a01b03163314610f985760405162461bcd60e51b8152600401610667906122c5565b601654600160a01b900460ff1615610ff25760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610667565b601580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561103b90309061102d6008600a61244c565b6108fc90633b9aca0061245b565b601560009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b29190612494565b6001600160a01b031663c9c6539630601560009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111389190612494565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a99190612494565b601680546001600160a01b039283166001600160a01b03199091161790556015541663f305d71947306111f1816001600160a01b031660009081526001602052604090205490565b6000806112066000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561126e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061129391906124b1565b505060165460155460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113109190612472565b50565b60075461010090046001600160a01b0316336001600160a01b03161461133857600080fd5b600047116113715760405162461bcd60e51b815260206004820152600660248201526509cde40cae8d60d31b6044820152606401610667565b6007546040516001600160a01b0361010090920491909116904780156108fc02916000818181858888f19350505050158015611310573d6000803e3d6000fd5b6000610633338484611688565b6000546001600160a01b031633146113e85760405162461bcd60e51b8152600401610667906122c5565b8061142d5760405162461bcd60e51b8152602060048201526015602482015274139bc81859191c995cdcd95cc81c1c9bdd9a591959605a1b6044820152606401610667565b60005b8181101561087c57600083838381811061144c5761144c6122fa565b9050602002016020810190611461919061226f565b6001600160a01b03811660009081526006602052604090205490915060ff1661150e576001600160a01b038116600081815260066020526040808220805460ff1916600190811790915560088054918201815583527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b03191684179055517fdaf49ab9345b6cb75bcb5a7f726bff9183c34dcf5c098c385730f9fd893765f69190a25b50806115198161234f565b915050611430565b6000546001600160a01b0316331461154b5760405162461bcd60e51b8152600401610667906122c5565b6016805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b0383166115c65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610667565b6001600160a01b0382166116275760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610667565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166116ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610667565b6001600160a01b03821661174e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610667565b600081116117b05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610667565b600080546001600160a01b038581169116148015906117dd57506000546001600160a01b03848116911614155b15611bbd576001600160a01b03841660009081526006602052604090205460ff16156118435760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881a5cc8189b1858dadb1a5cdd1959605a1b6044820152606401610667565b6001600160a01b03831660009081526006602052604090205460ff16156118ac5760405162461bcd60e51b815260206004820152601860248201527f526563697069656e7420697320626c61636b6c697374656400000000000000006044820152606401610667565b60075460ff1615611965576015546001600160a01b038481169116148015906118e357506016546001600160a01b03848116911614155b15611965573260009081526005602052604090205443116119525760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f6044820152633bb2b21760e11b6064820152608401610667565b3260009081526005602052604090204390555b6016546001600160a01b03858116911614801561199057506015546001600160a01b03848116911614155b80156119b557506001600160a01b03831660009081526003602052604090205460ff16155b15611a9d57601154821115611a0c5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610667565b60125482611a2f856001600160a01b031660009081526001602052604090205490565b611a3991906124df565b1115611a875760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610667565b60108054906000611a978361234f565b91905055505b611ac96064611ac3600d5460105411611ab857600954611abc565b600b545b8590611f0b565b90611f94565b6016549091506001600160a01b038481169116148015611af257506001600160a01b0384163014155b15611b1f57611b1c6064611ac3600e5460105411611b1257600a54611abc565b600c548590611f0b565b90505b30600090815260016020526040902054601654600160a81b900460ff16158015611b5657506016546001600160a01b038581169116145b8015611b6b5750601654600160b01b900460ff165b8015611b78575060135481115b8015611b875750600f54601054115b15611bbb57611ba9611ba484611b9f84601454611fd6565b611fd6565b611d3a565b478015611bb957611bb947611ecd565b505b505b8015611c375730600090815260016020526040902054611bdd9082611feb565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c2e9085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054611c5a908361204a565b6001600160a01b038516600090815260016020526040902055611c9f611c80838361204a565b6001600160a01b03851660009081526001602052604090205490611feb565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611ce9858561204a565b60405190815260200160405180910390a350505050565b60008184841115611d245760405162461bcd60e51b815260040161066791906120ba565b506000611d318486612326565b95945050505050565b6016805460ff60a81b1916600160a81b1790558015611ebd57601654600160a01b900460ff1615611ebd576040805160028082526060820183526000926020830190803683370190505090503081600081518110611d9a57611d9a6122fa565b6001600160a01b03928316602091820292909201810191909152601554604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e179190612494565b81600181518110611e2a57611e2a6122fa565b6001600160a01b039283166020918202929092010152601554611e509130911684611564565b60155460405163791ac94760e01b81526001600160a01b039091169063791ac94790611e899085906000908690309042906004016124f2565b600060405180830381600087803b158015611ea357600080fd5b505af1158015611eb7573d6000803e3d6000fd5b50505050505b506016805460ff60a81b19169055565b6007546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156109aa573d6000803e3d6000fd5b600082600003611f1d57506000610637565b6000611f29838561245b565b905082611f36858361252e565b14611f8d5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610667565b9392505050565b6000611f8d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061208c565b6000818311611fe55782611f8d565b50919050565b600080611ff883856124df565b905083811015611f8d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610667565b6000611f8d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d00565b600081836120ad5760405162461bcd60e51b815260040161066791906120ba565b506000611d31848661252e565b600060208083528351808285015260005b818110156120e7578581018301518582016040015282016120cb565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461131057600080fd5b6000806040838503121561213057600080fd5b823561213b81612108565b946020939093013593505050565b6000806020838503121561215c57600080fd5b823567ffffffffffffffff8082111561217457600080fd5b818501915085601f83011261218857600080fd5b81358181111561219757600080fd5b8660208260051b85010111156121ac57600080fd5b60209290920196919550909350505050565b6000806000606084860312156121d357600080fd5b83356121de81612108565b925060208401356121ee81612108565b929592945050506040919091013590565b60006020828403121561221157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156122515781516001600160a01b03168752958201959082019060010161222c565b509495945050505050565b602081526000611f8d6020830184612218565b60006020828403121561228157600080fd5b8135611f8d81612108565b6000806040838503121561229f57600080fd5b82356122aa81612108565b915060208301356122ba81612108565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561063757610637612310565b634e487b7160e01b600052603160045260246000fd5b60006001820161236157612361612310565b5060010190565b600181815b808511156123a357816000190482111561238957612389612310565b8085161561239657918102915b93841c939080029061236d565b509250929050565b6000826123ba57506001610637565b816123c757506000610637565b81600181146123dd57600281146123e757612403565b6001915050610637565b60ff8411156123f8576123f8612310565b50506001821b610637565b5060208310610133831016604e8410600b8410161715612426575081810a610637565b6124308383612368565b806000190482111561244457612444612310565b029392505050565b6000611f8d60ff8416836123ab565b808202811582820484141761063757610637612310565b60006020828403121561248457600080fd5b81518015158114611f8d57600080fd5b6000602082840312156124a657600080fd5b8151611f8d81612108565b6000806000606084860312156124c657600080fd5b8351925060208401519150604084015190509250925092565b8082018082111561063757610637612310565b85815284602082015260a06040820152600061251160a0830186612218565b6001600160a01b0394909416606083015250608001529392505050565b60008261254b57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220409f164176e9f7a41ea529b49888d0ae5bdae33d332823ea77ee473800154df464736f6c63430008130033";

type NewTkenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewTkenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewTken__factory extends ContractFactory {
  constructor(...args: NewTkenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NewTken> {
    return super.deploy(overrides || {}) as Promise<NewTken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NewTken {
    return super.attach(address) as NewTken;
  }
  override connect(signer: Signer): NewTken__factory {
    return super.connect(signer) as NewTken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewTkenInterface {
    return new utils.Interface(_abi) as NewTkenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewTken {
    return new Contract(address, _abi, signerOrProvider) as NewTken;
  }
}
