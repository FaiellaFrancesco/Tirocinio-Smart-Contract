/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ETHPayment,
  ETHPaymentInterface,
} from "../../../medium/0xa3f2cbce1788a866c425318c5489211a81f7832e.sol/ETHPayment";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106588061001f6000396000f3fe60806040526004361061004e5760003560e01c8063095ea7b31461005a57806323b872dd1461008f578063a9059cbb146100af578063b69ef8a8146100cf578063dd62ed3e146100ec57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007a61007536600461051f565b610130565b60405190151581526020015b60405180910390f35b34801561009b57600080fd5b5061007a6100aa366004610549565b610201565b3480156100bb57600080fd5b5061007a6100ca36600461051f565b610417565b3480156100db57600080fd5b50475b604051908152602001610086565b3480156100f857600080fd5b506100de610107366004610586565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60006001600160a01b03831661019d5760405162461bcd60e51b815260206004820152602760248201527f4554485061796d656e743a20617070726f766520746f20746865207a65726f206044820152666164647265737360c81b60648201526084015b60405180910390fd5b336000818152602081815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b03841661026c5760405162461bcd60e51b815260206004820152602a60248201527f4554485061796d656e743a207472616e736665722066726f6d20746865207a65604482015269726f206164647265737360b01b6064820152608401610194565b6001600160a01b0383166102925760405162461bcd60e51b8152600401610194906105b9565b6001600160a01b0384166000908152602081815260408083203384529091529020548211156103035760405162461bcd60e51b815260206004820152601e60248201527f4554485061796d656e743a20616c6c6f77616e636520657863656564656400006044820152606401610194565b814710156103535760405162461bcd60e51b815260206004820181905260248201527f4554485061796d656e743a20696e73756666696369656e742062616c616e63656044820152606401610194565b6001600160a01b03841660009081526020818152604080832033845290915281208054849290610384908490610601565b90915550506040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156103bf573d6000803e3d6000fd5b50826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161040591815260200190565b60405180910390a35060019392505050565b60006001600160a01b03831661043f5760405162461bcd60e51b8152600401610194906105b9565b8147101561048f5760405162461bcd60e51b815260206004820181905260248201527f4554485061796d656e743a20696e73756666696369656e742062616c616e63656044820152606401610194565b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156104c5573d6000803e3d6000fd5b506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016101ef565b80356001600160a01b038116811461051a57600080fd5b919050565b6000806040838503121561053257600080fd5b61053b83610503565b946020939093013593505050565b60008060006060848603121561055e57600080fd5b61056784610503565b925061057560208501610503565b929592945050506040919091013590565b6000806040838503121561059957600080fd5b6105a283610503565b91506105b060208401610503565b90509250929050565b60208082526028908201527f4554485061796d656e743a207472616e7366657220746f20746865207a65726f604082015267206164647265737360c01b606082015260800190565b818103818111156101fb57634e487b7160e01b600052601160045260246000fdfea26469706673582212207f4733af0027b30f9c9189c5e65a58b977f45cbfb7b0d86f65c1df7104f9f55e64736f6c634300081e0033";

type ETHPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHPayment__factory extends ContractFactory {
  constructor(...args: ETHPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHPayment> {
    return super.deploy(overrides || {}) as Promise<ETHPayment>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ETHPayment {
    return super.attach(address) as ETHPayment;
  }
  override connect(signer: Signer): ETHPayment__factory {
    return super.connect(signer) as ETHPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHPaymentInterface {
    return new utils.Interface(_abi) as ETHPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHPayment {
    return new Contract(address, _abi, signerOrProvider) as ETHPayment;
  }
}
