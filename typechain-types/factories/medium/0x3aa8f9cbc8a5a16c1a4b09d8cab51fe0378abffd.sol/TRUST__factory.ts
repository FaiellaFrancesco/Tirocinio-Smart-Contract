/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TRUST,
  TRUSTInterface,
} from "../../../medium/0x3aa8f9cbc8a5a16c1a4b09d8cab51fe0378abffd.sol/TRUST";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_buyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalBuyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalSellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_transferTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556005600a55600a600b55600a600c556000600d556000600e556009600a62000041919062000361565b62000051906301312d0062000379565b600f55620000626009600a62000361565b62000072906301312d0062000379565b601055620000836009600a62000361565b62000092906298968062000379565b601155620000a36009600a62000361565b620000b3906301312d0062000379565b6012556014805461ffff60a81b1916905560006015819055601655348015620000db57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191673db09f8741174ed335b8c905eadf28aa02f25769d179055620001516009600a62000361565b6200016190633b9aca0062000379565b3360009081526001602081905260408220929092556003906200018c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001eb3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002256009600a62000361565b6200023590633b9aca0062000379565b60405190815260200160405180910390a362000393565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a35781600019048211156200028757620002876200024c565b808516156200029557918102915b93841c939080029062000267565b509250929050565b600082620002bc575060016200035b565b81620002cb575060006200035b565b8160018114620002e45760028114620002ef576200030f565b60019150506200035b565b60ff8411156200030357620003036200024c565b50506001821b6200035b565b5060208310610133831016604e8410600b841016171562000334575081810a6200035b565b62000340838362000262565b80600019048211156200035757620003576200024c565b0290505b92915050565b60006200037260ff841683620002ab565b9392505050565b80820281158282048414176200035b576200035b6200024c565b611cee80620003a36000396000f3fe6080604052600436106101a05760003560e01c806370a08231116100ec578063a9059cbb1161008a578063c9567bf911610064578063c9567bf914610494578063d34628cc146104a9578063dd62ed3e146104c9578063ec1f3f631461050f57600080fd5b8063a9059cbb14610448578063baeb7a7d14610468578063bf474bed1461047e57600080fd5b80637d1db4a5116100c65780637d1db4a5146103c65780638da5cb5b146103dc5780638f9a55c01461040457806395d89b411461041a57600080fd5b806370a0823114610366578063715018a61461039c578063751039fc146103b157600080fd5b806323b872dd1161015957806331c2d8471161013357806331c2d847146102e25780633bbac579146103025780633ef947211461033b57806351bc3c851461035157600080fd5b806323b872dd1461029057806327b1a8e9146102b0578063313ce567146102c657600080fd5b806306fdde03146101ac578063095ea7b3146101fa5780630faee56f1461022a578063109daa991461024e57806317391e491461026557806318160ddd1461027b57600080fd5b366101a757005b600080fd5b3480156101b857600080fd5b50604080518082019091526013815272125b88159a5d185b1a5ac815d948151c9d5cdd606a1b60208201525b6040516101f191906117b6565b60405180910390f35b34801561020657600080fd5b5061021a61021536600461182d565b61052f565b60405190151581526020016101f1565b34801561023657600080fd5b5061024060125481565b6040519081526020016101f1565b34801561025a57600080fd5b50610263610546565b005b34801561027157600080fd5b50610240600d5481565b34801561028757600080fd5b506102406105b6565b34801561029c57600080fd5b5061021a6102ab366004611859565b6105d7565b3480156102bc57600080fd5b50610240600e5481565b3480156102d257600080fd5b50604051600981526020016101f1565b3480156102ee57600080fd5b506102636102fd3660046118b0565b610640565b34801561030e57600080fd5b5061021a61031d366004611975565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561034757600080fd5b5061024060095481565b34801561035d57600080fd5b506102636106cc565b34801561037257600080fd5b50610240610381366004611975565b6001600160a01b031660009081526001602052604090205490565b3480156103a857600080fd5b5061026361071b565b3480156103bd57600080fd5b5061026361078f565b3480156103d257600080fd5b50610240600f5481565b3480156103e857600080fd5b506000546040516001600160a01b0390911681526020016101f1565b34801561041057600080fd5b5061024060105481565b34801561042657600080fd5b5060408051808201909152600581526415149554d560da1b60208201526101e4565b34801561045457600080fd5b5061021a61046336600461182d565b61083c565b34801561047457600080fd5b5061024060085481565b34801561048a57600080fd5b5061024060115481565b3480156104a057600080fd5b50610263610849565b3480156104b557600080fd5b506102636104c43660046118b0565b610c05565b3480156104d557600080fd5b506102406104e4366004611992565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561051b57600080fd5b5061026361052a3660046119cb565b610c8d565b600061053c338484610cd4565b5060015b92915050565b6000546001600160a01b031633146105795760405162461bcd60e51b8152600401610570906119e4565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105c46009600a611b13565b6105d290633b9aca00611b22565b905090565b60006105e4848484610df8565b610636843361063185604051806060016040528060288152602001611c91602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611419565b610cd4565b5060019392505050565b6000546001600160a01b0316331461066a5760405162461bcd60e51b8152600401610570906119e4565b60005b81518110156106c85760006004600084848151811061068e5761068e611b39565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161066d565b5050565b6005546001600160a01b0316336001600160a01b0316146106ec57600080fd5b30600090815260016020526040902054801561070b5761070b81611453565b4780156106c8576106c8816115cd565b6000546001600160a01b031633146107455760405162461bcd60e51b8152600401610570906119e4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107b95760405162461bcd60e51b8152600401610570906119e4565b6107c56009600a611b13565b6107d390633b9aca00611b22565b600f556107e26009600a611b13565b6107f090633b9aca00611b22565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6108206009600a611b13565b61082e90633b9aca00611b22565b6040519081526020016105ac565b600061053c338484610df8565b6000546001600160a01b031633146108735760405162461bcd60e51b8152600401610570906119e4565b601454600160a01b900460ff16156108cd5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610570565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109169030906109086009600a611b13565b61063190633b9aca00611b22565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d9190611b4f565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a139190611b4f565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190611b4f565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610acc816001600160a01b031660009081526001602052604090205490565b600080610ae16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b49573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b6e9190611b6c565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610beb9190611b9a565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610c2f5760405162461bcd60e51b8152600401610570906119e4565b60005b81518110156106c857600160046000848481518110610c5357610c53611b39565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610c32565b6005546001600160a01b0316336001600160a01b031614610cad57600080fd5b6008548111158015610cc157506009548111155b610cca57600080fd5b6008819055600955565b6001600160a01b038316610d365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610570565b6001600160a01b038216610d975760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610570565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e5c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610570565b6001600160a01b038216610ebe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610570565b60008111610f205760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610570565b600080546001600160a01b03858116911614801590610f4d57506000546001600160a01b03848116911614155b8015610f6757506005546001600160a01b03848116911614155b156112d6576001600160a01b03841660009081526004602052604090205460ff16158015610fae57506001600160a01b03831660009081526004602052604090205460ff16155b610fb757600080fd5b600e54600003610ff057610fed6064610fe7600a54600e5411610fdc57600654610fe0565b6008545b8590611607565b90611690565b90505b600e5415611015576110126064610fe7600d548561160790919063ffffffff16565b90505b6014546001600160a01b03858116911614801561104057506013546001600160a01b03848116911614155b801561106557506001600160a01b03831660009081526003602052604090205460ff16155b1561116a57600f548211156110bc5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610570565b601054826110df856001600160a01b031660009081526001602052604090205490565b6110e99190611bbc565b11156111375760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610570565b6111526064610fe7600a54600e5411610fdc57600654610fe0565b600e8054919250600061116483611bcf565b91905055505b6014546001600160a01b03848116911614801561119057506001600160a01b0384163014155b156111bd576111ba6064610fe7600b54600e54116111b057600754610fe0565b6009548590611607565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156111f457506014546001600160a01b038581169116145b80156112095750601454600160b01b900460ff165b8015611216575060115481115b80156112255750600c54600e54115b156112d45760165443111561123a5760006015555b60036015541061128c5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610570565b6112a96112a48461129f846012546116d2565b6116d2565b611453565b4780156112b9576112b9476115cd565b601580549060006112c983611bcf565b909155505043601655505b505b801561135057306000908152600160205260409020546112f690826116e7565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113479085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113739083611746565b6001600160a01b0385166000908152600160205260409020556113b86113998383611746565b6001600160a01b038516600090815260016020526040902054906116e7565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114028585611746565b60405190815260200160405180910390a350505050565b6000818484111561143d5760405162461bcd60e51b815260040161057091906117b6565b50600061144a8486611be8565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061149b5761149b611b39565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115189190611b4f565b8160018151811061152b5761152b611b39565b6001600160a01b0392831660209182029290920101526013546115519130911684610cd4565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac9479061158a908590600090869030904290600401611bfb565b600060405180830381600087803b1580156115a457600080fd5b505af11580156115b8573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106c8573d6000803e3d6000fd5b60008260000361161957506000610540565b60006116258385611b22565b9050826116328583611c6e565b146116895760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610570565b9392505050565b600061168983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611788565b60008183116116e15782611689565b50919050565b6000806116f48385611bbc565b9050838110156116895760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610570565b600061168983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611419565b600081836117a95760405162461bcd60e51b815260040161057091906117b6565b50600061144a8486611c6e565b60006020808352835180602085015260005b818110156117e4578581018301518582016040015282016117c8565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461181a57600080fd5b50565b803561182881611805565b919050565b6000806040838503121561184057600080fd5b823561184b81611805565b946020939093013593505050565b60008060006060848603121561186e57600080fd5b833561187981611805565b9250602084013561188981611805565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118c357600080fd5b823567ffffffffffffffff808211156118db57600080fd5b818501915085601f8301126118ef57600080fd5b8135818111156119015761190161189a565b8060051b604051601f19603f830116810181811085821117156119265761192661189a565b60405291825284820192508381018501918883111561194457600080fd5b938501935b828510156119695761195a8561181d565b84529385019392850192611949565b98975050505050505050565b60006020828403121561198757600080fd5b813561168981611805565b600080604083850312156119a557600080fd5b82356119b081611805565b915060208301356119c081611805565b809150509250929050565b6000602082840312156119dd57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a6a578160001904821115611a5057611a50611a19565b80851615611a5d57918102915b93841c9390800290611a34565b509250929050565b600082611a8157506001610540565b81611a8e57506000610540565b8160018114611aa45760028114611aae57611aca565b6001915050610540565b60ff841115611abf57611abf611a19565b50506001821b610540565b5060208310610133831016604e8410600b8410161715611aed575081810a610540565b611af78383611a2f565b8060001904821115611b0b57611b0b611a19565b029392505050565b600061168960ff841683611a72565b808202811582820484141761054057610540611a19565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b6157600080fd5b815161168981611805565b600080600060608486031215611b8157600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611bac57600080fd5b8151801515811461168957600080fd5b8082018082111561054057610540611a19565b600060018201611be157611be1611a19565b5060010190565b8181038181111561054057610540611a19565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611c4d5784516001600160a01b031683529383019391830191600101611c28565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c8b57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122086d825ed947f2ecb0bf2557347c95ff9598024d2afc4031e8b74d572e5d1129364736f6c63430008170033";

type TRUSTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TRUSTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TRUST__factory extends ContractFactory {
  constructor(...args: TRUSTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TRUST & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TRUST__factory {
    return super.connect(runner) as TRUST__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TRUSTInterface {
    return new Interface(_abi) as TRUSTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TRUST {
    return new Contract(address, _abi, runner) as unknown as TRUST;
  }
}
