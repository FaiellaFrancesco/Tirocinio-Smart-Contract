/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  QPIN,
  QPINInterface,
} from "../../../medium/0xc9aaf3c6f48d48a8429c0664c30f804ede6bc85c.sol/QPIN";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_BuyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_SellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "removeBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BuyTax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "SellTax",
        type: "uint256",
      },
    ],
    name: "updateTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a600655602d60075560646012600a62000020919062000362565b6200002f90629896806200037a565b6200003c9060016200037a565b62000048919062000394565b6008556103e86200005c6012600a62000362565b6200006b90629896806200037a565b620000789060146200037a565b62000084919062000394565b6009556103e8620000986012600a62000362565b620000a790629896806200037a565b620000b49060146200037a565b620000c0919062000394565b600a556127106012600a620000d6919062000362565b620000e590629896806200037a565b620000f29060056200037a565b620000fe919062000394565b600b55600d805461ffff60a81b191690556000600e819055600f553480156200012657600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001886012600a62000362565b6200019790629896806200037a565b3360008181526003602090815260408083209490945581546001600160a01b03908116835260029091528382208054600160ff199182168117909255308452858420805482168317905560055490921683529382208054909116909317909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002276012600a62000362565b6200023690629896806200037a565b60405190815260200160405180910390a3620003b7565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a45781600019048211156200028857620002886200024d565b808516156200029657918102915b93841c939080029062000268565b509250929050565b600082620002bd575060016200035c565b81620002cc575060006200035c565b8160018114620002e55760028114620002f05762000310565b60019150506200035c565b60ff8411156200030457620003046200024d565b50506001821b6200035c565b5060208310610133831016604e8410600b841016171562000335575081810a6200035c565b62000341838362000263565b80600019048211156200035857620003586200024d565b0290505b92915050565b60006200037360ff841683620002ac565b9392505050565b80820281158282048414176200035c576200035c6200024d565b600082620003b257634e487b7160e01b600052601260045260246000fd5b500490565b61192980620003c76000396000f3fe6080604052600436106101445760003560e01c8063715018a6116100b657806395d89b411161006f57806395d89b4114610374578063a9059cbb146103a1578063bf474bed146103c1578063c9567bf9146103d7578063d34628cc146103ec578063dd62ed3e1461040c57600080fd5b8063715018a6146102e0578063751039fc146102f55780637d1db4a51461030a5780638da5cb5b146103205780638f9a55c014610348578063901849d61461035e57600080fd5b80632f37aa6d116101085780632f37aa6d14610221578063313ce5671461024357806343b8fe041461025f57806351bc3c85146102755780636c3bbfd71461028a57806370a08231146102aa57600080fd5b806306fdde0314610150578063095ea7b3146101985780630faee56f146101c857806318160ddd146101ec57806323b872dd1461020157600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5060408051808201909152600d81526c28bab0b73a3ab6902232a824a760991b60208201525b60405161018f9190611409565b60405180910390f35b3480156101a457600080fd5b506101b86101b3366004611480565b610452565b604051901515815260200161018f565b3480156101d457600080fd5b506101de60085481565b60405190815260200161018f565b3480156101f857600080fd5b506101de610469565b34801561020d57600080fd5b506101b861021c3660046114ac565b610489565b34801561022d57600080fd5b5061024161023c3660046114ed565b61055b565b005b34801561024f57600080fd5b506040516012815260200161018f565b34801561026b57600080fd5b506101de60075481565b34801561028157600080fd5b50610241610590565b34801561029657600080fd5b506102416102a5366004611525565b6105ed565b3480156102b657600080fd5b506101de6102c53660046115ea565b6001600160a01b031660009081526003602052604090205490565b3480156102ec57600080fd5b50610241610675565b34801561030157600080fd5b506102416106e9565b34801561031657600080fd5b506101de60095481565b34801561032c57600080fd5b506000546040516001600160a01b03909116815260200161018f565b34801561035457600080fd5b506101de600a5481565b34801561036a57600080fd5b506101de60065481565b34801561038057600080fd5b5060408051808201909152600481526328a824a760e11b6020820152610182565b3480156103ad57600080fd5b506101b86103bc366004611480565b61074d565b3480156103cd57600080fd5b506101de600b5481565b3480156103e357600080fd5b5061024161075a565b3480156103f857600080fd5b50610241610407366004611525565b610b15565b34801561041857600080fd5b506101de61042736600461160e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600061045f338484610b9d565b5060015b92915050565b60006104776012600a611741565b6104849062989680611750565b905090565b6001600160a01b038316600090815260016020908152604080832033845290915281205482111561050b5760405162461bcd60e51b815260206004820152602160248201527f5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636044820152606560f81b60648201526084015b60405180910390fd5b610516848484610cce565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461055191869161054c908690611767565b610b9d565b5060019392505050565b6000546001600160a01b031633146105855760405162461bcd60e51b81526004016105029061177a565b600691909155600755565b6000546001600160a01b031633146105ba5760405162461bcd60e51b81526004016105029061177a565b3060009081526003602052604090205480156105d9576105d98161123c565b4780156105e9576105e9816113cf565b5050565b6000546001600160a01b031633146106175760405162461bcd60e51b81526004016105029061177a565b60005b81518110156105e95760006004600084848151811061063b5761063b6117af565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161061a565b6000546001600160a01b0316331461069f5760405162461bcd60e51b81526004016105029061177a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107135760405162461bcd60e51b81526004016105029061177a565b61071f6012600a611741565b61072c9062989680611750565b60095561073b6012600a611741565b6107489062989680611750565b600a55565b600061045f338484610cce565b6000546001600160a01b031633146107845760405162461bcd60e51b81526004016105029061177a565b600d54600160a01b900460ff16156107de5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610502565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108269030906108196012600a611741565b61054c9062989680611750565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d91906117c5565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092391906117c5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610970573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099491906117c5565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d71947306109dc816001600160a01b031660009081526003602052604090205490565b6000806109f16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a59573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a7e91906117e2565b5050600d54600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb9190611810565b50600d805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610b3f5760405162461bcd60e51b81526004016105029061177a565b60005b81518110156105e957600160046000848481518110610b6357610b636117af565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b42565b6001600160a01b038316610c065760405162461bcd60e51b815260206004820152602a60248201527f45524332303a2043616e277420617070726f76652066726f6d20746865207a65604482015269726f206164647265737360b01b6064820152608401610502565b6001600160a01b038216610c6d5760405162461bcd60e51b815260206004820152602860248201527f45524332303a2043616e277420617070726f766520746f20746865207a65726f604482015267206164647265737360c01b6064820152608401610502565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d385760405162461bcd60e51b815260206004820152602b60248201527f45524332303a2043616e2774207472616e736665722066726f6d20746865207a60448201526a65726f206164647265737360a81b6064820152608401610502565b6001600160a01b038216610da05760405162461bcd60e51b815260206004820152602960248201527f45524332303a2043616e2774207472616e7366657220746f20746865207a65726044820152686f206164647265737360b81b6064820152608401610502565b60008111610e025760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610502565b6001600160a01b03831660009081526002602052604081205460ff16158015610e4457506001600160a01b03831660009081526002602052604090205460ff16155b15611106576001600160a01b03841660009081526004602052604090205460ff16158015610e8b57506001600160a01b03831660009081526004602052604090205460ff16155b610e9457600080fd5b600d546001600160a01b038581169116148015610ebf5750600c546001600160a01b03848116911614155b15610f9157600954821115610f165760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610502565b600a5482610f39856001600160a01b031660009081526003602052604090205490565b610f439190611832565b1115610f915760405162461bcd60e51b815260206004820152601b60248201527f4578636565647320746865205f6d617857616c6c657453697a652e00000000006044820152606401610502565b600d546001600160a01b038581169116148015610fb757506001600160a01b0383163014155b15610fd957606460065483610fcc9190611750565b610fd69190611845565b90505b600d546001600160a01b038481169116148015610fff57506001600160a01b0384163014155b15611021576064600754836110149190611750565b61101e9190611845565b90505b30600090815260036020526040902054600d54600160a81b900460ff161580156110585750600d546001600160a01b038581169116145b801561106d5750600d54600160b01b900460ff165b801561107a5750600b5481115b1561110457600f5443111561108f576000600e555b6002600e541061109e57600080fd5b600081841080156110b0575060085484105b6110cb5760085482106110c5576008546110cd565b816110cd565b835b90506110d88161123c565b4780156110e8576110e8476113cf565b600e80549060006110f883611867565b909155505043600f5550505b505b801561117157306000908152600360205260408120805483929061112b908490611832565b909155505060405181815230906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b6001600160a01b038416600090815260036020526040902054611195908390611767565b6001600160a01b0385166000908152600360205260409020556111b88183611767565b6001600160a01b0384166000908152600360205260409020546111db9190611832565b6001600160a01b0380851660008181526003602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6112258486611767565b60405190815260200160405180910390a350505050565b600d805460ff60a81b1916600160a81b17905580156113bf57600d54600160a01b900460ff16156113bf57604080516002808252606082018352600092602083019080368337019050509050308160008151811061129c5761129c6117af565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131991906117c5565b8160018151811061132c5761132c6117af565b6001600160a01b039283166020918202929092010152600c546113529130911684610b9d565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061138b908590600090869030904290600401611880565b600060405180830381600087803b1580156113a557600080fd5b505af11580156113b9573d6000803e3d6000fd5b50505050505b50600d805460ff60a81b19169055565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156105e9573d6000803e3d6000fd5b60006020808352835180602085015260005b818110156114375785810183015185820160400152820161141b565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461146d57600080fd5b50565b803561147b81611458565b919050565b6000806040838503121561149357600080fd5b823561149e81611458565b946020939093013593505050565b6000806000606084860312156114c157600080fd5b83356114cc81611458565b925060208401356114dc81611458565b929592945050506040919091013590565b6000806040838503121561150057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561153857600080fd5b823567ffffffffffffffff8082111561155057600080fd5b818501915085601f83011261156457600080fd5b8135818111156115765761157661150f565b8060051b604051601f19603f8301168101818110858211171561159b5761159b61150f565b6040529182528482019250838101850191888311156115b957600080fd5b938501935b828510156115de576115cf85611470565b845293850193928501926115be565b98975050505050505050565b6000602082840312156115fc57600080fd5b813561160781611458565b9392505050565b6000806040838503121561162157600080fd5b823561162c81611458565b9150602083013561163c81611458565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561169857816000190482111561167e5761167e611647565b8085161561168b57918102915b93841c9390800290611662565b509250929050565b6000826116af57506001610463565b816116bc57506000610463565b81600181146116d257600281146116dc576116f8565b6001915050610463565b60ff8411156116ed576116ed611647565b50506001821b610463565b5060208310610133831016604e8410600b841016171561171b575081810a610463565b611725838361165d565b806000190482111561173957611739611647565b029392505050565b600061160760ff8416836116a0565b808202811582820484141761046357610463611647565b8181038181111561046357610463611647565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156117d757600080fd5b815161160781611458565b6000806000606084860312156117f757600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561182257600080fd5b8151801515811461160757600080fd5b8082018082111561046357610463611647565b60008261186257634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161187957611879611647565b5060010190565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156118d25784516001600160a01b0316835293830193918301916001016118ad565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220fd7f00df65538ba69c7801771737ab65d4a9abc9f6110f39cf23eadd1ff31a0264736f6c63430008170033";

type QPINConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QPINConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QPIN__factory extends ContractFactory {
  constructor(...args: QPINConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<QPIN> {
    return super.deploy(overrides || {}) as Promise<QPIN>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): QPIN {
    return super.attach(address) as QPIN;
  }
  override connect(signer: Signer): QPIN__factory {
    return super.connect(signer) as QPIN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QPINInterface {
    return new utils.Interface(_abi) as QPINInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): QPIN {
    return new Contract(address, _abi, signerOrProvider) as QPIN;
  }
}
