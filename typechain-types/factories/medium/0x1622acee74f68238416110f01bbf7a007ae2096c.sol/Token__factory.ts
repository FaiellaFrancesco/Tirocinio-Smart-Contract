/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x1622acee74f68238416110f01bbf7a007ae2096c.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblHETAPE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableHETAPETrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueHETAPEETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118d483398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118d483398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611564806103706000396000f3fe6080604052600436106100f75760003560e01c8063751039fc1161008a578063a9059cbb11610059578063a9059cbb146102d6578063c57addc6146102f6578063dd62ed3e1461030b578063ff6b71571461035157600080fd5b8063751039fc1461024d5780638da5cb5b146102625780638de370961461028a57806395d89b41146102aa57600080fd5b806323b872dd116100c657806323b872dd146101c4578063313ce567146101e457806370a0823114610200578063715018a61461023657600080fd5b806306fdde0314610103578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060408051808201909152601781527f546865204d61676963204d6f6e6579204d616368696e6500000000000000000060208201525b6040516101529190611154565b60405180910390f35b34801561016757600080fd5b5061017b6101763660046111b7565b610366565b6040519015158152602001610152565b34801561019757600080fd5b506101a160095481565b604051908152602001610152565b3480156101bb57600080fd5b506101a161037d565b3480156101d057600080fd5b5061017b6101df3660046111e3565b61039e565b3480156101f057600080fd5b5060405160098152602001610152565b34801561020c57600080fd5b506101a161021b366004611224565b6001600160a01b031660009081526001602052604090205490565b34801561024257600080fd5b5061024b61045c565b005b34801561025957600080fd5b5061024b6104d9565b34801561026e57600080fd5b506000546040516001600160a01b039091168152602001610152565b34801561029657600080fd5b5061024b6102a5366004611224565b610505565b3480156102b657600080fd5b506040805180820190915260038152624d4d4d60e81b6020820152610145565b3480156102e257600080fd5b5061017b6102f13660046111b7565b610543565b34801561030257600080fd5b5061024b610550565b34801561031757600080fd5b506101a1610326366004611241565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035d57600080fd5b5061024b61090b565b600061037333848461096e565b5060015b92915050565b600061038b6009600a611377565b61039990633b9aca00611386565b905090565b60006103ab848484610a92565b6004546001600160a01b031633148015906103fb5750600b546001600160a01b03858116911614806103e857506001600160a01b03831661dead14155b806103fb57506001600160a01b03841630145b1561045257610452843361044d85604051806060016040528060288152602001611507602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eba565b61096e565b5060019392505050565b6000546001600160a01b0316331461048f5760405162461bcd60e51b81526004016104869061139d565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105035760405162461bcd60e51b81526004016104869061139d565b565b3360009081526003602052604090205460ff1661052157600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610373338484610a92565b6000546001600160a01b0316331461057a5760405162461bcd60e51b81526004016104869061139d565b600b54600160a01b900460ff16156105d45760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610486565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561061d9130919061060f90600990611377565b61044d90633b9aca00611386565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069491906113d2565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906113d2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906113d2565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306107d3816001600160a01b031660009081526001602052604090205490565b6000806107e86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610850573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087591906113ef565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061141d565b50565b6000546001600160a01b031633146109355760405162461bcd60e51b81526004016104869061139d565b6000471161094257600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610908573d6000803e3d6000fd5b6001600160a01b0383166109d05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610486565b6001600160a01b038216610a315760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610486565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610af65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610486565b6001600160a01b038216610b585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610486565b60008111610bba5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610486565b60006001600160a01b0384163014801590610bde57506001600160a01b0383163014155b15610d5c57600b546001600160a01b038581169116148015610c0e5750600a546001600160a01b03848116911614155b8015610c3357506001600160a01b03831660009081526003602052604090205460ff16155b8015610c4d57506004546001600160a01b03848116911614155b15610c685760088054906000610c628361143f565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c9f5750600b546001600160a01b038581169116145b8015610cb45750600b54600160b01b900460ff165b8015610cce57506004546001600160a01b03868116911614155b15610d5a57843b15610d195760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610486565b8015610d4e5760006009548211610d305781610d34565b6009545b9050610d4c818511610d465784610ef4565b81610ef4565b505b47610d584761106e565b505b505b6001600160a01b038416600090815260016020526040902054610d7f90836110ac565b6001600160a01b038516600090815260016020526040902055610dc4610da583836110ac565b6001600160a01b038516600090815260016020526040902054906110f5565b6001600160a01b0384166000908152600160205260409020558015610e575730600090815260016020526040902054610dfd90826110f5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e4e9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb4576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea285856110ac565b60405190815260200160405180910390a35b50505050565b60008184841115610ede5760405162461bcd60e51b81526004016104869190611154565b506000610eeb8486611458565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f3c57610f3c61146b565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb991906113d2565b81600181518110610fcc57610fcc61146b565b6001600160a01b039283166020918202929092010152600a54610ff2913091168461096e565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061102b908590600090869030904290600401611481565b600060405180830381600087803b15801561104557600080fd5b505af1158015611059573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110a8573d6000803e3d6000fd5b5050565b60006110ee83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eba565b9392505050565b60008061110283856114f3565b9050838110156110ee5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610486565b602081526000825180602084015260005b818110156111825760208186018101516040868401015201611165565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461090857600080fd5b600080604083850312156111ca57600080fd5b82356111d5816111a2565b946020939093013593505050565b6000806000606084860312156111f857600080fd5b8335611203816111a2565b92506020840135611213816111a2565b929592945050506040919091013590565b60006020828403121561123657600080fd5b81356110ee816111a2565b6000806040838503121561125457600080fd5b823561125f816111a2565b9150602083013561126f816111a2565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112cb578085048111156112af576112af61127a565b60018416156112bd57908102905b60019390931c928002611294565b935093915050565b6000826112e257506001610377565b816112ef57506000610377565b8160018114611305576002811461130f5761132b565b6001915050610377565b60ff8411156113205761132061127a565b50506001821b610377565b5060208310610133831016604e8410600b841016171561134e575081810a610377565b61135b6000198484611290565b806000190482111561136f5761136f61127a565b029392505050565b60006110ee60ff8416836112d3565b80820281158282048414176103775761037761127a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113e457600080fd5b81516110ee816111a2565b60008060006060848603121561140457600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561142f57600080fd5b815180151581146110ee57600080fd5b6000600182016114515761145161127a565b5060010190565b818103818111156103775761037761127a565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114d35783516001600160a01b03168352602093840193909201916001016114ac565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103775761037761127a56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209c3ad3bf49eac318794a6322add5e05352ae5da4228bce73bc4335c7aeb1428464736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
