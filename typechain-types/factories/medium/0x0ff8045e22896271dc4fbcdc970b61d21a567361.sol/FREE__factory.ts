/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FREE,
  FREEInterface,
} from "../../../medium/0x0ff8045e22896271dc4fbcdc970b61d21a567361.sol/FREE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_buyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_sellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxWallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_transferTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellFee",
        type: "uint256",
      },
    ],
    name: "changeBuySellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "changeMaxWalletLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "changeTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trFee",
        type: "uint256",
      },
    ],
    name: "changeTransferFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "whiteListFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600480546001600160a01b031916733509f47b7a1f75eb8f8d2b6150faa23b25f69f5f17905560058055601460065560006007556100446012600a610474565b61005190620f424061048a565b6008556100606012600a610474565b61006d9062e4e1c061048a565b600955600b805461ffff60a01b1916600160a81b17905534801561009057600080fd5b5061009a33610325565b6000737a250d5630b4cf539739df2c5dacb4c659f2488d9050806001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011591906104a1565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610162573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018691906104a1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f791906104a1565b600b80546001600160a01b03199081166001600160a01b0393841617909155600a805490911691831691909117815561023290601290610474565b61024090633b9aca0061048a565b33600090815260016020819052604082209290925560039061026a6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556004549091168352912080549092161790556102c83390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6103006012600a610474565b61030e90633b9aca0061048a565b60405190815260200160405180910390a3506104ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103c6578085048111156103aa576103aa610375565b60018416156103b857908102905b60019390931c92800261038f565b935093915050565b6000826103dd5750600161046e565b816103ea5750600061046e565b8160018114610400576002811461040a57610426565b600191505061046e565b60ff84111561041b5761041b610375565b50506001821b61046e565b5060208310610133831016604e8410600b8410161715610449575081810a61046e565b610456600019848461038b565b806000190482111561046a5761046a610375565b0290505b92915050565b600061048360ff8416836103ce565b9392505050565b808202811582820484141761046e5761046e610375565b6000602082840312156104b357600080fd5b81516001600160a01b038116811461048357600080fd5b61166e806104d96000396000f3fe6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063cb71159511610064578063cb71159514610488578063dd62ed3e146104a8578063ea2f0b37146104ee578063f2fde38b1461050e57600080fd5b8063a9059cbb1461043c578063bf474bed1461045c578063ca9ec1991461047257600080fd5b806370a0823114610356578063715018a61461038c578063768dc710146103a15780638da5cb5b146103d15780638e5c1f50146103ef57806395d89b411461040f57600080fd5b806323b872dd1161013e578063508f6dfb11610118578063508f6dfb146102d357806351bc3c85146102f357806366a88d96146103085780636f268a991461031e57600080fd5b806323b872dd14610281578063313ce567146102a157806342a11095146102bd57600080fd5b806306fdde0314610191578063095ea7b3146101d657806317391e4914610206578063178b83781461022a57806318160ddd1461024c578063212e3b2b1461026157600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b5060408051808201909152600a81526946726565646f6d20414960b01b60208201525b6040516101cd9190611279565b60405180910390f35b3480156101e257600080fd5b506101f66101f13660046112dc565b61052e565b60405190151581526020016101cd565b34801561021257600080fd5b5061021c60075481565b6040519081526020016101cd565b34801561023657600080fd5b5061024a610245366004611308565b610545565b005b34801561025857600080fd5b5061021c61057c565b34801561026d57600080fd5b5061024a61027c366004611308565b61059d565b34801561028d57600080fd5b506101f661029c366004611321565b6105fb565b3480156102ad57600080fd5b50604051601281526020016101cd565b3480156102c957600080fd5b5061021c60055481565b3480156102df57600080fd5b5061024a6102ee366004611362565b610664565b3480156102ff57600080fd5b5061024a610690565b34801561031457600080fd5b5061021c60095481565b34801561032a57600080fd5b5060045461033e906001600160a01b031681565b6040516001600160a01b0390911681526020016101cd565b34801561036257600080fd5b5061021c610371366004611362565b6001600160a01b031660009081526001602052604090205490565b34801561039857600080fd5b5061024a6106e3565b3480156103ad57600080fd5b506101f66103bc366004611362565b60036020526000908152604090205460ff1681565b3480156103dd57600080fd5b506000546001600160a01b031661033e565b3480156103fb57600080fd5b5061024a61040a36600461137f565b6106f7565b34801561041b57600080fd5b506040805180820190915260048152634652454560e01b60208201526101c0565b34801561044857600080fd5b506101f66104573660046112dc565b61074c565b34801561046857600080fd5b5061021c60085481565b34801561047e57600080fd5b5061021c60065481565b34801561049457600080fd5b5061024a6104a3366004611362565b610759565b3480156104b457600080fd5b5061021c6104c33660046113a1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104fa57600080fd5b5061024a610509366004611362565b610783565b34801561051a57600080fd5b5061024a610529366004611362565b6107ac565b600061053b338484610825565b5060015b92915050565b61054d610949565b60018111156105775760405162461bcd60e51b815260040161056e906113da565b60405180910390fd5b600755565b600061058a6012600a6114fd565b61059890633b9aca0061150c565b905090565b6105a5610949565b6105b860c86105b261057c565b906109a3565b81116105f65760405162461bcd60e51b815260206004820152600d60248201526c4c696d697420746f6f206c6f7760981b604482015260640161056e565b600955565b60006106088484846109ec565b61065a843361065585604051806060016040528060288152602001611611602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e8c565b610825565b5060019392505050565b61066c610949565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6004546001600160a01b0316336001600160a01b0316146106b057600080fd5b3060009081526001602052604090205480156106cf576106cf81610ec6565b4780156106df576106df81611047565b5050565b6106eb610949565b6106f560006110d8565b565b6106ff610949565b60068211156107205760405162461bcd60e51b815260040161056e906113da565b60158111156107415760405162461bcd60e51b815260040161056e906113da565b600591909155600655565b600061053b3384846109ec565b610761610949565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61078b610949565b6001600160a01b03166000908152600360205260409020805460ff19169055565b6107b4610949565b6001600160a01b0381166108195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056e565b610822816110d8565b50565b6001600160a01b0383166108875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056e565b6001600160a01b0382166108e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000546001600160a01b031633146106f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056e565b60006109e583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611128565b9392505050565b6001600160a01b038316610a505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056e565b6001600160a01b038216610ab25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056e565b60008111610b145760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161056e565b6001600160a01b03831660009081526003602052604081205460ff16158015610b5657506001600160a01b03831660009081526003602052604090205460ff16155b15610d4957600b546001600160a01b03848116911614610beb5760095482610b93856001600160a01b031660009081526001602052604090205490565b610b9d9190611523565b1115610beb5760405162461bcd60e51b815260206004820152601b60248201527f4578636565647320746865206d617857616c6c65744c696d69742e0000000000604482015260640161056e565b600b546001600160a01b038581169116148015610c165750600a546001600160a01b03848116911614155b15610c3857610c3560646105b26005548561115690919063ffffffff16565b90505b600b546001600160a01b038481169116148015610c5e57506001600160a01b0384163014155b15610c8057610c7d60646105b26006548561115690919063ffffffff16565b90505b600b546001600160a01b03848116911614801590610cac5750600b546001600160a01b03858116911614155b15610cce57610ccb60646105b26007548561115690919063ffffffff16565b90505b30600090815260016020526040902054600b54600160a01b900460ff16158015610d055750600b546001600160a01b038581169116145b8015610d1a5750600b54600160a81b900460ff165b8015610d27575060085481115b15610d4757610d3581610ec6565b478015610d4557610d4547611047565b505b505b8015610dc35730600090815260016020526040902054610d6990826111d8565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dba9085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610de69083611237565b6001600160a01b038516600090815260016020526040902055610e2b610e0c8383611237565b6001600160a01b038516600090815260016020526040902054906111d8565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e758585611237565b60405190815260200160405180910390a350505050565b60008184841115610eb05760405162461bcd60e51b815260040161056e9190611279565b506000610ebd8486611536565b95945050505050565b600b805460ff60a01b1916600160a01b1790558015611037576040805160028082526060820183526000926020830190803683370190505090503081600081518110610f1457610f14611549565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f91919061155f565b81600181518110610fa457610fa4611549565b6001600160a01b039283166020918202929092010152600a54610fca9130911684610825565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061100390859060009086903090429060040161157c565b600060405180830381600087803b15801561101d57600080fd5b505af1158015611031573d6000803e3d6000fd5b50505050505b50600b805460ff60a01b19169055565b6004546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611094576040519150601f19603f3d011682016040523d82523d6000602084013e611099565b606091505b50509050806106df5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b604482015260640161056e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081836111495760405162461bcd60e51b815260040161056e9190611279565b506000610ebd84866115ee565b6000826000036111685750600061053f565b6000611174838561150c565b90508261118185836115ee565b146109e55760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161056e565b6000806111e58385611523565b9050838110156109e55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161056e565b60006109e583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e8c565b602081526000825180602084015260005b818110156112a7576020818601810151604086840101520161128a565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461082257600080fd5b600080604083850312156112ef57600080fd5b82356112fa816112c7565b946020939093013593505050565b60006020828403121561131a57600080fd5b5035919050565b60008060006060848603121561133657600080fd5b8335611341816112c7565b92506020840135611351816112c7565b929592945050506040919091013590565b60006020828403121561137457600080fd5b81356109e5816112c7565b6000806040838503121561139257600080fd5b50508035926020909101359150565b600080604083850312156113b457600080fd5b82356113bf816112c7565b915060208301356113cf816112c7565b809150509250929050565b6020808252600c908201526b0a8c2f040e8dede40d0d2ced60a31b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114515780850481111561143557611435611400565b600184161561144357908102905b60019390931c92800261141a565b935093915050565b6000826114685750600161053f565b816114755750600061053f565b816001811461148b5760028114611495576114b1565b600191505061053f565b60ff8411156114a6576114a6611400565b50506001821b61053f565b5060208310610133831016604e8410600b84101617156114d4575081810a61053f565b6114e16000198484611416565b80600019048211156114f5576114f5611400565b029392505050565b60006109e560ff841683611459565b808202811582820484141761053f5761053f611400565b8082018082111561053f5761053f611400565b8181038181111561053f5761053f611400565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561157157600080fd5b81516109e5816112c7565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115ce5783516001600160a01b03168352602093840193909201916001016115a7565b50506001600160a01b039590951660608401525050608001529392505050565b60008261160b57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c7a5df76a7878bb5cf3f3398511651afe1185def3f99280f530188d092d52c1364736f6c634300081a0033";

type FREEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FREEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FREE__factory extends ContractFactory {
  constructor(...args: FREEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FREE> {
    return super.deploy(overrides || {}) as Promise<FREE>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FREE {
    return super.attach(address) as FREE;
  }
  override connect(signer: Signer): FREE__factory {
    return super.connect(signer) as FREE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FREEInterface {
    return new utils.Interface(_abi) as FREEInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FREE {
    return new Contract(address, _abi, signerOrProvider) as FREE;
  }
}
