/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x9e403908a9a9118b9fe6c4b3a7b6188da51fdfd4.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblHETAPE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableHETAPETrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueHETAPEETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118ca83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118ca83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61155a806103706000396000f3fe6080604052600436106100f75760003560e01c8063751039fc1161008a578063a9059cbb11610059578063a9059cbb146102cc578063c57addc6146102ec578063dd62ed3e14610301578063ff6b71571461034757600080fd5b8063751039fc146102425780638da5cb5b146102575780638de370961461027f57806395d89b411461029f57600080fd5b806323b872dd116100c657806323b872dd146101b9578063313ce567146101d957806370a08231146101f5578063715018a61461022b57600080fd5b806306fdde0314610103578063095ea7b3146101505780630faee56f1461018057806318160ddd146101a457600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506040805180820190915260128152714b697769206279204d61747420467572696560701b60208201525b604051610147919061114a565b60405180910390f35b34801561015c57600080fd5b5061017061016b3660046111ad565b61035c565b6040519015158152602001610147565b34801561018c57600080fd5b5061019660095481565b604051908152602001610147565b3480156101b057600080fd5b50610196610373565b3480156101c557600080fd5b506101706101d43660046111d9565b610394565b3480156101e557600080fd5b5060405160098152602001610147565b34801561020157600080fd5b5061019661021036600461121a565b6001600160a01b031660009081526001602052604090205490565b34801561023757600080fd5b50610240610452565b005b34801561024e57600080fd5b506102406104cf565b34801561026357600080fd5b506000546040516001600160a01b039091168152602001610147565b34801561028b57600080fd5b5061024061029a36600461121a565b6104fb565b3480156102ab57600080fd5b506040805180820190915260048152634b49574960e01b602082015261013a565b3480156102d857600080fd5b506101706102e73660046111ad565b610539565b3480156102f857600080fd5b50610240610546565b34801561030d57600080fd5b5061019661031c366004611237565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035357600080fd5b50610240610901565b6000610369338484610964565b5060015b92915050565b60006103816009600a61136d565b61038f90633b9aca0061137c565b905090565b60006103a1848484610a88565b6004546001600160a01b031633148015906103f15750600b546001600160a01b03858116911614806103de57506001600160a01b03831661dead14155b806103f157506001600160a01b03841630145b15610448576104488433610443856040518060600160405280602881526020016114fd602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eb0565b610964565b5060019392505050565b6000546001600160a01b031633146104855760405162461bcd60e51b815260040161047c90611393565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104f95760405162461bcd60e51b815260040161047c90611393565b565b3360009081526003602052604090205460ff1661051757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610369338484610a88565b6000546001600160a01b031633146105705760405162461bcd60e51b815260040161047c90611393565b600b54600160a01b900460ff16156105ca5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161047c565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081178255610613913091906106059060099061136d565b61044390633b9aca0061137c565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a91906113c8565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906113c8565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561075d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078191906113c8565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306107c9816001600160a01b031660009081526001602052604090205490565b6000806107de6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610846573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061086b91906113e5565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611413565b50565b6000546001600160a01b0316331461092b5760405162461bcd60e51b815260040161047c90611393565b6000471161093857600080fd5b60405133904780156108fc02916000818181858888f193505050501580156108fe573d6000803e3d6000fd5b6001600160a01b0383166109c65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047c565b6001600160a01b038216610a275760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047c565b6001600160a01b038216610b4e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047c565b60008111610bb05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161047c565b60006001600160a01b0384163014801590610bd457506001600160a01b0383163014155b15610d5257600b546001600160a01b038581169116148015610c045750600a546001600160a01b03848116911614155b8015610c2957506001600160a01b03831660009081526003602052604090205460ff16155b8015610c4357506004546001600160a01b03848116911614155b15610c5e5760088054906000610c5883611435565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c955750600b546001600160a01b038581169116145b8015610caa5750600b54600160b01b900460ff165b8015610cc457506004546001600160a01b03868116911614155b15610d5057843b15610d0f5760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161047c565b8015610d445760006009548211610d265781610d2a565b6009545b9050610d42818511610d3c5784610eea565b81610eea565b505b47610d4e47611064565b505b505b6001600160a01b038416600090815260016020526040902054610d7590836110a2565b6001600160a01b038516600090815260016020526040902055610dba610d9b83836110a2565b6001600160a01b038516600090815260016020526040902054906110eb565b6001600160a01b0384166000908152600160205260409020558015610e4d5730600090815260016020526040902054610df390826110eb565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e449085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eaa576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e9885856110a2565b60405190815260200160405180910390a35b50505050565b60008184841115610ed45760405162461bcd60e51b815260040161047c919061114a565b506000610ee1848661144e565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f3257610f32611461565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faf91906113c8565b81600181518110610fc257610fc2611461565b6001600160a01b039283166020918202929092010152600a54610fe89130911684610964565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611021908590600090869030904290600401611477565b600060405180830381600087803b15801561103b57600080fd5b505af115801561104f573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561109e573d6000803e3d6000fd5b5050565b60006110e483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eb0565b9392505050565b6000806110f883856114e9565b9050838110156110e45760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161047c565b602081526000825180602084015260005b81811015611178576020818601810151604086840101520161115b565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108fe57600080fd5b600080604083850312156111c057600080fd5b82356111cb81611198565b946020939093013593505050565b6000806000606084860312156111ee57600080fd5b83356111f981611198565b9250602084013561120981611198565b929592945050506040919091013590565b60006020828403121561122c57600080fd5b81356110e481611198565b6000806040838503121561124a57600080fd5b823561125581611198565b9150602083013561126581611198565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112c1578085048111156112a5576112a5611270565b60018416156112b357908102905b60019390931c92800261128a565b935093915050565b6000826112d85750600161036d565b816112e55750600061036d565b81600181146112fb576002811461130557611321565b600191505061036d565b60ff84111561131657611316611270565b50506001821b61036d565b5060208310610133831016604e8410600b8410161715611344575081810a61036d565b6113516000198484611286565b806000190482111561136557611365611270565b029392505050565b60006110e460ff8416836112c9565b808202811582820484141761036d5761036d611270565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113da57600080fd5b81516110e481611198565b6000806000606084860312156113fa57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561142557600080fd5b815180151581146110e457600080fd5b60006001820161144757611447611270565b5060010190565b8181038181111561036d5761036d611270565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114c95783516001600160a01b03168352602093840193909201916001016114a2565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561036d5761036d61127056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212202ac847dab51ea83bd2c2ff89e08e8ae449685c34ceb0c0df66ff55e54b01ae7a64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
