/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../medium/0xf61f765a1bc8e21226dea6edc246db2e494a9a5c.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600f60055560196006556000600755600060085560196009556019600a556028600b556000600c556009600a6200003c91906200031e565b6200004c90637d60199062000336565b600d556200005d6009600a6200031e565b6200006d90637d60199062000336565b600e556200007e6009600a6200031e565b6200008f906401f580664062000336565b600f55620000a06009600a6200031e565b620000b1906401f580664062000336565b6010556012805461ffff60a81b19169055348015620000cf57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200011f6009600a6200031e565b62000130906461f313f88062000336565b33600081815260016020818152604080842095909555600480546001600160a01b03191673ce906736e9a9c324dea194e6e9a3b2ea6e3f77f017815583546001600160a01b0390811685526003909252858420805460ff199081168517909155308552868520805482168517905590549091168352938220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001e16009600a6200031e565b620001f2906461f313f88062000336565b60405190815260200160405180910390a362000350565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200026057816000190482111562000244576200024462000209565b808516156200025257918102915b93841c939080029062000224565b509250929050565b600082620002795750600162000318565b81620002885750600062000318565b8160018114620002a15760028114620002ac57620002cc565b600191505062000318565b60ff841115620002c057620002c062000209565b50506001821b62000318565b5060208310610133831016604e8410600b8410161715620002f1575081810a62000318565b620002fd83836200021f565b806000190482111562000314576200031462000209565b0290505b92915050565b60006200032f60ff84168362000268565b9392505050565b808202811582820484141762000318576200031862000209565b61185980620003606000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806395d89b411161006457806395d89b4114610119578063a9059cbb146102c6578063bf474bed146102e6578063c9567bf9146102fc578063dd62ed3e1461031157600080fd5b8063751039fc1461025d5780637d1db4a5146102725780638da5cb5b146102885780638f9a55c0146102b057600080fd5b806323b872dd116100dc57806323b872dd146101bf578063313ce567146101df57806351bc3c85146101fb57806370a0823114610212578063715018a61461024857600080fd5b806306fdde0314610119578063095ea7b3146101565780630faee56f1461018657806318160ddd146101aa57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201825260058152642922a3a2a760d91b6020820152905161014d9190611425565b60405180910390f35b34801561016257600080fd5b5061017661017136600461148c565b610357565b604051901515815260200161014d565b34801561019257600080fd5b5061019c600e5481565b60405190815260200161014d565b3480156101b657600080fd5b5061019c61036e565b3480156101cb57600080fd5b506101766101da3660046114b8565b610390565b3480156101eb57600080fd5b506040516009815260200161014d565b34801561020757600080fd5b506102106103fa565b005b34801561021e57600080fd5b5061019c61022d3660046114f9565b6001600160a01b031660009081526001602052604090205490565b34801561025457600080fd5b50610210610464565b34801561026957600080fd5b506102106104e1565b34801561027e57600080fd5b5061019c600f5481565b34801561029457600080fd5b506000546040516001600160a01b03909116815260200161014d565b3480156102bc57600080fd5b5061019c60105481565b3480156102d257600080fd5b506101766102e136600461148c565b610596565b3480156102f257600080fd5b5061019c600d5481565b34801561030857600080fd5b506102106105a3565b34801561031d57600080fd5b5061019c61032c366004611516565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000610364338484610960565b5060015b92915050565b600061037c6009600a611649565b61038b906461f313f880611658565b905090565b600061039d848484610a84565b6103ef84336103ea856040518060600160405280602881526020016117fc602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f9b565b610960565b5060015b9392505050565b6004546001600160a01b0316336001600160a01b03161461041a57600080fd5b3060009081526001602052604090205480158015906104425750601254600160b01b900460ff165b156104505761045081610fd5565b478015610460576104608161114f565b5050565b6000546001600160a01b031633146104975760405162461bcd60e51b815260040161048e9061166f565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461050b5760405162461bcd60e51b815260040161048e9061166f565b6105176009600a611649565b610526906461f313f880611658565b600f556105356009600a611649565b610544906461f313f880611658565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105746009600a611649565b610583906461f313f880611658565b60405190815260200160405180910390a1565b6000610364338484610a84565b6000546001600160a01b031633146105cd5760405162461bcd60e51b815260040161048e9061166f565b601254600160a01b900460ff16156106275760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161048e565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106719030906106626009600a611649565b6103ea906461f313f880611658565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906116a4565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e91906116a4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107df91906116a4565b601280546001600160a01b039283166001600160a01b03199091161790556011541663f305d7194730610827816001600160a01b031660009081526001602052604090205490565b60008061083c6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108a4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c991906116c1565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094691906116ef565b506012805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b0383166109c25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048e565b6001600160a01b038216610a235760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048e565b6001600160a01b038216610b4a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048e565b60008111610bac5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161048e565b6000610bb9848484611189565b9050610bcd6000546001600160a01b031690565b6001600160a01b0316846001600160a01b031614158015610bfc57506000546001600160a01b03848116911614155b15610e58576012546001600160a01b038581169116148015610c2c57506011546001600160a01b03848116911614155b8015610c5157506001600160a01b03831660009081526003602052604090205460ff16155b15610d6757600f54821115610ca85760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161048e565b60105482610ccb856001600160a01b031660009081526001602052604090205490565b610cd59190611711565b1115610d235760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161048e565b610d4f6064610d49600954600c5411610d3e57600554610d42565b6007545b859061127d565b906112ff565b600c80549192506000610d6183611724565b91905055505b6012546001600160a01b038481169116148015610d8d57506001600160a01b0384163014155b15610dba57610db76064610d49600a54600c5411610dad57600654610d42565b600854859061127d565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610df157506012546001600160a01b038581169116145b8015610e065750601254600160b01b900460ff165b8015610e135750600d5481115b8015610e225750600b54600c54115b15610e5657610e44610e3f84610e3a84600e54611341565b611341565b610fd5565b478015610e5457610e544761114f565b505b505b8015610ed25730600090815260016020526040902054610e789082611356565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ec99085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610ef590836113b5565b6001600160a01b038516600090815260016020526040902055610f3a610f1b83836113b5565b6001600160a01b03851660009081526001602052604090205490611356565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f8485856113b5565b60405190815260200160405180910390a350505050565b60008184841115610fbf5760405162461bcd60e51b815260040161048e9190611425565b506000610fcc848661173d565b95945050505050565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061101d5761101d611750565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906116a4565b816001815181106110ad576110ad611750565b6001600160a01b0392831660209182029290920101526011546110d39130911684610960565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac9479061110c908590600090869030904290600401611766565b600060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610460573d6000803e3d6000fd5b6012546000906001600160a01b0316336001600160a01b0316141580156111bf57503360009081526003602052604090205460ff165b80156111cb5750333b15155b80156111e057506001600160a01b0384163014155b1561121157506001600160a01b038316600090815260026020908152604080832033845290915281208290556103f3565b3360009081526003602052604090205460ff16801561123e57506012546001600160a01b03848116911614155b801561124a5750823b15155b15611273576001600160a01b0383166000908152600360205260409020805460ff191660011790555b5060009392505050565b60008260000361128f57506000610368565b600061129b8385611658565b9050826112a885836117d9565b146103f35760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161048e565b60006103f383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113f7565b600081831161135057826103f3565b50919050565b6000806113638385611711565b9050838110156103f35760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161048e565b60006103f383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f9b565b600081836114185760405162461bcd60e51b815260040161048e9190611425565b506000610fcc84866117d9565b60006020808352835180602085015260005b8181101561145357858101830151858201604001528201611437565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461148957600080fd5b50565b6000806040838503121561149f57600080fd5b82356114aa81611474565b946020939093013593505050565b6000806000606084860312156114cd57600080fd5b83356114d881611474565b925060208401356114e881611474565b929592945050506040919091013590565b60006020828403121561150b57600080fd5b81356103f381611474565b6000806040838503121561152957600080fd5b823561153481611474565b9150602083013561154481611474565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115a05781600019048211156115865761158661154f565b8085161561159357918102915b93841c939080029061156a565b509250929050565b6000826115b757506001610368565b816115c457506000610368565b81600181146115da57600281146115e457611600565b6001915050610368565b60ff8411156115f5576115f561154f565b50506001821b610368565b5060208310610133831016604e8410600b8410161715611623575081810a610368565b61162d8383611565565b80600019048211156116415761164161154f565b029392505050565b60006103f360ff8416836115a8565b80820281158282048414176103685761036861154f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116b657600080fd5b81516103f381611474565b6000806000606084860312156116d657600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561170157600080fd5b815180151581146103f357600080fd5b808201808211156103685761036861154f565b6000600182016117365761173661154f565b5060010190565b818103818111156103685761036861154f565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156117b85784516001600160a01b031683529383019391830191600101611793565b50506001600160a01b03969096166060850152505050608001529392505050565b6000826117f657634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220f3fae3fddf4211d494c5c738af0d3ff760f099e496da3d0c379b0fc68716b10164736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Contract> {
    return super.deploy(overrides || {}) as Promise<Contract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Contract {
    return super.attach(address) as Contract;
  }
  override connect(signer: Signer): Contract__factory {
    return super.connect(signer) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new utils.Interface(_abi) as ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contract {
    return new Contract(address, _abi, signerOrProvider) as Contract;
  }
}
