/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Sweetie,
  SweetieInterface,
} from "../../../medium/0x065d6a60b0520523bcc81a89374d52ed8cce5471.sol/Sweetie";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526013600655601360075560006008556000600955600a8055600a600b556005600c556000600d556000600e556009600a6200004091906200034c565b62000050906301312d0062000364565b600f55620000616009600a6200034c565b62000071906301312d0062000364565b601055620000826009600a6200034c565b62000091906298968062000364565b601155620000a26009600a6200034c565b620000b29063011bd04062000364565b6012556014805461ffff60a81b1916905560006015819055601655348015620000da57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013c6009600a6200034c565b6200014c90633b9aca0062000364565b336000908152600160208190526040822092909255600390620001776000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d63390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002106009600a6200034c565b6200022090633b9aca0062000364565b60405190815260200160405180910390a36200037e565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028e57816000190482111562000272576200027262000237565b808516156200028057918102915b93841c939080029062000252565b509250929050565b600082620002a75750600162000346565b81620002b65750600062000346565b8160018114620002cf5760028114620002da57620002fa565b600191505062000346565b60ff841115620002ee57620002ee62000237565b50506001821b62000346565b5060208310610133831016604e8410600b84101617156200031f575081810a62000346565b6200032b83836200024d565b806000190482111562000342576200034262000237565b0290505b92915050565b60006200035d60ff84168362000296565b9392505050565b808202811582820484141762000346576200034662000237565b611c6e806200038e6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103ce578063bf474bed146103ee578063c9567bf914610404578063d34628cc14610419578063dd62ed3e14610439578063ec1f3f631461047f57600080fd5b8063715018a614610320578063751039fc146103355780637d1db4a51461034a5780638da5cb5b146103605780638f9a55c01461038857806395d89b411461039e57600080fd5b8063313ce56711610108578063313ce5671461024b57806331c2d847146102675780633bbac5791461028757806351bc3c85146102c05780636fc3eaec146102d557806370a08231146102ea57600080fd5b806306fdde031461015b578063095ea7b3146101ab5780630faee56f146101db578063109daa99146101ff57806318160ddd1461021657806323b872dd1461022b57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152601581527453776565746965206279204d61747420467572696560581b60208201525b6040516101a29190611739565b60405180910390f35b3480156101b757600080fd5b506101cb6101c63660046117ad565b61049f565b60405190151581526020016101a2565b3480156101e757600080fd5b506101f160125481565b6040519081526020016101a2565b34801561020b57600080fd5b506102146104b6565b005b34801561022257600080fd5b506101f1610526565b34801561023757600080fd5b506101cb6102463660046117d9565b610547565b34801561025757600080fd5b50604051600981526020016101a2565b34801561027357600080fd5b50610214610282366004611830565b6105b0565b34801561029357600080fd5b506101cb6102a23660046118f5565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102cc57600080fd5b5061021461063c565b3480156102e157600080fd5b5061021461068b565b3480156102f657600080fd5b506101f16103053660046118f5565b6001600160a01b031660009081526001602052604090205490565b34801561032c57600080fd5b506102146106b8565b34801561034157600080fd5b5061021461072c565b34801561035657600080fd5b506101f1600f5481565b34801561036c57600080fd5b506000546040516001600160a01b0390911681526020016101a2565b34801561039457600080fd5b506101f160105481565b3480156103aa57600080fd5b506040805180820190915260078152665357454554494560c81b6020820152610195565b3480156103da57600080fd5b506101cb6103e93660046117ad565b6107d9565b3480156103fa57600080fd5b506101f160115481565b34801561041057600080fd5b506102146107e6565b34801561042557600080fd5b50610214610434366004611830565b610ba2565b34801561044557600080fd5b506101f1610454366004611912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561048b57600080fd5b5061021461049a36600461194b565b610c2a565b60006104ac338484610c71565b5060015b92915050565b6000546001600160a01b031633146104e95760405162461bcd60e51b81526004016104e090611964565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105346009600a611a93565b61054290633b9aca00611aa2565b905090565b6000610554848484610d95565b6105a684336105a185604051806060016040528060288152602001611c11602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061139c565b610c71565b5060019392505050565b6000546001600160a01b031633146105da5760405162461bcd60e51b81526004016104e090611964565b60005b8151811015610638576000600460008484815181106105fe576105fe611ab9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105dd565b5050565b6005546001600160a01b0316336001600160a01b03161461065c57600080fd5b30600090815260016020526040902054801561067b5761067b816113d6565b4780156106385761063881611550565b6005546001600160a01b0316336001600160a01b0316146106ab57600080fd5b476106b581611550565b50565b6000546001600160a01b031633146106e25760405162461bcd60e51b81526004016104e090611964565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107565760405162461bcd60e51b81526004016104e090611964565b6107626009600a611a93565b61077090633b9aca00611aa2565b600f5561077f6009600a611a93565b61078d90633b9aca00611aa2565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107bd6009600a611a93565b6107cb90633b9aca00611aa2565b60405190815260200161051c565b60006104ac338484610d95565b6000546001600160a01b031633146108105760405162461bcd60e51b81526004016104e090611964565b601454600160a01b900460ff161561086a5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104e0565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108b39030906108a56009600a611a93565b6105a190633b9aca00611aa2565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190611acf565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611acf565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a219190611acf565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a69816001600160a01b031660009081526001602052604090205490565b600080610a7e6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ae6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b0b9190611aec565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190611b1a565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bcc5760405162461bcd60e51b81526004016104e090611964565b60005b815181101561063857600160046000848481518110610bf057610bf0611ab9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bcf565b6005546001600160a01b0316336001600160a01b031614610c4a57600080fd5b6008548111158015610c5e57506009548111155b610c6757600080fd5b6008819055600955565b6001600160a01b038316610cd35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b6001600160a01b038216610d345760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610df95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e0565b6001600160a01b038216610e5b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e0565b60008111610ebd5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104e0565b600080546001600160a01b03858116911614801590610eea57506000546001600160a01b03848116911614155b15611259576001600160a01b03841660009081526004602052604090205460ff16158015610f3157506001600160a01b03831660009081526004602052604090205460ff16155b610f3a57600080fd5b600e54600003610f7357610f706064610f6a600a54600e5411610f5f57600654610f63565b6008545b859061158a565b90611613565b90505b600e5415610f9857610f956064610f6a600d548561158a90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fc357506013546001600160a01b03848116911614155b8015610fe857506001600160a01b03831660009081526003602052604090205460ff16155b156110ed57600f5482111561103f5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104e0565b60105482611062856001600160a01b031660009081526001602052604090205490565b61106c9190611b3c565b11156110ba5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104e0565b6110d56064610f6a600a54600e5411610f5f57600654610f63565b600e805491925060006110e783611b4f565b91905055505b6014546001600160a01b03848116911614801561111357506001600160a01b0384163014155b156111405761113d6064610f6a600b54600e541161113357600754610f63565b600954859061158a565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561117757506014546001600160a01b038581169116145b801561118c5750601454600160b01b900460ff165b8015611199575060115481115b80156111a85750600c54600e54115b15611257576016544311156111bd5760006015555b60036015541061120f5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104e0565b61122c6112278461122284601254611655565b611655565b6113d6565b47801561123c5761123c47611550565b6015805490600061124c83611b4f565b909155505043601655505b505b80156112d35730600090815260016020526040902054611279908261166a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112ca9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112f690836116c9565b6001600160a01b03851660009081526001602052604090205561133b61131c83836116c9565b6001600160a01b0385166000908152600160205260409020549061166a565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61138585856116c9565b60405190815260200160405180910390a350505050565b600081848411156113c05760405162461bcd60e51b81526004016104e09190611739565b5060006113cd8486611b68565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141e5761141e611ab9565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149b9190611acf565b816001815181106114ae576114ae611ab9565b6001600160a01b0392831660209182029290920101526013546114d49130911684610c71565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac9479061150d908590600090869030904290600401611b7b565b600060405180830381600087803b15801561152757600080fd5b505af115801561153b573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610638573d6000803e3d6000fd5b60008260000361159c575060006104b0565b60006115a88385611aa2565b9050826115b58583611bee565b1461160c5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104e0565b9392505050565b600061160c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061170b565b6000818311611664578261160c565b50919050565b6000806116778385611b3c565b90508381101561160c5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104e0565b600061160c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061139c565b6000818361172c5760405162461bcd60e51b81526004016104e09190611739565b5060006113cd8486611bee565b60006020808352835180602085015260005b818110156117675785810183015185820160400152820161174b565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106b557600080fd5b80356117a881611788565b919050565b600080604083850312156117c057600080fd5b82356117cb81611788565b946020939093013593505050565b6000806000606084860312156117ee57600080fd5b83356117f981611788565b9250602084013561180981611788565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561184357600080fd5b823567ffffffffffffffff8082111561185b57600080fd5b818501915085601f83011261186f57600080fd5b8135818111156118815761188161181a565b8060051b604051601f19603f830116810181811085821117156118a6576118a661181a565b6040529182528482019250838101850191888311156118c457600080fd5b938501935b828510156118e9576118da8561179d565b845293850193928501926118c9565b98975050505050505050565b60006020828403121561190757600080fd5b813561160c81611788565b6000806040838503121561192557600080fd5b823561193081611788565b9150602083013561194081611788565b809150509250929050565b60006020828403121561195d57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119ea5781600019048211156119d0576119d0611999565b808516156119dd57918102915b93841c93908002906119b4565b509250929050565b600082611a01575060016104b0565b81611a0e575060006104b0565b8160018114611a245760028114611a2e57611a4a565b60019150506104b0565b60ff841115611a3f57611a3f611999565b50506001821b6104b0565b5060208310610133831016604e8410600b8410161715611a6d575081810a6104b0565b611a7783836119af565b8060001904821115611a8b57611a8b611999565b029392505050565b600061160c60ff8416836119f2565b80820281158282048414176104b0576104b0611999565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ae157600080fd5b815161160c81611788565b600080600060608486031215611b0157600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b2c57600080fd5b8151801515811461160c57600080fd5b808201808211156104b0576104b0611999565b600060018201611b6157611b61611999565b5060010190565b818103818111156104b0576104b0611999565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bcd5784516001600160a01b031683529383019391830191600101611ba8565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c0b57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ab2b5e869379528068b50bedb7fb235e98cd4c245f3af25c1cec06919f15d1bf64736f6c63430008170033";

type SweetieConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SweetieConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sweetie__factory extends ContractFactory {
  constructor(...args: SweetieConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sweetie> {
    return super.deploy(overrides || {}) as Promise<Sweetie>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sweetie {
    return super.attach(address) as Sweetie;
  }
  override connect(signer: Signer): Sweetie__factory {
    return super.connect(signer) as Sweetie__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SweetieInterface {
    return new utils.Interface(_abi) as SweetieInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Sweetie {
    return new Contract(address, _abi, signerOrProvider) as Sweetie;
  }
}
