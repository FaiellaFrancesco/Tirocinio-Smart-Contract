/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x00500ccc503ffe0ec21ff4b66e322b6bd172982b.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061188d83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061188d83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61151d806103706000396000f3fe6080604052600436106100f75760003560e01c8063751039fc1161008a578063a9059cbb11610059578063a9059cbb14610284578063d02c9383146102a4578063dd62ed3e146102b9578063f5f67431146102ff57600080fd5b8063751039fc146102325780638da5cb5b14610247578063959cbb9d1461026f57806395d89b411461010357600080fd5b806323b872dd116100c657806323b872dd146101a9578063313ce567146101c957806370a08231146101e5578063715018a61461021b57600080fd5b806306fdde0314610103578063095ea7b3146101405780630faee56f1461017057806318160ddd1461019457600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b50604080518082018252600581526442616c6c7360d81b60208201529051610137919061110d565b60405180910390f35b34801561014c57600080fd5b5061016061015b366004611170565b61031f565b6040519015158152602001610137565b34801561017c57600080fd5b5061018660095481565b604051908152602001610137565b3480156101a057600080fd5b50610186610336565b3480156101b557600080fd5b506101606101c436600461119c565b610357565b3480156101d557600080fd5b5060405160098152602001610137565b3480156101f157600080fd5b506101866102003660046111dd565b6001600160a01b031660009081526001602052604090205490565b34801561022757600080fd5b50610230610415565b005b34801561023e57600080fd5b50610230610492565b34801561025357600080fd5b506000546040516001600160a01b039091168152602001610137565b34801561027b57600080fd5b506102306104be565b34801561029057600080fd5b5061016061029f366004611170565b610524565b3480156102b057600080fd5b50610230610531565b3480156102c557600080fd5b506101866102d43660046111fa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561030b57600080fd5b5061023061031a3660046111dd565b6108e9565b600061032c338484610927565b5060015b92915050565b60006103446009600a611330565b61035290633b9aca0061133f565b905090565b6000610364848484610a4b565b6004546001600160a01b031633148015906103b45750600b546001600160a01b03858116911614806103a157506001600160a01b03831661dead14155b806103b457506001600160a01b03841630145b1561040b5761040b8433610406856040518060600160405280602881526020016114c0602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e73565b610927565b5060019392505050565b6000546001600160a01b031633146104485760405162461bcd60e51b815260040161043f90611356565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104bc5760405162461bcd60e51b815260040161043f90611356565b565b6000546001600160a01b031633146104e85760405162461bcd60e51b815260040161043f90611356565b600047116104f557600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610521573d6000803e3d6000fd5b50565b600061032c338484610a4b565b6000546001600160a01b0316331461055b5760405162461bcd60e51b815260040161043f90611356565b600b54600160a01b900460ff16156105b55760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161043f565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556105fe913091906105f090600990611330565b61040690633b9aca0061133f565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610675919061138b565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb919061138b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076c919061138b565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306107b4816001600160a01b031660009081526001602052604090205490565b6000806107c96000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610831573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061085691906113a8565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052191906113d6565b3360009081526003602052604090205460ff1661090557600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161043f565b6001600160a01b0382166109ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161043f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aaf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161043f565b6001600160a01b038216610b115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161043f565b60008111610b735760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161043f565b60006001600160a01b0384163014801590610b9757506001600160a01b0383163014155b15610d1557600b546001600160a01b038581169116148015610bc75750600a546001600160a01b03848116911614155b8015610bec57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c0657506004546001600160a01b03848116911614155b15610c215760088054906000610c1b836113f8565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c585750600b546001600160a01b038581169116145b8015610c6d5750600b54600160b01b900460ff165b8015610c8757506004546001600160a01b03868116911614155b15610d1357843b15610cd25760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161043f565b8015610d075760006009548211610ce95781610ced565b6009545b9050610d05818511610cff5784610ead565b81610ead565b505b47610d1147611027565b505b505b6001600160a01b038416600090815260016020526040902054610d389083611065565b6001600160a01b038516600090815260016020526040902055610d7d610d5e8383611065565b6001600160a01b038516600090815260016020526040902054906110ae565b6001600160a01b0384166000908152600160205260409020558015610e105730600090815260016020526040902054610db690826110ae565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e079085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e6d576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e5b8585611065565b60405190815260200160405180910390a35b50505050565b60008184841115610e975760405162461bcd60e51b815260040161043f919061110d565b506000610ea48486611411565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ef557610ef5611424565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f72919061138b565b81600181518110610f8557610f85611424565b6001600160a01b039283166020918202929092010152600a54610fab9130911684610927565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610fe490859060009086903090429060040161143a565b600060405180830381600087803b158015610ffe57600080fd5b505af1158015611012573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611061573d6000803e3d6000fd5b5050565b60006110a783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e73565b9392505050565b6000806110bb83856114ac565b9050838110156110a75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161043f565b602081526000825180602084015260005b8181101561113b576020818601810151604086840101520161111e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461052157600080fd5b6000806040838503121561118357600080fd5b823561118e8161115b565b946020939093013593505050565b6000806000606084860312156111b157600080fd5b83356111bc8161115b565b925060208401356111cc8161115b565b929592945050506040919091013590565b6000602082840312156111ef57600080fd5b81356110a78161115b565b6000806040838503121561120d57600080fd5b82356112188161115b565b915060208301356112288161115b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112845780850481111561126857611268611233565b600184161561127657908102905b60019390931c92800261124d565b935093915050565b60008261129b57506001610330565b816112a857506000610330565b81600181146112be57600281146112c8576112e4565b6001915050610330565b60ff8411156112d9576112d9611233565b50506001821b610330565b5060208310610133831016604e8410600b8410161715611307575081810a610330565b6113146000198484611249565b806000190482111561132857611328611233565b029392505050565b60006110a760ff84168361128c565b808202811582820484141761033057610330611233565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561139d57600080fd5b81516110a78161115b565b6000806000606084860312156113bd57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156113e857600080fd5b815180151581146110a757600080fd5b60006001820161140a5761140a611233565b5060010190565b8181038181111561033057610330611233565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b8181101561148c5783516001600160a01b0316835260209384019390920191600101611465565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103305761033061123356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212202428e3e51fdf7a2ebe7785ec62b2236b5e308f219641ee14dbace57594a5bb7664736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
