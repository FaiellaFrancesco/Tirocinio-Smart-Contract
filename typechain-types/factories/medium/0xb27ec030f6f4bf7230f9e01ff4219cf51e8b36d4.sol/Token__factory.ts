/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xb27ec030f6f4bf7230f9e01ff4219cf51e8b36d4.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueBUFFETCOINETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b610036906319133850610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f7906319133850610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b610138906319133850610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061199a83398151915260646101866009600a610312565b610194906319133850610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061199a83398151915260646101da6009600a610312565b6101e8906319133850610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61162a806103706000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b41146100f8578063a9059cbb1461027e578063dd62ed3e1461029e578063ea414b28146102e457600080fd5b806370a08231146101f6578063715018a61461022c5780638a8c523c146102415780638da5cb5b1461025657600080fd5b806318160ddd116100c657806318160ddd1461018e57806323b872dd146101a3578063313ce567146101c35780636f238fd5146101df57600080fd5b806306fdde03146100f8578063095ea7b31461013a5780630faee56f1461016a57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50604080518082018252600a815269212aa32322aa21a7a4a760b11b6020820152905161013191906111f8565b60405180910390f35b34801561014657600080fd5b5061015a61015536600461125b565b610304565b6040519015158152602001610131565b34801561017657600080fd5b5061018060095481565b604051908152602001610131565b34801561019a57600080fd5b5061018061031b565b3480156101af57600080fd5b5061015a6101be366004611287565b61033c565b3480156101cf57600080fd5b5060405160098152602001610131565b3480156101eb57600080fd5b506101f46103fa565b005b34801561020257600080fd5b506101806102113660046112c8565b6001600160a01b031660009081526001602052604090205490565b34801561023857600080fd5b506101f4610469565b34801561024d57600080fd5b506101f46104dd565b34801561026257600080fd5b506000546040516001600160a01b039091168152602001610131565b34801561028a57600080fd5b5061015a61029936600461125b565b610895565b3480156102aa57600080fd5b506101806102b93660046112e5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102f057600080fd5b506101f46102ff3660046112c8565b6108a2565b60006103113384846108e0565b5060015b92915050565b60006103296009600a61141b565b61033790631913385061142a565b905090565b6000610349848484610a04565b6004546001600160a01b031633148015906103995750600b546001600160a01b038581169116148061038657506001600160a01b03831661dead14155b8061039957506001600160a01b03841630145b156103f0576103f084336103eb856040518060600160405280602881526020016115cd602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e6c565b6108e0565b5060019392505050565b6000546001600160a01b0316331461042d5760405162461bcd60e51b815260040161042490611441565b60405180910390fd5b6000471161043a57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610466573d6000803e3d6000fd5b50565b6000546001600160a01b031633146104935760405162461bcd60e51b815260040161042490611441565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105075760405162461bcd60e51b815260040161042490611441565b600b54600160a01b900460ff16156105615760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610424565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556105aa9130919061059c9060099061141b565b6103eb90631913385061142a565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190611476565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611476565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107189190611476565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d7194730610760816001600160a01b031660009081526001602052604090205490565b6000806107756000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107dd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108029190611493565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610871573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046691906114c1565b6000610311338484610a04565b3360009081526003602052604090205460ff166108be57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109425760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b0382166109a35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610424565b6001600160a01b038216610aca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b60008111610b2c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610424565b60006001600160a01b0384163014801590610b5057506001600160a01b0383163014155b15610d0e57600b54600160a81b900460ff16610b9557610b926064610b8c60075460085411610b8157600554610b85565b6006545b8590610ea6565b90610f2f565b90505b600b546001600160a01b038581169116148015610bc05750600a546001600160a01b03848116911614155b8015610be557506001600160a01b03831660009081526003602052604090205460ff16155b8015610bff57506004546001600160a01b03848116911614155b15610c1a5760088054906000610c14836114e3565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c515750600b546001600160a01b038581169116145b8015610c665750600b54600160b01b900460ff165b8015610c8057506004546001600160a01b03868116911614155b15610d0c57843b15610ccb5760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610424565b8015610d005760006009548211610ce25781610ce6565b6009545b9050610cfe818511610cf85784610f71565b81610f71565b505b47610d0a476110eb565b505b505b6001600160a01b038416600090815260016020526040902054610d319083611129565b6001600160a01b038516600090815260016020526040902055610d76610d578383611129565b6001600160a01b0385166000908152600160205260409020549061116b565b6001600160a01b0384166000908152600160205260409020558015610e095730600090815260016020526040902054610daf908261116b565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e009085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e66576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e548585611129565b60405190815260200160405180910390a35b50505050565b60008184841115610e905760405162461bcd60e51b815260040161042491906111f8565b506000610e9d84866114fc565b95945050505050565b600082600003610eb857506000610315565b6000610ec4838561142a565b905082610ed1858361150f565b14610f285760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610424565b9392505050565b6000610f2883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111ca565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fb957610fb9611531565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110369190611476565b8160018151811061104957611049611531565b6001600160a01b039283166020918202929092010152600a5461106f91309116846108e0565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110a8908590600090869030904290600401611547565b600060405180830381600087803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611125573d6000803e3d6000fd5b5050565b6000610f2883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e6c565b60008061117883856115b9565b905083811015610f285760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610424565b600081836111eb5760405162461bcd60e51b815260040161042491906111f8565b506000610e9d848661150f565b602081526000825180602084015260005b818110156112265760208186018101516040868401015201611209565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461046657600080fd5b6000806040838503121561126e57600080fd5b823561127981611246565b946020939093013593505050565b60008060006060848603121561129c57600080fd5b83356112a781611246565b925060208401356112b781611246565b929592945050506040919091013590565b6000602082840312156112da57600080fd5b8135610f2881611246565b600080604083850312156112f857600080fd5b823561130381611246565b9150602083013561131381611246565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561136f578085048111156113535761135361131e565b600184161561136157908102905b60019390931c928002611338565b935093915050565b60008261138657506001610315565b8161139357506000610315565b81600181146113a957600281146113b3576113cf565b6001915050610315565b60ff8411156113c4576113c461131e565b50506001821b610315565b5060208310610133831016604e8410600b84101617156113f2575081810a610315565b6113ff6000198484611334565b80600019048211156114135761141361131e565b029392505050565b6000610f2860ff841683611377565b80820281158282048414176103155761031561131e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561148857600080fd5b8151610f2881611246565b6000806000606084860312156114a857600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156114d357600080fd5b81518015158114610f2857600080fd5b6000600182016114f5576114f561131e565b5060010190565b818103818111156103155761031561131e565b60008261152c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115995783516001600160a01b0316835260209384019390920191600101611572565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103155761031561131e56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c89b381d1311004c74d90f2f43a01ce3b2e2d631f857987dd5379e2cb9773d7e64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
