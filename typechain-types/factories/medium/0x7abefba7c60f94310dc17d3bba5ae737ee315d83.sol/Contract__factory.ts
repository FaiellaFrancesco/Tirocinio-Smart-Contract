/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../medium/0x7abefba7c60f94310dc17d3bba5ae737ee315d83.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notBot",
        type: "address",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot44",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526017600755601760085560006009556000600a55600e600b556014600c556003600d556000600e556000600f556009600a620000419190620004ea565b62000052906401f580664062000502565b601055620000636009600a620004ea565b62000074906401f580664062000502565b601155620000856009600a620004ea565b620000959063fac0332062000502565b601255620000a66009600a620004ea565b620000b69063fac0332062000502565b6013556015805462ffffff60a81b1916905560006016819055601781905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b03191633179055620001336009600a620004ea565b62000144906461f313f88062000502565b3060009081526001602081905260408220929092556003906200016f6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530808252600385528382208054871660019081179091556006549093168252928120805486168317905560049093527fbc48d0b18b37d802eb6f16293b7c4673b63f4ce21f23256f585e771461ac6b0a80548516821790557f2ad68f6a04de56af63ca8049466ef5d841eaf2f483dc2b5e2940c09fab2e492780548516821790557fded10936f8187872bef98760eef728ce7eab5cfa94bae4c9994f051fde554ceb80548516821790557f3e18ed82e212e39a1271e0a731492610e1bd67b81fad35038cf403e495ac050480548516821790557f6a109cbb292b6b629a40b210cb367eb26f9eeddc1d2cb1aa9692cfa1b83d375980548516821790557fdd76867d6b711dfe60c36d67864418df7aa840549d9629570dece4607288ed1480548516821790557fbf6df302f629cdc467883a6ffd1ae27421bdd85144141e48d39f2f353d6d54eb80548516821790557fdef22fb6e693f382c0f91c4569b23bdd7018766364193cdd774a5aa600c1b44280548516821790557fb8440265b3e418917c7b6a6210451dddc551740fbed1ac51c829824f93033869805485168217905573e2dd16c9d9eb27b9d341d49600dd84e24bd208c583527f633df843529d8557624c113bc57c3ce9752df1b8e012fc7814254234dfd80d1a8054909416179092557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003ad6009600a620004ea565b620003be906461f313f88062000502565b60405190815260200160405180910390a36200051c565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200042c578160001904821115620004105762000410620003d5565b808516156200041e57918102915b93841c9390800290620003f0565b509250929050565b6000826200044557506001620004e4565b816200045457506000620004e4565b81600181146200046d5760028114620004785762000498565b6001915050620004e4565b60ff8411156200048c576200048c620003d5565b50506001821b620004e4565b5060208310610133831016604e8410600b8410161715620004bd575081810a620004e4565b620004c98383620003eb565b8060001904821115620004e057620004e0620003d5565b0290505b92915050565b6000620004fb60ff84168362000434565b9392505050565b8082028115828204841417620004e457620004e4620003d5565b611dae806200052c6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d15780638f9a55c01161008a578063bf474bed11610064578063bf474bed14610444578063c9567bf91461045a578063dd62ed3e1461046f578063ec1f3f63146104b557600080fd5b80638f9a55c0146103de57806395d89b41146103f4578063a9059cbb1461042457600080fd5b806370a0823114610320578063715018a614610356578063751039fc1461036b5780637d1db4a5146103805780638cd4426d146103965780638da5cb5b146103b657600080fd5b8063313ce56711610123578063313ce5671461026157806334a3f2fd1461027d5780634c8afff4146102b657806351bc3c85146102d657806356ec63a5146102eb5780636fc3eaec1461030b57600080fd5b806306fdde0314610176578063095ea7b3146101c15780630faee56f146101f1578063109daa991461021557806318160ddd1461022c57806323b872dd1461024157600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5060408051808201909152601081526f2222a9aa24a72ca99021a424a1a5a2a760811b60208201525b6040516101b8919061194b565b60405180910390f35b3480156101cd57600080fd5b506101e16101dc3660046119af565b6104d5565b60405190151581526020016101b8565b3480156101fd57600080fd5b5061020760135481565b6040519081526020016101b8565b34801561022157600080fd5b5061022a6104ec565b005b34801561023857600080fd5b5061020761055c565b34801561024d57600080fd5b506101e161025c3660046119db565b61057e565b34801561026d57600080fd5b50604051600981526020016101b8565b34801561028957600080fd5b506101e1610298366004611a1c565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102c257600080fd5b5061022a6102d1366004611a1c565b6105e7565b3480156102e257600080fd5b5061022a610632565b3480156102f757600080fd5b5061022a610306366004611a1c565b610685565b34801561031757600080fd5b5061022a6106d3565b34801561032c57600080fd5b5061020761033b366004611a1c565b6001600160a01b031660009081526001602052604090205490565b34801561036257600080fd5b5061022a610700565b34801561037757600080fd5b5061022a610774565b34801561038c57600080fd5b5061020760105481565b3480156103a257600080fd5b5061022a6103b13660046119af565b610831565b3480156103c257600080fd5b506000546040516001600160a01b0390911681526020016101b8565b3480156103ea57600080fd5b5061020760115481565b34801561040057600080fd5b5060408051808201909152600781526644455354494e5960c81b60208201526101ab565b34801561043057600080fd5b506101e161043f3660046119af565b610954565b34801561045057600080fd5b5061020760125481565b34801561046657600080fd5b5061022a610961565b34801561047b57600080fd5b5061020761048a366004611a39565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104c157600080fd5b5061022a6104d0366004611a72565b610d20565b60006104e2338484610d67565b5060015b92915050565b6000546001600160a01b0316331461051f5760405162461bcd60e51b815260040161051690611a8b565b60405180910390fd5b6000600e8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061056a6009600a611bba565b610579906461f313f880611bc9565b905090565b600061058b848484610e8b565b6105dd84336105d885604051806060016040528060288152602001611d51602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906115ae565b610d67565b5060019392505050565b6000546001600160a01b031633146106115760405162461bcd60e51b815260040161051690611a8b565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6006546001600160a01b0316336001600160a01b03161461065257600080fd5b30600090815260016020526040902054801561067157610671816115e8565b4780156106815761068181611762565b5050565b6000546001600160a01b031633146106af5760405162461bcd60e51b815260040161051690611a8b565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6006546001600160a01b0316336001600160a01b0316146106f357600080fd5b476106fd81611762565b50565b6000546001600160a01b0316331461072a5760405162461bcd60e51b815260040161051690611a8b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461079e5760405162461bcd60e51b815260040161051690611a8b565b6107aa6009600a611bba565b6107b9906461f313f880611bc9565b6010556107c86009600a611bba565b6107d7906461f313f880611bc9565b6011556015805460ff60b81b191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6108146009600a611bba565b610823906461f313f880611bc9565b604051908152602001610552565b6006546001600160a01b0316336001600160a01b03161461085157600080fd5b6040516370a0823160e01b81523060048201526000906108d5906064906108cf9085906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c99190611be0565b9061179c565b90611825565b60065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af115801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190611bf9565b50505050565b60006104e2338484610e8b565b6000546001600160a01b0316331461098b5760405162461bcd60e51b815260040161051690611a8b565b601554600160a01b900460ff16156109e55760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610516565b601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155610a2f903090610a206009600a611bba565b6105d8906461f313f880611bc9565b601460009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa69190611c1b565b6001600160a01b031663c9c6539630601460009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611c1b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611c1b565b601580546001600160a01b039283166001600160a01b03199091161790556014541663f305d7194730610be5816001600160a01b031660009081526001602052604090205490565b600080610bfa6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c62573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c879190611c38565b505060155460145460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611bf9565b506015805463ffff00ff60a01b1916630101000160a01b179055565b6006546001600160a01b0316336001600160a01b031614610d4057600080fd5b6009548111158015610d545750600a548111155b610d5d57600080fd5b6009819055600a55565b6001600160a01b038316610dc95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610516565b6001600160a01b038216610e2a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610516565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610eef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610516565b6001600160a01b038216610f515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610516565b60008111610fb35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610516565b600080546001600160a01b03858116911614801590610fe057506000546001600160a01b03848116911614155b1561146b576001600160a01b03841660009081526004602052604090205460ff1615801561102757506001600160a01b03831660009081526004602052604090205460ff16155b801561104357503260009081526004602052604090205460ff16155b61104c57600080fd5b601554600160b81b900460ff1615611152576000546001600160a01b0384811691161480159061108a57506014546001600160a01b03848116911614155b80156110a457506015546001600160a01b03848116911614155b156111525732600090815260056020526040902054431161113f5760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a401610516565b3260009081526005602052604090204390555b600f546000036111855761118260646108cf600b54600f54116111775760075461117b565b6009545b859061179c565b90505b600f54156111aa576111a760646108cf600e548561179c90919063ffffffff16565b90505b6015546001600160a01b0385811691161480156111d557506014546001600160a01b03848116911614155b80156111fa57506001600160a01b03831660009081526003602052604090205460ff16155b156112ff576010548211156112515760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610516565b60115482611274856001600160a01b031660009081526001602052604090205490565b61127e9190611c66565b11156112cc5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610516565b6112e760646108cf600b54600f54116111775760075461117b565b600f805491925060006112f983611c79565b91905055505b6015546001600160a01b03848116911614801561132557506001600160a01b0384163014155b156113525761134f60646108cf600c54600f54116113455760085461117b565b600a54859061179c565b90505b30600090815260016020526040902054601554600160a81b900460ff1615801561138957506015546001600160a01b038581169116145b801561139e5750601554600160b01b900460ff165b80156113ab575060125481115b80156113ba5750600d54600f54115b15611469576017544311156113cf5760006016555b6003601654106114215760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610516565b61143e6114398461143484601354611867565b611867565b6115e8565b47801561144e5761144e47611762565b6016805490600061145e83611c79565b909155505043601755505b505b80156114e5573060009081526001602052604090205461148b908261187c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114dc9085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461150890836118db565b6001600160a01b03851660009081526001602052604090205561154d61152e83836118db565b6001600160a01b0385166000908152600160205260409020549061187c565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61159785856118db565b60405190815260200160405180910390a350505050565b600081848411156115d25760405162461bcd60e51b8152600401610516919061194b565b5060006115df8486611c92565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061163057611630611ca5565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ad9190611c1b565b816001815181106116c0576116c0611ca5565b6001600160a01b0392831660209182029290920101526014546116e69130911684610d67565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac9479061171f908590600090869030904290600401611cbb565b600060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6006546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610681573d6000803e3d6000fd5b6000826000036117ae575060006104e6565b60006117ba8385611bc9565b9050826117c78583611d2e565b1461181e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610516565b9392505050565b600061181e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061191d565b6000818311611876578261181e565b50919050565b6000806118898385611c66565b90508381101561181e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610516565b600061181e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115ae565b6000818361193e5760405162461bcd60e51b8152600401610516919061194b565b5060006115df8486611d2e565b60006020808352835180602085015260005b818110156119795785810183015185820160400152820161195d565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106fd57600080fd5b600080604083850312156119c257600080fd5b82356119cd8161199a565b946020939093013593505050565b6000806000606084860312156119f057600080fd5b83356119fb8161199a565b92506020840135611a0b8161199a565b929592945050506040919091013590565b600060208284031215611a2e57600080fd5b813561181e8161199a565b60008060408385031215611a4c57600080fd5b8235611a578161199a565b91506020830135611a678161199a565b809150509250929050565b600060208284031215611a8457600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b11578160001904821115611af757611af7611ac0565b80851615611b0457918102915b93841c9390800290611adb565b509250929050565b600082611b28575060016104e6565b81611b35575060006104e6565b8160018114611b4b5760028114611b5557611b71565b60019150506104e6565b60ff841115611b6657611b66611ac0565b50506001821b6104e6565b5060208310610133831016604e8410600b8410161715611b94575081810a6104e6565b611b9e8383611ad6565b8060001904821115611bb257611bb2611ac0565b029392505050565b600061181e60ff841683611b19565b80820281158282048414176104e6576104e6611ac0565b600060208284031215611bf257600080fd5b5051919050565b600060208284031215611c0b57600080fd5b8151801515811461181e57600080fd5b600060208284031215611c2d57600080fd5b815161181e8161199a565b600080600060608486031215611c4d57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104e6576104e6611ac0565b600060018201611c8b57611c8b611ac0565b5060010190565b818103818111156104e6576104e6611ac0565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d0d5784516001600160a01b031683529383019391830191600101611ce8565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d4b57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b2a6fa7a1c23c390143e34b36f420ea50aa3fba9daeb2c47913dbf6a100b536564736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
