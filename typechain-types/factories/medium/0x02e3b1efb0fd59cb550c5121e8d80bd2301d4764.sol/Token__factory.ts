/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x02e3b1efb0fd59cb550c5121e8d80bd2301d4764.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b919061032d565b61004990633b9aca00610343565b610053919061035a565b600e556000600f8190556011805461ffff60a81b191690556012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b0316835291208054909216179055606461010b6009600a61032d565b61011990633b9aca00610343565b610124906062610343565b61012e919061035a565b30600090815260016020526040902055606461014c6009600a61032d565b61015a90633b9aca00610343565b610165906002610343565b61016f919061035a565b336000908152600160205260408120919091553090600080516020611d6e83398151915260646101a16009600a61032d565b6101af90633b9aca00610343565b6101ba906062610343565b6101c4919061035a565b60405190815260200160405180910390a3336000600080516020611d6e83398151915260646101f56009600a61032d565b61020390633b9aca00610343565b61020e906002610343565b610218919061035a565b60405190815260200160405180910390a361037c565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561027f578085048111156102635761026361022e565b600184161561027157908102905b60019390931c928002610248565b935093915050565b60008261029657506001610327565b816102a357506000610327565b81600181146102b957600281146102c3576102df565b6001915050610327565b60ff8411156102d4576102d461022e565b50506001821b610327565b5060208310610133831016604e8410600b8410161715610302575081810a610327565b61030f6000198484610244565b80600019048211156103235761032361022e565b0290505b92915050565b600061033c60ff841683610287565b9392505050565b80820281158282048414176103275761032761022e565b60008261037757634e487b7160e01b600052601260045260246000fd5b500490565b6119e38061038b6000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102b6578063a9059cbb146102e6578063d02c938314610306578063dd62ed3e1461031b578063f5f674311461036157600080fd5b806370a082311461022e578063715018a614610264578063751039fc146102795780638da5cb5b1461028e57600080fd5b806320800a00116100d157806320800a00146101c557806323b872dd146101dc578063313ce567146101fc5780636482c89a1461021857600080fd5b806306fdde031461010e578063095ea7b31461015c5780630faee56f1461018c57806318160ddd146101b057600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820190915260138152724a75737469636520466f7220417274656d697360681b60208201525b604051610153919061149e565b60405180910390f35b34801561016857600080fd5b5061017c610177366004611501565b610381565b6040519015158152602001610153565b34801561019857600080fd5b506101a2600e5481565b604051908152602001610153565b3480156101bc57600080fd5b506101a2610398565b3480156101d157600080fd5b506101da6103b9565b005b3480156101e857600080fd5b5061017c6101f736600461152d565b610428565b34801561020857600080fd5b5060405160098152602001610153565b34801561022457600080fd5b506101a2600f5481565b34801561023a57600080fd5b506101a261024936600461156e565b6001600160a01b031660009081526001602052604090205490565b34801561027057600080fd5b506101da6104d8565b34801561028557600080fd5b506101da61054c565b34801561029a57600080fd5b506000546040516001600160a01b039091168152602001610153565b3480156102c257600080fd5b50604080518082019091526007815266417274656d697360c81b6020820152610146565b3480156102f257600080fd5b5061017c610301366004611501565b610578565b34801561031257600080fd5b506101da610585565b34801561032757600080fd5b506101a261033636600461158b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036d57600080fd5b506101da61037c36600461156e565b61093d565b600061038e338484610993565b5060015b92915050565b60006103a66009600a6116c1565b6103b490633b9aca006116d0565b905090565b6000546001600160a01b031633146103ec5760405162461bcd60e51b81526004016103e3906116e7565b60405180910390fd5b600047116103f957600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610425573d6000803e3d6000fd5b50565b6000610435848484610ab7565b3360009081526003602052604090205460ff1615801561047757506011546001600160a01b038581169116148061047757506001600160a01b03831661dead14155b156104ce576104ce84336104c985604051806060016040528060288152602001611986602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f84565b610993565b5060019392505050565b6000546001600160a01b031633146105025760405162461bcd60e51b81526004016103e3906116e7565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105765760405162461bcd60e51b81526004016103e3906116e7565b565b600061038e338484610ab7565b6000546001600160a01b031633146105af5760405162461bcd60e51b81526004016103e3906116e7565b601154600160a01b900460ff16156106095760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103e3565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106529030906106446009600a6116c1565b6104c990633b9aca006116d0565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c9919061171c565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f919061171c565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c0919061171c565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d7194730610808816001600160a01b031660009081526001602052604090205490565b60008061081d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610885573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108aa9190611739565b50506011805462ff00ff60a01b1981166201000160a01b1790915560105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610919573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190611767565b3360009081526003602052604090205460ff1661095957600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b0383166109f55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e3565b6001600160a01b038216610a565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e3565b6001600160a01b038216610b7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e3565b60008111610bdf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103e3565b60006001600160a01b0384163014801590610c0357506001600160a01b0383163014155b15610e2657601154600160a81b900460ff16610c4857610c456064610c3f60075460085411610c3457600554610c38565b6006545b8590610fbe565b90611047565b90505b6011546001600160a01b038581169116148015610c7357506010546001600160a01b03848116911614155b8015610c9857506001600160a01b03831660009081526003602052604090205460ff16155b8015610cb257506004546001600160a01b03848116911614155b15610cf7574360095414610cca576000600a55436009555b81600a6000828254610cdc9190611789565b909155505060088054906000610cf18361179c565b91905055505b6011546001600160a01b038481169116148015610d1d57506001600160a01b0384163014155b15610d7857610d2a611089565b600a541080610d3b57504360095414155b610d785760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103e3565b30600090815260016020526040902054601154600160a81b900460ff16158015610daf57506011546001600160a01b038581169116145b8015610dc45750601154600160b01b900460ff165b8015610dde57506004546001600160a01b03868116911614155b15610e24578015610e18576000600e548211610dfa5781610dfe565b600e545b9050610e16818511610e105784611217565b81611217565b505b47610e2247611391565b505b505b6001600160a01b038416600090815260016020526040902054610e4990836113cf565b6001600160a01b038516600090815260016020526040902055610e8e610e6f83836113cf565b6001600160a01b03851660009081526001602052604090205490611411565b6001600160a01b0384166000908152600160205260409020558015610f215730600090815260016020526040902054610ec79082611411565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f189085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f7e576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6c85856113cf565b60405190815260200160405180910390a35b50505050565b60008184841115610fa85760405162461bcd60e51b81526004016103e3919061149e565b506000610fb584866117b5565b95945050505050565b600082600003610fd057506000610392565b6000610fdc83856116d0565b905082610fe985836117c8565b146110405760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103e3565b9392505050565b600061104083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611470565b604080516002808252606082018352600092839291906020830190803683375050601054604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b919061171c565b8160008151811061112e5761112e611800565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061116257611162611800565b6001600160a01b03928316602091820292909201015260105460405163d06ca61f60e01b8152600092919091169063d06ca61f906111ae9067d02ab486cedc000090869060040161185b565b600060405180830381865afa1580156111cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f3919081019061187c565b90508060018151811061120857611208611800565b60200260200101519250505090565b6011805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061125f5761125f611800565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc919061171c565b816001815181106112ef576112ef611800565b6001600160a01b0392831660209182029290920101526010546113159130911684610993565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac9479061134e908590600090869030904290600401611949565b600060405180830381600087803b15801561136857600080fd5b505af115801561137c573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113cb573d6000803e3d6000fd5b5050565b600061104083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f84565b60008061141e8385611789565b9050838110156110405760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103e3565b600081836114915760405162461bcd60e51b81526004016103e3919061149e565b506000610fb584866117c8565b602081526000825180602084015260005b818110156114cc57602081860181015160408684010152016114af565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461042557600080fd5b6000806040838503121561151457600080fd5b823561151f816114ec565b946020939093013593505050565b60008060006060848603121561154257600080fd5b833561154d816114ec565b9250602084013561155d816114ec565b929592945050506040919091013590565b60006020828403121561158057600080fd5b8135611040816114ec565b6000806040838503121561159e57600080fd5b82356115a9816114ec565b915060208301356115b9816114ec565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611615578085048111156115f9576115f96115c4565b600184161561160757908102905b60019390931c9280026115de565b935093915050565b60008261162c57506001610392565b8161163957506000610392565b816001811461164f576002811461165957611675565b6001915050610392565b60ff84111561166a5761166a6115c4565b50506001821b610392565b5060208310610133831016604e8410600b8410161715611698575081810a610392565b6116a560001984846115da565b80600019048211156116b9576116b96115c4565b029392505050565b600061104060ff84168361161d565b8082028115828204841417610392576103926115c4565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172e57600080fd5b8151611040816114ec565b60008060006060848603121561174e57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177957600080fd5b8151801515811461104057600080fd5b80820180821115610392576103926115c4565b6000600182016117ae576117ae6115c4565b5060010190565b81810381811115610392576103926115c4565b6000826117e557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118515781516001600160a01b031686526020958601959091019060010161182a565b5093949350505050565b8281526040602082015260006118746040830184611816565b949350505050565b60006020828403121561188e57600080fd5b815167ffffffffffffffff8111156118a557600080fd5b8201601f810184136118b657600080fd5b805167ffffffffffffffff8111156118d0576118d06117ea565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118fd576118fd6117ea565b60405291825260208184018101929081018784111561191b57600080fd5b6020850194505b8385101561193e57845180825260209586019590935001611922565b509695505050505050565b85815284602082015260a06040820152600061196860a0830186611816565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212202b85a0ade05cc4c0fb5c57473cff493e59b8cda435cf5756c255e1f28473133864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
