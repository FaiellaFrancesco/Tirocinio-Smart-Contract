/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RIGGED,
  RIGGEDInterface,
} from "../../../medium/0x25d0620e16849564561cc6f359a475a89966b062.sol/RIGGED";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526100106012600a61022a565b61001e90633b9aca0061023d565b600055600280546001600160a01b031916738f21e0fca90077608e22531bf42dbbd5e99c812517905534801561005357600080fd5b50600180546001600160a01b031916331790556000805460649061007890600f61023d565b6100829190610254565b90506000816000546100949190610276565b600280546001600160a01b039081166000908152600360205260408082208790556001548316825280822085905592549251939450911691600080516020610ad1833981519152906100e99086815260200190565b60405180910390a36001546040518281526001600160a01b0390911690600090600080516020610ad18339815191529060200160405180910390a35050610289565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561017c578085048111156101605761016061012b565b600184161561016e57908102905b60019390931c928002610145565b935093915050565b60008261019357506001610224565b816101a057506000610224565b81600181146101b657600281146101c0576101dc565b6001915050610224565b60ff8411156101d1576101d161012b565b50506001821b610224565b5060208310610133831016604e8410600b84101617156101ff575081810a610224565b61020c6000198484610141565b80600019048211156102205761022061012b565b0290505b92915050565b60006102368383610184565b9392505050565b80820281158282048414176102245761022461012b565b60008261027157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102245761022461012b565b610839806102986000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461017f5780638da5cb5b146101895780638ea5220f146101b457806395d89b41146100b9578063a9059cbb146101c7578063dd62ed3e146101da57600080fd5b806306fdde03146100b9578063095ea7b3146100f457806318160ddd1461011757806323b872dd14610129578063313ce5671461013c57806370a0823114610156575b600080fd5b6100de60405180604001604052806006815260200165149251d1d15160d21b81525081565b6040516100eb919061067f565b60405180910390f35b6101076101023660046106e9565b610213565b60405190151581526020016100eb565b6000545b6040519081526020016100eb565b610107610137366004610713565b61022a565b610144601281565b60405160ff90911681526020016100eb565b61011b610164366004610750565b6001600160a01b031660009081526003602052604090205490565b61018761027c565b005b60015461019c906001600160a01b031681565b6040516001600160a01b0390911681526020016100eb565b60025461019c906001600160a01b031681565b6101076101d53660046106e9565b6102f6565b61011b6101e8366004610772565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6000610220338484610303565b5060015b92915050565b6000610237848484610427565b6001600160a01b03841660009081526004602090815260408083203380855292529091205461027291869161026d9086906107bb565b610303565b5060019392505050565b6001546001600160a01b0316336001600160a01b0316146102e45760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206f776e65722063616e2072656e6f756e636500000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319169055565b6000610220338484610427565b6001600160a01b0383166103655760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102db565b6001600160a01b0382166103c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102db565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661047d5760405162461bcd60e51b815260206004820152601960248201527f45524332303a207472616e736665722066726f6d207a65726f0000000000000060448201526064016102db565b6001600160a01b0382166104d35760405162461bcd60e51b815260206004820152601760248201527f45524332303a207472616e7366657220746f207a65726f00000000000000000060448201526064016102db565b6001600160a01b03831660009081526003602052604090205481111561053b5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742062616c616e6365000000000060448201526064016102db565b60006105486064836107ce565b9050600061055682846107bb565b6001600160a01b0386166000908152600360205260408120805492935085929091906105839084906107bb565b90915550506001600160a01b038416600090815260036020526040812080548392906105b09084906107f0565b90915550506002546001600160a01b0316600090815260036020526040812080548492906105df9084906107f0565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062b91815260200190565b60405180910390a36002546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b602081526000825180602084015260005b818110156106ad5760208186018101516040868401015201610690565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106e457600080fd5b919050565b600080604083850312156106fc57600080fd5b610705836106cd565b946020939093013593505050565b60008060006060848603121561072857600080fd5b610731846106cd565b925061073f602085016106cd565b929592945050506040919091013590565b60006020828403121561076257600080fd5b61076b826106cd565b9392505050565b6000806040838503121561078557600080fd5b61078e836106cd565b915061079c602084016106cd565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610224576102246107a5565b6000826107eb57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610224576102246107a556fea2646970667358221220ac99154e34609ac53b5d16e392ac35492543b8caaed5b3c0bd97027630a990c864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type RIGGEDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RIGGEDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RIGGED__factory extends ContractFactory {
  constructor(...args: RIGGEDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RIGGED & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RIGGED__factory {
    return super.connect(runner) as RIGGED__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RIGGEDInterface {
    return new Interface(_abi) as RIGGEDInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RIGGED {
    return new Contract(address, _abi, runner) as unknown as RIGGED;
  }
}
