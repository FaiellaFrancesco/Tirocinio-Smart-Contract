/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Cook,
  CookInterface,
} from "../../../medium/0x7c890ad3443ad6c14f3691b13c85deaa66d0ef17.sol/Cook";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractDev",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractEdition",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020016b4c65742048696d20436f6f6b60a01b81525060405180604001604052806004815260200163434f4f4b60e01b815250816003908162000065919062000209565b50600462000074828262000209565b50505062000094336a0422ca8b0a00a4250000006200009a60201b60201c565b620002fd565b6001600160a01b038216620000f55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001099190620002d5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019057607f821691505b602082108103620001b157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016057600081815260208120601f850160051c81016020861015620001e05750805b601f850160051c820191505b818110156200020157828155600101620001ec565b505050505050565b81516001600160401b0381111562000225576200022562000165565b6200023d816200023684546200017b565b84620001b7565b602080601f8311600181146200027557600084156200025c5750858301515b600019600386901b1c1916600185901b17855562000201565b600085815260208120601f198616915b82811015620002a65788860151825594840194600190910190840162000285565b5085821015620002c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620002f757634e487b7160e01b600052601160045260246000fd5b92915050565b610901806200030d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0a8e46011610066578063a0a8e460146101f5578063a457c2d714610216578063a9059cbb14610229578063dd62ed3e1461023c57600080fd5b806370a082311461019b5780637724bad8146101c457806395d89b41146101ed57600080fd5b806323b872dd116100c857806323b872dd146101425780632a4a7ba814610155578063313ce56714610179578063395093511461018857600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761024f565b604051610104919061074b565b60405180910390f35b61012061011b3660046107b5565b6102e1565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107df565b6102fb565b6100f7604051806040016040528060058152602001640c4c1b5a5b60da1b81525081565b60405160128152602001610104565b6101206101963660046107b5565b61031f565b6101346101a936600461081b565b6001600160a01b031660009081526020819052604090205490565b6100f76040518060400160405280600a8152602001694c657448696d436f6f6b60b01b81525081565b6100f7610341565b6100f760405180604001604052806002815260200161031360f41b81525081565b6101206102243660046107b5565b610350565b6101206102373660046107b5565b6103d0565b61013461024a36600461083d565b6103de565b60606003805461025e90610870565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610870565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b6000336102ef818585610409565b60019150505b92915050565b60003361030985828561052d565b6103148585856105a7565b506001949350505050565b6000336102ef81858561033283836103de565b61033c91906108aa565b610409565b60606004805461025e90610870565b6000338161035e82866103de565b9050838110156103c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103148286868403610409565b6000336102ef8185856105a7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661046b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ba565b6001600160a01b0382166104cc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ba565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061053984846103de565b905060001981146105a157818110156105945760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ba565b6105a18484848403610409565b50505050565b6001600160a01b03831661060b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ba565b6001600160a01b03821661066d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ba565b6001600160a01b038316600090815260208190526040902054818110156106e55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ba565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a1565b600060208083528351808285015260005b818110156107785785810183015185820160400152820161075c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b057600080fd5b919050565b600080604083850312156107c857600080fd5b6107d183610799565b946020939093013593505050565b6000806000606084860312156107f457600080fd5b6107fd84610799565b925061080b60208501610799565b9150604084013590509250925092565b60006020828403121561082d57600080fd5b61083682610799565b9392505050565b6000806040838503121561085057600080fd5b61085983610799565b915061086760208401610799565b90509250929050565b600181811c9082168061088457607f821691505b6020821081036108a457634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f557634e487b7160e01b600052601160045260246000fdfea2646970667358221220d6aab18ffc5459fe2a7dfba2bbc533c64eb8445236614a389f9ec06734c68ad664736f6c63430008130033";

type CookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cook__factory extends ContractFactory {
  constructor(...args: CookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cook> {
    return super.deploy(overrides || {}) as Promise<Cook>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cook {
    return super.attach(address) as Cook;
  }
  override connect(signer: Signer): Cook__factory {
    return super.connect(signer) as Cook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CookInterface {
    return new utils.Interface(_abi) as CookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cook {
    return new Contract(address, _abi, signerOrProvider) as Cook;
  }
}
