/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  B2B,
  B2BInterface,
} from "../../../medium/0x2ba0d67db48fad58da3260290132414bd466c62a.sol/B2B";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "launched",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b600180546001600160a01b0319166001600160a01b03831617905561005b81610187565b5060408051808201909152600f81526e42324253717561726564204d454d4560881b602082015260059061008f9082610276565b5060408051808201909152600381526221192160e91b60208201526004906100b79082610276565b50600960a08190526100ca90600a610433565b6100d890631dcd6500610449565b6080819052600260006100f36000546001600160a01b031690565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546101229190610460565b90915550506000546001600160a01b03166001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160405161017a91815260200190565b60405180910390a3610473565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061020157607f821691505b60208210810361022157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561027157806000526020600020601f840160051c8101602085101561024e5750805b601f840160051c820191505b8181101561026e576000815560010161025a565b50505b505050565b81516001600160401b0381111561028f5761028f6101d7565b6102a38161029d84546101ed565b84610227565b6020601f8211600181146102d757600083156102bf5750848201515b600019600385901b1c1916600184901b17845561026e565b600084815260208120601f198516915b8281101561030757878501518255602094850194600190920191016102e7565b50848210156103255786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103855780850481111561036957610369610334565b600184161561037757908102905b60019390931c92800261034e565b935093915050565b60008261039c5750600161042d565b816103a95750600061042d565b81600181146103bf57600281146103c9576103e5565b600191505061042d565b60ff8411156103da576103da610334565b50506001821b61042d565b5060208310610133831016604e8410600b8410161715610408575081810a61042d565b610415600019848461034a565b806000190482111561042957610429610334565b0290505b92915050565b600061044260ff84168361038d565b9392505050565b808202811582820484141761042d5761042d610334565b8082018082111561042d5761042d610334565b60805160a051610a1361049860003960006101870152600061013f0152610a136000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c57806395d89b411161006657806395d89b4114610214578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461026857600080fd5b8063715018a6146101e45780638091f3bf146101ec5780638da5cb5b146101f957600080fd5b806318160ddd116100c857806318160ddd1461013a57806323b872dd1461016f578063313ce5671461018257806370a08231146101bb57600080fd5b806301339c21146100ef57806306fdde03146100f9578063095ea7b314610117575b600080fd5b6100f761027b565b005b6101016102ea565b60405161010e9190610848565b60405180910390f35b61012a6101253660046108b2565b610378565b604051901515815260200161010e565b6101617f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010e565b61012a61017d3660046108dc565b610435565b6101a97f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161010e565b6101616101c9366004610919565b6001600160a01b031660009081526002602052604090205490565b6100f7610530565b60065461012a9060ff1681565b6000546040516001600160a01b03909116815260200161010e565b610101610544565b61012a61022a3660046108b2565b610551565b61016161023d366004610934565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6100f7610276366004610919565b610567565b6102836105a5565b60065460ff16156102db5760405162461bcd60e51b815260206004820152601960248201527f636f6e747261637420616c7265616479206c61756e636865640000000000000060448201526064015b60405180910390fd5b6006805460ff19166001179055565b600580546102f790610967565b80601f016020809104026020016040519081016040528092919081815260200182805461032390610967565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081565b60006001600160a01b0383166103d05760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420617070726f766520746865203020616464726573730000000060448201526064016102d2565b3360008181526003602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b92915050565b60065460009060ff1615801561045557506001546001600160a01b031633145b1561046d576104658484846105d2565b506001610529565b6001600160a01b038416600090815260036020908152604080832033845290915290205461049c9083906109b7565b6001600160a01b03851660009081526003602090815260408083203384529091529020556104cb8484846105d2565b6001600160a01b038416600081815260036020908152604080832033808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b9392505050565b6105386105a5565b61054260006107ac565b565b600480546102f790610967565b600061055e3384846105d2565b50600192915050565b61056f6105a5565b6001600160a01b03811661059957604051631e4fbdf760e01b8152600060048201526024016102d2565b6105a2816107ac565b50565b6000546001600160a01b031633146105425760405163118cdaa760e01b81523360048201526024016102d2565b6001600160a01b0382166106215760405162461bcd60e51b815260206004820152601660248201527563616e6e6f74206265207a65726f206164647265737360501b60448201526064016102d2565b816001600160a01b0316836001600160a01b0316036106825760405162461bcd60e51b815260206004820152601f60248201527f796f752063616e6e6f74207472616e7366657220746f20796f757273656c660060448201526064016102d2565b61068c83836107fc565b6106fe5760405162461bcd60e51b815260206004820152603d60248201527f5468697320746f6b656e206973206e6f74206c61756e6368656420616e64206360448201527f616e6e6f74206265206c6973746564206f6e206465786573207965742e00000060648201526084016102d2565b6001600160a01b038316600090815260026020526040812080548392906107269084906109b7565b90915550506001600160a01b038216600090815260026020526040812080548392906107539084906109ca565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161079f91815260200190565b60405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460009060ff16156108125750600161042f565b6000546001600160a01b038481169116148061083b57506000546001600160a01b038381169116145b1561055e5750600161042f565b602081526000825180602084015260005b818110156108765760208186018101516040868401015201610859565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108ad57600080fd5b919050565b600080604083850312156108c557600080fd5b6108ce83610896565b946020939093013593505050565b6000806000606084860312156108f157600080fd5b6108fa84610896565b925061090860208501610896565b929592945050506040919091013590565b60006020828403121561092b57600080fd5b61052982610896565b6000806040838503121561094757600080fd5b61095083610896565b915061095e60208401610896565b90509250929050565b600181811c9082168061097b57607f821691505b60208210810361099b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561042f5761042f6109a1565b8082018082111561042f5761042f6109a156fea2646970667358221220caca824ef90162f83fcc94726ed394f01cb5c8dadf2b3d941aa7e2d609eb0e0c64736f6c634300081e0033";

type B2BConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: B2BConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class B2B__factory extends ContractFactory {
  constructor(...args: B2BConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      B2B & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): B2B__factory {
    return super.connect(runner) as B2B__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): B2BInterface {
    return new Interface(_abi) as B2BInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): B2B {
    return new Contract(address, _abi, runner) as unknown as B2B;
  }
}
