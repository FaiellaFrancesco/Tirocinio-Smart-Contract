/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KILLER,
  KILLERInterface,
} from "../../../medium/0x17b63baf648b2ceff2731e18eb87515943e12ce2.sol/KILLER";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBuyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newSellFee",
        type: "uint256",
      },
    ],
    name: "changeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "setSwapSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferStuckEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "transferStuckToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6774c3d285932e80006007819055600855671183c5fa6fad6000600955600a80546001600160a01b0316600360a01b179055600b60a09081526a4b696c6c6572205065706560a81b60c052610120604052600660e09081526525a4a62622a960d11b610100526003610071838261049b565b50600461007e828261049b565b50505061009761009261019a60201b60201c565b61019e565b733efb2472a4c463a34d84d84c9d17445ae36897616080526014600c819055600d55600e6020527ff029ea1f0aa1f9276a883cf179abc43bf241451f1b60aa628082bf03afd7afb38054600160ff1991821681179092553360009081526040808220805484168517905530808352908220805484168517905561dead9091527ff77e91909e61d18f67b875b2bfcae1f683a8d555e55382e3a6b082e2c59ea57a805490921690921790556816ce3f1e16bf1500009061016b90737a250d5630b4cf539739df2c5dacb4c659f2488d836101f0565b61018a33737a250d5630b4cf539739df2c5dacb4c659f2488d836101f0565b6101943382610319565b50610580565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166102575760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166102b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161024e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03821661036f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161024e565b80600260008282546103819190610559565b90915550506001600160a01b038216600090815260208190526040812080548392906103ae908490610559565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061042757607f821691505b60208210810361044757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103f857806000526020600020601f840160051c810160208510156104745750805b601f840160051c820191505b818110156104945760008155600101610480565b5050505050565b81516001600160401b038111156104b4576104b46103fd565b6104c8816104c28454610413565b8461044d565b6020601f8211600181146104fc57600083156104e45750848201515b600019600385901b1c1916600184901b178455610494565b600084815260208120601f198516915b8281101561052c578785015182556020948501946001909201910161050c565b508482101561054a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561057a57634e487b7160e01b600052601160045260246000fd5b92915050565b608051611aec6105b0600039600081816102500152818161069601528181610829015261170e0152611aec6000f3fe6080604052600436106101445760003560e01c8063715018a6116100b65780639600e8291161006f5780639600e82914610389578063a6ebb1331461039e578063a9059cbb146103be578063c9567bf9146103de578063dd62ed3e146103e6578063f2fde38b1461042c57600080fd5b8063715018a6146102f6578063751039fc1461030b5780638da5cb5b146103205780638f3fa8601461033e5780638f4590d21461035457806395d89b411461037457600080fd5b80632b14ca56116101085780632b14ca561461020c578063313ce5671461022257806339e7fddc1461023e578063470624021461028a57806349bd5a5e146102a057806370a08231146102c057600080fd5b806306fdde0314610150578063095ea7b31461017b57806318160ddd146101ab57806321ecff5b146101ca57806323b872dd146101ec57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061016561044c565b6040516101729190611757565b60405180910390f35b34801561018757600080fd5b5061019b6101963660046117ba565b6104de565b6040519015158152602001610172565b3480156101b757600080fd5b506002545b604051908152602001610172565b3480156101d657600080fd5b506101ea6101e53660046117e6565b6104f8565b005b3480156101f857600080fd5b5061019b610207366004611808565b61058f565b34801561021857600080fd5b506101bc600d5481565b34801561022e57600080fd5b5060405160098152602001610172565b34801561024a57600080fd5b506102727f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610172565b34801561029657600080fd5b506101bc600c5481565b3480156102ac57600080fd5b50600654610272906001600160a01b031681565b3480156102cc57600080fd5b506101bc6102db366004611849565b6001600160a01b031660009081526020819052604090205490565b34801561030257600080fd5b506101ea6105b3565b34801561031757600080fd5b506101ea6105e9565b34801561032c57600080fd5b506005546001600160a01b0316610272565b34801561034a57600080fd5b506101bc60075481565b34801561036057600080fd5b506101ea61036f3660046117e6565b61061b565b34801561038057600080fd5b50610165610650565b34801561039557600080fd5b506101ea61065f565b3480156103aa57600080fd5b506101ea6103b9366004611849565b6106e1565b3480156103ca57600080fd5b5061019b6103d93660046117ba565b610859565b6101ea610867565b3480156103f257600080fd5b506101bc610401366004611866565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561043857600080fd5b506101ea610447366004611849565b610af9565b60606003805461045b9061189f565b80601f01602080910402602001604051908101604052809291908181526020018280546104879061189f565b80156104d45780601f106104a9576101008083540402835291602001916104d4565b820191906000526020600020905b8154815290600101906020018083116104b757829003601f168201915b5050505050905090565b6000336104ec818585610b91565b60019150505b92915050565b6005546001600160a01b0316331461052b5760405162461bcd60e51b8152600401610522906118d9565b60405180910390fd5b600c54821115801561053f5750600d548111155b6105845760405162461bcd60e51b81526020600482015260166024820152752732bb903332b29036bab9ba103132903637bbb2b91760511b6044820152606401610522565b600c91909155600d55565b60003361059d858285610cb5565b6105a8858585610d47565b506001949350505050565b6005546001600160a01b031633146105dd5760405162461bcd60e51b8152600401610522906118d9565b6105e76000611336565b565b6005546001600160a01b031633146106135760405162461bcd60e51b8152600401610522906118d9565b600254600755565b6005546001600160a01b031633146106455760405162461bcd60e51b8152600401610522906118d9565b600891909155600955565b60606004805461045b9061189f565b6005546001600160a01b031633146106895760405162461bcd60e51b8152600401610522906118d9565b6040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016904780156108fc02916000818181858888f193505050501580156106de573d6000803e3d6000fd5b50565b6005546001600160a01b0316331461070b5760405162461bcd60e51b8152600401610522906118d9565b306001600160a01b03821603610803576040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb9061dead9083906370a08231906024015b602060405180830381865afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610790919061190e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190611927565b5050565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a082319060240161074f565b6000336104ec818585610d47565b6005546001600160a01b031633146108915760405162461bcd60e51b8152600401610522906118d9565b6108a4333061089f60025490565b611388565b60405163f305d71960e01b815230600482015268123e98e4deff440000602482015260006044820181905260648201523360848201524260a4820152737a250d5630b4cf539739df2c5dacb4c659f2488d9063f305d719906709b6e64a8ec600009060c40160606040518083038185885af1158015610927573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061094c9190611949565b505050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611977565b6001600160a01b031663e6a4390530737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190611977565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190611977565b600680546001600160a01b0319166001600160a01b0392909216919091179055600a805463ffffffff60601b1916600160601b4363ffffffff1602179055565b6005546001600160a01b03163314610b235760405162461bcd60e51b8152600401610522906118d9565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610522565b6106de81611336565b6001600160a01b038316610bf35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610522565b6001600160a01b038216610c545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610522565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610d415781811015610d345760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610522565b610d418484848403610b91565b50505050565b6001600160a01b038316610db15760405162461bcd60e51b815260206004820152602b60248201527f5472616e736665722066726f6d20746865207a65726f2061646472657373206e60448201526a37ba1030b63637bbb2b21760a91b6064820152608401610522565b6001600160a01b038216610e195760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220746f20746865207a65726f2061646472657373206e6f746044820152681030b63637bbb2b21760b91b6064820152608401610522565b60008111610e7c5760405162461bcd60e51b815260206004820152602a60248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152693a3430b7103d32b9379760b11b6064820152608401610522565b6001600160a01b0383166000908152600e602052604081205460ff1680610ebb57506001600160a01b0383166000908152600e602052604090205460ff165b6006549091506001600160a01b0316151580610ed45750805b610f205760405162461bcd60e51b815260206004820152601f60248201527f4c69717569646974792070616972206e6f742079657420637265617465642e006044820152606401610522565b6006546001600160a01b03908116848216811491861614808015610f42575082155b156111435760075484610f6a876001600160a01b031660009081526020819052604090205490565b610f7491906119aa565b111580610f9d57506001600160a01b038516737a250d5630b4cf539739df2c5dacb4c659f2488d145b610fdf5760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b6044820152606401610522565b600a5463ffffffff600160a01b8204811691161161102d57600a805463ffffffff1690600061100d836119bd565b91906101000a81548163ffffffff021916908363ffffffff160217905550505b600a5463ffffffff600160a01b8204811691160361106657600a5463ffffffff600160c01b82048116600c55600160e01b90910416600d555b600a5463ffffffff600160601b9091048116439091160361114357600a8054604391600160801b90910463ffffffff169060106110a2836119bd565b91906101000a81548163ffffffff021916908363ffffffff16021790555063ffffffff161061110b5760405162461bcd60e51b8152602060048201526015602482015274457863657373206c61756e636820736e697065727360581b6044820152606401610522565b600a54600160801b900463ffffffff1660430361114357600b8054610100600160a81b0319166101006001600160a01b038816021790555b306000908152602081905260409020548280156111635750600b5460ff16155b801561117157506009548110155b801561117b575083155b156112a057600a5468010000000000000000900463ffffffff164311156111ae57600a805467ffffffff00000000191690555b600a54600364010000000090910463ffffffff1610156112a057600b805460ff1916600117908190556000906001600160a01b0389811661010090920416146111f75785611206565b600260085461120691906119e2565b90506112256112208261121b85600854611556565b611556565b61156e565b600b805460ff1916905547801561123f5761123f81611701565b600a8054640100000000900463ffffffff1690600461125d836119bd565b91906101000a81548163ffffffff021916908363ffffffff1602179055505043600a60086101000a81548163ffffffff021916908363ffffffff16021790555050505b6000826112af57600d546112b3565b600c545b90506000811180156112c3575084155b80156112d25750600b5460ff16155b80156112e2575082806112e25750835b1561132157600060646112f58389611a04565b6112ff91906119e2565b9050801561131f57611312893083611388565b61131c8188611a1b565b96505b505b61132c888888611388565b5050505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166113ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610522565b6001600160a01b03821661144e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610522565b6001600160a01b038316600090815260208190526040902054818110156114c65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610522565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906114fd9084906119aa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161154991815260200190565b60405180910390a3610d41565b60008183116115655782611567565b815b9392505050565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106115a3576115a3611a2e565b60200260200101906001600160a01b031690816001600160a01b031681525050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190611977565b8160018151811061164c5761164c611a2e565b60200260200101906001600160a01b031690816001600160a01b03168152505061168b30737a250d5630b4cf539739df2c5dacb4c659f2488d84610b91565b60405163791ac94760e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d9063791ac947906116cb908590600090869030904290600401611a44565b600060405180830381600087803b1580156116e557600080fd5b505af11580156116f9573d6000803e3d6000fd5b505050505050565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083906000818181858888f193505050501580156107ff573d6000803e3d6000fd5b602081526000825180602084015260005b818110156117855760208186018101516040868401015201611768565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106de57600080fd5b600080604083850312156117cd57600080fd5b82356117d8816117a5565b946020939093013593505050565b600080604083850312156117f957600080fd5b50508035926020909101359150565b60008060006060848603121561181d57600080fd5b8335611828816117a5565b92506020840135611838816117a5565b929592945050506040919091013590565b60006020828403121561185b57600080fd5b8135611567816117a5565b6000806040838503121561187957600080fd5b8235611884816117a5565b91506020830135611894816117a5565b809150509250929050565b600181811c908216806118b357607f821691505b6020821081036118d357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561192057600080fd5b5051919050565b60006020828403121561193957600080fd5b8151801515811461156757600080fd5b60008060006060848603121561195e57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561198957600080fd5b8151611567816117a5565b634e487b7160e01b600052601160045260246000fd5b808201808211156104f2576104f2611994565b600063ffffffff821663ffffffff81036119d9576119d9611994565b60010192915050565b6000826119ff57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176104f2576104f2611994565b818103818111156104f2576104f2611994565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611a965783516001600160a01b0316835260209384019390920191600101611a6f565b50506001600160a01b03959095166060840152505060800152939250505056fea2646970667358221220052509e8a025a6770474e08114f014cd964f4a732abfd80494ebea360a1e3cec64736f6c634300081e0033";

type KILLERConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KILLERConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KILLER__factory extends ContractFactory {
  constructor(...args: KILLERConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<KILLER> {
    return super.deploy(overrides || {}) as Promise<KILLER>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KILLER {
    return super.attach(address) as KILLER;
  }
  override connect(signer: Signer): KILLER__factory {
    return super.connect(signer) as KILLER__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KILLERInterface {
    return new utils.Interface(_abi) as KILLERInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KILLER {
    return new Contract(address, _abi, signerOrProvider) as KILLER;
  }
}
