/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ORO,
  OROInterface,
} from "../../../medium/0x2e99eb39ac38e1213e83ee85c53531c5b046eccc.sol/ORO";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260126006556012600755600060085560006009556012600a556012600b556012600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fac033206200036a565b601155620000a66009600a62000352565b620000b69063fac033206200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611c5d80620003946000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103b8578063bf474bed146103d8578063c9567bf9146103ee578063d34628cc14610403578063dd62ed3e14610423578063ec1f3f631461046957600080fd5b8063715018a61461030e578063751039fc146103235780637d1db4a5146103385780638da5cb5b1461034e5780638f9a55c01461037657806395d89b411461038c57600080fd5b8063313ce56711610108578063313ce5671461023957806331c2d847146102555780633bbac5791461027557806351bc3c85146102ae5780636fc3eaec146102c357806370a08231146102d857600080fd5b806306fdde031461015b578063095ea7b3146101995780630faee56f146101c9578063109daa99146101ed57806318160ddd1461020457806323b872dd1461021957600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506040805180820190915260038152624f726f60e81b60208201525b6040516101909190611728565b60405180910390f35b3480156101a557600080fd5b506101b96101b436600461179c565b610489565b6040519015158152602001610190565b3480156101d557600080fd5b506101df60125481565b604051908152602001610190565b3480156101f957600080fd5b506102026104a0565b005b34801561021057600080fd5b506101df610510565b34801561022557600080fd5b506101b96102343660046117c8565b610532565b34801561024557600080fd5b5060405160098152602001610190565b34801561026157600080fd5b5061020261027036600461181f565b61059b565b34801561028157600080fd5b506101b96102903660046118e4565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102ba57600080fd5b50610202610627565b3480156102cf57600080fd5b50610202610676565b3480156102e457600080fd5b506101df6102f33660046118e4565b6001600160a01b031660009081526001602052604090205490565b34801561031a57600080fd5b506102026106a3565b34801561032f57600080fd5b50610202610717565b34801561034457600080fd5b506101df600f5481565b34801561035a57600080fd5b506000546040516001600160a01b039091168152602001610190565b34801561038257600080fd5b506101df60105481565b34801561039857600080fd5b506040805180820190915260038152624f524f60e81b6020820152610183565b3480156103c457600080fd5b506101b96103d336600461179c565b6107c7565b3480156103e457600080fd5b506101df60115481565b3480156103fa57600080fd5b506102026107d4565b34801561040f57600080fd5b5061020261041e36600461181f565b610b91565b34801561042f57600080fd5b506101df61043e366004611901565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047557600080fd5b5061020261048436600461193a565b610c19565b6000610496338484610c60565b5060015b92915050565b6000546001600160a01b031633146104d35760405162461bcd60e51b81526004016104ca90611953565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061051e6009600a611a82565b61052d906461f313f880611a91565b905090565b600061053f848484610d84565b610591843361058c85604051806060016040528060288152602001611c00602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061138b565b610c60565b5060019392505050565b6000546001600160a01b031633146105c55760405162461bcd60e51b81526004016104ca90611953565b60005b8151811015610623576000600460008484815181106105e9576105e9611aa8565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105c8565b5050565b6005546001600160a01b0316336001600160a01b03161461064757600080fd5b30600090815260016020526040902054801561066657610666816113c5565b478015610623576106238161153f565b6005546001600160a01b0316336001600160a01b03161461069657600080fd5b476106a08161153f565b50565b6000546001600160a01b031633146106cd5760405162461bcd60e51b81526004016104ca90611953565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107415760405162461bcd60e51b81526004016104ca90611953565b61074d6009600a611a82565b61075c906461f313f880611a91565b600f5561076b6009600a611a82565b61077a906461f313f880611a91565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107aa6009600a611a82565b6107b9906461f313f880611a91565b604051908152602001610506565b6000610496338484610d84565b6000546001600160a01b031633146107fe5760405162461bcd60e51b81526004016104ca90611953565b601454600160a01b900460ff16156108585760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ca565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108a29030906108936009600a611a82565b61058c906461f313f880611a91565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611abe565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611abe565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190611abe565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a58816001600160a01b031660009081526001602052604090205490565b600080610a6d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ad5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610afa9190611adb565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b779190611b09565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bbb5760405162461bcd60e51b81526004016104ca90611953565b60005b815181101561062357600160046000848481518110610bdf57610bdf611aa8565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bbe565b6005546001600160a01b0316336001600160a01b031614610c3957600080fd5b6008548111158015610c4d57506009548111155b610c5657600080fd5b6008819055600955565b6001600160a01b038316610cc25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ca565b6001600160a01b038216610d235760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ca565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610de85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ca565b6001600160a01b038216610e4a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ca565b60008111610eac5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ca565b600080546001600160a01b03858116911614801590610ed957506000546001600160a01b03848116911614155b15611248576001600160a01b03841660009081526004602052604090205460ff16158015610f2057506001600160a01b03831660009081526004602052604090205460ff16155b610f2957600080fd5b600e54600003610f6257610f5f6064610f59600a54600e5411610f4e57600654610f52565b6008545b8590611579565b90611602565b90505b600e5415610f8757610f846064610f59600d548561157990919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fb257506013546001600160a01b03848116911614155b8015610fd757506001600160a01b03831660009081526003602052604090205460ff16155b156110dc57600f5482111561102e5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104ca565b60105482611051856001600160a01b031660009081526001602052604090205490565b61105b9190611b2b565b11156110a95760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ca565b6110c46064610f59600a54600e5411610f4e57600654610f52565b600e805491925060006110d683611b3e565b91905055505b6014546001600160a01b03848116911614801561110257506001600160a01b0384163014155b1561112f5761112c6064610f59600b54600e541161112257600754610f52565b6009548590611579565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116657506014546001600160a01b038581169116145b801561117b5750601454600160b01b900460ff165b8015611188575060115481115b80156111975750600c54600e54115b15611246576016544311156111ac5760006015555b6003601554106111fe5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ca565b61121b6112168461121184601254611644565b611644565b6113c5565b47801561122b5761122b4761153f565b6015805490600061123b83611b3e565b909155505043601655505b505b80156112c257306000908152600160205260409020546112689082611659565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112b99085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112e590836116b8565b6001600160a01b03851660009081526001602052604090205561132a61130b83836116b8565b6001600160a01b03851660009081526001602052604090205490611659565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137485856116b8565b60405190815260200160405180910390a350505050565b600081848411156113af5760405162461bcd60e51b81526004016104ca9190611728565b5060006113bc8486611b57565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061140d5761140d611aa8565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a9190611abe565b8160018151811061149d5761149d611aa8565b6001600160a01b0392831660209182029290920101526013546114c39130911684610c60565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906114fc908590600090869030904290600401611b6a565b600060405180830381600087803b15801561151657600080fd5b505af115801561152a573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610623573d6000803e3d6000fd5b60008260000361158b5750600061049a565b60006115978385611a91565b9050826115a48583611bdd565b146115fb5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ca565b9392505050565b60006115fb83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116fa565b600081831161165357826115fb565b50919050565b6000806116668385611b2b565b9050838110156115fb5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ca565b60006115fb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138b565b6000818361171b5760405162461bcd60e51b81526004016104ca9190611728565b5060006113bc8486611bdd565b60006020808352835180602085015260005b818110156117565785810183015185820160400152820161173a565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106a057600080fd5b803561179781611777565b919050565b600080604083850312156117af57600080fd5b82356117ba81611777565b946020939093013593505050565b6000806000606084860312156117dd57600080fd5b83356117e881611777565b925060208401356117f881611777565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183257600080fd5b823567ffffffffffffffff8082111561184a57600080fd5b818501915085601f83011261185e57600080fd5b81358181111561187057611870611809565b8060051b604051601f19603f8301168101818110858211171561189557611895611809565b6040529182528482019250838101850191888311156118b357600080fd5b938501935b828510156118d8576118c98561178c565b845293850193928501926118b8565b98975050505050505050565b6000602082840312156118f657600080fd5b81356115fb81611777565b6000806040838503121561191457600080fd5b823561191f81611777565b9150602083013561192f81611777565b809150509250929050565b60006020828403121561194c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119d95781600019048211156119bf576119bf611988565b808516156119cc57918102915b93841c93908002906119a3565b509250929050565b6000826119f05750600161049a565b816119fd5750600061049a565b8160018114611a135760028114611a1d57611a39565b600191505061049a565b60ff841115611a2e57611a2e611988565b50506001821b61049a565b5060208310610133831016604e8410600b8410161715611a5c575081810a61049a565b611a66838361199e565b8060001904821115611a7a57611a7a611988565b029392505050565b60006115fb60ff8416836119e1565b808202811582820484141761049a5761049a611988565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ad057600080fd5b81516115fb81611777565b600080600060608486031215611af057600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b1b57600080fd5b815180151581146115fb57600080fd5b8082018082111561049a5761049a611988565b600060018201611b5057611b50611988565b5060010190565b8181038181111561049a5761049a611988565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bbc5784516001600160a01b031683529383019391830191600101611b97565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611bfa57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220bb9beb01c264317a0f5d684271228a759b58ca4af836160dd101352333bf8fd464736f6c63430008170033";

type OROConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OROConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ORO__factory extends ContractFactory {
  constructor(...args: OROConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ORO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ORO__factory {
    return super.connect(runner) as ORO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OROInterface {
    return new Interface(_abi) as OROInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ORO {
    return new Contract(address, _abi, runner) as unknown as ORO;
  }
}
