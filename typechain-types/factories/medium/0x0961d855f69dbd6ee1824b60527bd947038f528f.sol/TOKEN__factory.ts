/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x0961d855f69dbd6ee1824b60527bd947038f528f.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260156006556017600755600060085560006009556017600a556016600b556017600c556000600d556009600a6200003c91906200033f565b6200004d906401f580664062000357565b600e556200005e6009600a6200033f565b6200006f906401f580664062000357565b600f55620000806009600a6200033f565b620000909063fac0332062000357565b601055620000a16009600a6200033f565b620000b19063fac0332062000357565b6011556013805461ffff60a81b1916905560006014819055601581905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200012d6009600a6200033f565b6200013e906461f313f88062000357565b336000908152600160208190526040822092909255600390620001696000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001c83390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002026009600a6200033f565b62000213906461f313f88062000357565b60405190815260200160405180910390a362000371565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002815781600019048211156200026557620002656200022a565b808516156200027357918102915b93841c939080029062000245565b509250929050565b6000826200029a5750600162000339565b81620002a95750600062000339565b8160018114620002c25760028114620002cd57620002ed565b600191505062000339565b60ff841115620002e157620002e16200022a565b50506001821b62000339565b5060208310610133831016604e8410600b841016171562000312575081810a62000339565b6200031e838362000240565b80600019048211156200033557620003356200022a565b0290505b92915050565b60006200035060ff84168362000289565b9392505050565b80820281158282048414176200033957620003396200022a565b611b8780620003816000396000f3fe6080604052600436106101395760003560e01c8063751039fc116100ab578063a9059cbb1161006f578063a9059cbb1461034a578063bf474bed1461036a578063c9567bf914610380578063d34628cc14610395578063dd62ed3e146103b5578063ec1f3f63146103fb57600080fd5b8063751039fc146102e15780637d1db4a5146102f65780638da5cb5b1461030c5780638f9a55c01461033457806395d89b411461014557600080fd5b8063313ce567116100fd578063313ce5671461020a57806331c2d847146102265780633bbac5791461024857806351bc3c851461028157806370a0823114610296578063715018a6146102cc57600080fd5b806306fdde0314610145578063095ea7b3146101815780630faee56f146101b157806318160ddd146101d557806323b872dd146101ea57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060408051808201825260048152634352454560e01b60208201529051610178919061164f565b60405180910390f35b34801561018d57600080fd5b506101a161019c3660046116c6565b61041b565b6040519015158152602001610178565b3480156101bd57600080fd5b506101c760115481565b604051908152602001610178565b3480156101e157600080fd5b506101c7610432565b3480156101f657600080fd5b506101a16102053660046116f2565b610454565b34801561021657600080fd5b5060405160098152602001610178565b34801561023257600080fd5b50610246610241366004611749565b6104bd565b005b34801561025457600080fd5b506101a161026336600461180e565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561028d57600080fd5b50610246610552565b3480156102a257600080fd5b506101c76102b136600461180e565b6001600160a01b031660009081526001602052604090205490565b3480156102d857600080fd5b506102466105a1565b3480156102ed57600080fd5b50610246610650565b34801561030257600080fd5b506101c7600e5481565b34801561031857600080fd5b506000546040516001600160a01b039091168152602001610178565b34801561034057600080fd5b506101c7600f5481565b34801561035657600080fd5b506101a16103653660046116c6565b610705565b34801561037657600080fd5b506101c760105481565b34801561038c57600080fd5b50610246610712565b3480156103a157600080fd5b506102466103b0366004611749565b610b0a565b3480156103c157600080fd5b506101c76103d036600461182b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561040757600080fd5b50610246610416366004611864565b610b92565b6000610428338484610bd9565b5060015b92915050565b60006104406009600a611977565b61044f906461f313f880611986565b905090565b6000610461848484610cfd565b6104b384336104ae85604051806060016040528060288152602001611b2a602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906112b2565b610bd9565b5060019392505050565b6000546001600160a01b031633146104f05760405162461bcd60e51b81526004016104e79061199d565b60405180910390fd5b60005b815181101561054e57600060046000848481518110610514576105146119d2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016104f3565b5050565b6005546001600160a01b0316336001600160a01b03161461057257600080fd5b30600090815260016020526040902054801561059157610591816112ec565b47801561054e5761054e81611466565b6000546001600160a01b031633146105cb5760405162461bcd60e51b81526004016104e79061199d565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610605573d6000803e3d6000fd5b50600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461067a5760405162461bcd60e51b81526004016104e79061199d565b6106866009600a611977565b610695906461f313f880611986565b600e556106a46009600a611977565b6106b3906461f313f880611986565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106e36009600a611977565b6106f2906461f313f880611986565b60405190815260200160405180910390a1565b6000610428338484610cfd565b6000546001600160a01b0316331461073c5760405162461bcd60e51b81526004016104e79061199d565b601354600160a01b900460ff16156107965760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104e7565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556107c93033600019610bd9565b6108023061036560646107fc60606107f6336001600160a01b031660009081526001602052604090205490565b906114a0565b90611529565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a91906119e8565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090091906119e8565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561094d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097191906119e8565b601380546001600160a01b0319166001600160a01b0392831617905560125461099f91309116600019610bd9565b6012546001600160a01b031663f305d71947306109d1816001600160a01b031660009081526001602052604090205490565b6000806109e66000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a4e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a739190611a05565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190611a33565b506013805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610b345760405162461bcd60e51b81526004016104e79061199d565b60005b815181101561054e57600160046000848481518110610b5857610b586119d2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b37565b6005546001600160a01b0316336001600160a01b031614610bb257600080fd5b6008548111158015610bc657506009548111155b610bcf57600080fd5b6008819055600955565b6001600160a01b038316610c3b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e7565b6001600160a01b038216610c9c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e7565b6001600160a01b038216610dc35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e7565b60008111610e255760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104e7565b600080546001600160a01b03858116911614801590610e5257506000546001600160a01b03848116911614155b1561116f576001600160a01b03841660009081526004602052604090205460ff16158015610e9957506001600160a01b03831660009081526004602052604090205460ff16155b610ea257600080fd5b610ec860646107fc600a54600d5411610ebd57600654610ec1565b6008545b85906114a0565b6013549091506001600160a01b038581169116148015610ef657506012546001600160a01b03848116911614155b8015610f1b57506001600160a01b03831660009081526003602052604090205460ff16155b1561100357600e54821115610f725760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104e7565b600f5482610f95856001600160a01b031660009081526001602052604090205490565b610f9f9190611a55565b1115610fed5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104e7565b600d8054906000610ffd83611a68565b91905055505b6013546001600160a01b03848116911614801561102957506001600160a01b0384163014155b156110565761105360646107fc600b54600d541161104957600754610ec1565b60095485906114a0565b90505b30600090815260016020526040902054601354600160a81b900460ff1615801561108d57506013546001600160a01b038581169116145b80156110a25750601354600160b01b900460ff165b80156110af575060105481115b80156110be5750600c54600d54115b1561116d576015544311156110d35760006014555b6003601454106111255760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104e7565b61114261113d846111388460115461156b565b61156b565b6112ec565b4780156111525761115247611466565b6014805490600061116283611a68565b909155505043601555505b505b80156111e9573060009081526001602052604090205461118f9082611580565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111e09085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461120c90836115df565b6001600160a01b03851660009081526001602052604090205561125161123283836115df565b6001600160a01b03851660009081526001602052604090205490611580565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61129b85856115df565b60405190815260200160405180910390a350505050565b600081848411156112d65760405162461bcd60e51b81526004016104e7919061164f565b5060006112e38486611a81565b95945050505050565b6013805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611334576113346119d2565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561138d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b191906119e8565b816001815181106113c4576113c46119d2565b6001600160a01b0392831660209182029290920101526012546113ea9130911684610bd9565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611423908590600090869030904290600401611a94565b600060405180830381600087803b15801561143d57600080fd5b505af1158015611451573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561054e573d6000803e3d6000fd5b6000826000036114b25750600061042c565b60006114be8385611986565b9050826114cb8583611b07565b146115225760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104e7565b9392505050565b600061152283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611621565b600081831161157a5782611522565b50919050565b60008061158d8385611a55565b9050838110156115225760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104e7565b600061152283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b2565b600081836116425760405162461bcd60e51b81526004016104e7919061164f565b5060006112e38486611b07565b60006020808352835180602085015260005b8181101561167d57858101830151858201604001528201611661565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146116b357600080fd5b50565b80356116c18161169e565b919050565b600080604083850312156116d957600080fd5b82356116e48161169e565b946020939093013593505050565b60008060006060848603121561170757600080fd5b83356117128161169e565b925060208401356117228161169e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561175c57600080fd5b823567ffffffffffffffff8082111561177457600080fd5b818501915085601f83011261178857600080fd5b81358181111561179a5761179a611733565b8060051b604051601f19603f830116810181811085821117156117bf576117bf611733565b6040529182528482019250838101850191888311156117dd57600080fd5b938501935b82851015611802576117f3856116b6565b845293850193928501926117e2565b98975050505050505050565b60006020828403121561182057600080fd5b81356115228161169e565b6000806040838503121561183e57600080fd5b82356118498161169e565b915060208301356118598161169e565b809150509250929050565b60006020828403121561187657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156118ce5781600019048211156118b4576118b461187d565b808516156118c157918102915b93841c9390800290611898565b509250929050565b6000826118e55750600161042c565b816118f25750600061042c565b816001811461190857600281146119125761192e565b600191505061042c565b60ff8411156119235761192361187d565b50506001821b61042c565b5060208310610133831016604e8410600b8410161715611951575081810a61042c565b61195b8383611893565b806000190482111561196f5761196f61187d565b029392505050565b600061152260ff8416836118d6565b808202811582820484141761042c5761042c61187d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119fa57600080fd5b81516115228161169e565b600080600060608486031215611a1a57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611a4557600080fd5b8151801515811461152257600080fd5b8082018082111561042c5761042c61187d565b600060018201611a7a57611a7a61187d565b5060010190565b8181038181111561042c5761042c61187d565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611ae65784516001600160a01b031683529383019391830191600101611ac1565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611b2457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122021f56f3fa89ee55c5719f97240444ce92c9067cf3d1c0d4e36c202ca20fa6f1764736f6c63430008180033";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TOKEN> {
    return super.deploy(overrides || {}) as Promise<TOKEN>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TOKEN {
    return super.attach(address) as TOKEN;
  }
  override connect(signer: Signer): TOKEN__factory {
    return super.connect(signer) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new utils.Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TOKEN {
    return new Contract(address, _abi, signerOrProvider) as TOKEN;
  }
}
