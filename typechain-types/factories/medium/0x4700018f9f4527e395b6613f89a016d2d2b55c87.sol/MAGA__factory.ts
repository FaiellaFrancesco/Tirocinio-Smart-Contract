/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MAGA,
  MAGAInterface,
} from "../../../medium/0x4700018f9f4527e395b6613f89a016d2d2b55c87.sol/MAGA";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_buyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalBuyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalSellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_transferTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556005600a55600a600b55600a600c556000600d556000600e556009600a62000041919062000361565b62000051906301312d0062000379565b600f55620000626009600a62000361565b62000072906301312d0062000379565b601055620000836009600a62000361565b62000092906298968062000379565b601155620000a36009600a62000361565b620000b3906301312d0062000379565b6012556014805461ffff60a81b1916905560006015819055601655348015620000db57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916738fad85d93cb33a1daa342777d92e3562732022fb179055620001516009600a62000361565b6200016190633b9aca0062000379565b3360009081526001602081905260408220929092556003906200018c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001eb3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002256009600a62000361565b6200023590633b9aca0062000379565b60405190815260200160405180910390a362000393565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a35781600019048211156200028757620002876200024c565b808516156200029557918102915b93841c939080029062000267565b509250929050565b600082620002bc575060016200035b565b81620002cb575060006200035b565b8160018114620002e45760028114620002ef576200030f565b60019150506200035b565b60ff8411156200030357620003036200024c565b50506001821b6200035b565b5060208310610133831016604e8410600b841016171562000334575081810a6200035b565b62000340838362000262565b80600019048211156200035757620003576200024c565b0290505b92915050565b60006200037260ff841683620002ab565b9392505050565b80820281158282048414176200035b576200035b6200024c565b611cf780620003a36000396000f3fe6080604052600436106101a05760003560e01c806370a08231116100ec578063a9059cbb1161008a578063c9567bf911610064578063c9567bf91461049d578063d34628cc146104b2578063dd62ed3e146104d2578063ec1f3f631461051857600080fd5b8063a9059cbb14610451578063baeb7a7d14610471578063bf474bed1461048757600080fd5b80637d1db4a5116100c65780637d1db4a5146103d05780638da5cb5b146103e65780638f9a55c01461040e57806395d89b411461042457600080fd5b806370a0823114610370578063715018a6146103a6578063751039fc146103bb57600080fd5b806323b872dd1161015957806331c2d8471161013357806331c2d847146102ec5780633bbac5791461030c5780633ef947211461034557806351bc3c851461035b57600080fd5b806323b872dd1461029a57806327b1a8e9146102ba578063313ce567146102d057600080fd5b806306fdde03146101ac578063095ea7b3146102045780630faee56f14610234578063109daa991461025857806317391e491461026f57806318160ddd1461028557600080fd5b366101a757005b600080fd5b3480156101b857600080fd5b5060408051808201909152601881527f4d616b6520416d657269636120477265656e20416761696e000000000000000060208201525b6040516101fb91906117bf565b60405180910390f35b34801561021057600080fd5b5061022461021f366004611836565b610538565b60405190151581526020016101fb565b34801561024057600080fd5b5061024a60125481565b6040519081526020016101fb565b34801561026457600080fd5b5061026d61054f565b005b34801561027b57600080fd5b5061024a600d5481565b34801561029157600080fd5b5061024a6105bf565b3480156102a657600080fd5b506102246102b5366004611862565b6105e0565b3480156102c657600080fd5b5061024a600e5481565b3480156102dc57600080fd5b50604051600981526020016101fb565b3480156102f857600080fd5b5061026d6103073660046118b9565b610649565b34801561031857600080fd5b5061022461032736600461197e565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561035157600080fd5b5061024a60095481565b34801561036757600080fd5b5061026d6106d5565b34801561037c57600080fd5b5061024a61038b36600461197e565b6001600160a01b031660009081526001602052604090205490565b3480156103b257600080fd5b5061026d610724565b3480156103c757600080fd5b5061026d610798565b3480156103dc57600080fd5b5061024a600f5481565b3480156103f257600080fd5b506000546040516001600160a01b0390911681526020016101fb565b34801561041a57600080fd5b5061024a60105481565b34801561043057600080fd5b506040805180820190915260048152634d41474160e01b60208201526101ee565b34801561045d57600080fd5b5061022461046c366004611836565b610845565b34801561047d57600080fd5b5061024a60085481565b34801561049357600080fd5b5061024a60115481565b3480156104a957600080fd5b5061026d610852565b3480156104be57600080fd5b5061026d6104cd3660046118b9565b610c0e565b3480156104de57600080fd5b5061024a6104ed36600461199b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561052457600080fd5b5061026d6105333660046119d4565b610c96565b6000610545338484610cdd565b5060015b92915050565b6000546001600160a01b031633146105825760405162461bcd60e51b8152600401610579906119ed565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105cd6009600a611b1c565b6105db90633b9aca00611b2b565b905090565b60006105ed848484610e01565b61063f843361063a85604051806060016040528060288152602001611c9a602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611422565b610cdd565b5060019392505050565b6000546001600160a01b031633146106735760405162461bcd60e51b8152600401610579906119ed565b60005b81518110156106d15760006004600084848151811061069757610697611b42565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610676565b5050565b6005546001600160a01b0316336001600160a01b0316146106f557600080fd5b306000908152600160205260409020548015610714576107148161145c565b4780156106d1576106d1816115d6565b6000546001600160a01b0316331461074e5760405162461bcd60e51b8152600401610579906119ed565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107c25760405162461bcd60e51b8152600401610579906119ed565b6107ce6009600a611b1c565b6107dc90633b9aca00611b2b565b600f556107eb6009600a611b1c565b6107f990633b9aca00611b2b565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6108296009600a611b1c565b61083790633b9aca00611b2b565b6040519081526020016105b5565b6000610545338484610e01565b6000546001600160a01b0316331461087c5760405162461bcd60e51b8152600401610579906119ed565b601454600160a01b900460ff16156108d65760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610579565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561091f9030906109116009600a611b1c565b61063a90633b9aca00611b2b565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611b58565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190611b58565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d9190611b58565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610ad5816001600160a01b031660009081526001602052604090205490565b600080610aea6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b52573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b779190611b75565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190611ba3565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610c385760405162461bcd60e51b8152600401610579906119ed565b60005b81518110156106d157600160046000848481518110610c5c57610c5c611b42565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610c3b565b6005546001600160a01b0316336001600160a01b031614610cb657600080fd5b6008548111158015610cca57506009548111155b610cd357600080fd5b6008819055600955565b6001600160a01b038316610d3f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610579565b6001600160a01b038216610da05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610579565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610579565b6001600160a01b038216610ec75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610579565b60008111610f295760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610579565b600080546001600160a01b03858116911614801590610f5657506000546001600160a01b03848116911614155b8015610f7057506005546001600160a01b03848116911614155b156112df576001600160a01b03841660009081526004602052604090205460ff16158015610fb757506001600160a01b03831660009081526004602052604090205460ff16155b610fc057600080fd5b600e54600003610ff957610ff66064610ff0600a54600e5411610fe557600654610fe9565b6008545b8590611610565b90611699565b90505b600e541561101e5761101b6064610ff0600d548561161090919063ffffffff16565b90505b6014546001600160a01b03858116911614801561104957506013546001600160a01b03848116911614155b801561106e57506001600160a01b03831660009081526003602052604090205460ff16155b1561117357600f548211156110c55760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610579565b601054826110e8856001600160a01b031660009081526001602052604090205490565b6110f29190611bc5565b11156111405760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610579565b61115b6064610ff0600a54600e5411610fe557600654610fe9565b600e8054919250600061116d83611bd8565b91905055505b6014546001600160a01b03848116911614801561119957506001600160a01b0384163014155b156111c6576111c36064610ff0600b54600e54116111b957600754610fe9565b6009548590611610565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156111fd57506014546001600160a01b038581169116145b80156112125750601454600160b01b900460ff165b801561121f575060115481115b801561122e5750600c54600e54115b156112dd576016544311156112435760006015555b6003601554106112955760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610579565b6112b26112ad846112a8846012546116db565b6116db565b61145c565b4780156112c2576112c2476115d6565b601580549060006112d283611bd8565b909155505043601655505b505b801561135957306000908152600160205260409020546112ff90826116f0565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113509085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461137c908361174f565b6001600160a01b0385166000908152600160205260409020556113c16113a2838361174f565b6001600160a01b038516600090815260016020526040902054906116f0565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61140b858561174f565b60405190815260200160405180910390a350505050565b600081848411156114465760405162461bcd60e51b815260040161057991906117bf565b5060006114538486611bf1565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106114a4576114a4611b42565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115219190611b58565b8160018151811061153457611534611b42565b6001600160a01b03928316602091820292909201015260135461155a9130911684610cdd565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611593908590600090869030904290600401611c04565b600060405180830381600087803b1580156115ad57600080fd5b505af11580156115c1573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106d1573d6000803e3d6000fd5b60008260000361162257506000610549565b600061162e8385611b2b565b90508261163b8583611c77565b146116925760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610579565b9392505050565b600061169283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611791565b60008183116116ea5782611692565b50919050565b6000806116fd8385611bc5565b9050838110156116925760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610579565b600061169283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611422565b600081836117b25760405162461bcd60e51b815260040161057991906117bf565b5060006114538486611c77565b60006020808352835180602085015260005b818110156117ed578581018301518582016040015282016117d1565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461182357600080fd5b50565b80356118318161180e565b919050565b6000806040838503121561184957600080fd5b82356118548161180e565b946020939093013593505050565b60008060006060848603121561187757600080fd5b83356118828161180e565b925060208401356118928161180e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118cc57600080fd5b823567ffffffffffffffff808211156118e457600080fd5b818501915085601f8301126118f857600080fd5b81358181111561190a5761190a6118a3565b8060051b604051601f19603f8301168101818110858211171561192f5761192f6118a3565b60405291825284820192508381018501918883111561194d57600080fd5b938501935b828510156119725761196385611826565b84529385019392850192611952565b98975050505050505050565b60006020828403121561199057600080fd5b81356116928161180e565b600080604083850312156119ae57600080fd5b82356119b98161180e565b915060208301356119c98161180e565b809150509250929050565b6000602082840312156119e657600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a73578160001904821115611a5957611a59611a22565b80851615611a6657918102915b93841c9390800290611a3d565b509250929050565b600082611a8a57506001610549565b81611a9757506000610549565b8160018114611aad5760028114611ab757611ad3565b6001915050610549565b60ff841115611ac857611ac8611a22565b50506001821b610549565b5060208310610133831016604e8410600b8410161715611af6575081810a610549565b611b008383611a38565b8060001904821115611b1457611b14611a22565b029392505050565b600061169260ff841683611a7b565b808202811582820484141761054957610549611a22565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b6a57600080fd5b81516116928161180e565b600080600060608486031215611b8a57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611bb557600080fd5b8151801515811461169257600080fd5b8082018082111561054957610549611a22565b600060018201611bea57611bea611a22565b5060010190565b8181038181111561054957610549611a22565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611c565784516001600160a01b031683529383019391830191600101611c31565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c9457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212208b89a16f4c07ac453cef07bc3512c7dc361c948ae1d7be93ef86877374ed1a7064736f6c63430008170033";

type MAGAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MAGAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MAGA__factory extends ContractFactory {
  constructor(...args: MAGAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MAGA & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MAGA__factory {
    return super.connect(runner) as MAGA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MAGAInterface {
    return new Interface(_abi) as MAGAInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MAGA {
    return new Contract(address, _abi, runner) as unknown as MAGA;
  }
}
