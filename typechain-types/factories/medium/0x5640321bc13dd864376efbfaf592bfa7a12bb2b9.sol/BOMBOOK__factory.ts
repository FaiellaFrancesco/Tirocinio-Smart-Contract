/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BOMBOOK,
  BOMBOOKInterface,
} from "../../../medium/0x5640321bc13dd864376efbfaf592bfa7a12bb2b9.sol/BOMBOOK";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalBOMBOOKTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initBOMBOOKDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueBOMBOOKETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b61185a806102c66000396000f3fe6080604052600436106101025760003560e01c80638a8c523c11610095578063bd12495211610064578063bd124952146102d6578063d59c6ec2146102ec578063dd62ed3e14610301578063e11e97a814610347578063ea414b281461035d57600080fd5b80638a8c523c1461024d5780638da5cb5b1461026257806395d89b411461028a578063a9059cbb146102b657600080fd5b806323b872dd116100d157806323b872dd146101c4578063313ce567146101e457806370a0823114610200578063715018a61461023657600080fd5b806306fdde031461010e578063095ea7b31461015b5780630faee56f1461018b57806318160ddd146101af57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526012815271426f6f6b206f66204d61747420467572696560701b60208201525b6040516101529190611337565b60405180910390f35b34801561016757600080fd5b5061017b61017636600461139a565b61037d565b6040519015158152602001610152565b34801561019757600080fd5b506101a1600b5481565b604051908152602001610152565b3480156101bb57600080fd5b506101a1610394565b3480156101d057600080fd5b5061017b6101df3660046113c6565b6103b5565b3480156101f057600080fd5b5060405160098152602001610152565b34801561020c57600080fd5b506101a161021b366004611407565b6001600160a01b031660009081526001602052604090205490565b34801561024257600080fd5b5061024b610478565b005b34801561025957600080fd5b5061024b6104f5565b34801561026e57600080fd5b506000546040516001600160a01b039091168152602001610152565b34801561029657600080fd5b50604080518082019091526003815262424f4d60e81b6020820152610145565b3480156102c257600080fd5b5061017b6102d136600461139a565b6108b0565b3480156102e257600080fd5b506101a1600c5481565b3480156102f857600080fd5b5061024b6108bd565b34801561030d57600080fd5b506101a161031c366004611424565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035357600080fd5b506101a1600d5481565b34801561036957600080fd5b5061024b610378366004611407565b610920565b600061038a33848461095e565b5060015b92915050565b60006103a26009600a61155a565b6103b0906305f5e100611569565b905090565b60006103c2848484610a82565b3360009081526003602052604090205460ff161580156104175750600f546001600160a01b038581169116148061040457506001600160a01b03831661dead14155b8061041757506001600160a01b03841630145b1561046e5761046e8433610469856040518060600160405280602881526020016117fd602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f0f565b61095e565b5060019392505050565b6000546001600160a01b031633146104ab5760405162461bcd60e51b81526004016104a290611580565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051f5760405162461bcd60e51b81526004016104a290611580565b600f54600160a01b900460ff16156105795760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104a2565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105c29030906105b46009600a61155a565b610469906305f5e100611569565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063991906115b5565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906115b5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073091906115b5565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d7194730610778816001600160a01b031660009081526001602052604090205490565b60008061078d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107f5573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081a91906115d2565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ad9190611600565b50565b600061038a338484610a82565b6000546001600160a01b031633146108e75760405162461bcd60e51b81526004016104a290611580565b600047116108f457600080fd5b60405133904780156108fc02916000818181858888f193505050501580156108ad573d6000803e3d6000fd5b3360009081526003602052604090205460ff1661093c57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109c05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a2565b6001600160a01b038216610a215760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a2565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a2565b6001600160a01b038216610b485760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a2565b60008111610baa5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104a2565b60006001600160a01b0384163014801590610bce57506001600160a01b0383163014155b15610db157600f546001600160a01b038581169116148015610bfe5750600e546001600160a01b03848116911614155b8015610c2357506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3d57506004546001600160a01b03848116911614155b15610c82574360095414610c55576000600a55436009555b81600a6000828254610c679190611622565b909155505060088054906000610c7c83611635565b91905055505b600f546001600160a01b038481169116148015610ca857506001600160a01b0384163014155b15610d0357610cb5610f49565b600a541080610cc657504360095414155b610d035760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016104a2565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d3a5750600f546001600160a01b038581169116145b8015610d4f5750600f54600160b01b900460ff165b8015610d6957506004546001600160a01b03868116911614155b15610daf578015610da3576000600b548211610d855781610d89565b600b545b9050610da1818511610d9b57846110d7565b816110d7565b505b47610dad47611251565b505b505b6001600160a01b038416600090815260016020526040902054610dd4908361128f565b6001600160a01b038516600090815260016020526040902055610e19610dfa838361128f565b6001600160a01b038516600090815260016020526040902054906112d8565b6001600160a01b0384166000908152600160205260409020558015610eac5730600090815260016020526040902054610e5290826112d8565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ea39085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f09576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ef7858561128f565b60405190815260200160405180910390a35b50505050565b60008184841115610f335760405162461bcd60e51b81526004016104a29190611337565b506000610f40848661164e565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb91906115b5565b81600081518110610fee57610fee611677565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061102257611022611677565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061106e906729a2241af62c00009086906004016116d2565b600060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b391908101906116f3565b9050806001815181106110c8576110c8611677565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061111f5761111f611677565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c91906115b5565b816001815181106111af576111af611677565b6001600160a01b039283166020918202929092010152600e546111d5913091168461095e565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061120e9085906000908690309042906004016117c0565b600060405180830381600087803b15801561122857600080fd5b505af115801561123c573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561128b573d6000803e3d6000fd5b5050565b60006112d183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f0f565b9392505050565b6000806112e58385611622565b9050838110156112d15760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104a2565b602081526000825180602084015260005b818110156113655760208186018101516040868401015201611348565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108ad57600080fd5b600080604083850312156113ad57600080fd5b82356113b881611385565b946020939093013593505050565b6000806000606084860312156113db57600080fd5b83356113e681611385565b925060208401356113f681611385565b929592945050506040919091013590565b60006020828403121561141957600080fd5b81356112d181611385565b6000806040838503121561143757600080fd5b823561144281611385565b9150602083013561145281611385565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114ae578085048111156114925761149261145d565b60018416156114a057908102905b60019390931c928002611477565b935093915050565b6000826114c55750600161038e565b816114d25750600061038e565b81600181146114e857600281146114f25761150e565b600191505061038e565b60ff8411156115035761150361145d565b50506001821b61038e565b5060208310610133831016604e8410600b8410161715611531575081810a61038e565b61153e6000198484611473565b80600019048211156115525761155261145d565b029392505050565b60006112d160ff8416836114b6565b808202811582820484141761038e5761038e61145d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115c757600080fd5b81516112d181611385565b6000806000606084860312156115e757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561161257600080fd5b815180151581146112d157600080fd5b8082018082111561038e5761038e61145d565b6000600182016116475761164761145d565b5060010190565b8181038181111561038e5761038e61145d565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116c85781516001600160a01b03168652602095860195909101906001016116a1565b5093949350505050565b8281526040602082015260006116eb604083018461168d565b949350505050565b60006020828403121561170557600080fd5b815167ffffffffffffffff81111561171c57600080fd5b8201601f8101841361172d57600080fd5b805167ffffffffffffffff81111561174757611747611661565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561177457611774611661565b60405291825260208184018101929081018784111561179257600080fd5b6020850194505b838510156117b557845180825260209586019590935001611799565b509695505050505050565b85815284602082015260a0604082015260006117df60a083018661168d565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122046d978735d4f6df09a0b3a2c28f2c0191939efabb9c1ad8d32035e1e1a440a3164736f6c634300081d0033";

type BOMBOOKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BOMBOOKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BOMBOOK__factory extends ContractFactory {
  constructor(...args: BOMBOOKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<BOMBOOK> {
    return super.deploy(overrides || {}) as Promise<BOMBOOK>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BOMBOOK {
    return super.attach(address) as BOMBOOK;
  }
  override connect(signer: Signer): BOMBOOK__factory {
    return super.connect(signer) as BOMBOOK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BOMBOOKInterface {
    return new utils.Interface(_abi) as BOMBOOKInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BOMBOOK {
    return new Contract(address, _abi, signerOrProvider) as BOMBOOK;
  }
}
