/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VitalikWorld,
  VitalikWorldInterface,
} from "../../../medium/0x2026c3524c699cc4e535f9541980379162fe2a0b.sol/VitalikWorld";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001f6012600a610185565b61002e9064174876e800610198565b6000818155338082526001602052604080832084905551929350917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906100789085815260200190565b60405180910390a3506101af565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156100d7578085048111156100bb576100bb610086565b60018416156100c957908102905b60019390931c9280026100a0565b935093915050565b6000826100ee5750600161017f565b816100fb5750600061017f565b8160018114610111576002811461011b57610137565b600191505061017f565b60ff84111561012c5761012c610086565b50506001821b61017f565b5060208310610133831016604e8410600b841016171561015a575081810a61017f565b610167600019848461009c565b806000190482111561017b5761017b610086565b0290505b92915050565b600061019183836100df565b9392505050565b808202811582820484141761017f5761017f610086565b610751806101be6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461012157806370a082311461013b57806395d89b411461015b578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde0314610098578063095ea7b3146100d957806318160ddd146100fc57806323b872dd1461010e575b600080fd5b6100c36040518060400160405280600c81526020016b159a5d185b1a5ad5dbdc9b1960a21b81525081565b6040516100d091906105b9565b60405180910390f35b6100ec6100e7366004610623565b6101ba565b60405190151581526020016100d0565b6000545b6040519081526020016100d0565b6100ec61011c36600461064d565b61027d565b610129601281565b60405160ff90911681526020016100d0565b61010061014936600461068a565b60016020526000908152604090205481565b6100c360405180604001604052806002815260200161565760f01b81525081565b6100ec61018a366004610623565b610482565b61010061019d3660046106ac565b600260209081526000928352604080842090915290825290205481565b60006001600160a01b0383166102175760405162461bcd60e51b815260206004820152601760248201527f417070726f766520746f207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b0383166102d05760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b604482015260640161020e565b6001600160a01b03841660009081526001602052604090205482111561032f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161020e565b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156103975760405162461bcd60e51b8152602060048201526012602482015271105b1b1bddd85b98d948195e18d95959195960721b604482015260640161020e565b6001600160a01b038416600090815260016020526040812080548492906103bf9084906106f5565b90915550506001600160a01b038316600090815260016020526040812080548492906103ec908490610708565b90915550506001600160a01b0384166000908152600260209081526040808320338452909152812080548492906104249084906106f5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161047091815260200190565b60405180910390a35060019392505050565b60006001600160a01b0383166104d55760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b604482015260640161020e565b3360009081526001602052604090205482111561052b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161020e565b336000908152600160205260408120805484929061054a9084906106f5565b90915550506001600160a01b03831660009081526001602052604081208054849290610577908490610708565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161026b565b602081526000825180602084015260005b818110156105e757602081860181015160408684010152016105ca565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461061e57600080fd5b919050565b6000806040838503121561063657600080fd5b61063f83610607565b946020939093013593505050565b60008060006060848603121561066257600080fd5b61066b84610607565b925061067960208501610607565b929592945050506040919091013590565b60006020828403121561069c57600080fd5b6106a582610607565b9392505050565b600080604083850312156106bf57600080fd5b6106c883610607565b91506106d660208401610607565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610277576102776106df565b80820180821115610277576102776106df56fea26469706673582212208aa0cf526ebd2eae8ecf9f90e2b52a05427a76484e87bcb810321bb2cebe4c1a64736f6c634300081e0033";

type VitalikWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VitalikWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VitalikWorld__factory extends ContractFactory {
  constructor(...args: VitalikWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VitalikWorld & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VitalikWorld__factory {
    return super.connect(runner) as VitalikWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VitalikWorldInterface {
    return new Interface(_abi) as VitalikWorldInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VitalikWorld {
    return new Contract(address, _abi, runner) as unknown as VitalikWorld;
  }
}
