/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xd8aca25b289c2e4a2fa71de7b888b878f7ac7b1e.sol/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_imp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101ef3803806101ef83398101604081905261002f91610066565b600061005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610096565b91909155506100bd565b60006020828403121561007857600080fd5b81516001600160a01b038116811461008f57600080fd5b9392505050565b818103818111156100b757634e487b7160e01b600052601160045260246000fd5b92915050565b610123806100cc6000396000f3fe60806040526000602f60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60b7565b9050600081549050600080826001600160a01b0316600036604051605392919060dd565b600060405180830381855af49150503d8060008114608c576040519150601f19603f3d011682016040523d82523d6000602084013e6091565b606091505b5091509150816000811460a7576001811460af57005b815160208301fd5b815160208301f35b8181038181111560d757634e487b7160e01b600052601160045260246000fd5b92915050565b818382376000910190815291905056fea26469706673582212207c660e00b40b860e499a4e938032f3e5cfc4e1897c63387f0196a38ea468f6a764736f6c63430008130033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _imp: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_imp, overrides || {});
  }
  override deploy(
    _imp: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_imp, overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
