/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CocoroDoge,
  CocoroDogeInterface,
} from "../../../medium/0x7e809b1003c8f9e74fcc7ca0dc4e747a476d3b8f.sol/CocoroDoge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refundEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526012600755601260085560006009556000600a556001600b556001600c556001600d556000600e556009600a6200003c919062000324565b6200004d906401f58066406200033c565b600f556200005e6009600a62000324565b6200006f906401f58066406200033c565b601055620000806009600a62000324565b62000091906401f58066406200033c565b601155620000a26009600a62000324565b620000b3906401f58066406200033c565b6012556013805462ffff0019169055348015620000cf57600080fd5b50620000db33620001bf565b600480546001600160a01b0319167305701bf0da69eea32aab5ca52d12b5a59512a4e71790556200010f6009600a62000324565b62000120906461f313f8806200033c565b336000818152600160208181526040808420959095556004546001600160a01b0316835260039052838220805460ff199081168317909155308352938220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001976009600a62000324565b620001a8906461f313f8806200033c565b60405190815260200160405180910390a362000356565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002665781600019048211156200024a576200024a6200020f565b808516156200025857918102915b93841c93908002906200022a565b509250929050565b6000826200027f575060016200031e565b816200028e575060006200031e565b8160018114620002a75760028114620002b257620002d2565b60019150506200031e565b60ff841115620002c657620002c66200020f565b50506001821b6200031e565b5060208310610133831016604e8410600b8410161715620002f7575081810a6200031e565b62000303838362000225565b80600019048211156200031a576200031a6200020f565b0290505b92915050565b60006200033560ff8416836200026e565b9392505050565b80820281158282048414176200031e576200031e6200020f565b611aad80620003666000396000f3fe6080604052600436106101185760003560e01c8063715018a6116100a057806395d89b411161006457806395d89b41146102ef578063a9059cbb1461031e578063bf474bed1461033e578063c9567bf914610354578063dd62ed3e1461036957600080fd5b8063715018a614610271578063751039fc146102865780637d1db4a51461029b5780638da5cb5b146102b15780638f9a55c0146102d957600080fd5b80631faa4133116100e75780631faa4133146101d357806323b872dd146101ea578063313ce5671461020a57806351bc3c851461022657806370a082311461023b57600080fd5b806306fdde0314610124578063095ea7b31461016a5780630faee56f1461019a57806318160ddd146101be57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201909152600b81526a436f636f726f20446f676560a81b60208201525b604051610161919061167c565b60405180910390f35b34801561017657600080fd5b5061018a6101853660046116e0565b6103af565b6040519015158152602001610161565b3480156101a657600080fd5b506101b060125481565b604051908152602001610161565b3480156101ca57600080fd5b506101b06103c6565b3480156101df57600080fd5b506101e86103e8565b005b3480156101f657600080fd5b5061018a61020536600461170c565b610444565b34801561021657600080fd5b5060405160098152602001610161565b34801561023257600080fd5b506101e86104ad565b34801561024757600080fd5b506101b061025636600461174d565b6001600160a01b031660009081526001602052604090205490565b34801561027d57600080fd5b506101e86104e0565b34801561029257600080fd5b506101e861051f565b3480156102a757600080fd5b506101b0600f5481565b3480156102bd57600080fd5b506000546040516001600160a01b039091168152602001610161565b3480156102e557600080fd5b506101b060105481565b3480156102fb57600080fd5b50604080518082019091526006815265434f524f474560d01b6020820152610154565b34801561032a57600080fd5b5061018a6103393660046116e0565b6105d4565b34801561034a57600080fd5b506101b060115481565b34801561036057600080fd5b506101e86105e1565b34801561037557600080fd5b506101b061038436600461176a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103bc33848461099e565b5060015b92915050565b60006103d46009600a61189d565b6103e3906461f313f8806118ac565b905090565b6004546001600160a01b0316336001600160a01b03161461040857600080fd5b6004546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610441573d6000803e3d6000fd5b50565b6000610451848484610ac3565b6104a3843361049e85604051806060016040528060288152602001611a50602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061105d565b61099e565b5060019392505050565b3060009081526001602052604090205480156104cc576104cc81611097565b4780156104dc576104dc8161120b565b5050565b6000546001600160a01b031633146105135760405162461bcd60e51b815260040161050a906118c3565b60405180910390fd5b61051d6000611245565b565b6000546001600160a01b031633146105495760405162461bcd60e51b815260040161050a906118c3565b6105556009600a61189d565b610564906461f313f8806118ac565b600f556105736009600a61189d565b610582906461f313f8806118ac565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105b26009600a61189d565b6105c1906461f313f8806118ac565b60405190815260200160405180910390a1565b60006103bc338484610ac3565b6000546001600160a01b0316331461060b5760405162461bcd60e51b815260040161050a906118c3565b60135460ff161561065e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161050a565b600580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106a89030906106996009600a61189d565b61049e906461f313f8806118ac565b600560009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906118f8565b6001600160a01b031663c9c6539630600560009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a591906118f8565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081691906118f8565b600680546001600160a01b039283166001600160a01b03199091161790556013805462ff00001916620100001790556005541663f305d719473061086f816001600160a01b031660009081526001602052604090205490565b6000806108846000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108ec573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109119190611915565b505060065460055460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190611943565b506013805460ff19166001179055565b6001600160a01b038316610a005760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050a565b6001600160a01b038216610a615760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610b275760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050a565b6001600160a01b038216610b895760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050a565b60008111610beb5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161050a565b60135462010000900460ff161580610c0a5750601354610100900460ff165b15610c1f57610c1a838383611295565b505050565b600080546001600160a01b03858116911614801590610c4c57506000546001600160a01b03848116911614155b8015610c6657506004546001600160a01b03848116911614155b15610ec057610c976064610c91600b54600e5411610c8657600754610c8a565b6009545b859061133b565b906113c4565b6006549091506001600160a01b038581169116148015610cc557506005546001600160a01b03848116911614155b8015610cea57506001600160a01b03831660009081526003602052604090205460ff16155b15610dd257600f54821115610d415760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161050a565b60105482610d64856001600160a01b031660009081526001602052604090205490565b610d6e9190611965565b1115610dbc5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161050a565b600e8054906000610dcc83611978565b91905055505b6006546001600160a01b038481169116148015610df857506001600160a01b0384163014155b15610e2557610e226064610c91600c54600e5411610e1857600854610c8a565b600a54859061133b565b90505b30600090815260016020526040902054601354610100900460ff16158015610e5a57506006546001600160a01b038581169116145b8015610e6e575060135462010000900460ff165b8015610e7b575060115481115b8015610e8a5750600d54600e54115b15610ebe57610eac610ea784610ea284601254611406565b611406565b611097565b478015610ebc57610ebc4761120b565b505b505b6001600160a01b03841660009081526003602052604090205460ff1680610eff57506001600160a01b03831660009081526003602052604090205460ff165b8015610f1457506001600160a01b0384163014155b8015610f2957506001600160a01b0383163014155b15610f3357436014555b6001600160a01b03841660009081526003602052604090205460ff16158015610f7557506001600160a01b03831660009081526003602052604090205460ff16155b1561104b576006546001600160a01b03848116911614611018576001600160a01b038084166000908152601660205260409020600654909190811690861603610fdf578054600003610fda57600d54600e541115610fd35743610fd7565b6000195b81555b611012565b6001600160a01b038516600090815260166020526040902081541580611006575081548154105b1561101057805482555b505b5061104b565b6001600160a01b0384166000908152601660205260409020601454815461103e9161141b565b6001820155436002909101555b6110578484848461145d565b50505050565b600081848411156110815760405162461bcd60e51b815260040161050a919061167c565b50600061108e8486611991565b95945050505050565b6013805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110db576110db6119a4565b6001600160a01b03928316602091820292909201810191909152600554604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115891906118f8565b8160018151811061116b5761116b6119a4565b6001600160a01b039283166020918202929092010152600554611191913091168461099e565b60055460405163791ac94760e01b81526001600160a01b039091169063791ac947906111ca9085906000908690309042906004016119ba565b600060405180830381600087803b1580156111e457600080fd5b505af11580156111f8573d6000803e3d6000fd5b50506013805461ff001916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156104dc573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383166000908152600160205260409020546112b8908261141b565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112e79082611488565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ab69085815260200190565b60008260000361134d575060006103c0565b600061135983856118ac565b9050826113668583611a2d565b146113bd5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161050a565b9392505050565b60006113bd83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114e7565b600081831161141557826113bd565b50919050565b60006113bd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061105d565b600061146a858385611515565b905061148185858361147c878761141b565b6115c8565b5050505050565b6000806114958385611965565b9050838110156113bd5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161050a565b600081836115085760405162461bcd60e51b815260040161050a919061167c565b50600061108e8486611a2d565b60045460009081906001600160a01b03908116908616036115425760155461153d908461133b565b611544565b825b905083156115c057306000908152600160205260409020546115669085611488565b30600081815260016020526040908190209290925590516001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115b79088815260200190565b60405180910390a35b949350505050565b6001600160a01b0384166000908152600160205260409020546115eb908361141b565b6001600160a01b03808616600090815260016020526040808220939093559085168152205461161a9082611488565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061166e9085815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b818110156116aa5785810183015185820160400152820161168e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461044157600080fd5b600080604083850312156116f357600080fd5b82356116fe816116cb565b946020939093013593505050565b60008060006060848603121561172157600080fd5b833561172c816116cb565b9250602084013561173c816116cb565b929592945050506040919091013590565b60006020828403121561175f57600080fd5b81356113bd816116cb565b6000806040838503121561177d57600080fd5b8235611788816116cb565b91506020830135611798816116cb565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117f45781600019048211156117da576117da6117a3565b808516156117e757918102915b93841c93908002906117be565b509250929050565b60008261180b575060016103c0565b81611818575060006103c0565b816001811461182e576002811461183857611854565b60019150506103c0565b60ff841115611849576118496117a3565b50506001821b6103c0565b5060208310610133831016604e8410600b8410161715611877575081810a6103c0565b61188183836117b9565b8060001904821115611895576118956117a3565b029392505050565b60006113bd60ff8416836117fc565b80820281158282048414176103c0576103c06117a3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561190a57600080fd5b81516113bd816116cb565b60008060006060848603121561192a57600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561195557600080fd5b815180151581146113bd57600080fd5b808201808211156103c0576103c06117a3565b60006001820161198a5761198a6117a3565b5060010190565b818103818111156103c0576103c06117a3565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611a0c5784516001600160a01b0316835293830193918301916001016119e7565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611a4a57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220bb706c273fd8fa84f059f4660661aa74f541ead1dd47ce43d2e622a4cb9980ea64736f6c63430008170033";

type CocoroDogeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CocoroDogeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CocoroDoge__factory extends ContractFactory {
  constructor(...args: CocoroDogeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CocoroDoge> {
    return super.deploy(overrides || {}) as Promise<CocoroDoge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CocoroDoge {
    return super.attach(address) as CocoroDoge;
  }
  override connect(signer: Signer): CocoroDoge__factory {
    return super.connect(signer) as CocoroDoge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CocoroDogeInterface {
    return new utils.Interface(_abi) as CocoroDogeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CocoroDoge {
    return new Contract(address, _abi, signerOrProvider) as CocoroDoge;
  }
}
