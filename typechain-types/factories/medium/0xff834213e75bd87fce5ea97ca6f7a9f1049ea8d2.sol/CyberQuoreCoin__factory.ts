/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CyberQuoreCoin,
  CyberQuoreCoinInterface,
} from "../../../medium/0xff834213e75bd87fce5ea97ca6f7a9f1049ea8d2.sol/CyberQuoreCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "blacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charityWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cyberWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "holders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromLimits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainTokenWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCharity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCyber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxReflection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reflection",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_charity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cyber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burn",
        type: "uint256",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526050600155606460025560646003556096600455600960055560646d021ebc7e56fbd5a3f658c0000000600361003a91906102aa565b61004491906102d5565b6006556007805460ff19169055636921228060095534801561006557600080fd5b50600080546001600160a01b0319163390811782556d021ebc7e56fbd5a3f658c00000007f9ecea4fa0540ccce9b7e62fb47e087f7b9ac5e548c1e08ff016d3d236f53a555819055908252600d60209081526040808420805460ff19908116600190811790925585546001600160a01b03168652600e845282862080548216831790557f51a2a6f78cbefcc407dfc024aef628d86c2b00505d398b15d240bf7a4abb95db80548216831790557f5a341e4f803fb1b21cf0fdf917eb1a73e0f3a6018e60c7af24dbe84ada1bbc4580548216831790557ffdb5eda3e652b715ef52e1b51fcbcec95d40fb22763b1c38a42ee5ea565bdcc380548216831790557f4dcc13c813760db1e7b24bc09fc336cb8db098fa8ec117d240581a9ed410a7df80548216831790557fc2252a136c62f473a66f5dfc0486f3daf49ee6b2413d0f013c286b4ede3230e280548216831790557f321ae56d8eb7333f6216f3cd30be6d06803c32e6d39d2a6d70ca14bbe174ada880548216831790557fdc7fafdc41998a74ecacb8f8bd877011aba1f1d03a3a0d37a2e7879a393b1d6a80548216831790557ff77e91909e61d18f67b875b2bfcae1f683a8d555e55382e3a6b082e2c59ea57a805482168317905573b4822154da4c2a307d8ee0253075b93b6d85b1168087527f808af7ff7f8cf9015fe4bf030445201e1b87645bf8a6c112fce7a710a0adafe780549092169092179055905192835292917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36102f7565b80820281158282048414176102cf57634e487b7160e01b600052601160045260246000fd5b92915050565b6000826102f257634e487b7160e01b600052601260045260246000fd5b500490565b61167a806103066000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80636c16994411610130578063ba82fd07116100b8578063dd62ed3e1161007c578063dd62ed3e146104ff578063e086e5ec1461052a578063fccc281314610532578063fe575a871461053b578063ffb54a991461055e57600080fd5b8063ba82fd07146104c1578063c9567bf9146104ca578063d4698016146104d2578063d78ddca7146104ed578063d89135cd146104f657600080fd5b806389476069116100ff578063894760691461044b5780638da5cb5b1461045e57806395d89b4114610471578063a9059cbb14610493578063a9675a2d146104a657600080fd5b80636c169944146103ec57806370a08231146103f557806375f0a874146104155780637b2087691461043057600080fd5b8063313ce567116101b35780634c99007d116101825780634c99007d1461037a5780634fbee1931461038257806359927044146103a55780635cce86cd146103c057806366a88d96146103e357600080fd5b8063313ce56714610325578063404e51291461033f57806340c10f1914610354578063457ffca21461036757600080fd5b806321b9904e116101fa57806321b9904e146102ba57806323b872dd146102ed578063251c1aa31461030057806328bc11b7146103095780632a11ced01461031257600080fd5b806301b715311461022c57806306fdde0314610248578063095ea7b31461028257806318160ddd146102a5575b600080fd5b61023560055481565b6040519081526020015b60405180910390f35b6102756040518060400160405280600e81526020016d21bcb132b928bab7b932a1b7b4b760911b81525081565b60405161023f9190611381565b6102956102903660046113eb565b61056b565b604051901515815260200161023f565b6102356d021ebc7e56fbd5a3f658c000000081565b6102d5734f01125b9ada1006139e2abaaf0aaebe6354a8d981565b6040516001600160a01b03909116815260200161023f565b6102956102fb366004611415565b6105d8565b61023560095481565b61023560015481565b6102d5610320366004611452565b610693565b61032d601281565b60405160ff909116815260200161023f565b61035261034d366004611479565b6106bd565b005b6103526103623660046113eb565b610712565b6103526103753660046114b0565b61074d565b600854610235565b6102956103903660046114eb565b600d6020526000908152604090205460ff1681565b6102d573098765432109876543210987654321098765432181565b6102956103ce3660046114eb565b600e6020526000908152604090205460ff1681565b61023560065481565b61023560025481565b6102356104033660046114eb565b600a6020526000908152604090205481565b6102d573123456789012345678901234567890123456789081565b6102d57339d2c31919b061db9402bdfa803b91d3e598036681565b6103526104593660046114eb565b6107ff565b6000546102d5906001600160a01b031681565b6102756040518060400160405280600381526020016243514360e81b81525081565b6102956104a13660046113eb565b610913565b6102d573b4822154da4c2a307d8ee0253075b93b6d85b11681565b61023560035481565b610352610929565b6102d57326139af27d5c39f8261ef8e2606817d6e06d09b381565b61023560045481565b61023560085481565b61023561050d36600461150d565b600b60209081526000928352604080842090915290825290205481565b610352610962565b6102d561dead81565b6102956105493660046114eb565b600c6020526000908152604090205460ff1681565b6007546102959060ff1681565b336000818152600b602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105c69086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600b602090815260408083203384529091528120548211156106455760405162461bcd60e51b8152602060048201526012602482015271105b1b1bddd85b98d948195e18d95959195960721b60448201526064015b60405180910390fd5b6001600160a01b0384166000908152600b6020908152604080832033845290915281208054849290610678908490611556565b9091555061068990508484846109c9565b5060019392505050565b601081815481106106a357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146106e75760405162461bcd60e51b815260040161063c90611569565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b60405162461bcd60e51b815260206004820152601060248201526f135a5b9d1a5b99c8191a5cd8589b195960821b604482015260640161063c565b6000546001600160a01b031633146107775760405162461bcd60e51b815260040161063c90611569565b61015e818385610787888a61158c565b610791919061158c565b61079b919061158c565b6107a5919061158c565b11156107e85760405162461bcd60e51b81526020600482015260126024820152710a8dee8c2d840e8c2f040e8dede40d0d2ced60731b604482015260640161063c565b600194909455600292909255600355600455600555565b6000546001600160a01b031633146108295760405162461bcd60e51b815260040161063c90611569565b6000546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a0919061159f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f91906115b8565b5050565b60006109203384846109c9565b50600192915050565b6000546001600160a01b031633146109535760405162461bcd60e51b815260040161063c90611569565b6007805460ff19166001179055565b6000546001600160a01b0316331461098c5760405162461bcd60e51b815260040161063c90611569565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156109c6573d6000803e3d6000fd5b50565b6001600160a01b038316158015906109e957506001600160a01b03821615155b610a245760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161063c565b6001600160a01b0383166000908152600a6020526040902054811115610a835760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161063c565b6001600160a01b0383166000908152600c602052604090205460ff16158015610ac557506001600160a01b0382166000908152600c602052604090205460ff16155b610aff5760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b604482015260640161063c565b60075460ff16610b87576001600160a01b0383166000908152600d602052604090205460ff1680610b4857506001600160a01b0382166000908152600d602052604090205460ff165b610b875760405162461bcd60e51b815260206004820152601060248201526f2a3930b234b733903737ba1037b832b760811b604482015260640161063c565b6001600160a01b0382166000908152600e602052604090205460ff16610c1c576006546001600160a01b0383166000908152600a6020526040902054610bce90839061158c565b1115610c1c5760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d69740000000000000000604482015260640161063c565b336000908152600f6020526040902054439003610c8857336000908152600d602052604090205460ff16610c885760405162461bcd60e51b81526020600482015260136024820152724f6e6c7920312074782070657220626c6f636b60681b604482015260640161063c565b336000908152600f602052604090204390556001600160a01b0383167312345678901234567890123456789012345678901480610ce157506001600160a01b038316730987654321098765432109876543210987654321145b15610d2b57600954421015610d2b5760405162461bcd60e51b815260206004820152601060248201526f15d85b1b195d081a5cc81b1bd8dad95960821b604482015260640161063c565b6001600160a01b0383166000908152600d6020526040902054819060ff16158015610d6f57506001600160a01b0383166000908152600d602052604090205460ff16155b1561113e576000600554600454600354600254600154610d8f919061158c565b610d99919061158c565b610da3919061158c565b610dad919061158c565b90506000612710610dbe83866115d5565b610dc891906115ec565b9050610dd48185611556565b925061271060055485610de791906115d5565b610df191906115ec565b61dead6000908152600a6020527f20677881080440a9b3c87e826370bb5d9c2f74efd4dede686d52d77a6a09f8bb8054909190610e2f90849061158c565b909155505060055461271090610e4590866115d5565b610e4f91906115ec565b60086000828254610e60919061158c565b909155505060055461dead906001600160a01b038816906000805160206116258339815191529061271090610e9590896115d5565b610e9f91906115ec565b60405190815260200160405180910390a361271060025485610ec191906115d5565b610ecb91906115ec565b7339d2c31919b061db9402bdfa803b91d3e59803666000908152600a6020527f0f06858c7ac4c71156ce467da3c8076928932d92d0192c0c4a82d698466b38d28054909190610f1b90849061158c565b90915550506002547339d2c31919b061db9402bdfa803b91d3e5980366906001600160a01b038816906000805160206116258339815191529061271090610f6290896115d5565b610f6c91906115ec565b60405190815260200160405180910390a361271060035485610f8e91906115d5565b610f9891906115ec565b734f01125b9ada1006139e2abaaf0aaebe6354a8d96000908152600a6020527f5d3591636617ee1429c9d42e35e4ff4000b084841b1409a22f5c672d05a3f8658054909190610fe890849061158c565b9091555050600354734f01125b9ada1006139e2abaaf0aaebe6354a8d9906001600160a01b03881690600080516020611625833981519152906127109061102f90896115d5565b61103991906115ec565b60405190815260200160405180910390a36127106004548561105b91906115d5565b61106591906115ec565b7326139af27d5c39f8261ef8e2606817d6e06d09b36000908152600a6020527f356d7ae7a9b11b58dc7bb5df705102fd696797bdb0eda6d08009c26509c192b380549091906110b590849061158c565b90915550506004547326139af27d5c39f8261ef8e2606817d6e06d09b3906001600160a01b0388169060008051602061162583398151915290612710906110fc90896115d5565b61110691906115ec565b60405190815260200160405180910390a361113b6127106001548661112b91906115d5565b61113591906115ec565b876112a3565b50505b6001600160a01b0384166000908152600a602052604081208054849290611166908490611556565b90915550506001600160a01b0383166000908152600a60205260408120805483929061119390849061158c565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611625833981519152836040516111cd91815260200190565b60405180910390a36001600160a01b0383166000908152600a60205260409020541561129d576000805b60105481101561124957846001600160a01b03166010828154811061121e5761121e61160e565b6000918252602090912001546001600160a01b0316036112415760019150611249565b6001016111f7565b508061129b57601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720180546001600160a01b0319166001600160a01b0386161790555b505b50505050565b60105415806112b0575081155b156112b9575050565b6010546000906112c990846115ec565b905060005b60105481101561129d5781600a6000601084815481106112f0576112f061160e565b60009182526020808320909101546001600160a01b031683528201929092526040018120805490919061132490849061158c565b9091555050601080548290811061133d5761133d61160e565b600091825260209182902001546040518481526001600160a01b039182169291861691600080516020611625833981519152910160405180910390a36001016112ce565b602081526000825180602084015260005b818110156113af5760208186018101516040868401015201611392565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146113e657600080fd5b919050565b600080604083850312156113fe57600080fd5b611407836113cf565b946020939093013593505050565b60008060006060848603121561142a57600080fd5b611433846113cf565b9250611441602085016113cf565b929592945050506040919091013590565b60006020828403121561146457600080fd5b5035919050565b80151581146109c657600080fd5b6000806040838503121561148c57600080fd5b611495836113cf565b915060208301356114a58161146b565b809150509250929050565b600080600080600060a086880312156114c857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156114fd57600080fd5b611506826113cf565b9392505050565b6000806040838503121561152057600080fd5b611529836113cf565b9150611537602084016113cf565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105d2576105d2611540565b6020808252600990820152682737ba1037bbb732b960b91b604082015260600190565b808201808211156105d2576105d2611540565b6000602082840312156115b157600080fd5b5051919050565b6000602082840312156115ca57600080fd5b81516115068161146b565b80820281158282048414176105d2576105d2611540565b60008261160957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ddb8d1b0bf315f10ccad5ccf8b84a3266d4ab75f324fdb6eccbc92f1c9ee55fd64736f6c634300081e0033";

type CyberQuoreCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CyberQuoreCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CyberQuoreCoin__factory extends ContractFactory {
  constructor(...args: CyberQuoreCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CyberQuoreCoin> {
    return super.deploy(overrides || {}) as Promise<CyberQuoreCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CyberQuoreCoin {
    return super.attach(address) as CyberQuoreCoin;
  }
  override connect(signer: Signer): CyberQuoreCoin__factory {
    return super.connect(signer) as CyberQuoreCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CyberQuoreCoinInterface {
    return new utils.Interface(_abi) as CyberQuoreCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CyberQuoreCoin {
    return new Contract(address, _abi, signerOrProvider) as CyberQuoreCoin;
  }
}
