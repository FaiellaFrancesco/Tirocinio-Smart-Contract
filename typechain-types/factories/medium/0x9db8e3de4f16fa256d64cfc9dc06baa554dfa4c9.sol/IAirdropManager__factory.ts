/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAirdropManager,
  IAirdropManagerInterface,
} from "../../../medium/0x9db8e3de4f16fa256d64cfc9dc06baa554dfa4c9.sol/IAirdropManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "acceptTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "tokensPerAddress",
        type: "uint256",
      },
    ],
    name: "airdropTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAirdropManager__factory {
  static readonly abi = _abi;
  static createInterface(): IAirdropManagerInterface {
    return new utils.Interface(_abi) as IAirdropManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAirdropManager {
    return new Contract(address, _abi, signerOrProvider) as IAirdropManager;
  }
}
