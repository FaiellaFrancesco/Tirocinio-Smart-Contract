/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SynapseChain,
  SynapseChainInterface,
} from "../../../medium/0x5b15b0e6bc840f5a8dc2c05c1a6e9a4a00770e20.sol/SynapseChain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "add_hOarf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_add_hOarf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_var_IOWrSe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "update_var_IOWrSe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051808201909152600c81526b29bcb730b839b2a1b430b4b760a11b60208201526000906100419082610187565b506040805180820190915260058152640a6b29c86960db1b602082015260019061006b9082610187565b506100786012600a610344565b61008790640737be7600610357565b600281905533600081815260046020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36100e06103e84261036e565b600355610390565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061011257607f821691505b60208210810361013257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561018257806000526020600020601f840160051c8101602085101561015f5750805b601f840160051c820191505b8181101561017f576000815560010161016b565b50505b505050565b81516001600160401b038111156101a0576101a06100e8565b6101b4816101ae84546100fe565b84610138565b6020601f8211600181146101e857600083156101d05750848201515b600019600385901b1c1916600184901b17845561017f565b600084815260208120601f198516915b8281101561021857878501518255602094850194600190920191016101f8565b50848210156102365786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102965780850481111561027a5761027a610245565b600184161561028857908102905b60019390931c92800261025f565b935093915050565b6000826102ad5750600161033e565b816102ba5750600061033e565b81600181146102d057600281146102da576102f6565b600191505061033e565b60ff8411156102eb576102eb610245565b50506001821b61033e565b5060208310610133831016604e8410600b8410161715610319575081810a61033e565b610326600019848461025b565b806000190482111561033a5761033a610245565b0290505b92915050565b6000610350838361029e565b9392505050565b808202811582820484141761033e5761033e610245565b60008261038b57634e487b7160e01b600052601260045260246000fd5b500690565b61079d8061039f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063495492c21161008c57806395d89b411161006657806395d89b411461019e578063a9059cbb146101a6578063db2a6af1146101b9578063dd62ed3e146101cc57600080fd5b8063495492c21461016e57806353c711f31461017657806370a082311461017e57600080fd5b806303cb7fb7146100d457806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a57806323b872dd14610141578063313ce56714610154575b600080fd5b6100e76100e236600461056c565b600355565b005b6100f16101f7565b6040516100fe9190610585565b60405180910390f35b61011a6101153660046105ef565b610285565b60405190151581526020016100fe565b61013360025481565b6040519081526020016100fe565b61011a61014f366004610619565b6102f2565b61015c601281565b60405160ff90911681526020016100fe565b600354610133565b600654610133565b61013361018c366004610656565b60046020526000908152604090205481565b6100f16104a2565b61011a6101b43660046105ef565b6104af565b6100e76101c736600461056c565b600655565b6101336101da366004610678565b600560209081526000928352604080842090915290825290205481565b60008054610204906106ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610230906106ab565b801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e09086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103335760405162461bcd60e51b815260040161032a906106e5565b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161032a565b6001600160a01b038416600090815260046020526040812080548492906103df908490610741565b90915550506001600160a01b0383166000908152600460205260408120805484929061040c908490610754565b90915550506001600160a01b038416600090815260056020908152604080832033845290915281208054849290610444908490610741565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161049091815260200190565b60405180910390a35060019392505050565b60018054610204906106ab565b336000908152600460205260408120548211156104de5760405162461bcd60e51b815260040161032a906106e5565b33600090815260046020526040812080548492906104fd908490610741565b90915550506001600160a01b0383166000908152600460205260408120805484929061052a908490610754565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102e0565b60006020828403121561057e57600080fd5b5035919050565b602081526000825180602084015260005b818110156105b35760208186018101516040868401015201610596565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105ea57600080fd5b919050565b6000806040838503121561060257600080fd5b61060b836105d3565b946020939093013593505050565b60008060006060848603121561062e57600080fd5b610637846105d3565b9250610645602085016105d3565b929592945050506040919091013590565b60006020828403121561066857600080fd5b610671826105d3565b9392505050565b6000806040838503121561068b57600080fd5b610694836105d3565b91506106a2602084016105d3565b90509250929050565b600181811c908216806106bf57607f821691505b6020821081036106df57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102ec576102ec61072b565b808201808211156102ec576102ec61072b56fea2646970667358221220b8da6a6084e9f24d90bcd56ffe921a5cc5d7dfe35da22c874c9569a05213657964736f6c634300081e0033";

type SynapseChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynapseChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynapseChain__factory extends ContractFactory {
  constructor(...args: SynapseChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SynapseChain> {
    return super.deploy(overrides || {}) as Promise<SynapseChain>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SynapseChain {
    return super.attach(address) as SynapseChain;
  }
  override connect(signer: Signer): SynapseChain__factory {
    return super.connect(signer) as SynapseChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynapseChainInterface {
    return new utils.Interface(_abi) as SynapseChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynapseChain {
    return new Contract(address, _abi, signerOrProvider) as SynapseChain;
  }
}
