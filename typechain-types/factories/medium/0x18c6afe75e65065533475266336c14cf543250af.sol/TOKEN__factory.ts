/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x18c6afe75e65065533475266336c14cf543250af.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launchGorkGork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560006009556009600a61002b919061031a565b61003990633b9aca00610330565b600a556000600b819055600d805461ffff60a81b19169055600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b031660006000805160206119b5833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a33060006000805160206119b583398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b61163d806103786000396000f3fe6080604052600436106101025760003560e01c80636482c89a116100955780638da5cb5b116100645780638da5cb5b1461029157806395d89b411461010e578063a9059cbb146102b9578063dd62ed3e146102d9578063ea414b281461031f57600080fd5b80636482c89a1461021b57806370a0823114610231578063715018a614610267578063751039fc1461027c57600080fd5b806320800a00116100d157806320800a00146101b357806323b872dd146101ca578063313ce567146101ea57806347ac327d1461020657600080fd5b806306fdde031461010e578063095ea7b31461014a5780630faee56f1461017a57806318160ddd1461019e57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820182526004815263476f726b60e01b60208201529051610141919061120b565b60405180910390f35b34801561015657600080fd5b5061016a61016536600461126e565b61033f565b6040519015158152602001610141565b34801561018657600080fd5b50610190600a5481565b604051908152602001610141565b3480156101aa57600080fd5b50610190610356565b3480156101bf57600080fd5b506101c8610377565b005b3480156101d657600080fd5b5061016a6101e536600461129a565b6103e6565b3480156101f657600080fd5b5060405160098152602001610141565b34801561021257600080fd5b506101c8610496565b34801561022757600080fd5b50610190600b5481565b34801561023d57600080fd5b5061019061024c3660046112db565b6001600160a01b031660009081526001602052604090205490565b34801561027357600080fd5b506101c861084e565b34801561028857600080fd5b506101c86108c2565b34801561029d57600080fd5b506000546040516001600160a01b039091168152602001610141565b3480156102c557600080fd5b5061016a6102d436600461126e565b6108ee565b3480156102e557600080fd5b506101906102f43660046112f8565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032b57600080fd5b506101c861033a3660046112db565b6108fb565b600061034c338484610939565b5060015b92915050565b60006103646009600a61142e565b61037290633b9aca0061143d565b905090565b6000546001600160a01b031633146103aa5760405162461bcd60e51b81526004016103a190611454565b60405180910390fd5b600047116103b757600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e3573d6000803e3d6000fd5b50565b60006103f3848484610a5d565b3360009081526003602052604090205460ff161580156104355750600d546001600160a01b038581169116148061043557506001600160a01b03831661dead14155b1561048c5761048c8433610487856040518060600160405280602881526020016115e0602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e7f565b610939565b5060019392505050565b6000546001600160a01b031633146104c05760405162461bcd60e51b81526004016103a190611454565b600d54600160a01b900460ff161561051a5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103a1565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105639030906105556009600a61142e565b61048790633b9aca0061143d565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190611489565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190611489565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190611489565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d7194730610719816001600160a01b031660009081526001602052604090205490565b60008061072e6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610796573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107bb91906114a6565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e391906114d4565b6000546001600160a01b031633146108785760405162461bcd60e51b81526004016103a190611454565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108ec5760405162461bcd60e51b81526004016103a190611454565b565b600061034c338484610a5d565b3360009081526003602052604090205460ff1661091757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661099b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a1565b6001600160a01b0382166109fc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a1565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ac15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a1565b6001600160a01b038216610b235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a1565b60008111610b855760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103a1565b60006001600160a01b0384163014801590610ba957506001600160a01b0383163014155b15610d2157600d54600160a81b900460ff16610bee57610beb6064610be560075460085411610bda57600554610bde565b6006545b8590610eb9565b90610f42565b90505b600d546001600160a01b038581169116148015610c195750600c546001600160a01b03848116911614155b8015610c3e57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c5857506004546001600160a01b03848116911614155b15610c735760088054906000610c6d836114f6565b91905055505b30600090815260016020526040902054600d54600160a81b900460ff16158015610caa5750600d546001600160a01b038581169116145b8015610cbf5750600d54600160b01b900460ff165b8015610cd957506004546001600160a01b03868116911614155b15610d1f578015610d13576000600a548211610cf55781610cf9565b600a545b9050610d11818511610d0b5784610f84565b81610f84565b505b47610d1d476110fe565b505b505b6001600160a01b038416600090815260016020526040902054610d44908361113c565b6001600160a01b038516600090815260016020526040902055610d89610d6a838361113c565b6001600160a01b0385166000908152600160205260409020549061117e565b6001600160a01b0384166000908152600160205260409020558015610e1c5730600090815260016020526040902054610dc2908261117e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e139085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e79576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e67858561113c565b60405190815260200160405180910390a35b50505050565b60008184841115610ea35760405162461bcd60e51b81526004016103a1919061120b565b506000610eb0848661150f565b95945050505050565b600082600003610ecb57506000610350565b6000610ed7838561143d565b905082610ee48583611522565b14610f3b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103a1565b9392505050565b6000610f3b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111dd565b600d805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610fcc57610fcc611544565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110499190611489565b8160018151811061105c5761105c611544565b6001600160a01b039283166020918202929092010152600c546110829130911684610939565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110bb90859060009086903090429060040161155a565b600060405180830381600087803b1580156110d557600080fd5b505af11580156110e9573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611138573d6000803e3d6000fd5b5050565b6000610f3b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e7f565b60008061118b83856115cc565b905083811015610f3b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103a1565b600081836111fe5760405162461bcd60e51b81526004016103a1919061120b565b506000610eb08486611522565b602081526000825180602084015260005b81811015611239576020818601810151604086840101520161121c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e357600080fd5b6000806040838503121561128157600080fd5b823561128c81611259565b946020939093013593505050565b6000806000606084860312156112af57600080fd5b83356112ba81611259565b925060208401356112ca81611259565b929592945050506040919091013590565b6000602082840312156112ed57600080fd5b8135610f3b81611259565b6000806040838503121561130b57600080fd5b823561131681611259565b9150602083013561132681611259565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113825780850481111561136657611366611331565b600184161561137457908102905b60019390931c92800261134b565b935093915050565b60008261139957506001610350565b816113a657506000610350565b81600181146113bc57600281146113c6576113e2565b6001915050610350565b60ff8411156113d7576113d7611331565b50506001821b610350565b5060208310610133831016604e8410600b8410161715611405575081810a610350565b6114126000198484611347565b806000190482111561142657611426611331565b029392505050565b6000610f3b60ff84168361138a565b808202811582820484141761035057610350611331565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561149b57600080fd5b8151610f3b81611259565b6000806000606084860312156114bb57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156114e657600080fd5b81518015158114610f3b57600080fd5b60006001820161150857611508611331565b5060010190565b8181038181111561035057610350611331565b60008261153f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115ac5783516001600160a01b0316835260209384019390920191600101611585565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103505761035061133156fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220998382e70c1a794cff301f212f841cdb5701de13f5e183bd13ee5d9cedef51dc64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
