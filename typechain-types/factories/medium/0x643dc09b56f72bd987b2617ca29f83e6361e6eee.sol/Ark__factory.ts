/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Ark,
  ArkInterface,
} from "../../../medium/0x643dc09b56f72bd987b2617ca29f83e6361e6eee.sol/Ark";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260156006556015600755600060085560006009556019600a556019600b556012600c556050600d556000600e556009600a6200004191906200034a565b6200005090621e848062000362565b600f55620000616009600a6200034a565b6200007090621e848062000362565b601055620000816009600a6200034a565b6200009090620f424062000362565b601155620000a16009600a6200034a565b620000b090621e848062000362565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d857600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013a6009600a6200034a565b6200014a906305f5e10062000362565b336000908152600160208190526040822092909255600390620001756000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d43390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200020e6009600a6200034a565b6200021e906305f5e10062000362565b60405190815260200160405180910390a36200037c565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028c57816000190482111562000270576200027062000235565b808516156200027e57918102915b93841c939080029062000250565b509250929050565b600082620002a55750600162000344565b81620002b45750600062000344565b8160018114620002cd5760028114620002d857620002f8565b600191505062000344565b60ff841115620002ec57620002ec62000235565b50506001821b62000344565b5060208310610133831016604e8410600b84101617156200031d575081810a62000344565b6200032983836200024b565b806000190482111562000340576200034062000235565b0290505b92915050565b60006200035b60ff84168362000294565b9392505050565b808202811582820484141762000344576200034462000235565b611c58806200038c6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103b8578063bf474bed146103d8578063c9567bf9146103ee578063d34628cc14610403578063dd62ed3e14610423578063ec1f3f631461046957600080fd5b8063715018a61461030e578063751039fc146103235780637d1db4a5146103385780638da5cb5b1461034e5780638f9a55c01461037657806395d89b411461038c57600080fd5b8063313ce56711610108578063313ce5671461023957806331c2d847146102555780633bbac5791461027557806351bc3c85146102ae5780636fc3eaec146102c357806370a08231146102d857600080fd5b806306fdde031461015b578063095ea7b3146101995780630faee56f146101c9578063109daa99146101ed57806318160ddd1461020457806323b872dd1461021957600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152600381526241726b60e81b60208201525b6040516101909190611723565b60405180910390f35b3480156101a557600080fd5b506101b96101b4366004611797565b610489565b6040519015158152602001610190565b3480156101d557600080fd5b506101df60125481565b604051908152602001610190565b3480156101f957600080fd5b506102026104a0565b005b34801561021057600080fd5b506101df610510565b34801561022557600080fd5b506101b96102343660046117c3565b610531565b34801561024557600080fd5b5060405160098152602001610190565b34801561026157600080fd5b5061020261027036600461181a565b61059a565b34801561028157600080fd5b506101b96102903660046118df565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102ba57600080fd5b50610202610626565b3480156102cf57600080fd5b50610202610675565b3480156102e457600080fd5b506101df6102f33660046118df565b6001600160a01b031660009081526001602052604090205490565b34801561031a57600080fd5b506102026106a2565b34801561032f57600080fd5b50610202610716565b34801561034457600080fd5b506101df600f5481565b34801561035a57600080fd5b506000546040516001600160a01b039091168152602001610190565b34801561038257600080fd5b506101df60105481565b34801561039857600080fd5b5060408051808201909152600381526241524b60e81b6020820152610183565b3480156103c457600080fd5b506101b96103d3366004611797565b6107c3565b3480156103e457600080fd5b506101df60115481565b3480156103fa57600080fd5b506102026107d0565b34801561040f57600080fd5b5061020261041e36600461181a565b610b8c565b34801561042f57600080fd5b506101df61043e3660046118fc565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047557600080fd5b50610202610484366004611935565b610c14565b6000610496338484610c5b565b5060015b92915050565b6000546001600160a01b031633146104d35760405162461bcd60e51b81526004016104ca9061194e565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061051e6009600a611a7d565b61052c906305f5e100611a8c565b905090565b600061053e848484610d7f565b610590843361058b85604051806060016040528060288152602001611bfb602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611386565b610c5b565b5060019392505050565b6000546001600160a01b031633146105c45760405162461bcd60e51b81526004016104ca9061194e565b60005b8151811015610622576000600460008484815181106105e8576105e8611aa3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105c7565b5050565b6005546001600160a01b0316336001600160a01b03161461064657600080fd5b30600090815260016020526040902054801561066557610665816113c0565b478015610622576106228161153a565b6005546001600160a01b0316336001600160a01b03161461069557600080fd5b4761069f8161153a565b50565b6000546001600160a01b031633146106cc5760405162461bcd60e51b81526004016104ca9061194e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107405760405162461bcd60e51b81526004016104ca9061194e565b61074c6009600a611a7d565b61075a906305f5e100611a8c565b600f556107696009600a611a7d565b610777906305f5e100611a8c565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107a76009600a611a7d565b6107b5906305f5e100611a8c565b604051908152602001610506565b6000610496338484610d7f565b6000546001600160a01b031633146107fa5760405162461bcd60e51b81526004016104ca9061194e565b601454600160a01b900460ff16156108545760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ca565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561089d90309061088f6009600a611a7d565b61058b906305f5e100611a8c565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190611ab9565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190611ab9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190611ab9565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a53816001600160a01b031660009081526001602052604090205490565b600080610a686000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ad0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610af59190611ad6565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b729190611b04565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bb65760405162461bcd60e51b81526004016104ca9061194e565b60005b815181101561062257600160046000848481518110610bda57610bda611aa3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bb9565b6005546001600160a01b0316336001600160a01b031614610c3457600080fd5b6008548111158015610c4857506009548111155b610c5157600080fd5b6008819055600955565b6001600160a01b038316610cbd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ca565b6001600160a01b038216610d1e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ca565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610de35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ca565b6001600160a01b038216610e455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ca565b60008111610ea75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ca565b600080546001600160a01b03858116911614801590610ed457506000546001600160a01b03848116911614155b15611243576001600160a01b03841660009081526004602052604090205460ff16158015610f1b57506001600160a01b03831660009081526004602052604090205460ff16155b610f2457600080fd5b600e54600003610f5d57610f5a6064610f54600a54600e5411610f4957600654610f4d565b6008545b8590611574565b906115fd565b90505b600e5415610f8257610f7f6064610f54600d548561157490919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fad57506013546001600160a01b03848116911614155b8015610fd257506001600160a01b03831660009081526003602052604090205460ff16155b156110d757600f548211156110295760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104ca565b6010548261104c856001600160a01b031660009081526001602052604090205490565b6110569190611b26565b11156110a45760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ca565b6110bf6064610f54600a54600e5411610f4957600654610f4d565b600e805491925060006110d183611b39565b91905055505b6014546001600160a01b0384811691161480156110fd57506001600160a01b0384163014155b1561112a576111276064610f54600b54600e541161111d57600754610f4d565b6009548590611574565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116157506014546001600160a01b038581169116145b80156111765750601454600160b01b900460ff165b8015611183575060115481115b80156111925750600c54600e54115b15611241576016544311156111a75760006015555b6003601554106111f95760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ca565b6112166112118461120c8460125461163f565b61163f565b6113c0565b478015611226576112264761153a565b6015805490600061123683611b39565b909155505043601655505b505b80156112bd57306000908152600160205260409020546112639082611654565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112b49085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112e090836116b3565b6001600160a01b03851660009081526001602052604090205561132561130683836116b3565b6001600160a01b03851660009081526001602052604090205490611654565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61136f85856116b3565b60405190815260200160405180910390a350505050565b600081848411156113aa5760405162461bcd60e51b81526004016104ca9190611723565b5060006113b78486611b52565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061140857611408611aa3565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190611ab9565b8160018151811061149857611498611aa3565b6001600160a01b0392831660209182029290920101526013546114be9130911684610c5b565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906114f7908590600090869030904290600401611b65565b600060405180830381600087803b15801561151157600080fd5b505af1158015611525573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610622573d6000803e3d6000fd5b6000826000036115865750600061049a565b60006115928385611a8c565b90508261159f8583611bd8565b146115f65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ca565b9392505050565b60006115f683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116f5565b600081831161164e57826115f6565b50919050565b6000806116618385611b26565b9050838110156115f65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ca565b60006115f683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611386565b600081836117165760405162461bcd60e51b81526004016104ca9190611723565b5060006113b78486611bd8565b60006020808352835180602085015260005b8181101561175157858101830151858201604001528201611735565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461069f57600080fd5b803561179281611772565b919050565b600080604083850312156117aa57600080fd5b82356117b581611772565b946020939093013593505050565b6000806000606084860312156117d857600080fd5b83356117e381611772565b925060208401356117f381611772565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561182d57600080fd5b823567ffffffffffffffff8082111561184557600080fd5b818501915085601f83011261185957600080fd5b81358181111561186b5761186b611804565b8060051b604051601f19603f8301168101818110858211171561189057611890611804565b6040529182528482019250838101850191888311156118ae57600080fd5b938501935b828510156118d3576118c485611787565b845293850193928501926118b3565b98975050505050505050565b6000602082840312156118f157600080fd5b81356115f681611772565b6000806040838503121561190f57600080fd5b823561191a81611772565b9150602083013561192a81611772565b809150509250929050565b60006020828403121561194757600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119d45781600019048211156119ba576119ba611983565b808516156119c757918102915b93841c939080029061199e565b509250929050565b6000826119eb5750600161049a565b816119f85750600061049a565b8160018114611a0e5760028114611a1857611a34565b600191505061049a565b60ff841115611a2957611a29611983565b50506001821b61049a565b5060208310610133831016604e8410600b8410161715611a57575081810a61049a565b611a618383611999565b8060001904821115611a7557611a75611983565b029392505050565b60006115f660ff8416836119dc565b808202811582820484141761049a5761049a611983565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611acb57600080fd5b81516115f681611772565b600080600060608486031215611aeb57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b1657600080fd5b815180151581146115f657600080fd5b8082018082111561049a5761049a611983565b600060018201611b4b57611b4b611983565b5060010190565b8181038181111561049a5761049a611983565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bb75784516001600160a01b031683529383019391830191600101611b92565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611bf557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206aa2f65433a4d7519125fd24a2bcc86b323e201dbb3ddfa841082d8676d4d32664736f6c63430008170033";

type ArkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ark__factory extends ContractFactory {
  constructor(...args: ArkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ark> {
    return super.deploy(overrides || {}) as Promise<Ark>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ark {
    return super.attach(address) as Ark;
  }
  override connect(signer: Signer): Ark__factory {
    return super.connect(signer) as Ark__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArkInterface {
    return new utils.Interface(_abi) as ArkInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ark {
    return new Contract(address, _abi, signerOrProvider) as Ark;
  }
}
