/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  ARCD,
  ARCDInterface,
} from "../../../medium/0x11925ce72bd941732793b3b6d3c50c948f89fa6a.sol/ARCD";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalARCDTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initARCDDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueARCDETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b611855806102c66000396000f3fe6080604052600436106101025760003560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb146102c7578063bf238edf146102e7578063dd62ed3e146102fc578063ea414b2814610342578063ffd970701461036257600080fd5b8063715018a6146102465780638a8c523c1461025d5780638da5cb5b1461027257806395d89b411461029a57600080fd5b806323b872dd116100d157806323b872dd146101be57806327c18609146101de578063313ce567146101f457806370a082311461021057600080fd5b806306fdde031461010e578063095ea7b3146101555780630faee56f1461018557806318160ddd146101a957600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600c81526b417263616469614f5320414960a01b60208201525b60405161014c9190611332565b60405180910390f35b34801561016157600080fd5b50610175610170366004611395565b610378565b604051901515815260200161014c565b34801561019157600080fd5b5061019b600b5481565b60405190815260200161014c565b3480156101b557600080fd5b5061019b61038f565b3480156101ca57600080fd5b506101756101d93660046113c1565b6103b0565b3480156101ea57600080fd5b5061019b600c5481565b34801561020057600080fd5b506040516009815260200161014c565b34801561021c57600080fd5b5061019b61022b366004611402565b6001600160a01b031660009081526001602052604090205490565b34801561025257600080fd5b5061025b610473565b005b34801561026957600080fd5b5061025b6104f0565b34801561027e57600080fd5b506000546040516001600160a01b03909116815260200161014c565b3480156102a657600080fd5b50604080518082019091526004815263105490d160e21b602082015261013f565b3480156102d357600080fd5b506101756102e2366004611395565b6108ab565b3480156102f357600080fd5b5061025b6108b8565b34801561030857600080fd5b5061019b61031736600461141f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034e57600080fd5b5061025b61035d366004611402565b61091b565b34801561036e57600080fd5b5061019b600d5481565b6000610385338484610959565b5060015b92915050565b600061039d6009600a611555565b6103ab906305f5e100611564565b905090565b60006103bd848484610a7d565b3360009081526003602052604090205460ff161580156104125750600f546001600160a01b03858116911614806103ff57506001600160a01b03831661dead14155b8061041257506001600160a01b03841630145b15610469576104698433610464856040518060600160405280602881526020016117f8602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f0a565b610959565b5060019392505050565b6000546001600160a01b031633146104a65760405162461bcd60e51b815260040161049d9061157b565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051a5760405162461bcd60e51b815260040161049d9061157b565b600f54600160a01b900460ff16156105745760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161049d565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105bd9030906105af6009600a611555565b610464906305f5e100611564565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906115b0565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba91906115b0565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b91906115b0565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d7194730610773816001600160a01b031660009081526001602052604090205490565b6000806107886000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107f0573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081591906115cd565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a891906115fb565b50565b6000610385338484610a7d565b6000546001600160a01b031633146108e25760405162461bcd60e51b815260040161049d9061157b565b600047116108ef57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156108a8573d6000803e3d6000fd5b3360009081526003602052604090205460ff1661093757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109bb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049d565b6001600160a01b038216610a1c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161049d565b6001600160a01b038216610b435760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161049d565b60008111610ba55760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161049d565b60006001600160a01b0384163014801590610bc957506001600160a01b0383163014155b15610dac57600f546001600160a01b038581169116148015610bf95750600e546001600160a01b03848116911614155b8015610c1e57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3857506004546001600160a01b03848116911614155b15610c7d574360095414610c50576000600a55436009555b81600a6000828254610c62919061161d565b909155505060088054906000610c7783611630565b91905055505b600f546001600160a01b038481169116148015610ca357506001600160a01b0384163014155b15610cfe57610cb0610f44565b600a541080610cc157504360095414155b610cfe5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161049d565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d355750600f546001600160a01b038581169116145b8015610d4a5750600f54600160b01b900460ff165b8015610d6457506004546001600160a01b03868116911614155b15610daa578015610d9e576000600b548211610d805781610d84565b600b545b9050610d9c818511610d9657846110d2565b816110d2565b505b47610da84761124c565b505b505b6001600160a01b038416600090815260016020526040902054610dcf908361128a565b6001600160a01b038516600090815260016020526040902055610e14610df5838361128a565b6001600160a01b038516600090815260016020526040902054906112d3565b6001600160a01b0384166000908152600160205260409020558015610ea75730600090815260016020526040902054610e4d90826112d3565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e9e9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f04576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ef2858561128a565b60405190815260200160405180910390a35b50505050565b60008184841115610f2e5760405162461bcd60e51b815260040161049d9190611332565b506000610f3b8486611649565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd691906115b0565b81600081518110610fe957610fe9611672565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061101d5761101d611672565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611069906729a2241af62c00009086906004016116cd565b600060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ae91908101906116ee565b9050806001815181106110c3576110c3611672565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061111a5761111a611672565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119791906115b0565b816001815181106111aa576111aa611672565b6001600160a01b039283166020918202929092010152600e546111d09130911684610959565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112099085906000908690309042906004016117bb565b600060405180830381600087803b15801561122357600080fd5b505af1158015611237573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611286573d6000803e3d6000fd5b5050565b60006112cc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f0a565b9392505050565b6000806112e0838561161d565b9050838110156112cc5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161049d565b602081526000825180602084015260005b818110156113605760208186018101516040868401015201611343565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108a857600080fd5b600080604083850312156113a857600080fd5b82356113b381611380565b946020939093013593505050565b6000806000606084860312156113d657600080fd5b83356113e181611380565b925060208401356113f181611380565b929592945050506040919091013590565b60006020828403121561141457600080fd5b81356112cc81611380565b6000806040838503121561143257600080fd5b823561143d81611380565b9150602083013561144d81611380565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114a95780850481111561148d5761148d611458565b600184161561149b57908102905b60019390931c928002611472565b935093915050565b6000826114c057506001610389565b816114cd57506000610389565b81600181146114e357600281146114ed57611509565b6001915050610389565b60ff8411156114fe576114fe611458565b50506001821b610389565b5060208310610133831016604e8410600b841016171561152c575081810a610389565b611539600019848461146e565b806000190482111561154d5761154d611458565b029392505050565b60006112cc60ff8416836114b1565b808202811582820484141761038957610389611458565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115c257600080fd5b81516112cc81611380565b6000806000606084860312156115e257600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561160d57600080fd5b815180151581146112cc57600080fd5b8082018082111561038957610389611458565b60006001820161164257611642611458565b5060010190565b8181038181111561038957610389611458565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116c35781516001600160a01b031686526020958601959091019060010161169c565b5093949350505050565b8281526040602082015260006116e66040830184611688565b949350505050565b60006020828403121561170057600080fd5b815167ffffffffffffffff81111561171757600080fd5b8201601f8101841361172857600080fd5b805167ffffffffffffffff8111156117425761174261165c565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561176f5761176f61165c565b60405291825260208184018101929081018784111561178d57600080fd5b6020850194505b838510156117b057845180825260209586019590935001611794565b509695505050505050565b85815284602082015260a0604082015260006117da60a0830186611688565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220093f10f8dd5c986924764ed078d3a1483a9e7493a73326aa87953e72e6c3146d64736f6c634300081d0033";

type ARCDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ARCDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ARCD__factory extends ContractFactory {
  constructor(...args: ARCDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ARCD & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ARCD__factory {
    return super.connect(runner) as ARCD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ARCDInterface {
    return new Interface(_abi) as ARCDInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ARCD {
    return new Contract(address, _abi, runner) as unknown as ARCD;
  }
}
