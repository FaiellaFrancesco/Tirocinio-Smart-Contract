/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xa7bf640e6805102f34954be6bb47c530de04d75a.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_assist_bnTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_oijboijoiTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_vnbbvlkTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6001819055600281815560146003556000600481905560058290556006919091556007819055815461ffff60a81b19168255600b819055600c5560649061004f90600990610341565b61005d90633b9aca00610357565b610067919061036e565b60115567d02ab486cedc0000601255600a601355600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601080546001600160a01b0319163317905560646100dc6009600a610341565b6100ea90633b9aca00610357565b6100f5906002610357565b6100ff919061036e565b336000908152600d6020526040902055606461011d6009600a610341565b61012b90633b9aca00610357565b610136906062610357565b610140919061036e565b306000908152600d6020908152604080832093909355600f90528181208054600160ff1991821681179092556010546001600160a01b0316835292909120805490921617905561018d3390565b6001600160a01b03166000600080516020611db883398151915260646101b56009600a610341565b6101c390633b9aca00610357565b6101ce906002610357565b6101d8919061036e565b60405190815260200160405180910390a3306000600080516020611db883398151915260646102096009600a610341565b61021790633b9aca00610357565b610222906062610357565b61022c919061036e565b60405190815260200160405180910390a3610390565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102935780850481111561027757610277610242565b600184161561028557908102905b60019390931c92800261025c565b935093915050565b6000826102aa5750600161033b565b816102b75750600061033b565b81600181146102cd57600281146102d7576102f3565b600191505061033b565b60ff8411156102e8576102e8610242565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610316575081810a61033b565b6103236000198484610258565b806000190482111561033757610337610242565b0290505b92915050565b600061035060ff84168361029b565b9392505050565b808202811582820484141761033b5761033b610242565b60008261038b57634e487b7160e01b600052601260045260246000fd5b500490565b611a198061039f6000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063c888c7c611610064578063c888c7c6146102d7578063d02c9383146102ed578063d8fbd06f14610302578063dd62ed3e14610318578063f5f674311461035e57600080fd5b80638da5cb5b1461024a57806395d89b4114610272578063a9059cbb146102a2578063bd6c5bae146102c257600080fd5b8063313ce567116100d1578063313ce567146101cc57806370a08231146101e8578063715018a61461021e578063751039fc1461023557600080fd5b806306fdde031461010e578063095ea7b31461015957806318160ddd1461018957806323b872dd146101ac57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152601081526f2222a9aa24a72ca99021a424a1a5a2a760811b60208201525b60405161015091906114d4565b60405180910390f35b34801561016557600080fd5b50610179610174366004611537565b61037e565b6040519015158152602001610150565b34801561019557600080fd5b5061019e610395565b604051908152602001610150565b3480156101b857600080fd5b506101796101c7366004611563565b6103b6565b3480156101d857600080fd5b5060405160098152602001610150565b3480156101f457600080fd5b5061019e6102033660046115a4565b6001600160a01b03166000908152600d602052604090205490565b34801561022a57600080fd5b5061023361042e565b005b34801561024157600080fd5b506102336104ab565b34801561025657600080fd5b506000546040516001600160a01b039091168152602001610150565b34801561027e57600080fd5b5060408051808201909152600781526644455354494e5960c81b6020820152610143565b3480156102ae57600080fd5b506101796102bd366004611537565b6104d7565b3480156102ce57600080fd5b506102336104e4565b3480156102e357600080fd5b5061019e60125481565b3480156102f957600080fd5b5061023361054a565b34801561030e57600080fd5b5061019e60115481565b34801561032457600080fd5b5061019e6103333660046115c1565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205490565b34801561036a57600080fd5b506102336103793660046115a4565b610902565b600061038b338484610958565b5060015b92915050565b60006103a36009600a6116f7565b6103b190633b9aca00611706565b905090565b60006103c3848484610a7c565b6103cd8484610f59565b1561042457610424843361041f856040518060600160405280602881526020016119bc602891396001600160a01b038a166000908152600e602090815260408083203384529091529020549190610fbe565b610958565b5060019392505050565b6000546001600160a01b031633146104615760405162461bcd60e51b81526004016104589061171d565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104d55760405162461bcd60e51b81526004016104589061171d565b565b600061038b338484610a7c565b6000546001600160a01b0316331461050e5760405162461bcd60e51b81526004016104589061171d565b6000471161051b57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610547573d6000803e3d6000fd5b50565b6000546001600160a01b031633146105745760405162461bcd60e51b81526004016104589061171d565b600a54600160a01b900460ff16156105ce5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610458565b600880546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106179030906106096009600a6116f7565b61041f90633b9aca00611706565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190611752565b6001600160a01b031663c9c6539630600860009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107149190611752565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190611752565b600a80546001600160a01b039283166001600160a01b03199091161790556008541663f305d71947306107cd816001600160a01b03166000908152600d602052604090205490565b6000806107e26000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561084a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061086f919061176f565b5050600a805462ff00ff60a01b1981166201000160a01b1790915560085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610547919061179d565b336000908152600f602052604090205460ff1661091e57600080fd5b601080546001600160a01b039092166001600160a01b0319909216821790556000908152600f60205260409020805460ff19166001179055565b6001600160a01b0383166109ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610458565b6001600160a01b038216610a1b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610458565b6001600160a01b038381166000818152600e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610458565b6001600160a01b038216610b425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610458565b60008111610ba45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610458565b600080546001600160a01b03858116911614801590610bd157506000546001600160a01b03848116911614155b8015610be657506001600160a01b0384163014155b8015610bfb57506001600160a01b0383163014155b15610dfb57600a54600160a81b900460ff16610c4057610c3d6064610c3760055460075411610c2c57600354610c30565b6004545b8590610ff8565b90611081565b90505b600a546001600160a01b038581169116148015610c6b57506008546001600160a01b03848116911614155b8015610c9057506001600160a01b0383166000908152600f602052604090205460ff16155b8015610caa57506010546001600160a01b03848116911614155b15610cc55760078054906000610cbf836117bf565b91905055505b306000908152600d602052604081205490546001600160a01b03868116911614801590610cfc5750600a54600160a81b900460ff16155b8015610d155750600a546001600160a01b038581169116145b8015610d2f57506010546001600160a01b03868116911614155b8015610d445750600a54600160b01b900460ff165b8015610d535750600654600754115b15610df957600c54431115610d68576000600b555b610d71836110c3565b600b54610d7e91906117d8565b600b8190556012541015610dc55760405162461bcd60e51b815260206004820152600e60248201526d13585e081cddd85c081b1a5b5a5d60921b6044820152606401610458565b601154811115610de957610de98360115411610de35760115461123b565b8361123b565b47610df3476113c7565b5043600c555b505b6001600160a01b0384166000908152600d6020526040902054610e1e9083611405565b6001600160a01b0385166000908152600d6020526040902055610e63610e448383611405565b6001600160a01b0385166000908152600d602052604090205490611447565b6001600160a01b0384166000908152600d60205260409020558015610ef657306000908152600d6020526040902054610e9c9082611447565b306000818152600d6020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eed9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f53576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f418585611405565b60405190815260200160405180910390a35b50505050565b336000908152600f602052604081205460ff1615610f8b5750336000908152600f602052604090205460ff161561038f565b600a546001600160a01b0384811691161480610fb257506001600160a01b03821661dead14155b61038b5750600061038f565b60008184841115610fe25760405162461bcd60e51b815260040161045891906114d4565b506000610fef84866117eb565b95945050505050565b60008260000361100a5750600061038f565b60006110168385611706565b90508261102385836117fe565b1461107a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610458565b9392505050565b600061107a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114a6565b6040805160028082526060820183526000928392919060208301908036833701905050905030816000815181106110fc576110fc611836565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611155573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111799190611752565b8160018151811061118c5761118c611836565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b8152600092919091169063d06ca61f906111d09087908690600401611891565b600060405180830381865afa1580156111ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261121591908101906118b2565b90508060018151811061122a5761122a611836565b602002602001015192505050919050565b600a805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061128357611283611836565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113009190611752565b8160018151811061131357611313611836565b6001600160a01b0392831660209182029290920101526008546113399130911684610958565b600854600980546001600160a01b0319166001600160a01b03909216918217905560405163791ac94760e01b815263791ac9479061138490859060009086903090429060040161197f565b600060405180830381600087803b15801561139e57600080fd5b505af11580156113b2573d6000803e3d6000fd5b5050600a805460ff60a81b1916905550505050565b6010546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611401573d6000803e3d6000fd5b5050565b600061107a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fbe565b60008061145483856117d8565b90508381101561107a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610458565b600081836114c75760405162461bcd60e51b815260040161045891906114d4565b506000610fef84866117fe565b602081526000825180602084015260005b8181101561150257602081860181015160408684010152016114e5565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461054757600080fd5b6000806040838503121561154a57600080fd5b823561155581611522565b946020939093013593505050565b60008060006060848603121561157857600080fd5b833561158381611522565b9250602084013561159381611522565b929592945050506040919091013590565b6000602082840312156115b657600080fd5b813561107a81611522565b600080604083850312156115d457600080fd5b82356115df81611522565b915060208301356115ef81611522565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561164b5780850481111561162f5761162f6115fa565b600184161561163d57908102905b60019390931c928002611614565b935093915050565b6000826116625750600161038f565b8161166f5750600061038f565b8160018114611685576002811461168f576116ab565b600191505061038f565b60ff8411156116a0576116a06115fa565b50506001821b61038f565b5060208310610133831016604e8410600b84101617156116ce575081810a61038f565b6116db6000198484611610565b80600019048211156116ef576116ef6115fa565b029392505050565b600061107a60ff841683611653565b808202811582820484141761038f5761038f6115fa565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561176457600080fd5b815161107a81611522565b60008060006060848603121561178457600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117af57600080fd5b8151801515811461107a57600080fd5b6000600182016117d1576117d16115fa565b5060010190565b8082018082111561038f5761038f6115fa565b8181038181111561038f5761038f6115fa565b60008261181b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118875781516001600160a01b0316865260209586019590910190600101611860565b5093949350505050565b8281526040602082015260006118aa604083018461184c565b949350505050565b6000602082840312156118c457600080fd5b815167ffffffffffffffff8111156118db57600080fd5b8201601f810184136118ec57600080fd5b805167ffffffffffffffff81111561190657611906611820565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561193357611933611820565b60405291825260208184018101929081018784111561195157600080fd5b6020850194505b8385101561197457845180825260209586019590935001611958565b509695505050505050565b85815284602082015260a06040820152600061199e60a083018661184c565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c6693f1ccaacf23f3892a383fa9256175ba35561951502a32d7948070d79dcd564736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
