/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  XMONEY,
  XMONEYInterface,
} from "../../../medium/0x889857fd88a89022949968f0d5c8bcd52e579ff7.sol/XMONEY";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalXMONEYTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initXMONEYDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueXMONEYETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b61184e806102c66000396000f3fe6080604052600436106101025760003560e01c8063313ce567116100955780638da5cb5b116100645780638da5cb5b1461029457806395d89b41146102bc578063a9059cbb146102eb578063dd62ed3e1461030b578063ea414b281461035157600080fd5b8063313ce5671461021857806370a0823114610234578063715018a61461026a5780638a8c523c1461027f57600080fd5b80630faee56f116100d15780630faee56f146101b657806318160ddd146101cc57806323b872dd146101e15780632d11b3e71461020157600080fd5b806302f669aa1461010e57806306fdde0314610137578063095ea7b3146101705780630c349001146101a057600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610124600c5481565b6040519081526020015b60405180910390f35b34801561014357600080fd5b5060408051808201909152600781526658204d6f6e657960c81b60208201525b60405161012e919061132b565b34801561017c57600080fd5b5061019061018b36600461138e565b610371565b604051901515815260200161012e565b3480156101ac57600080fd5b50610124600d5481565b3480156101c257600080fd5b50610124600b5481565b3480156101d857600080fd5b50610124610388565b3480156101ed57600080fd5b506101906101fc3660046113ba565b6103a9565b34801561020d57600080fd5b5061021661046c565b005b34801561022457600080fd5b506040516009815260200161012e565b34801561024057600080fd5b5061012461024f3660046113fb565b6001600160a01b031660009081526001602052604090205490565b34801561027657600080fd5b506102166104db565b34801561028b57600080fd5b5061021661054f565b3480156102a057600080fd5b506000546040516001600160a01b03909116815260200161012e565b3480156102c857600080fd5b50604080518082019091526006815265584d4f4e455960d01b6020820152610163565b3480156102f757600080fd5b5061019061030636600461138e565b610907565b34801561031757600080fd5b50610124610326366004611418565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035d57600080fd5b5061021661036c3660046113fb565b610914565b600061037e338484610952565b5060015b92915050565b60006103966009600a61154e565b6103a4906305f5e10061155d565b905090565b60006103b6848484610a76565b3360009081526003602052604090205460ff1615801561040b5750600f546001600160a01b03858116911614806103f857506001600160a01b03831661dead14155b8061040b57506001600160a01b03841630145b1561046257610462843361045d856040518060600160405280602881526020016117f1602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f03565b610952565b5060019392505050565b6000546001600160a01b0316331461049f5760405162461bcd60e51b815260040161049690611574565b60405180910390fd5b600047116104ac57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156104d8573d6000803e3d6000fd5b50565b6000546001600160a01b031633146105055760405162461bcd60e51b815260040161049690611574565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105795760405162461bcd60e51b815260040161049690611574565b600f54600160a01b900460ff16156105d35760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610496565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561061c90309061060e6009600a61154e565b61045d906305f5e10061155d565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069391906115a9565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906115a9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a91906115a9565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107d2816001600160a01b031660009081526001602052604090205490565b6000806107e76000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561084f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087491906115c6565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d891906115f4565b600061037e338484610a76565b3360009081526003602052604090205460ff1661093057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109b45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610496565b6001600160a01b038216610a155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610496565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ada5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610496565b6001600160a01b038216610b3c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610496565b60008111610b9e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610496565b60006001600160a01b0384163014801590610bc257506001600160a01b0383163014155b15610da557600f546001600160a01b038581169116148015610bf25750600e546001600160a01b03848116911614155b8015610c1757506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3157506004546001600160a01b03848116911614155b15610c76574360095414610c49576000600a55436009555b81600a6000828254610c5b9190611616565b909155505060088054906000610c7083611629565b91905055505b600f546001600160a01b038481169116148015610c9c57506001600160a01b0384163014155b15610cf757610ca9610f3d565b600a541080610cba57504360095414155b610cf75760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b6044820152606401610496565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d2e5750600f546001600160a01b038581169116145b8015610d435750600f54600160b01b900460ff165b8015610d5d57506004546001600160a01b03868116911614155b15610da3578015610d97576000600b548211610d795781610d7d565b600b545b9050610d95818511610d8f57846110cb565b816110cb565b505b47610da147611245565b505b505b6001600160a01b038416600090815260016020526040902054610dc89083611283565b6001600160a01b038516600090815260016020526040902055610e0d610dee8383611283565b6001600160a01b038516600090815260016020526040902054906112cc565b6001600160a01b0384166000908152600160205260409020558015610ea05730600090815260016020526040902054610e4690826112cc565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e979085815260200190565b60405180910390a35b6001600160a01b03831661dead14610efd576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eeb8585611283565b60405190815260200160405180910390a35b50505050565b60008184841115610f275760405162461bcd60e51b8152600401610496919061132b565b506000610f348486611642565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcf91906115a9565b81600081518110610fe257610fe261166b565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110165761101661166b565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611062906729a2241af62c00009086906004016116c6565b600060405180830381865afa15801561107f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a791908101906116e7565b9050806001815181106110bc576110bc61166b565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111135761111361166b565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561116c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119091906115a9565b816001815181106111a3576111a361166b565b6001600160a01b039283166020918202929092010152600e546111c99130911684610952565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112029085906000908690309042906004016117b4565b600060405180830381600087803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561127f573d6000803e3d6000fd5b5050565b60006112c583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f03565b9392505050565b6000806112d98385611616565b9050838110156112c55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610496565b602081526000825180602084015260005b81811015611359576020818601810151604086840101520161133c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146104d857600080fd5b600080604083850312156113a157600080fd5b82356113ac81611379565b946020939093013593505050565b6000806000606084860312156113cf57600080fd5b83356113da81611379565b925060208401356113ea81611379565b929592945050506040919091013590565b60006020828403121561140d57600080fd5b81356112c581611379565b6000806040838503121561142b57600080fd5b823561143681611379565b9150602083013561144681611379565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114a25780850481111561148657611486611451565b600184161561149457908102905b60019390931c92800261146b565b935093915050565b6000826114b957506001610382565b816114c657506000610382565b81600181146114dc57600281146114e657611502565b6001915050610382565b60ff8411156114f7576114f7611451565b50506001821b610382565b5060208310610133831016604e8410600b8410161715611525575081810a610382565b6115326000198484611467565b806000190482111561154657611546611451565b029392505050565b60006112c560ff8416836114aa565b808202811582820484141761038257610382611451565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156115bb57600080fd5b81516112c581611379565b6000806000606084860312156115db57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561160657600080fd5b815180151581146112c557600080fd5b8082018082111561038257610382611451565b60006001820161163b5761163b611451565b5060010190565b8181038181111561038257610382611451565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116bc5781516001600160a01b0316865260209586019590910190600101611695565b5093949350505050565b8281526040602082015260006116df6040830184611681565b949350505050565b6000602082840312156116f957600080fd5b815167ffffffffffffffff81111561171057600080fd5b8201601f8101841361172157600080fd5b805167ffffffffffffffff81111561173b5761173b611655565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561176857611768611655565b60405291825260208184018101929081018784111561178657600080fd5b6020850194505b838510156117a95784518082526020958601959093500161178d565b509695505050505050565b85815284602082015260a0604082015260006117d360a0830186611681565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220158c57e8f05f88d85d5562d403098d5fb93dac3da52761c95d84960e871a2a8364736f6c634300081d0033";

type XMONEYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XMONEYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XMONEY__factory extends ContractFactory {
  constructor(...args: XMONEYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      XMONEY & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): XMONEY__factory {
    return super.connect(runner) as XMONEY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XMONEYInterface {
    return new Interface(_abi) as XMONEYInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): XMONEY {
    return new Contract(address, _abi, runner) as unknown as XMONEY;
  }
}
