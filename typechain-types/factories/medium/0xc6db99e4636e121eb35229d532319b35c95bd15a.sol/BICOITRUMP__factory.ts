/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BICOITRUMP,
  BICOITRUMPInterface,
} from "../../../medium/0xc6db99e4636e121eb35229d532319b35c95bd15a.sol/BICOITRUMP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "RemoveLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBuyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newSellFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferDelayEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526006805460ff19169055600f60078190556014600890815560006009818155600a828155600b849055600c938455600d93909355600e8290559281905560105561004e9190610324565b61005b9062030d4061033a565b60115561006a6009600a610324565b6100779062030d4061033a565b6012556100866009600a610324565b6100929061ea6061033a565b6013556100a16009600a610324565b6100ae9062030d4061033a565b6014556016805461ffff60a81b191690553480156100cb57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060068054610100600160a81b03191661010033021790556101306009600a610324565b61013d906298968061033a565b3360009081526001602081905260408220929092556003906101676000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560065461010090049091168352912080549092161790556101ca3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102026009600a610324565b61020f906298968061033a565b60405190815260200160405180910390a3610351565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102765780850481111561025a5761025a610225565b600184161561026857908102905b60019390931c92800261023f565b935093915050565b60008261028d5750600161031e565b8161029a5750600061031e565b81600181146102b057600281146102ba576102d6565b600191505061031e565b60ff8411156102cb576102cb610225565b50506001821b61031e565b5060208310610133831016604e8410600b84101617156102f9575081810a61031e565b610306600019848461023b565b806000190482111561031a5761031a610225565b0290505b92915050565b600061033360ff84168361027e565b9392505050565b808202811582820484141761031e5761031e610225565b611b9b806103606000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103a1578063bf474bed146103c1578063c876d0b9146103d7578063c9567bf9146103f1578063dd62ed3e14610406578063df1798bc1461044c57600080fd5b8063751039fc146102f25780637d1db4a5146103075780638da5cb5b1461031d5780638f9a55c01461034557806395d89b411461035b5780639e78fb4f1461038c57600080fd5b8063313ce56711610108578063313ce5671461024157806351bc3c851461025d57806356cd40e71461027257806370a0823114610287578063715018a6146102bd57806372333356146102d257600080fd5b806306fdde031461015b578063095ea7b3146101a15780630faee56f146101d157806318160ddd146101f557806320800a001461020a57806323b872dd1461022157600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152600b81526a04249434f49205452554d560ac1b60208201525b6040516101989190611747565b60405180910390f35b3480156101ad57600080fd5b506101c16101bc3660046117aa565b61048e565b6040519015158152602001610198565b3480156101dd57600080fd5b506101e760145481565b604051908152602001610198565b34801561020157600080fd5b506101e76104a5565b34801561021657600080fd5b5061021f6104c5565b005b34801561022d57600080fd5b506101c161023c3660046117d6565b61053b565b34801561024d57600080fd5b5060405160098152602001610198565b34801561026957600080fd5b5061021f6105a4565b34801561027e57600080fd5b5061021f610601565b34801561029357600080fd5b506101e76102a2366004611817565b6001600160a01b031660009081526001602052604090205490565b3480156102c957600080fd5b5061021f610633565b3480156102de57600080fd5b5061021f6102ed366004611834565b6106a7565b3480156102fe57600080fd5b5061021f6106dc565b34801561031357600080fd5b506101e760115481565b34801561032957600080fd5b506000546040516001600160a01b039091168152602001610198565b34801561035157600080fd5b506101e760125481565b34801561036757600080fd5b506040805180820190915260088152674249434f49414e4960c01b602082015261018b565b34801561039857600080fd5b5061021f610795565b3480156103ad57600080fd5b506101c16103bc3660046117aa565b610997565b3480156103cd57600080fd5b506101e760135481565b3480156103e357600080fd5b506006546101c19060ff1681565b3480156103fd57600080fd5b5061021f6109a4565b34801561041257600080fd5b506101e7610421366004611856565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561045857600080fd5b5061021f6104673660046117aa565b6001600160a01b039091166000908152600260209081526040808320308452909152902055565b600061049b338484610b93565b5060015b92915050565b60006104b36009600a61198c565b6104c0906298968061199b565b905090565b6000546001600160a01b031633146104f85760405162461bcd60e51b81526004016104ef906119b2565b60405180910390fd5b6006546040516001600160a01b0361010090920491909116904780156108fc02916000818181858888f19350505050158015610538573d6000803e3d6000fd5b50565b6000610548848484610cb7565b61059a843361059585604051806060016040528060288152602001611b3e602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061138d565b610b93565b5060019392505050565b6000546001600160a01b031633146105ce5760405162461bcd60e51b81526004016104ef906119b2565b3060009081526001602052604090205480156105ed576105ed816113c7565b4780156105fd576105fd8161155a565b5050565b6016546001600160a01b0316600081815260026020908152604080832030808552925290912054916105389183610cb7565b6000546001600160a01b0316331461065d5760405162461bcd60e51b81526004016104ef906119b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106d15760405162461bcd60e51b81526004016104ef906119b2565b600991909155600a55565b6000546001600160a01b031633146107065760405162461bcd60e51b81526004016104ef906119b2565b6107126009600a61198c565b61071f906298968061199b565b60115561072e6009600a61198c565b61073b906298968061199b565b6012556006805460ff191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107756009600a61198c565b610782906298968061199b565b60405190815260200160405180910390a1565b6000546001600160a01b031633146107bf5760405162461bcd60e51b81526004016104ef906119b2565b601580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108079030906107fa6009600a61198c565b610595906298968061199b565b601560009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906119e7565b6001600160a01b031663c9c6539630601560009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090491906119e7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097591906119e7565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b600061049b338484610cb7565b6000546001600160a01b031633146109ce5760405162461bcd60e51b81526004016104ef906119b2565b601654600160a01b900460ff1615610a285760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104ef565b6015546001600160a01b031663f305d7194730610a5a816001600160a01b031660009081526001602052604090205490565b600080610a6f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ad7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610afc9190611a04565b505060165460155460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190611a32565b506016805462ff00ff60a01b19166201000160a01b179055565b6001600160a01b038316610bf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ef565b6001600160a01b038216610c565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ef565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ef565b6001600160a01b038216610d7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ef565b60008111610ddf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104ef565b600080546001600160a01b03858116911614801590610e0c57506000546001600160a01b03848116911614155b1561124a576001600160a01b03841660009081526004602052604090205460ff16158015610e5357506001600160a01b03831660009081526004602052604090205460ff16155b610e5c57600080fd5b60065460ff1615610f15576015546001600160a01b03848116911614801590610e9357506016546001600160a01b03848116911614155b15610f1557326000908152600560205260409020544311610f025760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f6044820152633bb2b21760e11b60648201526084016104ef565b3260009081526005602052604090204390555b6016546001600160a01b038581169116148015610f4057506015546001600160a01b03848116911614155b8015610f6557506001600160a01b03831660009081526003602052604090205460ff16155b1561106157601154821115610fb85760405162461bcd60e51b815260206004820152601960248201527822bc31b2b2b239903a3432902fb6b0bc2a3c20b6b7bab73a1760391b60448201526064016104ef565b60125482610fdb856001600160a01b031660009081526001602052604090205490565b610fe59190611a54565b11156110335760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104ef565b600d54600e54101561104b57823b1561104b57600080fd5b600e805490600061105b83611a67565b91905055505b61108d6064611087600b54600e541161107c57600754611080565b6009545b8590611598565b90611621565b6016549091506001600160a01b0384811691161480156110b657506001600160a01b0384163014155b15611131576011548211156111095760405162461bcd60e51b815260206004820152601960248201527822bc31b2b2b239903a3432902fb6b0bc2a3c20b6b7bab73a1760391b60448201526064016104ef565b61112e6064611087600c54600e541161112457600854611080565b600a548590611598565b90505b30600090815260016020526040902054601654600160a81b900460ff1615801561116857506016546001600160a01b038581169116145b801561117d5750601654600160b01b900460ff165b801561118a575060135481115b80156111995750600d54600e54115b15611248576010544311156111ae576000600f555b6003600f54106112005760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104ef565b61121d6112188461121384601454611663565b611663565b6113c7565b47801561122d5761122d4761155a565b600f805490600061123d83611a67565b909155505043601055505b505b80156112c4573060009081526001602052604090205461126a9082611678565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bb9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112e790836116d7565b6001600160a01b03851660009081526001602052604090205561132c61130d83836116d7565b6001600160a01b03851660009081526001602052604090205490611678565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137685856116d7565b60405190815260200160405180910390a350505050565b600081848411156113b15760405162461bcd60e51b81526004016104ef9190611747565b5060006113be8486611a80565b95945050505050565b6016805460ff60a81b1916600160a81b179055801561154a57601654600160a01b900460ff161561154a57604080516002808252606082018352600092602083019080368337019050509050308160008151811061142757611427611a93565b6001600160a01b03928316602091820292909201810191909152601554604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a491906119e7565b816001815181106114b7576114b7611a93565b6001600160a01b0392831660209182029290920101526015546114dd9130911684610b93565b60155460405163791ac94760e01b81526001600160a01b039091169063791ac94790611516908590600090869030904290600401611aa9565b600060405180830381600087803b15801561153057600080fd5b505af1158015611544573d6000803e3d6000fd5b50505050505b506016805460ff60a81b19169055565b6006546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156105fd573d6000803e3d6000fd5b6000826000036115aa5750600061049f565b60006115b6838561199b565b9050826115c38583611b1b565b1461161a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104ef565b9392505050565b600061161a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611719565b6000818311611672578261161a565b50919050565b6000806116858385611a54565b90508381101561161a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104ef565b600061161a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138d565b6000818361173a5760405162461bcd60e51b81526004016104ef9190611747565b5060006113be8486611b1b565b602081526000825180602084015260005b818110156117755760208186018101516040868401015201611758565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461053857600080fd5b600080604083850312156117bd57600080fd5b82356117c881611795565b946020939093013593505050565b6000806000606084860312156117eb57600080fd5b83356117f681611795565b9250602084013561180681611795565b929592945050506040919091013590565b60006020828403121561182957600080fd5b813561161a81611795565b6000806040838503121561184757600080fd5b50508035926020909101359150565b6000806040838503121561186957600080fd5b823561187481611795565b9150602083013561188481611795565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156118e0578085048111156118c4576118c461188f565b60018416156118d257908102905b60019390931c9280026118a9565b935093915050565b6000826118f75750600161049f565b816119045750600061049f565b816001811461191a576002811461192457611940565b600191505061049f565b60ff8411156119355761193561188f565b50506001821b61049f565b5060208310610133831016604e8410600b8410161715611963575081810a61049f565b61197060001984846118a5565b80600019048211156119845761198461188f565b029392505050565b600061161a60ff8416836118e8565b808202811582820484141761049f5761049f61188f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156119f957600080fd5b815161161a81611795565b600080600060608486031215611a1957600080fd5b5050815160208301516040909301519094929350919050565b600060208284031215611a4457600080fd5b8151801515811461161a57600080fd5b8082018082111561049f5761049f61188f565b600060018201611a7957611a7961188f565b5060010190565b8181038181111561049f5761049f61188f565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611afb5783516001600160a01b0316835260209384019390920191600101611ad4565b50506001600160a01b039590951660608401525050608001529392505050565b600082611b3857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220573b8f4263fd8f0bb7029be7371fd75bf4b29d4ece150a1b28692a42466e26ac64736f6c634300081a0033";

type BICOITRUMPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BICOITRUMPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BICOITRUMP__factory extends ContractFactory {
  constructor(...args: BICOITRUMPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BICOITRUMP> {
    return super.deploy(overrides || {}) as Promise<BICOITRUMP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BICOITRUMP {
    return super.attach(address) as BICOITRUMP;
  }
  override connect(signer: Signer): BICOITRUMP__factory {
    return super.connect(signer) as BICOITRUMP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BICOITRUMPInterface {
    return new utils.Interface(_abi) as BICOITRUMPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BICOITRUMP {
    return new Contract(address, _abi, signerOrProvider) as BICOITRUMP;
  }
}
