/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CounterfeitPopStar,
  CounterfeitPopStarInterface,
} from "../../../medium/0x849c094b3fde3fac31ca2192255444fb7ab69739.sol/CounterfeitPopStar";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "BurnRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cooldownSeconds",
        type: "uint256",
      },
    ],
    name: "CooldownUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "DevRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "DevWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "MarketingRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "MarketingWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "MaxWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSecondsUntilNextTransfer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setBurnRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seconds_",
        type: "uint256",
      },
    ],
    name: "setCooldownTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setDevRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "setDevWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setMarketingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "setMarketingWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setMaxWalletPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260c860085560646009556064600a55601e600b556003600c5534801561002957600080fd5b506040518060400160405280601381526020017f436f756e7465726665697420506f7053746172000000000000000000000000008152506040518060400160405280600381526020016243505360e81b815250816003908161008b91906102eb565b50600461009882826102eb565b5050506100b16100ac61011360201b60201c565b610117565b600680546001600160a01b031990811673fbfb727dd89997e64ec8e649187429e88b292e2e17909155600780549091167313c2888c86e871eccb80c4c606d3b16f66d0695817905561010e336a115eec47f6cf7e35000000610169565b6103d0565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101c35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546101d591906103a9565b90915550506001600160a01b038216600090815260208190526040812080548392906102029084906103a9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061027657607f821691505b60208210810361029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102e657806000526020600020601f840160051c810160208510156102c35750805b601f840160051c820191505b818110156102e357600081556001016102cf565b50505b505050565b81516001600160401b038111156103045761030461024c565b610318816103128454610262565b8461029c565b6020601f82116001811461034c57600083156103345750848201515b600019600385901b1c1916600184901b1784556102e3565b600084815260208120601f198516915b8281101561037c578785015182556020948501946001909201910161035c565b508482101561039a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103ca57634e487b7160e01b600052601160045260246000fd5b92915050565b611586806103df6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806382bf293c11610104578063a457c2d7116100a2578063bed9985011610071578063bed99850146103dc578063c9574975146103e5578063dd62ed3e146103ee578063f2fde38b1461042757600080fd5b8063a457c2d71461039a578063a9059cbb146103ad578063b319c6b7146103c0578063b590bd41146103c957600080fd5b80638ea5220f116100de5780638ea5220f1461035a578063902d55a51461036d57806395d89b411461037f578063a1fdddd41461038757600080fd5b806382bf293c1461032d578063838a676f146103405780638da5cb5b1461034957600080fd5b8063395093511161017c57806370a082311161014b57806370a08231146102be578063712eb859146102e7578063715018a6146102fa57806375f0a8741461030257600080fd5b8063395093511461027c5780633d9a3d191461028f5780635d098b38146102985780636ff73201146102ab57600080fd5b8063189d165e116101b8578063189d165e146102325780631f53ac021461024757806323b872dd1461025a578063313ce5671461026d57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e761043a565b6040516101f491906112e6565b60405180910390f35b61021061020b366004611350565b6104cc565b60405190151581526020016101f4565b6002545b6040519081526020016101f4565b61024561024036600461137a565b6104e6565b005b610245610255366004611393565b610577565b6102106102683660046113b5565b610611565b604051601281526020016101f4565b61021061028a366004611350565b610635565b610224600c5481565b6102456102a6366004611393565b610674565b6102456102b936600461137a565b61070e565b6102246102cc366004611393565b6001600160a01b031660009081526020819052604090205490565b6102456102f536600461137a565b6107ac565b61024561082d565b600754610315906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b61024561033b36600461137a565b610863565b61022460095481565b6005546001600160a01b0316610315565b600654610315906001600160a01b031681565b6102246a115eec47f6cf7e3500000081565b6101e7610915565b610224610395366004611393565b610924565b6102106103a8366004611350565b61098a565b6102106103bb366004611350565b610a1c565b610224600b5481565b6102456103d736600461137a565b610a2a565b610224600a5481565b61022460085481565b6102246103fc3660046113f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610245610435366004611393565b610aab565b60606003805461044990611425565b80601f016020809104026020016040519081016040528092919081815260200182805461047590611425565b80156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b5050505050905090565b6000336104da818585610b46565b60019150505b92915050565b6005546001600160a01b031633146105195760405162461bcd60e51b81526004016105109061145f565b60405180910390fd5b6103e881111561053b5760405162461bcd60e51b815260040161051090611494565b600a8190556040518181527f47863b595116a31383855975a4078913dce7881e717b75a06ced2db5d534ff78906020015b60405180910390a150565b6005546001600160a01b031633146105a15760405162461bcd60e51b81526004016105109061145f565b6001600160a01b0381166105c75760405162461bcd60e51b8152600401610510906114b5565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f31bb1993faff4f8409d7baad771f861e093ef4ce2c92c6e0cb10b82d1c7324cb90600090a250565b60003361061f858285610c6b565b61062a858585610cfd565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906104da908290869061066f9087906114f1565b610b46565b6005546001600160a01b0316331461069e5760405162461bcd60e51b81526004016105109061145f565b6001600160a01b0381166106c45760405162461bcd60e51b8152600401610510906114b5565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fbf86feedee5b30c30a8243bd21deebb704d141478d39b1be04fe5ee739f214e790600090a250565b6005546001600160a01b031633146107385760405162461bcd60e51b81526004016105109061145f565b610e108111156107775760405162461bcd60e51b815260206004820152600a60248201526926b0bc1018903437bab960b11b6044820152606401610510565b600b8190556040518181527f583d8b24c5439ab7d810e51e37e8db41ba66f1168fd7b752ceae0c7681c5272c9060200161056c565b6005546001600160a01b031633146107d65760405162461bcd60e51b81526004016105109061145f565b6103e88111156107f85760405162461bcd60e51b815260040161051090611494565b60098190556040518181527fe5493206f305f48f22963f38bf60fcb4685e3af5843619da148412268d2f0a709060200161056c565b6005546001600160a01b031633146108575760405162461bcd60e51b81526004016105109061145f565b6108616000610fc5565b565b6005546001600160a01b0316331461088d5760405162461bcd60e51b81526004016105109061145f565b6001811015801561089f575060648111155b6108e05760405162461bcd60e51b81526020600482015260126024820152714d75737420626520312520746f203130302560701b6044820152606401610510565b600c8190556040518181527f12528a3c61e0f3b2d6fc707a9fc58b1af86e252cad0d7f4c154ebeabb162dace9060200161056c565b60606004805461044990611425565b600b546001600160a01b0382166000908152600d6020526040812054909161094b916114f1565b421061095957506000919050565b600b546001600160a01b0383166000908152600d60205260409020544291610980916114f1565b6104e09190611504565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610a0f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610510565b61062a8286868403610b46565b6000336104da818585610cfd565b6005546001600160a01b03163314610a545760405162461bcd60e51b81526004016105109061145f565b6103e8811115610a765760405162461bcd60e51b815260040161051090611494565b60088190556040518181527f40b55da091be61f2e72d1edaa3865cbff08d25561c7b17f1a607ca78085fd9c49060200161056c565b6005546001600160a01b03163314610ad55760405162461bcd60e51b81526004016105109061145f565b6001600160a01b038116610b3a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b610b4381610fc5565b50565b6001600160a01b038316610ba85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610510565b6001600160a01b038216610c095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610510565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038084166000908152600160209081526040808320938616835292905220546000198114610cf75781811015610cea5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610510565b610cf78484848403610b46565b50505050565b6001600160a01b03831615801590610d1d57506001600160a01b03821615155b610d395760405162461bcd60e51b8152600401610510906114b5565b80610d59846001600160a01b031660009081526020819052604090205490565b1015610d9e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610510565b6005546001600160a01b03848116911614610e3857600b546001600160a01b0384166000908152600d6020526040902054610dd99042611504565b1015610e1c5760405162461bcd60e51b815260206004820152601260248201527110dbdbdb191bdddb881a5b881959999958dd60721b6044820152606401610510565b6001600160a01b0383166000908152600d602052604090204290555b6005546001600160a01b03838116911614610ef15760006064600c546a115eec47f6cf7e35000000610e6a9190611517565b610e74919061152e565b90508082610e97856001600160a01b031660009081526020819052604090205490565b610ea191906114f1565b1115610eef5760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d697400000000000000006044820152606401610510565b505b600061271060085483610f049190611517565b610f0e919061152e565b9050600061271060095484610f239190611517565b610f2d919061152e565b90506000612710600a5485610f429190611517565b610f4c919061152e565b9050600081610f5b84866114f1565b610f6591906114f1565b90506000610f738287611504565b600654909150610f8e9089906001600160a01b031687611017565b600754610fa69089906001600160a01b031686611017565b610fb088846111bc565b610fbb888883611017565b5050505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831661107b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610510565b6001600160a01b0382166110dd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610510565b6001600160a01b038316600090815260208190526040902054818110156111555760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610510565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b6001600160a01b03821661121c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610510565b6001600160a01b038216600090815260208190526040902054818110156112905760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610510565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610c5e565b602081526000825180602084015260005b8181101561131457602081860181015160408684010152016112f7565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461134b57600080fd5b919050565b6000806040838503121561136357600080fd5b61136c83611334565b946020939093013593505050565b60006020828403121561138c57600080fd5b5035919050565b6000602082840312156113a557600080fd5b6113ae82611334565b9392505050565b6000806000606084860312156113ca57600080fd5b6113d384611334565b92506113e160208501611334565b929592945050506040919091013590565b6000806040838503121561140557600080fd5b61140e83611334565b915061141c60208401611334565b90509250929050565b600181811c9082168061143957607f821691505b60208210810361145957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600790820152664d61782031302560c81b604082015260600190565b6020808252600c908201526b5a65726f206164647265737360a01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156104e0576104e06114db565b818103818111156104e0576104e06114db565b80820281158282048414176104e0576104e06114db565b60008261154b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220645f5aa39a963609e792646a4a97a580cf3421987e44531fc6856d082b8c93c564736f6c634300081e0033";

type CounterfeitPopStarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterfeitPopStarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterfeitPopStar__factory extends ContractFactory {
  constructor(...args: CounterfeitPopStarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CounterfeitPopStar> {
    return super.deploy(overrides || {}) as Promise<CounterfeitPopStar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CounterfeitPopStar {
    return super.attach(address) as CounterfeitPopStar;
  }
  override connect(signer: Signer): CounterfeitPopStar__factory {
    return super.connect(signer) as CounterfeitPopStar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterfeitPopStarInterface {
    return new utils.Interface(_abi) as CounterfeitPopStarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CounterfeitPopStar {
    return new Contract(address, _abi, signerOrProvider) as CounterfeitPopStar;
  }
}
