/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GARY,
  GARYInterface,
} from "../../../medium/0xc2f4928b4fba8380e59ad174dcef75d3818743c5.sol/GARY";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "addToBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caLimiter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "isFree_AnyERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFree_AnyStuckETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFree_WalletRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketPair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "removeFromBlackListwallets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526014600755601460085560006009556000600a556014600b556014600c556014600d556000600e556000600f5560006010556009600a62000046919062000353565b620000569063fac033206200036b565b601155620000676009600a62000353565b620000779063fac033206200036b565b601255620000886009600a62000353565b620000989063fa56ea006200036b565b601355620000a96009600a62000353565b620000b99063fac033206200036b565b60145560036017556018805462ffffff191662010000179055348015620000df57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001416009600a62000353565b62000152906461f313f8806200036b565b3360009081526001602081905260408220929092556003906200017d6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155601654909116835291208054909216179055620001dc3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002166009600a62000353565b62000227906461f313f8806200036b565b60405190815260200160405180910390a362000385565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002955781600019048211156200027957620002796200023e565b808516156200028757918102915b93841c939080029062000259565b509250929050565b600082620002ae575060016200034d565b81620002bd575060006200034d565b8160018114620002d65760028114620002e15762000301565b60019150506200034d565b60ff841115620002f557620002f56200023e565b50506001821b6200034d565b5060208310610133831016604e8410600b841016171562000326575081810a6200034d565b62000332838362000254565b80600019048211156200034957620003496200023e565b0290505b92915050565b60006200036460ff8416836200029d565b9392505050565b80820281158282048414176200034d576200034d6200023e565b61203880620003956000396000f3fe6080604052600436106101bb5760003560e01c8063715018a6116100ec578063b5ef226a1161008a578063f2fde38b11610064578063f2fde38b14610513578063f4ef1f4214610533578063f5b3c3bf14610553578063ff8975701461058357600080fd5b8063b5ef226a14610497578063bf474bed146104b7578063dd62ed3e146104cd57600080fd5b80638da5cb5b116100c65780638da5cb5b146104165780638f9a55c01461043457806395d89b411461044a578063a9059cbb1461047757600080fd5b8063715018a6146103d65780637d1db4a5146103eb5780638a8c523c1461040157600080fd5b806323b872dd11610159578063313ce56711610133578063313ce5671461032c57806349bd5a5e146103485780634a49ac4c1461038057806370a08231146103a057600080fd5b806323b872dd146102e257806324988e1b1461030257806330ef74251461031757600080fd5b80630e12062d116101955780630e12062d146102635780630faee56f1461028757806318160ddd1461029d5780631cdd3be3146102b257600080fd5b806306fdde03146101c7578063095ea7b3146102115780630b91e5651461024157600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b5060408051808201909152600f81526e115b1bdb9cc814195d0814db985a5b608a1b60208201525b6040516102089190611b92565b60405180910390f35b34801561021d57600080fd5b5061023161022c366004611bf6565b6105a3565b6040519015158152602001610208565b34801561024d57600080fd5b5061026161025c366004611bf6565b6105ba565b005b34801561026f57600080fd5b5061027960175481565b604051908152602001610208565b34801561029357600080fd5b5061027960145481565b3480156102a957600080fd5b50610279610669565b3480156102be57600080fd5b506102316102cd366004611c22565b60196020526000908152604090205460ff1681565b3480156102ee57600080fd5b506102316102fd366004611c3f565b61068b565b34801561030e57600080fd5b506102616106f4565b34801561032357600080fd5b5061026161075a565b34801561033857600080fd5b5060405160098152602001610208565b34801561035457600080fd5b50601654610368906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b34801561038c57600080fd5b5061026161039b366004611c22565b61080f565b3480156103ac57600080fd5b506102796103bb366004611c22565b6001600160a01b031660009081526001602052604090205490565b3480156103e257600080fd5b5061026161085a565b3480156103f757600080fd5b5061027960115481565b34801561040d57600080fd5b506102616108ce565b34801561042257600080fd5b506000546001600160a01b0316610368565b34801561044057600080fd5b5061027960125481565b34801561045657600080fd5b506040805180820190915260048152634741525960e01b60208201526101fb565b34801561048357600080fd5b50610231610492366004611bf6565b610cd2565b3480156104a357600080fd5b506102616104b2366004611c80565b610cdf565b3480156104c357600080fd5b5061027960135481565b3480156104d957600080fd5b506102796104e8366004611cf5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561051f57600080fd5b5061026161052e366004611c22565b610d71565b34801561053f57600080fd5b506018546102319062010000900460ff1681565b34801561055f57600080fd5b5061023161056e366004611c22565b60046020526000908152604090205460ff1681565b34801561058f57600080fd5b5061026161059e366004611c80565b610e5b565b60006105b0338484610eed565b5060015b92915050565b6000546001600160a01b031633146105ed5760405162461bcd60e51b81526004016105e490611d2e565b60405180910390fd5b60055460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190611d63565b505050565b60006106776009600a611e7f565b610686906461f313f880611e8e565b905090565b6000610698848484611011565b6106ea84336106e585604051806060016040528060288152602001611fdb602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906117fa565b610eed565b5060019392505050565b6000546001600160a01b0316331461071e5760405162461bcd60e51b81526004016105e490611d2e565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610757573d6000803e3d6000fd5b50565b6000546001600160a01b031633146107845760405162461bcd60e51b81526004016105e490611d2e565b6107906009600a611e7f565b61079f906461f313f880611e8e565b6011556107ae6009600a611e7f565b6107bd906461f313f880611e8e565b6012557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107ed6009600a611e7f565b6107fc906461f313f880611e8e565b60405190815260200160405180910390a1565b6000546001600160a01b031633146108395760405162461bcd60e51b81526004016105e490611d2e565b6001600160a01b03166000908152601960205260409020805460ff19169055565b6000546001600160a01b031633146108845760405162461bcd60e51b81526004016105e490611d2e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108f85760405162461bcd60e51b81526004016105e490611d2e565b601654600160a01b900460ff16156109525760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105e4565b601580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561099c90309061098d6009600a611e7f565b6106e5906461f313f880611e8e565b601560009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a139190611ea5565b6001600160a01b031663c9c6539630601560009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190611ea5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190611ea5565b601680546001600160a01b039283166001600160a01b0319909116811782556000908152600460209081526040808320805460ff199081166001908117909255945486168452600390925290912080549092161790556015541663f305d7194730610b8a816001600160a01b031660009081526001602052604090205490565b600080610b9f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c07573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c2c9190611ec2565b505060165460155460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca99190611d63565b506018805461ff0019166101001790556016805460ff60a01b1916600160a01b17905543600655565b60006105b0338484611011565b6000546001600160a01b03163314610d095760405162461bcd60e51b81526004016105e490611d2e565b60005b8181101561066457600060196000858585818110610d2c57610d2c611ef0565b9050602002016020810190610d419190611c22565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610d0c565b6000546001600160a01b03163314610d9b5760405162461bcd60e51b81526004016105e490611d2e565b6001600160a01b038116610e005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e4565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e855760405162461bcd60e51b81526004016105e490611d2e565b60005b8181101561066457600160196000858585818110610ea857610ea8611ef0565b9050602002016020810190610ebd9190611c22565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610e88565b6001600160a01b038316610f4f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e4565b6001600160a01b038216610fb05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e4565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831660009081526019602052604090205460ff1615801561105357506001600160a01b03821660009081526019602052604090205460ff16155b61109f5760405162461bcd60e51b815260206004820152601e60248201527f546f2f66726f6d206164647265737320697320626c61636b6c6973746564000060448201526064016105e4565b6001600160a01b0383166111035760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e4565b6001600160a01b0382166111655760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e4565b600081116111c75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105e4565b600080546001600160a01b038581169116148015906111f457506000546001600160a01b03848116911614155b156116b757611225606461121f600b54600e541161121457600754611218565b6009545b8590611834565b906118bd565b6001600160a01b03851660009081526004602052604090205490915060ff16801561125e57506015546001600160a01b03848116911614155b801561128357506001600160a01b03831660009081526003602052604090205460ff16155b1561138d576011548211156112da5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016105e4565b601254826112fd856001600160a01b031660009081526001602052604090205490565b6113079190611f06565b11156113555760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105e4565b4360065460036113659190611f06565b111561137757823b1561137757600080fd5b600e805490600061138783611f19565b91905055505b6001600160a01b03831660009081526004602052604090205460ff161580156113cf57506001600160a01b03831660009081526003602052604090205460ff16155b1561144f57601254826113f7856001600160a01b031660009081526001602052604090205490565b6114019190611f06565b111561144f5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105e4565b6001600160a01b03831660009081526004602052604090205460ff16801561148057506001600160a01b0384163014155b156114ad576114aa606461121f600c54600e54116114a057600854611218565b600a548590611834565b90505b6001600160a01b03841660009081526004602052604090205460ff161580156114ef57506001600160a01b03831660009081526004602052604090205460ff16155b801561150457506001600160a01b0384163014155b1561150d575060005b3060009081526001602052604090205460185462010000900460ff168015611538575060185460ff16155b801561155c57506001600160a01b03841660009081526004602052604090205460ff165b801561156f5750601854610100900460ff165b801561157c575060135481115b801561158b5750600d54600e54115b15611631576010544311156115a0576000600f555b601754600f54106115e55760405162461bcd60e51b815260206004820152600f60248201526e10d04818985b185b98d9481cd95b1b608a1b60448201526064016105e4565b6116026115fd846115f8846014546118ff565b6118ff565b611914565b4780156116125761161247611a85565b600f805490600061162283611f19565b909155505043601055506116b5565b60185460ff1615801561165c57506001600160a01b03841660009081526004602052604090205460ff165b801561166f5750601854610100900460ff165b801561167c575060135481115b801561168b5750600d54600e54115b156116b5576116a36115fd846115f8846014546118ff565b4780156116b3576116b347611a85565b505b505b801561173157306000908152600160205260409020546116d79082611ac3565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906117289085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546117549083611b22565b6001600160a01b03851660009081526001602052604090205561179961177a8383611b22565b6001600160a01b03851660009081526001602052604090205490611ac3565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6117e38585611b22565b60405190815260200160405180910390a350505050565b6000818484111561181e5760405162461bcd60e51b81526004016105e49190611b92565b50600061182b8486611f32565b95945050505050565b600082600003611846575060006105b4565b60006118528385611e8e565b90508261185f8583611f45565b146118b65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016105e4565b9392505050565b60006118b683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b64565b600081831161190e57826118b6565b50919050565b6018805460ff19166001179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061195657611956611ef0565b6001600160a01b03928316602091820292909201810191909152601554604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156119af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d39190611ea5565b816001815181106119e6576119e6611ef0565b6001600160a01b039283166020918202929092010152601554611a0c9130911684610eed565b60155460405163791ac94760e01b81526001600160a01b039091169063791ac94790611a45908590600090869030904290600401611f67565b600060405180830381600087803b158015611a5f57600080fd5b505af1158015611a73573d6000803e3d6000fd5b50506018805460ff1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611abf573d6000803e3d6000fd5b5050565b600080611ad08385611f06565b9050838110156118b65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105e4565b60006118b683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117fa565b60008183611b855760405162461bcd60e51b81526004016105e49190611b92565b50600061182b8486611f45565b60006020808352835180602085015260005b81811015611bc057858101830151858201604001528201611ba4565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461075757600080fd5b60008060408385031215611c0957600080fd5b8235611c1481611be1565b946020939093013593505050565b600060208284031215611c3457600080fd5b81356118b681611be1565b600080600060608486031215611c5457600080fd5b8335611c5f81611be1565b92506020840135611c6f81611be1565b929592945050506040919091013590565b60008060208385031215611c9357600080fd5b823567ffffffffffffffff80821115611cab57600080fd5b818501915085601f830112611cbf57600080fd5b813581811115611cce57600080fd5b8660208260051b8501011115611ce357600080fd5b60209290920196919550909350505050565b60008060408385031215611d0857600080fd5b8235611d1381611be1565b91506020830135611d2381611be1565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611d7557600080fd5b815180151581146118b657600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611dd6578160001904821115611dbc57611dbc611d85565b80851615611dc957918102915b93841c9390800290611da0565b509250929050565b600082611ded575060016105b4565b81611dfa575060006105b4565b8160018114611e105760028114611e1a57611e36565b60019150506105b4565b60ff841115611e2b57611e2b611d85565b50506001821b6105b4565b5060208310610133831016604e8410600b8410161715611e59575081810a6105b4565b611e638383611d9b565b8060001904821115611e7757611e77611d85565b029392505050565b60006118b660ff841683611dde565b80820281158282048414176105b4576105b4611d85565b600060208284031215611eb757600080fd5b81516118b681611be1565b600080600060608486031215611ed757600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b808201808211156105b4576105b4611d85565b600060018201611f2b57611f2b611d85565b5060010190565b818103818111156105b4576105b4611d85565b600082611f6257634e487b7160e01b600052601260045260246000fd5b500490565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611fb95784516001600160a01b031683529383019391830191600101611f94565b50506001600160a01b0396909616606085015250505060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204adbc6d6e122d164c01fb59fc8466131522524994e324e7f8334d7c32349640564736f6c63430008170033";

type GARYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GARYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GARY__factory extends ContractFactory {
  constructor(...args: GARYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GARY> {
    return super.deploy(overrides || {}) as Promise<GARY>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GARY {
    return super.attach(address) as GARY;
  }
  override connect(signer: Signer): GARY__factory {
    return super.connect(signer) as GARY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GARYInterface {
    return new utils.Interface(_abi) as GARYInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GARY {
    return new Contract(address, _abi, signerOrProvider) as GARY;
  }
}
