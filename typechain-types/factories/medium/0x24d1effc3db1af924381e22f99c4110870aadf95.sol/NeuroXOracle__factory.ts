/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NeuroXOracle,
  NeuroXOracleInterface,
} from "../../../medium/0x24d1effc3db1af924381e22f99c4110870aadf95.sol/NeuroXOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "autoBurnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAutoBurnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDailyMintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFounderAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMiningReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNodeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getReferralReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getStakingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTransferFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getWalletScore",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "isWhale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "logTransfer",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "miningRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nodeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referralRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setAutoBurnAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMiningReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setNodeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setReferralReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setTransferFeeBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "score",
        type: "uint8",
      },
    ],
    name: "setWalletScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFeeBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "walletScores",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006006556064600755348015601957600080fd5b506021336025565b6075565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a16806100846000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063770ce3d8116100f9578063b83dd5f011610097578063de66fe7511610071578063de66fe751461046f578063eef7541914610482578063f2fde38b14610495578063f51ac936146104a857600080fd5b8063b83dd5f014610415578063c176a8e31461043e578063d788e14d1461044f57600080fd5b80638da5cb5b116100d35780638da5cb5b146103b65780639db93702146103d1578063a176f034146103e2578063a73296b2146103f557600080fd5b8063770ce3d81461035a57806378f4d4131461037a578063829d0d1e146103a357600080fd5b8063499d7f961161016657806353aaa63b1161014057806353aaa63b146102fb57806358dd285d1461031b5780636c8c93011461032e5780636f07d0b81461035157600080fd5b8063499d7f96146102c05780634e73dbac146102e05780634ec5e6cc146102f357600080fd5b80633aae4015116101a25780633aae401514610246578063406644961461025b578063414eff131461026e57806346162e1d1461029757600080fd5b80630d5e34a4146101c95780631aad32b8146101f157806334a3eca61461022f575b600080fd5b6101dc6101d736600461086a565b6104bb565b60405190151581526020015b60405180910390f35b61021d6101ff366004610894565b6001600160a01b031660009081526005602052604090205460ff1690565b60405160ff90911681526020016101e8565b61023860065481565b6040519081526020016101e8565b6102596102543660046108b6565b6104c4565b005b6102386102693660046108cf565b61050b565b61023861027c366004610894565b6001600160a01b031660009081526001602052604090205490565b6102386102a5366004610894565b6001600160a01b031660009081526002602052604090205490565b6102386102ce366004610894565b60046020526000908152604090205481565b6102596102ee36600461086a565b61055c565b600654610238565b610238610309366004610894565b60016020526000908152604090205481565b61025961032936600461086a565b6105b1565b61021d61033c366004610894565b60056020526000908152604090205460ff1681565b61023860075481565b610238610368366004610894565b60036020526000908152604090205481565b610238610388366004610894565b6001600160a01b031660009081526004602052604090205490565b6102596103b136600461086a565b610606565b6000546040516001600160a01b0390911681526020016101e8565b6aa56fa5b99019a5c8000000610238565b6102596103f03660046108b6565b61065b565b610238610403366004610894565b60026020526000908152604090205481565b610238610423366004610894565b6001600160a01b031660009081526003602052604090205490565b6a18d0bf423c03d8de000000610238565b6101dc61045d3660046108cf565b69d3c21bcecceda10000001092915050565b61025961047d36600461090c565b610699565b61025961049036600461086a565b6106ff565b6102596104a3366004610894565b610754565b6102596104b63660046108cf565b505050565b60015b92915050565b336104d76000546001600160a01b031690565b6001600160a01b0316146105065760405162461bcd60e51b81526004016104fd90610949565b60405180910390fd5b600655565b6001600160a01b03831660009081526005602052604081205460075460ff9091169082906127109061053e908490610994565b61054890866109a7565b61055291906109be565b9695505050505050565b3361056f6000546001600160a01b031690565b6001600160a01b0316146105955760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b03909116600090815260016020526040902055565b336105c46000546001600160a01b031690565b6001600160a01b0316146105ea5760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b03909116600090815260036020526040902055565b336106196000546001600160a01b031690565b6001600160a01b03161461063f5760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b03909116600090815260026020526040902055565b3361066e6000546001600160a01b031690565b6001600160a01b0316146106945760405162461bcd60e51b81526004016104fd90610949565b600755565b336106ac6000546001600160a01b031690565b6001600160a01b0316146106d25760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b03919091166000908152600560205260409020805460ff191660ff909216919091179055565b336107126000546001600160a01b031690565b6001600160a01b0316146107385760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b03909116600090815260046020526040902055565b336107676000546001600160a01b031690565b6001600160a01b03161461078d5760405162461bcd60e51b81526004016104fd90610949565b6001600160a01b0381166107f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fd565b6107fb816107fe565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461086557600080fd5b919050565b6000806040838503121561087d57600080fd5b6108868361084e565b946020939093013593505050565b6000602082840312156108a657600080fd5b6108af8261084e565b9392505050565b6000602082840312156108c857600080fd5b5035919050565b6000806000606084860312156108e457600080fd5b6108ed8461084e565b92506108fb6020850161084e565b929592945050506040919091013590565b6000806040838503121561091f57600080fd5b6109288361084e565b9150602083013560ff8116811461093e57600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156104be576104be61097e565b80820281158282048414176104be576104be61097e565b6000826109db57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a37dc0691e2f74e96ea690af5b0442b85189d0327898c624048ab8dd47a1dfe164736f6c634300081e0033";

type NeuroXOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NeuroXOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NeuroXOracle__factory extends ContractFactory {
  constructor(...args: NeuroXOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NeuroXOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NeuroXOracle__factory {
    return super.connect(runner) as NeuroXOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NeuroXOracleInterface {
    return new Interface(_abi) as NeuroXOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NeuroXOracle {
    return new Contract(address, _abi, runner) as unknown as NeuroXOracle;
  }
}
