/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xf0965200c228bf580881bcf4c3e5eacb4dc8ecdf.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_beast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118e483398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118e483398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611574806103706000396000f3fe6080604052600436106101025760003560e01c8063751039fc11610095578063a9059cbb11610064578063a9059cbb146102c6578063d02c9383146102e6578063dd62ed3e146102fb578063e59e55df14610341578063f5f674311461035657600080fd5b8063751039fc146102465780638da5cb5b1461025b578063959cbb9d1461028357806395d89b411461029857600080fd5b806323b872dd116100d157806323b872dd146101bd578063313ce567146101dd57806370a08231146101f9578063715018a61461022f57600080fd5b806306fdde031461010e578063095ea7b3146101545780630faee56f1461018457806318160ddd146101a857600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600b81526a15d05391164815d3d4931160aa1b60208201525b60405161014b9190611164565b60405180910390f35b34801561016057600080fd5b5061017461016f3660046111c7565b610376565b604051901515815260200161014b565b34801561019057600080fd5b5061019a60095481565b60405190815260200161014b565b3480156101b457600080fd5b5061019a61038d565b3480156101c957600080fd5b506101746101d83660046111f3565b6103ae565b3480156101e957600080fd5b506040516009815260200161014b565b34801561020557600080fd5b5061019a610214366004611234565b6001600160a01b031660009081526001602052604090205490565b34801561023b57600080fd5b5061024461046c565b005b34801561025257600080fd5b506102446104e9565b34801561026757600080fd5b506000546040516001600160a01b03909116815260200161014b565b34801561028f57600080fd5b50610244610515565b3480156102a457600080fd5b5060408051808201909152600581526457414e445960d81b602082015261013e565b3480156102d257600080fd5b506101746102e13660046111c7565b61057b565b3480156102f257600080fd5b50610244610588565b34801561030757600080fd5b5061019a610316366004611251565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034d57600080fd5b5061019a600a81565b34801561036257600080fd5b50610244610371366004611234565b610940565b600061038333848461097e565b5060015b92915050565b600061039b6009600a611387565b6103a990633b9aca00611396565b905090565b60006103bb848484610aa2565b6004546001600160a01b0316331480159061040b5750600b546001600160a01b03858116911614806103f857506001600160a01b03831661dead14155b8061040b57506001600160a01b03841630145b1561046257610462843361045d85604051806060016040528060288152602001611517602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eca565b61097e565b5060019392505050565b6000546001600160a01b0316331461049f5760405162461bcd60e51b8152600401610496906113ad565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105135760405162461bcd60e51b8152600401610496906113ad565b565b6000546001600160a01b0316331461053f5760405162461bcd60e51b8152600401610496906113ad565b6000471161054c57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610578573d6000803e3d6000fd5b50565b6000610383338484610aa2565b6000546001600160a01b031633146105b25760405162461bcd60e51b8152600401610496906113ad565b600b54600160a01b900460ff161561060c5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610496565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556106559130919061064790600990611387565b61045d90633b9aca00611396565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc91906113e2565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075291906113e2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c391906113e2565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d719473061080b816001600160a01b031660009081526001602052604090205490565b6000806108206000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610888573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108ad91906113ff565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610578919061142d565b3360009081526003602052604090205460ff1661095c57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109e05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610496565b6001600160a01b038216610a415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610496565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b065760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610496565b6001600160a01b038216610b685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610496565b60008111610bca5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610496565b60006001600160a01b0384163014801590610bee57506001600160a01b0383163014155b15610d6c57600b546001600160a01b038581169116148015610c1e5750600a546001600160a01b03848116911614155b8015610c4357506001600160a01b03831660009081526003602052604090205460ff16155b8015610c5d57506004546001600160a01b03848116911614155b15610c785760088054906000610c728361144f565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610caf5750600b546001600160a01b038581169116145b8015610cc45750600b54600160b01b900460ff165b8015610cde57506004546001600160a01b03868116911614155b15610d6a57843b15610d295760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b6044820152606401610496565b8015610d5e5760006009548211610d405781610d44565b6009545b9050610d5c818511610d565784610f04565b81610f04565b505b47610d684761107e565b505b505b6001600160a01b038416600090815260016020526040902054610d8f90836110bc565b6001600160a01b038516600090815260016020526040902055610dd4610db583836110bc565b6001600160a01b03851660009081526001602052604090205490611105565b6001600160a01b0384166000908152600160205260409020558015610e675730600090815260016020526040902054610e0d9082611105565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e5e9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ec4576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eb285856110bc565b60405190815260200160405180910390a35b50505050565b60008184841115610eee5760405162461bcd60e51b81526004016104969190611164565b506000610efb8486611468565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f4c57610f4c61147b565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc991906113e2565b81600181518110610fdc57610fdc61147b565b6001600160a01b039283166020918202929092010152600a54611002913091168461097e565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061103b908590600090869030904290600401611491565b600060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110b8573d6000803e3d6000fd5b5050565b60006110fe83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eca565b9392505050565b6000806111128385611503565b9050838110156110fe5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610496565b602081526000825180602084015260005b818110156111925760208186018101516040868401015201611175565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461057857600080fd5b600080604083850312156111da57600080fd5b82356111e5816111b2565b946020939093013593505050565b60008060006060848603121561120857600080fd5b8335611213816111b2565b92506020840135611223816111b2565b929592945050506040919091013590565b60006020828403121561124657600080fd5b81356110fe816111b2565b6000806040838503121561126457600080fd5b823561126f816111b2565b9150602083013561127f816111b2565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112db578085048111156112bf576112bf61128a565b60018416156112cd57908102905b60019390931c9280026112a4565b935093915050565b6000826112f257506001610387565b816112ff57506000610387565b8160018114611315576002811461131f5761133b565b6001915050610387565b60ff8411156113305761133061128a565b50506001821b610387565b5060208310610133831016604e8410600b841016171561135e575081810a610387565b61136b60001984846112a0565b806000190482111561137f5761137f61128a565b029392505050565b60006110fe60ff8416836112e3565b80820281158282048414176103875761038761128a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113f457600080fd5b81516110fe816111b2565b60008060006060848603121561141457600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561143f57600080fd5b815180151581146110fe57600080fd5b6000600182016114615761146161128a565b5060010190565b818103818111156103875761038761128a565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114e35783516001600160a01b03168352602093840193909201916001016114bc565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103875761038761128a56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220cd14852a89ecb6f16dd06833b513579739c2dd18fb2a32b1284debe870503cc864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
