/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0xae100df15c251651842cf5190d8a52207615eea3.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_assist_bnTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_oijboijoiTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_vnbbvlkTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6001819055600281815560146003556000600481905560058290556006919091556007819055815461ffff60a81b19168255600b819055600c5560649061004f90600990610341565b61005d90633b9aca00610357565b610067919061036e565b60115567d02ab486cedc0000601255600a601355600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601080546001600160a01b0319163317905560646100dc6009600a610341565b6100ea90633b9aca00610357565b6100f5906002610357565b6100ff919061036e565b336000908152600d6020526040902055606461011d6009600a610341565b61012b90633b9aca00610357565b610136906062610357565b610140919061036e565b306000908152600d6020908152604080832093909355600f90528181208054600160ff1991821681179092556010546001600160a01b0316835292909120805490921617905561018d3390565b6001600160a01b03166000600080516020611db583398151915260646101b56009600a610341565b6101c390633b9aca00610357565b6101ce906002610357565b6101d8919061036e565b60405190815260200160405180910390a3306000600080516020611db583398151915260646102096009600a610341565b61021790633b9aca00610357565b610222906062610357565b61022c919061036e565b60405190815260200160405180910390a3610390565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102935780850481111561027757610277610242565b600184161561028557908102905b60019390931c92800261025c565b935093915050565b6000826102aa5750600161033b565b816102b75750600061033b565b81600181146102cd57600281146102d7576102f3565b600191505061033b565b60ff8411156102e8576102e8610242565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610316575081810a61033b565b6103236000198484610258565b806000190482111561033757610337610242565b0290505b92915050565b600061035060ff84168361029b565b9392505050565b808202811582820484141761033b5761033b610242565b60008261038b57634e487b7160e01b600052601260045260246000fd5b500490565b611a168061039f6000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063c888c7c611610064578063c888c7c6146102d4578063d02c9383146102ea578063d8fbd06f146102ff578063dd62ed3e14610315578063f5f674311461035b57600080fd5b80638da5cb5b1461024b57806395d89b4114610273578063a9059cbb1461029f578063bd6c5bae146102bf57600080fd5b8063313ce567116100d1578063313ce567146101cd57806370a08231146101e9578063715018a61461021f578063751039fc1461023657600080fd5b806306fdde031461010e578063095ea7b31461015a57806318160ddd1461018a57806323b872dd146101ad57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152601181527047524541542054494d4520544f2042555960781b60208201525b60405161015191906114d1565b60405180910390f35b34801561016657600080fd5b5061017a610175366004611534565b61037b565b6040519015158152602001610151565b34801561019657600080fd5b5061019f610392565b604051908152602001610151565b3480156101b957600080fd5b5061017a6101c8366004611560565b6103b3565b3480156101d957600080fd5b5060405160098152602001610151565b3480156101f557600080fd5b5061019f6102043660046115a1565b6001600160a01b03166000908152600d602052604090205490565b34801561022b57600080fd5b5061023461042b565b005b34801561024257600080fd5b506102346104a8565b34801561025757600080fd5b506000546040516001600160a01b039091168152602001610151565b34801561027f57600080fd5b5060408051808201909152600381526211129560ea1b6020820152610144565b3480156102ab57600080fd5b5061017a6102ba366004611534565b6104d4565b3480156102cb57600080fd5b506102346104e1565b3480156102e057600080fd5b5061019f60125481565b3480156102f657600080fd5b50610234610547565b34801561030b57600080fd5b5061019f60115481565b34801561032157600080fd5b5061019f6103303660046115be565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205490565b34801561036757600080fd5b506102346103763660046115a1565b6108ff565b6000610388338484610955565b5060015b92915050565b60006103a06009600a6116f4565b6103ae90633b9aca00611703565b905090565b60006103c0848484610a79565b6103ca8484610f56565b1561042157610421843361041c856040518060600160405280602881526020016119b9602891396001600160a01b038a166000908152600e602090815260408083203384529091529020549190610fbb565b610955565b5060019392505050565b6000546001600160a01b0316331461045e5760405162461bcd60e51b81526004016104559061171a565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104d25760405162461bcd60e51b81526004016104559061171a565b565b6000610388338484610a79565b6000546001600160a01b0316331461050b5760405162461bcd60e51b81526004016104559061171a565b6000471161051857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610544573d6000803e3d6000fd5b50565b6000546001600160a01b031633146105715760405162461bcd60e51b81526004016104559061171a565b600a54600160a01b900460ff16156105cb5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610455565b600880546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106149030906106066009600a6116f4565b61041c90633b9aca00611703565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b919061174f565b6001600160a01b031663c9c6539630600860009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061174f565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561075e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610782919061174f565b600a80546001600160a01b039283166001600160a01b03199091161790556008541663f305d71947306107ca816001600160a01b03166000908152600d602052604090205490565b6000806107df6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610847573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061086c919061176c565b5050600a805462ff00ff60a01b1981166201000160a01b1790915560085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061179a565b336000908152600f602052604090205460ff1661091b57600080fd5b601080546001600160a01b039092166001600160a01b0319909216821790556000908152600f60205260409020805460ff19166001179055565b6001600160a01b0383166109b75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610455565b6001600160a01b038216610a185760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610455565b6001600160a01b038381166000818152600e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610add5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610455565b6001600160a01b038216610b3f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610455565b60008111610ba15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610455565b600080546001600160a01b03858116911614801590610bce57506000546001600160a01b03848116911614155b8015610be357506001600160a01b0384163014155b8015610bf857506001600160a01b0383163014155b15610df857600a54600160a81b900460ff16610c3d57610c3a6064610c3460055460075411610c2957600354610c2d565b6004545b8590610ff5565b9061107e565b90505b600a546001600160a01b038581169116148015610c6857506008546001600160a01b03848116911614155b8015610c8d57506001600160a01b0383166000908152600f602052604090205460ff16155b8015610ca757506010546001600160a01b03848116911614155b15610cc25760078054906000610cbc836117bc565b91905055505b306000908152600d602052604081205490546001600160a01b03868116911614801590610cf95750600a54600160a81b900460ff16155b8015610d125750600a546001600160a01b038581169116145b8015610d2c57506010546001600160a01b03868116911614155b8015610d415750600a54600160b01b900460ff165b8015610d505750600654600754115b15610df657600c54431115610d65576000600b555b610d6e836110c0565b600b54610d7b91906117d5565b600b8190556012541015610dc25760405162461bcd60e51b815260206004820152600e60248201526d13585e081cddd85c081b1a5b5a5d60921b6044820152606401610455565b601154811115610de657610de68360115411610de057601154611238565b83611238565b47610df0476113c4565b5043600c555b505b6001600160a01b0384166000908152600d6020526040902054610e1b9083611402565b6001600160a01b0385166000908152600d6020526040902055610e60610e418383611402565b6001600160a01b0385166000908152600d602052604090205490611444565b6001600160a01b0384166000908152600d60205260409020558015610ef357306000908152600d6020526040902054610e999082611444565b306000818152600d6020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eea9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f50576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f3e8585611402565b60405190815260200160405180910390a35b50505050565b336000908152600f602052604081205460ff1615610f885750336000908152600f602052604090205460ff161561038c565b600a546001600160a01b0384811691161480610faf57506001600160a01b03821661dead14155b6103885750600061038c565b60008184841115610fdf5760405162461bcd60e51b815260040161045591906114d1565b506000610fec84866117e8565b95945050505050565b6000826000036110075750600061038c565b60006110138385611703565b90508261102085836117fb565b146110775760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610455565b9392505050565b600061107783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114a3565b6040805160028082526060820183526000928392919060208301908036833701905050905030816000815181106110f9576110f9611833565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611152573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611176919061174f565b8160018151811061118957611189611833565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b8152600092919091169063d06ca61f906111cd908790869060040161188e565b600060405180830381865afa1580156111ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261121291908101906118af565b90508060018151811061122757611227611833565b602002602001015192505050919050565b600a805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061128057611280611833565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fd919061174f565b8160018151811061131057611310611833565b6001600160a01b0392831660209182029290920101526008546113369130911684610955565b600854600980546001600160a01b0319166001600160a01b03909216918217905560405163791ac94760e01b815263791ac9479061138190859060009086903090429060040161197c565b600060405180830381600087803b15801561139b57600080fd5b505af11580156113af573d6000803e3d6000fd5b5050600a805460ff60a81b1916905550505050565b6010546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113fe573d6000803e3d6000fd5b5050565b600061107783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fbb565b60008061145183856117d5565b9050838110156110775760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610455565b600081836114c45760405162461bcd60e51b815260040161045591906114d1565b506000610fec84866117fb565b602081526000825180602084015260005b818110156114ff57602081860181015160408684010152016114e2565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461054457600080fd5b6000806040838503121561154757600080fd5b82356115528161151f565b946020939093013593505050565b60008060006060848603121561157557600080fd5b83356115808161151f565b925060208401356115908161151f565b929592945050506040919091013590565b6000602082840312156115b357600080fd5b81356110778161151f565b600080604083850312156115d157600080fd5b82356115dc8161151f565b915060208301356115ec8161151f565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156116485780850481111561162c5761162c6115f7565b600184161561163a57908102905b60019390931c928002611611565b935093915050565b60008261165f5750600161038c565b8161166c5750600061038c565b8160018114611682576002811461168c576116a8565b600191505061038c565b60ff84111561169d5761169d6115f7565b50506001821b61038c565b5060208310610133831016604e8410600b84101617156116cb575081810a61038c565b6116d8600019848461160d565b80600019048211156116ec576116ec6115f7565b029392505050565b600061107760ff841683611650565b808202811582820484141761038c5761038c6115f7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561176157600080fd5b81516110778161151f565b60008060006060848603121561178157600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117ac57600080fd5b8151801515811461107757600080fd5b6000600182016117ce576117ce6115f7565b5060010190565b8082018082111561038c5761038c6115f7565b8181038181111561038c5761038c6115f7565b60008261181857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118845781516001600160a01b031686526020958601959091019060010161185d565b5093949350505050565b8281526040602082015260006118a76040830184611849565b949350505050565b6000602082840312156118c157600080fd5b815167ffffffffffffffff8111156118d857600080fd5b8201601f810184136118e957600080fd5b805167ffffffffffffffff8111156119035761190361181d565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156119305761193061181d565b60405291825260208184018101929081018784111561194e57600080fd5b6020850194505b8385101561197157845180825260209586019590935001611955565b509695505050505050565b85815284602082015260a06040820152600061199b60a0830186611849565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122028cc149b9b92cd87e7978b67ec638b988ffef459f8655b0a75b982c212809ec064736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
