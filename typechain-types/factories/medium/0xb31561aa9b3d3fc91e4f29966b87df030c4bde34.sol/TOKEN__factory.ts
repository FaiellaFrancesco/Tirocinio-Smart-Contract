/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0xb31561aa9b3d3fc91e4f29966b87df030c4bde34.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610317565b61003690633b9aca0061032d565b6100409190610344565b6009556000600a819055600c805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100ee6009600a610317565b6100fc90633b9aca0061032d565b61010790600261032d565b6101119190610344565b33600090815260016020526040902055606461012f6009600a610317565b61013d90633b9aca0061032d565b61014890606261032d565b6101529190610344565b30600090815260016020526040902055336001600160a01b031660006000805160206118f0833981519152606461018b6009600a610317565b61019990633b9aca0061032d565b6101a490600261032d565b6101ae9190610344565b60405190815260200160405180910390a33060006000805160206118f083398151915260646101df6009600a610317565b6101ed90633b9aca0061032d565b6101f890606261032d565b6102029190610344565b60405190815260200160405180910390a3610366565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102695780850481111561024d5761024d610218565b600184161561025b57908102905b60019390931c928002610232565b935093915050565b60008261028057506001610311565b8161028d57506000610311565b81600181146102a357600281146102ad576102c9565b6001915050610311565b60ff8411156102be576102be610218565b50506001821b610311565b5060208310610133831016604e8410600b84101617156102ec575081810a610311565b6102f9600019848461022e565b806000190482111561030d5761030d610218565b0290505b92915050565b600061032660ff841683610271565b9392505050565b808202811582820484141761031157610311610218565b60008261036157634e487b7160e01b600052601260045260246000fd5b500490565b61157b806103756000396000f3fe6080604052600436106101025760003560e01c8063715018a611610095578063959cbb9d11610064578063959cbb9d146102c157806395d89b41146102d6578063a9059cbb14610302578063dd62ed3e14610322578063fb201b1d1461036857600080fd5b8063715018a61461024d578063751039fc14610264578063798e5036146102795780638da5cb5b1461029957600080fd5b806323b872dd116100d157806323b872dd146101c5578063313ce567146101e55780636482c89a1461020157806370a082311461021757600080fd5b806306fdde031461010e578063095ea7b31461015c5780630faee56f1461018c57806318160ddd146101b057600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820190915260138152724d61676963204d6f6e6579204d616368696e6560681b60208201525b604051610153919061116b565b60405180910390f35b34801561016857600080fd5b5061017c6101773660046111ce565b61037d565b6040519015158152602001610153565b34801561019857600080fd5b506101a260095481565b604051908152602001610153565b3480156101bc57600080fd5b506101a2610394565b3480156101d157600080fd5b5061017c6101e03660046111fa565b6103b5565b3480156101f157600080fd5b5060405160098152602001610153565b34801561020d57600080fd5b506101a2600a5481565b34801561022357600080fd5b506101a261023236600461123b565b6001600160a01b031660009081526001602052604090205490565b34801561025957600080fd5b50610262610473565b005b34801561027057600080fd5b506102626104f0565b34801561028557600080fd5b5061026261029436600461123b565b61051c565b3480156102a557600080fd5b506000546040516001600160a01b039091168152602001610153565b3480156102cd57600080fd5b5061026261055a565b3480156102e257600080fd5b506040805180820190915260038152624d4d4d60e81b6020820152610146565b34801561030e57600080fd5b5061017c61031d3660046111ce565b6105c0565b34801561032e57600080fd5b506101a261033d366004611258565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561037457600080fd5b506102626105cd565b600061038a338484610985565b5060015b92915050565b60006103a26009600a61138e565b6103b090633b9aca0061139d565b905090565b60006103c2848484610aa9565b6004546001600160a01b031633148015906104125750600c546001600160a01b03858116911614806103ff57506001600160a01b03831661dead14155b8061041257506001600160a01b03841630145b156104695761046984336104648560405180606001604052806028815260200161151e602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ed1565b610985565b5060019392505050565b6000546001600160a01b031633146104a65760405162461bcd60e51b815260040161049d906113b4565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051a5760405162461bcd60e51b815260040161049d906113b4565b565b3360009081526003602052604090205460ff1661053857600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105845760405162461bcd60e51b815260040161049d906113b4565b6000471161059157600080fd5b60405133904780156108fc02916000818181858888f193505050501580156105bd573d6000803e3d6000fd5b50565b600061038a338484610aa9565b6000546001600160a01b031633146105f75760405162461bcd60e51b815260040161049d906113b4565b600c54600160a01b900460ff16156106515760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161049d565b600b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561069a90309061068c6009600a61138e565b61046490633b9aca0061139d565b600b60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071191906113e9565b6001600160a01b031663c9c6539630600b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079791906113e9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080891906113e9565b600c80546001600160a01b039283166001600160a01b0319909116179055600b541663f305d7194730610850816001600160a01b031660009081526001602052604090205490565b6000806108656000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108cd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108f29190611406565b5050600c805462ff00ff60a01b1981166201000160a01b17909155600b5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190611434565b6001600160a01b0383166109e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049d565b6001600160a01b038216610a485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b0d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161049d565b6001600160a01b038216610b6f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161049d565b60008111610bd15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161049d565b60006001600160a01b0384163014801590610bf557506001600160a01b0383163014155b15610d7357600c546001600160a01b038581169116148015610c255750600b546001600160a01b03848116911614155b8015610c4a57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6457506004546001600160a01b03848116911614155b15610c7f5760088054906000610c7983611456565b91905055505b30600090815260016020526040902054600c54600160a81b900460ff16158015610cb65750600c546001600160a01b038581169116145b8015610ccb5750600c54600160b01b900460ff165b8015610ce557506004546001600160a01b03868116911614155b15610d7157843b15610d305760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161049d565b8015610d655760006009548211610d475781610d4b565b6009545b9050610d63818511610d5d5784610f0b565b81610f0b565b505b47610d6f47611085565b505b505b6001600160a01b038416600090815260016020526040902054610d9690836110c3565b6001600160a01b038516600090815260016020526040902055610ddb610dbc83836110c3565b6001600160a01b0385166000908152600160205260409020549061110c565b6001600160a01b0384166000908152600160205260409020558015610e6e5730600090815260016020526040902054610e14908261110c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e659085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ecb576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eb985856110c3565b60405190815260200160405180910390a35b50505050565b60008184841115610ef55760405162461bcd60e51b815260040161049d919061116b565b506000610f02848661146f565b95945050505050565b600c805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f5357610f53611482565b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610fac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd091906113e9565b81600181518110610fe357610fe3611482565b6001600160a01b039283166020918202929092010152600b546110099130911684610985565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611042908590600090869030904290600401611498565b600060405180830381600087803b15801561105c57600080fd5b505af1158015611070573d6000803e3d6000fd5b5050600c805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110bf573d6000803e3d6000fd5b5050565b600061110583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ed1565b9392505050565b600080611119838561150a565b9050838110156111055760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161049d565b602081526000825180602084015260005b81811015611199576020818601810151604086840101520161117c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146105bd57600080fd5b600080604083850312156111e157600080fd5b82356111ec816111b9565b946020939093013593505050565b60008060006060848603121561120f57600080fd5b833561121a816111b9565b9250602084013561122a816111b9565b929592945050506040919091013590565b60006020828403121561124d57600080fd5b8135611105816111b9565b6000806040838503121561126b57600080fd5b8235611276816111b9565b91506020830135611286816111b9565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112e2578085048111156112c6576112c6611291565b60018416156112d457908102905b60019390931c9280026112ab565b935093915050565b6000826112f95750600161038e565b816113065750600061038e565b816001811461131c576002811461132657611342565b600191505061038e565b60ff84111561133757611337611291565b50506001821b61038e565b5060208310610133831016604e8410600b8410161715611365575081810a61038e565b61137260001984846112a7565b806000190482111561138657611386611291565b029392505050565b600061110560ff8416836112ea565b808202811582820484141761038e5761038e611291565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113fb57600080fd5b8151611105816111b9565b60008060006060848603121561141b57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561144657600080fd5b8151801515811461110557600080fd5b60006001820161146857611468611291565b5060010190565b8181038181111561038e5761038e611291565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114ea5783516001600160a01b03168352602093840193909201916001016114c3565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561038e5761038e61129156fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b1386f201d90f3d05227230408c296048fafa7288c0e25a205e202c409c335ea64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
