/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../medium/0x15fe821f1985a85283efbbab889e9c8dc8ee8fc2.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notBot",
        type: "address",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot864",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "setSwapbackSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600f600755600f60085560006009556000600a556009600b556009600c556003600d556000600e556000600f556009600a62000041919062000684565b62000052906401f58066406200069c565b601055620000636009600a62000684565b62000074906401f58066406200069c565b601155620000856009600a62000684565b620000959063fac033206200069c565b601255620000a66009600a62000684565b620000b69063fac033206200069c565b6013556015805462ffffff60a81b1916905560006016819055601781905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b03191633179055620001336009600a62000684565b62000144906461f313f8806200069c565b3060009081526001602081905260408220929092556003906200016f6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530808252600385528382208054871660019081179091556006549093168252928120805486168317905560049093527fbc48d0b18b37d802eb6f16293b7c4673b63f4ce21f23256f585e771461ac6b0a80548516821790557f2ad68f6a04de56af63ca8049466ef5d841eaf2f483dc2b5e2940c09fab2e492780548516821790557fded10936f8187872bef98760eef728ce7eab5cfa94bae4c9994f051fde554ceb80548516821790557f3e18ed82e212e39a1271e0a731492610e1bd67b81fad35038cf403e495ac050480548516821790557f6a109cbb292b6b629a40b210cb367eb26f9eeddc1d2cb1aa9692cfa1b83d375980548516821790557fdd76867d6b711dfe60c36d67864418df7aa840549d9629570dece4607288ed1480548516821790557fbf6df302f629cdc467883a6ffd1ae27421bdd85144141e48d39f2f353d6d54eb80548516821790557fdef22fb6e693f382c0f91c4569b23bdd7018766364193cdd774a5aa600c1b44280548516821790557fb8440265b3e418917c7b6a6210451dddc551740fbed1ac51c829824f9303386980548516821790557f633df843529d8557624c113bc57c3ce9752df1b8e012fc7814254234dfd80d1a80548516821790557f6abdf5f3536d235ad36fde3a6d4cac3f2fcbbc7517e68d83a7632c0e6caec7f180548516821790557f9ddd32468c967b8d4893436336dfb3feed374c31f42714bdc13604ea8ce0218d80548516821790557fa099902966ea4199dbc3bdeeaf3b502f30e425be6e972187e85b6b99147ba8c680548516821790557f426036ccfebf1d2418f7038340298116c8e644e11fd1cc4d30fbb2408e9a3ddc80548516821790557fc994c174d75fab0103dbf924e4ecf76a683cb792c5b2fb521cbcef0a7e014c8a80548516821790557f518f09d40267f134c40d98cf4c926a58a6a91b93279fd752f7f8f8022d87f10580548516821790557f8b642d0152d8a307cc4b7f346959bfbbc389ffcfd31fc1cd165f1b11b559e22280548516821790557fa72ca61745a3ac66ae5b6ddee6b3def2fc0e7c565d16069f4b15e6493581c8bf80548516821790557f78056ffc7568d002d595fbd6e8fe1ac2bffb61d878b09c59c2803afd610709a0805485168217905573077528ee434f57b33ad5e8de077b1b6dd16409cd83527fbf9654672b865f0a51828640836f2131f2159dcad49f8a8f2b685974e124104a8054909416179092557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620005476009600a62000684565b62000558906461f313f8806200069c565b60405190815260200160405180910390a3620006b6565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005c6578160001904821115620005aa57620005aa6200056f565b80851615620005b857918102915b93841c93908002906200058a565b509250929050565b600082620005df575060016200067e565b81620005ee575060006200067e565b8160018114620006075760028114620006125762000632565b60019150506200067e565b60ff8411156200062657620006266200056f565b50506001821b6200067e565b5060208310610133831016604e8410600b841016171562000657575081810a6200067e565b62000663838362000585565b80600019048211156200067a576200067a6200056f565b0290505b92915050565b60006200069560ff841683620005ce565b9392505050565b80820281158282048414176200067e576200067e6200056f565b611e0b80620006c66000396000f3fe6080604052600436106101855760003560e01c806370a08231116100d157806395d89b411161008a578063bf474bed11610064578063bf474bed14610477578063c9567bf91461048d578063dd62ed3e146104a2578063ec1f3f63146104e857600080fd5b806395d89b411461040a5780639f7ac8a814610437578063a9059cbb1461045757600080fd5b806370a082311461034b578063715018a6146103815780637d1db4a5146103965780638cd4426d146103ac5780638da5cb5b146103cc5780638f9a55c0146103f457600080fd5b8063313ce5671161013e57806356ec63a51161011857806356ec63a5146102c857806362256589146102e85780636fc3eaec146102fd578063709856881461031257600080fd5b8063313ce567146102775780634c8afff41461029357806351bc3c85146102b357600080fd5b806306fdde0314610191578063095ea7b3146101d75780630faee56f14610207578063109daa991461022b57806318160ddd1461024257806323b872dd1461025757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b5060408051808201909152600b81526a4269672042616e6720416960a81b60208201525b6040516101ce91906119a8565b60405180910390f35b3480156101e357600080fd5b506101f76101f2366004611a0c565b610508565b60405190151581526020016101ce565b34801561021357600080fd5b5061021d60135481565b6040519081526020016101ce565b34801561023757600080fd5b5061024061051f565b005b34801561024e57600080fd5b5061021d61058f565b34801561026357600080fd5b506101f7610272366004611a38565b6105b1565b34801561028357600080fd5b50604051600981526020016101ce565b34801561029f57600080fd5b506102406102ae366004611a79565b61061a565b3480156102bf57600080fd5b50610240610665565b3480156102d457600080fd5b506102406102e3366004611a79565b6106b8565b3480156102f457600080fd5b50610240610706565b34801561030957600080fd5b506102406107c3565b34801561031e57600080fd5b506101f761032d366004611a79565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561035757600080fd5b5061021d610366366004611a79565b6001600160a01b031660009081526001602052604090205490565b34801561038d57600080fd5b506102406107f0565b3480156103a257600080fd5b5061021d60105481565b3480156103b857600080fd5b506102406103c7366004611a0c565b610864565b3480156103d857600080fd5b506000546040516001600160a01b0390911681526020016101ce565b34801561040057600080fd5b5061021d60115481565b34801561041657600080fd5b506040805180820190915260048152634242414960e01b60208201526101c1565b34801561044357600080fd5b50610240610452366004611a96565b610987565b34801561046357600080fd5b506101f7610472366004611a0c565b6109b1565b34801561048357600080fd5b5061021d60125481565b34801561049957600080fd5b506102406109be565b3480156104ae57600080fd5b5061021d6104bd366004611aaf565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104f457600080fd5b50610240610503366004611a96565b610d7d565b6000610515338484610dc4565b5060015b92915050565b6000546001600160a01b031633146105525760405162461bcd60e51b815260040161054990611ae8565b60405180910390fd5b6000600e8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061059d6009600a611c17565b6105ac906461f313f880611c26565b905090565b60006105be848484610ee8565b610610843361060b85604051806060016040528060288152602001611dae602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061160b565b610dc4565b5060019392505050565b6000546001600160a01b031633146106445760405162461bcd60e51b815260040161054990611ae8565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6006546001600160a01b0316336001600160a01b03161461068557600080fd5b3060009081526001602052604090205480156106a4576106a481611645565b4780156106b4576106b4816117bf565b5050565b6000546001600160a01b031633146106e25760405162461bcd60e51b815260040161054990611ae8565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b031633146107305760405162461bcd60e51b815260040161054990611ae8565b61073c6009600a611c17565b61074b906461f313f880611c26565b60105561075a6009600a611c17565b610769906461f313f880611c26565b6011556015805460ff60b81b191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107a66009600a611c17565b6107b5906461f313f880611c26565b604051908152602001610585565b6006546001600160a01b0316336001600160a01b0316146107e357600080fd5b476107ed816117bf565b50565b6000546001600160a01b0316331461081a5760405162461bcd60e51b815260040161054990611ae8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6006546001600160a01b0316336001600160a01b03161461088457600080fd5b6040516370a0823160e01b8152306004820152600090610908906064906109029085906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190611c3d565b906117f9565b90611882565b60065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611c56565b50505050565b6006546001600160a01b0316336001600160a01b0316146109a757600080fd5b6012819055601355565b6000610515338484610ee8565b6000546001600160a01b031633146109e85760405162461bcd60e51b815260040161054990611ae8565b601554600160a01b900460ff1615610a425760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610549565b601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155610a8c903090610a7d6009600a611c17565b61060b906461f313f880611c26565b601460009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190611c78565b6001600160a01b031663c9c6539630601460009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b899190611c78565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611c78565b601580546001600160a01b039283166001600160a01b03199091161790556014541663f305d7194730610c42816001600160a01b031660009081526001602052604090205490565b600080610c576000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610cbf573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ce49190611c95565b505060155460145460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610d3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d619190611c56565b506015805463ffff00ff60a01b1916630101000160a01b179055565b6006546001600160a01b0316336001600160a01b031614610d9d57600080fd5b6009548111158015610db15750600a548111155b610dba57600080fd5b6009819055600a55565b6001600160a01b038316610e265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610549565b6001600160a01b038216610e875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610549565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f4c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610549565b6001600160a01b038216610fae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610549565b600081116110105760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610549565b600080546001600160a01b0385811691161480159061103d57506000546001600160a01b03848116911614155b156114c8576001600160a01b03841660009081526004602052604090205460ff1615801561108457506001600160a01b03831660009081526004602052604090205460ff16155b80156110a057503260009081526004602052604090205460ff16155b6110a957600080fd5b601554600160b81b900460ff16156111af576000546001600160a01b038481169116148015906110e757506014546001600160a01b03848116911614155b801561110157506015546001600160a01b03848116911614155b156111af5732600090815260056020526040902054431161119c5760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a401610549565b3260009081526005602052604090204390555b600f546000036111e2576111df6064610902600b54600f54116111d4576007546111d8565b6009545b85906117f9565b90505b600f5415611207576112046064610902600e54856117f990919063ffffffff16565b90505b6015546001600160a01b03858116911614801561123257506014546001600160a01b03848116911614155b801561125757506001600160a01b03831660009081526003602052604090205460ff16155b1561135c576010548211156112ae5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610549565b601154826112d1856001600160a01b031660009081526001602052604090205490565b6112db9190611cc3565b11156113295760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610549565b6113446064610902600b54600f54116111d4576007546111d8565b600f8054919250600061135683611cd6565b91905055505b6015546001600160a01b03848116911614801561138257506001600160a01b0384163014155b156113af576113ac6064610902600c54600f54116113a2576008546111d8565b600a5485906117f9565b90505b30600090815260016020526040902054601554600160a81b900460ff161580156113e657506015546001600160a01b038581169116145b80156113fb5750601554600160b01b900460ff165b8015611408575060125481115b80156114175750600d54600f54115b156114c65760175443111561142c5760006016555b60036016541061147e5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610549565b61149b61149684611491846013546118c4565b6118c4565b611645565b4780156114ab576114ab476117bf565b601680549060006114bb83611cd6565b909155505043601755505b505b801561154257306000908152600160205260409020546114e890826118d9565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115399085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546115659083611938565b6001600160a01b0385166000908152600160205260409020556115aa61158b8383611938565b6001600160a01b038516600090815260016020526040902054906118d9565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6115f48585611938565b60405190815260200160405180910390a350505050565b6000818484111561162f5760405162461bcd60e51b815260040161054991906119a8565b50600061163c8486611cef565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061168d5761168d611d02565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156116e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170a9190611c78565b8160018151811061171d5761171d611d02565b6001600160a01b0392831660209182029290920101526014546117439130911684610dc4565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac9479061177c908590600090869030904290600401611d18565b600060405180830381600087803b15801561179657600080fd5b505af11580156117aa573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6006546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106b4573d6000803e3d6000fd5b60008260000361180b57506000610519565b60006118178385611c26565b9050826118248583611d8b565b1461187b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610549565b9392505050565b600061187b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061197a565b60008183116118d3578261187b565b50919050565b6000806118e68385611cc3565b90508381101561187b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610549565b600061187b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061160b565b6000818361199b5760405162461bcd60e51b815260040161054991906119a8565b50600061163c8486611d8b565b60006020808352835180602085015260005b818110156119d6578581018301518582016040015282016119ba565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107ed57600080fd5b60008060408385031215611a1f57600080fd5b8235611a2a816119f7565b946020939093013593505050565b600080600060608486031215611a4d57600080fd5b8335611a58816119f7565b92506020840135611a68816119f7565b929592945050506040919091013590565b600060208284031215611a8b57600080fd5b813561187b816119f7565b600060208284031215611aa857600080fd5b5035919050565b60008060408385031215611ac257600080fd5b8235611acd816119f7565b91506020830135611add816119f7565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b6e578160001904821115611b5457611b54611b1d565b80851615611b6157918102915b93841c9390800290611b38565b509250929050565b600082611b8557506001610519565b81611b9257506000610519565b8160018114611ba85760028114611bb257611bce565b6001915050610519565b60ff841115611bc357611bc3611b1d565b50506001821b610519565b5060208310610133831016604e8410600b8410161715611bf1575081810a610519565b611bfb8383611b33565b8060001904821115611c0f57611c0f611b1d565b029392505050565b600061187b60ff841683611b76565b808202811582820484141761051957610519611b1d565b600060208284031215611c4f57600080fd5b5051919050565b600060208284031215611c6857600080fd5b8151801515811461187b57600080fd5b600060208284031215611c8a57600080fd5b815161187b816119f7565b600080600060608486031215611caa57600080fd5b8351925060208401519150604084015190509250925092565b8082018082111561051957610519611b1d565b600060018201611ce857611ce8611b1d565b5060010190565b8181038181111561051957610519611b1d565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d6a5784516001600160a01b031683529383019391830191600101611d45565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611da857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220acb62bd219be75cc759c84301676d95a0a983a03baee29ba4781226829c72f6764736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Contract> {
    return super.deploy(overrides || {}) as Promise<Contract>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Contract {
    return super.attach(address) as Contract;
  }
  override connect(signer: Signer): Contract__factory {
    return super.connect(signer) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new utils.Interface(_abi) as ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contract {
    return new Contract(address, _abi, signerOrProvider) as Contract;
  }
}
