/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KRI,
  KRIInterface,
} from "../../../medium/0xb3c22eb9a7675fce555d826bff06544c2c4f1ded.sol/KRI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052601760055560176006556000600755600060085560176009556017600a556014600b556000600c556000600d5560646009600a6100419190610377565b610050906461f313f88061038d565b61005b90600261038d565b61006591906103a4565b600e5560646100766009600a610377565b610085906461f313f88061038d565b61009090600261038d565b61009a91906103a4565b600f556103e86100ac6009600a610377565b6100bb906461f313f88061038d565b6100c690600361038d565b6100d091906103a4565b60105560646100e16009600a610377565b6100f0906461f313f88061038d565b6100fb90600161038d565b61010591906103a4565b6011556013805461ffff60a81b19169055600060148190556015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556101846009600a610377565b610193906461f313f88061038d565b3360009081526001602081905260408220929092556003906101bd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560045490911683529120805490921617905561021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102536009600a610377565b610262906461f313f88061038d565b60405190815260200160405180910390a36103c6565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102c9578085048111156102ad576102ad610278565b60018416156102bb57908102905b60019390931c928002610292565b935093915050565b6000826102e057506001610371565b816102ed57506000610371565b8160018114610303576002811461030d57610329565b6001915050610371565b60ff84111561031e5761031e610278565b50506001821b610371565b5060208310610133831016604e8410600b841016171561034c575081810a610371565b610359600019848461028e565b806000190482111561036d5761036d610278565b0290505b92915050565b600061038660ff8416836102d1565b9392505050565b808202811582820484141761037157610371610278565b6000826103c157634e487b7160e01b600052601260045260246000fd5b500490565b611c08806103d56000396000f3fe6080604052600436106101395760003560e01c806377b54bad116100ab578063a9059cbb1161006f578063a9059cbb14610354578063bf474bed14610374578063c9567bf91461038a578063dd62ed3e1461039f578063ec1f3f63146103e5578063f42938901461040557600080fd5b806377b54bad146102b45780637d1db4a5146102d45780638da5cb5b146102ea5780638f9a55c01461031257806395d89b411461032857600080fd5b806323b872dd116100fd57806323b872dd14610203578063313ce5671461022357806351bc3c851461023f578063622565891461025457806370a0823114610269578063715018a61461029f57600080fd5b806306fdde0314610145578063095ea7b3146101835780630faee56f146101b3578063109daa99146101d757806318160ddd146101ee57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506040805180820190915260038152624b726960e81b60208201525b60405161017a91906117a4565b60405180910390f35b34801561018f57600080fd5b506101a361019e366004611807565b61041a565b604051901515815260200161017a565b3480156101bf57600080fd5b506101c960115481565b60405190815260200161017a565b3480156101e357600080fd5b506101ec610431565b005b3480156101fa57600080fd5b506101c96104a1565b34801561020f57600080fd5b506101a361021e366004611833565b6104c3565b34801561022f57600080fd5b506040516009815260200161017a565b34801561024b57600080fd5b506101ec61052c565b34801561026057600080fd5b506101ec61057f565b34801561027557600080fd5b506101c9610284366004611874565b6001600160a01b031660009081526001602052604090205490565b3480156102ab57600080fd5b506101ec61062f565b3480156102c057600080fd5b506101a36102cf366004611807565b6106a3565b3480156102e057600080fd5b506101c9600e5481565b3480156102f657600080fd5b506000546040516001600160a01b03909116815260200161017a565b34801561031e57600080fd5b506101c9600f5481565b34801561033457600080fd5b506040805180820190915260038152624b524960e81b602082015261016d565b34801561036057600080fd5b506101a361036f366004611807565b6107fb565b34801561038057600080fd5b506101c960105481565b34801561039657600080fd5b506101ec610808565b3480156103ab57600080fd5b506101c96103ba366004611891565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103f157600080fd5b506101ec6104003660046118ca565b610c05565b34801561041157600080fd5b506101ec610c4c565b6000610427338484610cd9565b5060015b92915050565b6000546001600160a01b031633146104645760405162461bcd60e51b815260040161045b906118e3565b60405180910390fd5b6000600c8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006104af6009600a611a15565b6104be906461f313f880611a24565b905090565b60006104d0848484610dfd565b610522843361051d85604051806060016040528060288152602001611bab602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061140e565b610cd9565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461054c57600080fd5b30600090815260016020526040902054801561056b5761056b81611448565b47801561057b5761057b816115c2565b5050565b6000546001600160a01b031633146105a95760405162461bcd60e51b815260040161045b906118e3565b6105b56009600a611a15565b6105c4906461f313f880611a24565b600e556105d36009600a611a15565b6105e2906461f313f880611a24565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106126009600a611a15565b610621906461f313f880611a24565b604051908152602001610497565b6000546001600160a01b031633146106595760405162461bcd60e51b815260040161045b906118e3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546000906001600160a01b0316336001600160a01b0316146106c657600080fd5b81600003610739576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611a3b565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a16004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905284169063a9059cbb906044016020604051808303816000875af11580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190611a54565b9392505050565b6000610427338484610dfd565b6000546001600160a01b031633146108325760405162461bcd60e51b815260040161045b906118e3565b601354600160a01b900460ff161561088c5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161045b565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108d69030906108c76009600a611a15565b61051d906461f313f880611a24565b6109113061036f61271061090b6125e4610905336001600160a01b031660009081526001602052604090205490565b906115fc565b9061167e565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190611a76565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190611a76565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a809190611a76565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d7194730610ac8816001600160a01b031660009081526001602052604090205490565b600080610add6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b45573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b6a9190611a93565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be79190611a54565b506013805462ff00ff60a01b19166201000160a01b17905543601655565b6004546001600160a01b0316336001600160a01b031614610c2557600080fd5b6007548111158015610c3957506008548111155b610c4257600080fd5b6007819055600855565b6004546001600160a01b0316336001600160a01b031614610c6c57600080fd5b4780610ccd5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163742062616c616e6365206d7573742062652067726561746572604482015269207468616e207a65726f60b01b606482015260840161045b565b610cd6816115c2565b50565b6001600160a01b038316610d3b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045b565b6001600160a01b038216610d9c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045b565b6001600160a01b038216610ec35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045b565b60008111610f255760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161045b565b600080546001600160a01b03858116911614801590610f5257506000546001600160a01b03848116911614155b156112cb57600d54600003610f8a57610f87606461090b600954600d5411610f7c57600554610f80565b6007545b85906115fc565b90505b600d5415610faf57610fac606461090b600c54856115fc90919063ffffffff16565b90505b601654430361100a576023600d541061100a5760405162461bcd60e51b815260206004820181905260248201527f457863656564732062757973206f6e2074686520666972737420626c6f636b2e604482015260640161045b565b6013546001600160a01b03858116911614801561103557506012546001600160a01b03848116911614155b801561105a57506001600160a01b03831660009081526003602052604090205460ff16155b1561115f57600e548211156110b15760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161045b565b600f54826110d4856001600160a01b031660009081526001602052604090205490565b6110de9190611ac1565b111561112c5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161045b565b611147606461090b600954600d5411610f7c57600554610f80565b600d8054919250600061115983611ad4565b91905055505b6013546001600160a01b03848116911614801561118557506001600160a01b0384163014155b156111b2576111af606461090b600a54600d54116111a557600654610f80565b60085485906115fc565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156111e957506013546001600160a01b038581169116145b80156111fe5750601354600160b01b900460ff165b801561120b575060105481115b801561121a5750600b54600d54115b156112c95760155443111561122f5760006014555b6003601454106112815760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161045b565b61129e61129984611294846011546116c0565b6116c0565b611448565b4780156112ae576112ae476115c2565b601480549060006112be83611ad4565b909155505043601555505b505b801561134557306000908152600160205260409020546112eb90826116d5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061133c9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113689083611734565b6001600160a01b0385166000908152600160205260409020556113ad61138e8383611734565b6001600160a01b038516600090815260016020526040902054906116d5565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6113f78585611734565b60405190815260200160405180910390a350505050565b600081848411156114325760405162461bcd60e51b815260040161045b91906117a4565b50600061143f8486611aed565b95945050505050565b6013805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061149057611490611b00565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150d9190611a76565b8160018151811061152057611520611b00565b6001600160a01b0392831660209182029290920101526012546115469130911684610cd9565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac9479061157f908590600090869030904290600401611b16565b600060405180830381600087803b15801561159957600080fd5b505af11580156115ad573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561057b573d6000803e3d6000fd5b60008260000361160e5750600061042b565b600061161a8385611a24565b9050826116278583611b88565b146107f45760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161045b565b60006107f483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611776565b60008183116116cf57826107f4565b50919050565b6000806116e28385611ac1565b9050838110156107f45760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161045b565b60006107f483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061140e565b600081836117975760405162461bcd60e51b815260040161045b91906117a4565b50600061143f8486611b88565b602081526000825180602084015260005b818110156117d257602081860181015160408684010152016117b5565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610cd657600080fd5b6000806040838503121561181a57600080fd5b8235611825816117f2565b946020939093013593505050565b60008060006060848603121561184857600080fd5b8335611853816117f2565b92506020840135611863816117f2565b929592945050506040919091013590565b60006020828403121561188657600080fd5b81356107f4816117f2565b600080604083850312156118a457600080fd5b82356118af816117f2565b915060208301356118bf816117f2565b809150509250929050565b6000602082840312156118dc57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156119695780850481111561194d5761194d611918565b600184161561195b57908102905b60019390931c928002611932565b935093915050565b6000826119805750600161042b565b8161198d5750600061042b565b81600181146119a357600281146119ad576119c9565b600191505061042b565b60ff8411156119be576119be611918565b50506001821b61042b565b5060208310610133831016604e8410600b84101617156119ec575081810a61042b565b6119f9600019848461192e565b8060001904821115611a0d57611a0d611918565b029392505050565b60006107f460ff841683611971565b808202811582820484141761042b5761042b611918565b600060208284031215611a4d57600080fd5b5051919050565b600060208284031215611a6657600080fd5b815180151581146107f457600080fd5b600060208284031215611a8857600080fd5b81516107f4816117f2565b600080600060608486031215611aa857600080fd5b5050815160208301516040909301519094929350919050565b8082018082111561042b5761042b611918565b600060018201611ae657611ae6611918565b5060010190565b8181038181111561042b5761042b611918565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611b685783516001600160a01b0316835260209384019390920191600101611b41565b50506001600160a01b039590951660608401525050608001529392505050565b600082611ba557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d26a0b62aac86f95411e58f3e20ce9406c9430a2dde8b4c101fef9a53cb93bf564736f6c634300081e0033";

type KRIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KRIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KRI__factory extends ContractFactory {
  constructor(...args: KRIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<KRI> {
    return super.deploy(overrides || {}) as Promise<KRI>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KRI {
    return super.attach(address) as KRI;
  }
  override connect(signer: Signer): KRI__factory {
    return super.connect(signer) as KRI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KRIInterface {
    return new utils.Interface(_abi) as KRIInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KRI {
    return new Contract(address, _abi, signerOrProvider) as KRI;
  }
}
