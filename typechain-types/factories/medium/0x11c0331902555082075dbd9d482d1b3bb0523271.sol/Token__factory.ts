/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x11c0331902555082075dbd9d482d1b3bb0523271.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_bolf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60065560006007556000600855600060095560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600a55600c805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b031660006000805160206118ee83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a33060006000805160206118ee83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b61157e806103706000396000f3fe6080604052600436106101025760003560e01c8063715018a61161009557806395d89b411161006457806395d89b41146102b8578063a9059cbb146102e5578063d02c938314610305578063dd62ed3e1461031a578063f5f674311461036057600080fd5b8063715018a61461024f578063751039fc146102665780638da5cb5b1461027b578063959cbb9d146102a357600080fd5b806318160ddd116100d157806318160ddd146101c857806323b872dd146101dd578063313ce567146101fd57806370a082311461021957600080fd5b806306fdde031461010e578063095ea7b31461015d5780630efe9fb31461018d5780630faee56f146101b257600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526014815273424f4f4b204f46204c494e4520465249454e445360601b60208201525b604051610154919061116e565b60405180910390f35b34801561016957600080fd5b5061017d6101783660046111d1565b610380565b6040519015158152602001610154565b34801561019957600080fd5b506101a4620186a081565b604051908152602001610154565b3480156101be57600080fd5b506101a4600a5481565b3480156101d457600080fd5b506101a4610397565b3480156101e957600080fd5b5061017d6101f83660046111fd565b6103b8565b34801561020957600080fd5b5060405160098152602001610154565b34801561022557600080fd5b506101a461023436600461123e565b6001600160a01b031660009081526001602052604090205490565b34801561025b57600080fd5b50610264610476565b005b34801561027257600080fd5b506102646104f3565b34801561028757600080fd5b506000546040516001600160a01b039091168152602001610154565b3480156102af57600080fd5b5061026461051f565b3480156102c457600080fd5b506040805180820190915260048152632127a62360e11b6020820152610147565b3480156102f157600080fd5b5061017d6103003660046111d1565b610585565b34801561031157600080fd5b50610264610592565b34801561032657600080fd5b506101a461033536600461125b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036c57600080fd5b5061026461037b36600461123e565b61094a565b600061038d338484610988565b5060015b92915050565b60006103a56009600a611391565b6103b390633b9aca006113a0565b905090565b60006103c5848484610aac565b6005546001600160a01b031633148015906104155750600c546001600160a01b038581169116148061040257506001600160a01b03831661dead14155b8061041557506001600160a01b03841630145b1561046c5761046c843361046785604051806060016040528060288152602001611521602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ed4565b610988565b5060019392505050565b6000546001600160a01b031633146104a95760405162461bcd60e51b81526004016104a0906113b7565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051d5760405162461bcd60e51b81526004016104a0906113b7565b565b6000546001600160a01b031633146105495760405162461bcd60e51b81526004016104a0906113b7565b6000471161055657600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610582573d6000803e3d6000fd5b50565b600061038d338484610aac565b6000546001600160a01b031633146105bc5760405162461bcd60e51b81526004016104a0906113b7565b600c54600160a01b900460ff16156106165760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104a0565b600b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561065f9030906106516009600a611391565b61046790633b9aca006113a0565b600b60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d691906113ec565b6001600160a01b031663c9c6539630600b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c91906113ec565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd91906113ec565b600c80546001600160a01b039283166001600160a01b0319909116179055600b541663f305d7194730610815816001600160a01b031660009081526001602052604090205490565b60008061082a6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610892573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108b79190611409565b5050600c805462ff00ff60a01b1981166201000160a01b17909155600b5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610926573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190611437565b3360009081526003602052604090205460ff1661096657600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a0565b6001600160a01b038216610a4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a0565b6001600160a01b038216610b725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a0565b60008111610bd45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104a0565b60006001600160a01b0384163014801590610bf857506001600160a01b0383163014155b15610d7657600c546001600160a01b038581169116148015610c285750600b546001600160a01b03848116911614155b8015610c4d57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6757506005546001600160a01b03848116911614155b15610c825760098054906000610c7c83611459565b91905055505b30600090815260016020526040902054600c54600160a81b900460ff16158015610cb95750600c546001600160a01b038581169116145b8015610cce5750600c54600160b01b900460ff165b8015610ce857506005546001600160a01b03868116911614155b15610d7457843b15610d335760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b60448201526064016104a0565b8015610d68576000600a548211610d4a5781610d4e565b600a545b9050610d66818511610d605784610f0e565b81610f0e565b505b47610d7247611088565b505b505b6001600160a01b038416600090815260016020526040902054610d9990836110c6565b6001600160a01b038516600090815260016020526040902055610dde610dbf83836110c6565b6001600160a01b0385166000908152600160205260409020549061110f565b6001600160a01b0384166000908152600160205260409020558015610e715730600090815260016020526040902054610e17908261110f565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e689085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ece576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ebc85856110c6565b60405190815260200160405180910390a35b50505050565b60008184841115610ef85760405162461bcd60e51b81526004016104a0919061116e565b506000610f058486611472565b95945050505050565b600c805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f5657610f56611485565b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd391906113ec565b81600181518110610fe657610fe6611485565b6001600160a01b039283166020918202929092010152600b5461100c9130911684610988565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061104590859060009086903090429060040161149b565b600060405180830381600087803b15801561105f57600080fd5b505af1158015611073573d6000803e3d6000fd5b5050600c805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110c2573d6000803e3d6000fd5b5050565b600061110883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ed4565b9392505050565b60008061111c838561150d565b9050838110156111085760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104a0565b602081526000825180602084015260005b8181101561119c576020818601810151604086840101520161117f565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461058257600080fd5b600080604083850312156111e457600080fd5b82356111ef816111bc565b946020939093013593505050565b60008060006060848603121561121257600080fd5b833561121d816111bc565b9250602084013561122d816111bc565b929592945050506040919091013590565b60006020828403121561125057600080fd5b8135611108816111bc565b6000806040838503121561126e57600080fd5b8235611279816111bc565b91506020830135611289816111bc565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112e5578085048111156112c9576112c9611294565b60018416156112d757908102905b60019390931c9280026112ae565b935093915050565b6000826112fc57506001610391565b8161130957506000610391565b816001811461131f576002811461132957611345565b6001915050610391565b60ff84111561133a5761133a611294565b50506001821b610391565b5060208310610133831016604e8410600b8410161715611368575081810a610391565b61137560001984846112aa565b806000190482111561138957611389611294565b029392505050565b600061110860ff8416836112ed565b808202811582820484141761039157610391611294565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113fe57600080fd5b8151611108816111bc565b60008060006060848603121561141e57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561144957600080fd5b8151801515811461110857600080fd5b60006001820161146b5761146b611294565b5060010190565b8181038181111561039157610391611294565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114ed5783516001600160a01b03168352602093840193909201916001016114c6565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103915761039161129456fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204c811b9ef257e0bad3d42c864c28587effdbd9bbb83469395a2a538e99845f8064736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
