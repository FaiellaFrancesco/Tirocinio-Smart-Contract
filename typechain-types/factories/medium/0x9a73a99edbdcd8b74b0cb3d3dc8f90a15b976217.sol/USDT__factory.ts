/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  USDT,
  USDTInterface,
} from "../../../medium/0x9a73a99edbdcd8b74b0cb3d3dc8f90a15b976217.sol/USDT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051808201909152600a81526915195d1a195c881554d160b21b602082015260039061003f9082610180565b50604080518082019091526004808252631554d11560e21b6020830152906100679082610180565b506005805460ff1916601290811790915561008390600a61033d565b610091906305f5e100610350565b60028190553360008181526020818152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610367565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010b57607f821691505b60208210810361012b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017b57806000526020600020601f840160051c810160208510156101585750805b601f840160051c820191505b818110156101785760008155600101610164565b50505b505050565b81516001600160401b03811115610199576101996100e1565b6101ad816101a784546100f7565b84610131565b6020601f8211600181146101e157600083156101c95750848201515b600019600385901b1c1916600184901b178455610178565b600084815260208120601f198516915b8281101561021157878501518255602094850194600190920191016101f1565b508482101561022f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561028f578085048111156102735761027361023e565b600184161561028157908102905b60019390931c928002610258565b935093915050565b6000826102a657506001610337565b816102b357506000610337565b81600181146102c957600281146102d3576102ef565b6001915050610337565b60ff8411156102e4576102e461023e565b50506001821b610337565b5060208310610133831016604e8410600b8410161715610312575081810a610337565b61031f6000198484610254565b80600019048211156103335761033361023e565b0290505b92915050565b60006103498383610297565b9392505050565b80820281158282048414176103375761033761023e565b6107b4806103766000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b4114610165578063a457c2d71461016d578063a9059cbb14610180578063dd62ed3e1461019357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101cc565b6040516100c391906105e2565b60405180910390f35b6100df6100da36600461064c565b61025e565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610676565b610275565b60055460405160ff90911681526020016100c3565b6100df61013736600461064c565b6102c7565b6100f361014a3660046106b3565b6001600160a01b031660009081526020819052604090205490565b6100b66102fe565b6100df61017b36600461064c565b61030d565b6100df61018e36600461064c565b610344565b6100f36101a13660046106d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101db90610708565b80601f016020809104026020016040519081016040528092919081815260200182805461020790610708565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050905090565b600061026b338484610351565b5060015b92915050565b600061028284848461047b565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546102bd9186916102b8908690610758565b610351565b5060019392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026b9185906102b890869061076b565b6060600480546101db90610708565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026b9185906102b8908690610758565b600061026b33848461047b565b6001600160a01b0383166103b85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104195760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103af565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166104df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103af565b6001600160a01b0382166105415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103af565b6001600160a01b03831660009081526020819052604081208054839290610569908490610758565b90915550506001600160a01b0382166000908152602081905260408120805483929061059690849061076b565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161046e91815260200190565b602081526000825180602084015260005b8181101561061057602081860181015160408684010152016105f3565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461064757600080fd5b919050565b6000806040838503121561065f57600080fd5b61066883610630565b946020939093013593505050565b60008060006060848603121561068b57600080fd5b61069484610630565b92506106a260208501610630565b929592945050506040919091013590565b6000602082840312156106c557600080fd5b6106ce82610630565b9392505050565b600080604083850312156106e857600080fd5b6106f183610630565b91506106ff60208401610630565b90509250929050565b600181811c9082168061071c57607f821691505b60208210810361073c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026f5761026f610742565b8082018082111561026f5761026f61074256fea264697066735822122078b5e3089aeedeba255ded7fbe370b574213e172fba09722704e9bf8196487d564736f6c634300081e0033";

type USDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDT__factory extends ContractFactory {
  constructor(...args: USDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      USDT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDT__factory {
    return super.connect(runner) as USDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTInterface {
    return new Interface(_abi) as USDTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDT {
    return new Contract(address, _abi, runner) as unknown as USDT;
  }
}
