/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CerebralChain,
  CerebralChainInterface,
} from "../../../medium/0x6e5ad6e6cb96953aca2379ad8fe8aa410b6a3fb6.sol/CerebralChain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "add_OBKJN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_add_OBKJN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_var_nOjDTj",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "update_var_nOjDTj",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051808201909152600d81526c21b2b932b13930b621b430b4b760991b6020820152600090610042908261018b565b5060408051808201909152600881526721a2a921a420a4a760c11b602082015260019061006f908261018b565b5061007c6012600a610348565b61008b90640737be760061035b565b600281905533600081815260046020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36100e46103e842610372565b600355610394565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061011657607f821691505b60208210810361013657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561018657806000526020600020601f840160051c810160208510156101635750805b601f840160051c820191505b81811015610183576000815560010161016f565b50505b505050565b81516001600160401b038111156101a4576101a46100ec565b6101b8816101b28454610102565b8461013c565b6020601f8211600181146101ec57600083156101d45750848201515b600019600385901b1c1916600184901b178455610183565b600084815260208120601f198516915b8281101561021c57878501518255602094850194600190920191016101fc565b508482101561023a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561029a5780850481111561027e5761027e610249565b600184161561028c57908102905b60019390931c928002610263565b935093915050565b6000826102b157506001610342565b816102be57506000610342565b81600181146102d457600281146102de576102fa565b6001915050610342565b60ff8411156102ef576102ef610249565b50506001821b610342565b5060208310610133831016604e8410600b841016171561031d575081810a610342565b61032a600019848461025f565b806000190482111561033e5761033e610249565b0290505b92915050565b600061035483836102a2565b9392505050565b808202811582820484141761034257610342610249565b60008261038f57634e487b7160e01b600052601260045260246000fd5b500690565b61079d806103a36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636c2a5e911161008c578063a9059cbb11610066578063a9059cbb1461019e578063dd62ed3e146101b1578063de39030c146101dc578063fb34cbdb146101e457600080fd5b80636c2a5e911461016157806370a082311461017657806395d89b411461019657600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806319e236131461012c57806323b872dd14610134578063313ce56714610147575b600080fd5b6100dc6101f7565b6040516100e9919061056c565b60405180910390f35b6101056101003660046105d6565b610285565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b60065461011e565b610105610142366004610600565b6102f2565b61014f601281565b60405160ff90911681526020016100e9565b61017461016f36600461063d565b600655565b005b61011e610184366004610656565b60046020526000908152604090205481565b6100dc6104a2565b6101056101ac3660046105d6565b6104af565b61011e6101bf366004610678565b600560209081526000928352604080842090915290825290205481565b60035461011e565b6101746101f236600461063d565b600355565b60008054610204906106ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610230906106ab565b801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e09086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103335760405162461bcd60e51b815260040161032a906106e5565b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161032a565b6001600160a01b038416600090815260046020526040812080548492906103df908490610741565b90915550506001600160a01b0383166000908152600460205260408120805484929061040c908490610754565b90915550506001600160a01b038416600090815260056020908152604080832033845290915281208054849290610444908490610741565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161049091815260200190565b60405180910390a35060019392505050565b60018054610204906106ab565b336000908152600460205260408120548211156104de5760405162461bcd60e51b815260040161032a906106e5565b33600090815260046020526040812080548492906104fd908490610741565b90915550506001600160a01b0383166000908152600460205260408120805484929061052a908490610754565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102e0565b602081526000825180602084015260005b8181101561059a576020818601810151604086840101520161057d565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105d157600080fd5b919050565b600080604083850312156105e957600080fd5b6105f2836105ba565b946020939093013593505050565b60008060006060848603121561061557600080fd5b61061e846105ba565b925061062c602085016105ba565b929592945050506040919091013590565b60006020828403121561064f57600080fd5b5035919050565b60006020828403121561066857600080fd5b610671826105ba565b9392505050565b6000806040838503121561068b57600080fd5b610694836105ba565b91506106a2602084016105ba565b90509250929050565b600181811c908216806106bf57607f821691505b6020821081036106df57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102ec576102ec61072b565b808201808211156102ec576102ec61072b56fea2646970667358221220a5e62627ac3f9fc713f734533254c3a909fecbd3395a9b03dee1513d301839eb64736f6c634300081e0033";

type CerebralChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CerebralChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CerebralChain__factory extends ContractFactory {
  constructor(...args: CerebralChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CerebralChain> {
    return super.deploy(overrides || {}) as Promise<CerebralChain>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CerebralChain {
    return super.attach(address) as CerebralChain;
  }
  override connect(signer: Signer): CerebralChain__factory {
    return super.connect(signer) as CerebralChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CerebralChainInterface {
    return new utils.Interface(_abi) as CerebralChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CerebralChain {
    return new Contract(address, _abi, signerOrProvider) as CerebralChain;
  }
}
