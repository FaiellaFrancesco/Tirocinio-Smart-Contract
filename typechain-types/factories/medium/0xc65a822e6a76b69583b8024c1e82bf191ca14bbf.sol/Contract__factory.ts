/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Contract,
  ContractInterface,
} from "../../../medium/0xc65a822e6a76b69583b8024c1e82bf191ca14bbf.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notBot",
        type: "address",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot48",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526017600755601760085560006009556000600a55600e600b556014600c556003600d556000600e556000600f556009600a620000419190620004ea565b62000052906401f580664062000502565b601055620000636009600a620004ea565b62000074906401f580664062000502565b601155620000856009600a620004ea565b620000959063fac0332062000502565b601255620000a66009600a620004ea565b620000b69063fac0332062000502565b6013556015805462ffffff60a81b1916905560006016819055601781905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b03191633179055620001336009600a620004ea565b62000144906461f313f88062000502565b3060009081526001602081905260408220929092556003906200016f6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530808252600385528382208054871660019081179091556006549093168252928120805486168317905560049093527fbc48d0b18b37d802eb6f16293b7c4673b63f4ce21f23256f585e771461ac6b0a80548516821790557f2ad68f6a04de56af63ca8049466ef5d841eaf2f483dc2b5e2940c09fab2e492780548516821790557fded10936f8187872bef98760eef728ce7eab5cfa94bae4c9994f051fde554ceb80548516821790557f3e18ed82e212e39a1271e0a731492610e1bd67b81fad35038cf403e495ac050480548516821790557f6a109cbb292b6b629a40b210cb367eb26f9eeddc1d2cb1aa9692cfa1b83d375980548516821790557fdd76867d6b711dfe60c36d67864418df7aa840549d9629570dece4607288ed1480548516821790557fbf6df302f629cdc467883a6ffd1ae27421bdd85144141e48d39f2f353d6d54eb80548516821790557fdef22fb6e693f382c0f91c4569b23bdd7018766364193cdd774a5aa600c1b44280548516821790557fb8440265b3e418917c7b6a6210451dddc551740fbed1ac51c829824f93033869805485168217905573e2dd16c9d9eb27b9d341d49600dd84e24bd208c583527f633df843529d8557624c113bc57c3ce9752df1b8e012fc7814254234dfd80d1a8054909416179092557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003ad6009600a620004ea565b620003be906461f313f88062000502565b60405190815260200160405180910390a36200051c565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200042c578160001904821115620004105762000410620003d5565b808516156200041e57918102915b93841c9390800290620003f0565b509250929050565b6000826200044557506001620004e4565b816200045457506000620004e4565b81600181146200046d5760028114620004785762000498565b6001915050620004e4565b60ff8411156200048c576200048c620003d5565b50506001821b620004e4565b5060208310610133831016604e8410600b8410161715620004bd575081810a620004e4565b620004c98383620003eb565b8060001904821115620004e057620004e0620003d5565b0290505b92915050565b6000620004fb60ff84168362000434565b9392505050565b8082028115828204841417620004e457620004e4620003d5565b611da6806200052c6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d15780638f9a55c01161008a578063bf474bed11610064578063bf474bed1461043c578063c9567bf914610452578063dd62ed3e14610467578063ec1f3f63146104ad57600080fd5b80638f9a55c0146103d657806395d89b41146103ec578063a9059cbb1461041c57600080fd5b806370a0823114610318578063715018a61461034e578063751039fc146103635780637d1db4a5146103785780638cd4426d1461038e5780638da5cb5b146103ae57600080fd5b8063313ce56711610123578063313ce567146102595780634c8afff41461027557806351bc3c851461029557806356ec63a5146102aa578063685ea783146102ca5780636fc3eaec1461030357600080fd5b806306fdde0314610176578063095ea7b3146101b95780630faee56f146101e9578063109daa991461020d57806318160ddd1461022457806323b872dd1461023957600080fd5b3661017157005b600080fd5b34801561018257600080fd5b506040805180820190915260088152672237b3b2902b30b760c11b60208201525b6040516101b09190611943565b60405180910390f35b3480156101c557600080fd5b506101d96101d43660046119a7565b6104cd565b60405190151581526020016101b0565b3480156101f557600080fd5b506101ff60135481565b6040519081526020016101b0565b34801561021957600080fd5b506102226104e4565b005b34801561023057600080fd5b506101ff610554565b34801561024557600080fd5b506101d96102543660046119d3565b610576565b34801561026557600080fd5b50604051600981526020016101b0565b34801561028157600080fd5b50610222610290366004611a14565b6105df565b3480156102a157600080fd5b5061022261062a565b3480156102b657600080fd5b506102226102c5366004611a14565b61067d565b3480156102d657600080fd5b506101d96102e5366004611a14565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561030f57600080fd5b506102226106cb565b34801561032457600080fd5b506101ff610333366004611a14565b6001600160a01b031660009081526001602052604090205490565b34801561035a57600080fd5b506102226106f8565b34801561036f57600080fd5b5061022261076c565b34801561038457600080fd5b506101ff60105481565b34801561039a57600080fd5b506102226103a93660046119a7565b610829565b3480156103ba57600080fd5b506000546040516001600160a01b0390911681526020016101b0565b3480156103e257600080fd5b506101ff60115481565b3480156103f857600080fd5b506040805180820190915260078152662227a3a2ab20a760c91b60208201526101a3565b34801561042857600080fd5b506101d96104373660046119a7565b61094c565b34801561044857600080fd5b506101ff60125481565b34801561045e57600080fd5b50610222610959565b34801561047357600080fd5b506101ff610482366004611a31565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104b957600080fd5b506102226104c8366004611a6a565b610d18565b60006104da338484610d5f565b5060015b92915050565b6000546001600160a01b031633146105175760405162461bcd60e51b815260040161050e90611a83565b60405180910390fd5b6000600e8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105626009600a611bb2565b610571906461f313f880611bc1565b905090565b6000610583848484610e83565b6105d584336105d085604051806060016040528060288152602001611d49602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906115a6565b610d5f565b5060019392505050565b6000546001600160a01b031633146106095760405162461bcd60e51b815260040161050e90611a83565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6006546001600160a01b0316336001600160a01b03161461064a57600080fd5b30600090815260016020526040902054801561066957610669816115e0565b478015610679576106798161175a565b5050565b6000546001600160a01b031633146106a75760405162461bcd60e51b815260040161050e90611a83565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6006546001600160a01b0316336001600160a01b0316146106eb57600080fd5b476106f58161175a565b50565b6000546001600160a01b031633146107225760405162461bcd60e51b815260040161050e90611a83565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107965760405162461bcd60e51b815260040161050e90611a83565b6107a26009600a611bb2565b6107b1906461f313f880611bc1565b6010556107c06009600a611bb2565b6107cf906461f313f880611bc1565b6011556015805460ff60b81b191690557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61080c6009600a611bb2565b61081b906461f313f880611bc1565b60405190815260200161054a565b6006546001600160a01b0316336001600160a01b03161461084957600080fd5b6040516370a0823160e01b81523060048201526000906108cd906064906108c79085906001600160a01b038816906370a0823190602401602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611bd8565b90611794565b9061181d565b60065460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af1158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190611bf1565b50505050565b60006104da338484610e83565b6000546001600160a01b031633146109835760405162461bcd60e51b815260040161050e90611a83565b601554600160a01b900460ff16156109dd5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161050e565b601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155610a27903090610a186009600a611bb2565b6105d0906461f313f880611bc1565b601460009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190611c13565b6001600160a01b031663c9c6539630601460009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190611c13565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190611c13565b601580546001600160a01b039283166001600160a01b03199091161790556014541663f305d7194730610bdd816001600160a01b031660009081526001602052604090205490565b600080610bf26000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c5a573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c7f9190611c30565b505060155460145460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfc9190611bf1565b506015805463ffff00ff60a01b1916630101000160a01b179055565b6006546001600160a01b0316336001600160a01b031614610d3857600080fd5b6009548111158015610d4c5750600a548111155b610d5557600080fd5b6009819055600a55565b6001600160a01b038316610dc15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050e565b6001600160a01b038216610e225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ee75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050e565b6001600160a01b038216610f495760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050e565b60008111610fab5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161050e565b600080546001600160a01b03858116911614801590610fd857506000546001600160a01b03848116911614155b15611463576001600160a01b03841660009081526004602052604090205460ff1615801561101f57506001600160a01b03831660009081526004602052604090205460ff16155b801561103b57503260009081526004602052604090205460ff16155b61104457600080fd5b601554600160b81b900460ff161561114a576000546001600160a01b0384811691161480159061108257506014546001600160a01b03848116911614155b801561109c57506015546001600160a01b03848116911614155b1561114a573260009081526005602052604090205443116111375760405162461bcd60e51b815260206004820152604960248201527f5f7472616e736665723a3a205472616e736665722044656c617920656e61626c60448201527f65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b6064820152681030b63637bbb2b21760b91b608482015260a40161050e565b3260009081526005602052604090204390555b600f5460000361117d5761117a60646108c7600b54600f541161116f57600754611173565b6009545b8590611794565b90505b600f54156111a25761119f60646108c7600e548561179490919063ffffffff16565b90505b6015546001600160a01b0385811691161480156111cd57506014546001600160a01b03848116911614155b80156111f257506001600160a01b03831660009081526003602052604090205460ff16155b156112f7576010548211156112495760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161050e565b6011548261126c856001600160a01b031660009081526001602052604090205490565b6112769190611c5e565b11156112c45760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161050e565b6112df60646108c7600b54600f541161116f57600754611173565b600f805491925060006112f183611c71565b91905055505b6015546001600160a01b03848116911614801561131d57506001600160a01b0384163014155b1561134a5761134760646108c7600c54600f541161133d57600854611173565b600a548590611794565b90505b30600090815260016020526040902054601554600160a81b900460ff1615801561138157506015546001600160a01b038581169116145b80156113965750601554600160b01b900460ff165b80156113a3575060125481115b80156113b25750600d54600f54115b15611461576017544311156113c75760006016555b6003601654106114195760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161050e565b6114366114318461142c8460135461185f565b61185f565b6115e0565b478015611446576114464761175a565b6016805490600061145683611c71565b909155505043601755505b505b80156114dd57306000908152600160205260409020546114839082611874565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114d49085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461150090836118d3565b6001600160a01b03851660009081526001602052604090205561154561152683836118d3565b6001600160a01b03851660009081526001602052604090205490611874565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61158f85856118d3565b60405190815260200160405180910390a350505050565b600081848411156115ca5760405162461bcd60e51b815260040161050e9190611943565b5060006115d78486611c8a565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061162857611628611c9d565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a59190611c13565b816001815181106116b8576116b8611c9d565b6001600160a01b0392831660209182029290920101526014546116de9130911684610d5f565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac94790611717908590600090869030904290600401611cb3565b600060405180830381600087803b15801561173157600080fd5b505af1158015611745573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6006546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610679573d6000803e3d6000fd5b6000826000036117a6575060006104de565b60006117b28385611bc1565b9050826117bf8583611d26565b146118165760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161050e565b9392505050565b600061181683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611915565b600081831161186e5782611816565b50919050565b6000806118818385611c5e565b9050838110156118165760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161050e565b600061181683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115a6565b600081836119365760405162461bcd60e51b815260040161050e9190611943565b5060006115d78486611d26565b60006020808352835180602085015260005b8181101561197157858101830151858201604001528201611955565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106f557600080fd5b600080604083850312156119ba57600080fd5b82356119c581611992565b946020939093013593505050565b6000806000606084860312156119e857600080fd5b83356119f381611992565b92506020840135611a0381611992565b929592945050506040919091013590565b600060208284031215611a2657600080fd5b813561181681611992565b60008060408385031215611a4457600080fd5b8235611a4f81611992565b91506020830135611a5f81611992565b809150509250929050565b600060208284031215611a7c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b09578160001904821115611aef57611aef611ab8565b80851615611afc57918102915b93841c9390800290611ad3565b509250929050565b600082611b20575060016104de565b81611b2d575060006104de565b8160018114611b435760028114611b4d57611b69565b60019150506104de565b60ff841115611b5e57611b5e611ab8565b50506001821b6104de565b5060208310610133831016604e8410600b8410161715611b8c575081810a6104de565b611b968383611ace565b8060001904821115611baa57611baa611ab8565b029392505050565b600061181660ff841683611b11565b80820281158282048414176104de576104de611ab8565b600060208284031215611bea57600080fd5b5051919050565b600060208284031215611c0357600080fd5b8151801515811461181657600080fd5b600060208284031215611c2557600080fd5b815161181681611992565b600080600060608486031215611c4557600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104de576104de611ab8565b600060018201611c8357611c83611ab8565b5060010190565b818103818111156104de576104de611ab8565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d055784516001600160a01b031683529383019391830191600101611ce0565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d4357634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209b6045c031559f6b9a9675767e8d4a755701a07d79ba7cfd9982ee064882f8d664736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
