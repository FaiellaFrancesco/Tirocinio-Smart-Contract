/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  FrogMan,
  FrogManInterface,
} from "../../../medium/0x626eb8ede120825169feb294bf21ba912cede10d.sol/FrogMan";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceBuyTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceSellTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260186006556017600755600060085560006009556017600a556017600b556017600c556000600d556000600e5560646009600a620000439190620003a4565b62000054906461f313f880620003bc565b620000609190620003d6565b6200006d906002620003bc565b600f556064620000806009600a620003a4565b62000091906461f313f880620003bc565b6200009d9190620003d6565b620000aa906002620003bc565b6010556103e8620000be6009600a620003a4565b620000cf906461f313f880620003bc565b620000db9190620003d6565b620000e8906001620003bc565b6011556064620000fb6009600a620003a4565b6200010c906461f313f880620003bc565b620001189190620003d6565b62000125906001620003bc565b6012556014805461ffff60a81b1916905560006015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001a16009600a620003a4565b620001b2906461f313f880620003bc565b306000908152600160208190526040822092909255600390620001dd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553080825260039094528281208054861660019081179091556005549092168152918220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002676009600a620003a4565b62000278906461f313f880620003bc565b60405190815260200160405180910390a3620003f9565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002e6578160001904821115620002ca57620002ca6200028f565b80851615620002d857918102915b93841c9390800290620002aa565b509250929050565b600082620002ff575060016200039e565b816200030e575060006200039e565b8160018114620003275760028114620003325762000352565b60019150506200039e565b60ff8411156200034657620003466200028f565b50506001821b6200039e565b5060208310610133831016604e8410600b841016171562000377575081810a6200039e565b620003838383620002a5565b80600019048211156200039a576200039a6200028f565b0290505b92915050565b6000620003b560ff841683620002ee565b9392505050565b80820281158282048414176200039e576200039e6200028f565b600082620003f457634e487b7160e01b600052601260045260246000fd5b500490565b611d2880620004096000396000f3fe6080604052600436106101855760003560e01c8063751039fc116100d1578063bf474bed1161008a578063d34628cc11610064578063d34628cc14610461578063dd62ed3e14610481578063ec1f3f63146104c7578063f2fde38b146104e757600080fd5b8063bf474bed14610420578063c36956a014610436578063c9567bf91461044c57600080fd5b8063751039fc146103675780637d1db4a51461037c5780638da5cb5b146103925780638f9a55c0146103ba57806395d89b41146103d0578063a9059cbb1461040057600080fd5b8063313ce5671161013e57806351bc3c851161011857806351bc3c85146102f25780636fc3eaec1461030757806370a082311461031c578063715018a61461035257600080fd5b8063313ce5671461027b57806331c2d847146102975780633bbac579146102b957600080fd5b806306fdde0314610191578063095ea7b3146101dc5780630c1930451461020c5780630faee56f1461023057806318160ddd1461024657806323b872dd1461025b57600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b5060408051808201909152601081526f2637ab32a630a73210233927b3a6b0a760811b60208201525b6040516101d391906117f6565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004611869565b610507565b60405190151581526020016101d3565b34801561021857600080fd5b50610222600a5481565b6040519081526020016101d3565b34801561023c57600080fd5b5061022260125481565b34801561025257600080fd5b5061022261051e565b34801561026757600080fd5b506101fc610276366004611895565b610540565b34801561028757600080fd5b50604051600981526020016101d3565b3480156102a357600080fd5b506102b76102b23660046118ec565b6105a9565b005b3480156102c557600080fd5b506101fc6102d43660046119b1565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102fe57600080fd5b506102b7610648565b34801561031357600080fd5b506102b7610697565b34801561032857600080fd5b506102226103373660046119b1565b6001600160a01b031660009081526001602052604090205490565b34801561035e57600080fd5b506102b76106c4565b34801561037357600080fd5b506102b7610738565b34801561038857600080fd5b50610222600f5481565b34801561039e57600080fd5b506000546040516001600160a01b0390911681526020016101d3565b3480156103c657600080fd5b5061022260105481565b3480156103dc57600080fd5b50604080518082019091526007815266233937b3a6b0b760c91b60208201526101c6565b34801561040c57600080fd5b506101fc61041b366004611869565b6107ed565b34801561042c57600080fd5b5061022260115481565b34801561044257600080fd5b50610222600b5481565b34801561045857600080fd5b506102b76107fa565b34801561046d57600080fd5b506102b761047c3660046118ec565b610bb7565b34801561048d57600080fd5b5061022261049c3660046119ce565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104d357600080fd5b506102b76104e2366004611a07565b610c49565b3480156104f357600080fd5b506102b76105023660046119b1565b610c90565b6000610514338484610d7a565b5060015b92915050565b600061052c6009600a611b1a565b61053b906461f313f880611b29565b905090565b600061054d848484610e9e565b61059f843361059a85604051806060016040528060288152602001611ccb602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611459565b610d7a565b5060019392505050565b6000546001600160a01b031633146105dc5760405162461bcd60e51b81526004016105d390611b40565b60405180910390fd5b60005b81518110156106445760006004600084848151811061060057610600611b75565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061063c81611b8b565b9150506105df565b5050565b6005546001600160a01b0316336001600160a01b03161461066857600080fd5b3060009081526001602052604090205480156106875761068781611493565b478015610644576106448161160d565b6005546001600160a01b0316336001600160a01b0316146106b757600080fd5b476106c18161160d565b50565b6000546001600160a01b031633146106ee5760405162461bcd60e51b81526004016105d390611b40565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107625760405162461bcd60e51b81526004016105d390611b40565b61076e6009600a611b1a565b61077d906461f313f880611b29565b600f5561078c6009600a611b1a565b61079b906461f313f880611b29565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107cb6009600a611b1a565b6107da906461f313f880611b29565b60405190815260200160405180910390a1565b6000610514338484610e9e565b6000546001600160a01b031633146108245760405162461bcd60e51b81526004016105d390611b40565b601454600160a01b900460ff161561087e5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105d3565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108c89030906108b96009600a611b1a565b61059a906461f313f880611b29565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190611ba4565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611ba4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190611ba4565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a7e816001600160a01b031660009081526001602052604090205490565b600080610a936000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610afb573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b209190611bc1565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611bef565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610be15760405162461bcd60e51b81526004016105d390611b40565b60005b815181101561064457600160046000848481518110610c0557610c05611b75565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c4181611b8b565b915050610be4565b6005546001600160a01b0316336001600160a01b031614610c6957600080fd5b6008548111158015610c7d57506009548111155b610c8657600080fd5b6008819055600955565b6000546001600160a01b03163314610cba5760405162461bcd60e51b81526004016105d390611b40565b6001600160a01b038116610d1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610ddc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d3565b6001600160a01b038216610e3d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d3565b6001600160a01b038216610f645760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d3565b60008111610fc65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105d3565b600080546001600160a01b03858116911614801590610ff357506000546001600160a01b03848116911614155b15611316576001600160a01b03841660009081526004602052604090205460ff1615801561103a57506001600160a01b03831660009081526004602052604090205460ff16155b61104357600080fd5b61106f6064611069600a54600e541161105e57600654611062565b6008545b8590611647565b906116d0565b6014549091506001600160a01b03858116911614801561109d57506013546001600160a01b03848116911614155b80156110c257506001600160a01b03831660009081526003602052604090205460ff16155b156111aa57600f548211156111195760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016105d3565b6010548261113c856001600160a01b031660009081526001602052604090205490565b6111469190611c11565b11156111945760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105d3565b600e80549060006111a483611b8b565b91905055505b6014546001600160a01b0384811691161480156111d057506001600160a01b0384163014155b156111fd576111fa6064611069600b54600e54116111f057600754611062565b6009548590611647565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561123457506014546001600160a01b038581169116145b80156112495750601454600160b01b900460ff165b8015611256575060115481115b80156112655750600c54600e54115b156113145760165443111561127a5760006015555b6005601554106112cc5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920352073656c6c732070657220626c6f636b2100000000000000000060448201526064016105d3565b6112e96112e4846112df84601254611712565b611712565b611493565b4780156112f9576112f94761160d565b6015805490600061130983611b8b565b909155505043601655505b505b801561139057306000908152600160205260409020546113369082611727565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113879085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113b39083611786565b6001600160a01b0385166000908152600160205260409020556113f86113d98383611786565b6001600160a01b03851660009081526001602052604090205490611727565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114428585611786565b60405190815260200160405180910390a350505050565b6000818484111561147d5760405162461bcd60e51b81526004016105d391906117f6565b50600061148a8486611c24565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106114db576114db611b75565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115589190611ba4565b8160018151811061156b5761156b611b75565b6001600160a01b0392831660209182029290920101526013546115919130911684610d7a565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906115ca908590600090869030904290600401611c37565b600060405180830381600087803b1580156115e457600080fd5b505af11580156115f8573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610644573d6000803e3d6000fd5b60008260000361165957506000610518565b60006116658385611b29565b9050826116728583611ca8565b146116c95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016105d3565b9392505050565b60006116c983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506117c8565b600081831161172157826116c9565b50919050565b6000806117348385611c11565b9050838110156116c95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105d3565b60006116c983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611459565b600081836117e95760405162461bcd60e51b81526004016105d391906117f6565b50600061148a8486611ca8565b600060208083528351808285015260005b8181101561182357858101830151858201604001528201611807565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106c157600080fd5b803561186481611844565b919050565b6000806040838503121561187c57600080fd5b823561188781611844565b946020939093013593505050565b6000806000606084860312156118aa57600080fd5b83356118b581611844565b925060208401356118c581611844565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118ff57600080fd5b823567ffffffffffffffff8082111561191757600080fd5b818501915085601f83011261192b57600080fd5b81358181111561193d5761193d6118d6565b8060051b604051601f19603f83011681018181108582111715611962576119626118d6565b60405291825284820192508381018501918883111561198057600080fd5b938501935b828510156119a55761199685611859565b84529385019392850192611985565b98975050505050505050565b6000602082840312156119c357600080fd5b81356116c981611844565b600080604083850312156119e157600080fd5b82356119ec81611844565b915060208301356119fc81611844565b809150509250929050565b600060208284031215611a1957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a71578160001904821115611a5757611a57611a20565b80851615611a6457918102915b93841c9390800290611a3b565b509250929050565b600082611a8857506001610518565b81611a9557506000610518565b8160018114611aab5760028114611ab557611ad1565b6001915050610518565b60ff841115611ac657611ac6611a20565b50506001821b610518565b5060208310610133831016604e8410600b8410161715611af4575081810a610518565b611afe8383611a36565b8060001904821115611b1257611b12611a20565b029392505050565b60006116c960ff841683611a79565b808202811582820484141761051857610518611a20565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611b9d57611b9d611a20565b5060010190565b600060208284031215611bb657600080fd5b81516116c981611844565b600080600060608486031215611bd657600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611c0157600080fd5b815180151581146116c957600080fd5b8082018082111561051857610518611a20565b8181038181111561051857610518611a20565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c875784516001600160a01b031683529383019391830191600101611c62565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611cc557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220dd4a1774df23437fb558d664a3bc034ed787e673a7e0d8312ae33118c9f7d13764736f6c63430008150033";

type FrogManConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FrogManConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FrogMan__factory extends ContractFactory {
  constructor(...args: FrogManConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FrogMan & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FrogMan__factory {
    return super.connect(runner) as FrogMan__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FrogManInterface {
    return new Interface(_abi) as FrogManInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FrogMan {
    return new Contract(address, _abi, runner) as unknown as FrogMan;
  }
}
