/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Loopy,
  LoopyInterface,
} from "../../../medium/0x547843cafb6d9b6ea56904ffd66a664c6f4167bf.sol/Loopy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "clearStuckERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
    ],
    name: "initiateCheck",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556017600a556017600b556017600c556046600d556000600e556012600a620000419190620004f0565b620000509062e4e1c062000508565b600f55620000616012600a620004f0565b62000071906301312d0062000508565b601055620000826012600a620004f0565b62000091906298968062000508565b601155620000a26012600a620004f0565b620000b1906298968062000508565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013b6012600a620004f0565b6200014b90633b9aca0062000508565b336000908152600160208190526040822092909255600390620001766000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600384528281208054861660019081179091556005549092168152829020805490941617909255601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155825163c45a015560e01b81529251909263c45a01559260048083019391928290030181865afa1580156200022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000255919062000522565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002de919062000522565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200032c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000352919062000522565b601480546001600160a01b0319166001600160a01b03929092169190911790556200037a3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003b46012600a620004f0565b620003c490633b9aca0062000508565b60405190815260200160405180910390a36200054d565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000432578160001904821115620004165762000416620003db565b808516156200042457918102915b93841c9390800290620003f6565b509250929050565b6000826200044b57506001620004ea565b816200045a57506000620004ea565b81600181146200047357600281146200047e576200049e565b6001915050620004ea565b60ff841115620004925762000492620003db565b50506001821b620004ea565b5060208310610133831016604e8410600b8410161715620004c3575081810a620004ea565b620004cf8383620003f1565b8060001904821115620004e657620004e6620003db565b0290505b92915050565b60006200050160ff8416836200043a565b9392505050565b8082028115828204841417620004ea57620004ea620003db565b6000602082840312156200053557600080fd5b81516001600160a01b03811681146200050157600080fd5b611d4a806200055d6000396000f3fe60806040526004361061016a5760003560e01c8063715018a6116100d15780639bd4ff781161008a578063c9567bf911610064578063c9567bf914610438578063d34628cc1461044d578063dd62ed3e1461046d578063ec1f3f63146104b357600080fd5b80639bd4ff78146103e2578063a9059cbb14610402578063bf474bed1461042257600080fd5b8063715018a614610336578063751039fc1461034b5780637d1db4a5146103605780638da5cb5b146103765780638f9a55c01461039e57806395d89b41146103b457600080fd5b8063313ce56711610123578063313ce5671461025657806331c2d847146102725780633bbac5791461029257806351bc3c85146102cb5780636e26124a146102e057806370a082311461030057600080fd5b806306fdde0314610176578063095ea7b3146101b65780630faee56f146101e6578063109daa991461020a57806318160ddd1461022157806323b872dd1461023657600080fd5b3661017157005b600080fd5b34801561018257600080fd5b506040805180820190915260058152644c6f6f707960d81b60208201525b6040516101ad91906117e0565b60405180910390f35b3480156101c257600080fd5b506101d66101d1366004611856565b6104d3565b60405190151581526020016101ad565b3480156101f257600080fd5b506101fc60125481565b6040519081526020016101ad565b34801561021657600080fd5b5061021f6104ea565b005b34801561022d57600080fd5b506101fc61055a565b34801561024257600080fd5b506101d6610251366004611882565b61057b565b34801561026257600080fd5b50604051601281526020016101ad565b34801561027e57600080fd5b5061021f61028d3660046118d9565b6105e4565b34801561029e57600080fd5b506101d66102ad36600461199e565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102d757600080fd5b5061021f61067a565b3480156102ec57600080fd5b5061021f6102fb366004611856565b6106e0565b34801561030c57600080fd5b506101fc61031b36600461199e565b6001600160a01b031660009081526001602052604090205490565b34801561034257600080fd5b5061021f61080d565b34801561035757600080fd5b5061021f610881565b34801561036c57600080fd5b506101fc600f5481565b34801561038257600080fd5b506000546040516001600160a01b0390911681526020016101ad565b3480156103aa57600080fd5b506101fc60105481565b3480156103c057600080fd5b506040805180820190915260058152644c4f4f505960d81b60208201526101a0565b3480156103ee57600080fd5b506101fc6103fd3660046119bb565b61092e565b34801561040e57600080fd5b506101d661041d366004611856565b61093a565b34801561042e57600080fd5b506101fc60115481565b34801561044457600080fd5b5061021f610947565b34801561045957600080fd5b5061021f6104683660046118d9565b610baf565b34801561047957600080fd5b506101fc6104883660046119d4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104bf57600080fd5b5061021f6104ce3660046119bb565b610c41565b60006104e0338484610c88565b5060015b92915050565b6000546001600160a01b0316331461051d5760405162461bcd60e51b815260040161051490611a0d565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105686012600a611b3c565b61057690633b9aca00611b4b565b905090565b6000610588848484610dac565b6105da84336105d585604051806060016040528060288152602001611ced602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906113c7565b610c88565b5060019392505050565b6000546001600160a01b0316331461060e5760405162461bcd60e51b815260040161051490611a0d565b60005b81518110156106765760006004600084848151811061063257610632611b62565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061066e81611b78565b915050610611565b5050565b6005546001600160a01b0316336001600160a01b03161461069a57600080fd5b3060009081526001602052604090205480158015906106c25750601454600160a81b900460ff165b156106d0576106d081611401565b478015610676576106768161157b565b6000546001600160a01b0316331461070a5760405162461bcd60e51b815260040161051490611a0d565b6040516370a0823160e01b815230600482015260009061078e906064906107889085906001600160a01b038816906370a0823190602401602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190611b91565b906115b5565b9061163e565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190611baa565b50505050565b6000546001600160a01b031633146108375760405162461bcd60e51b815260040161051490611a0d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108ab5760405162461bcd60e51b815260040161051490611a0d565b6108b76012600a611b3c565b6108c590633b9aca00611b4b565b600f556108d46012600a611b3c565b6108e290633b9aca00611b4b565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6109126012600a611b3c565b61092090633b9aca00611b4b565b604051908152602001610550565b60006104e48280611680565b60006104e0338484610dac565b6000546001600160a01b031633146109715760405162461bcd60e51b815260040161051490611a0d565b601454600160a01b900460ff16156109cb5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610514565b6014546001600160a01b0316610a1a5760405162461bcd60e51b815260206004820152601460248201527314185a5c881b9bdd081a5b9a5d1a585b1a5e995960621b6044820152606401610514565b601354610a469030906001600160a01b0316610a386012600a611b3c565b6105d590633b9aca00611b4b565b6013546001600160a01b031663f305d7194730610a78816001600160a01b031660009081526001602052604090205490565b600080610a8d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610af5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b1a9190611bcc565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b979190611baa565b506014805461ffff60a01b191661010160a01b179055565b6000546001600160a01b03163314610bd95760405162461bcd60e51b815260040161051490611a0d565b60005b815181101561067657600160046000848481518110610bfd57610bfd611b62565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c3981611b78565b915050610bdc565b6005546001600160a01b0316336001600160a01b031614610c6157600080fd5b6008548111158015610c7557506009548111155b610c7e57600080fd5b6008819055600955565b6001600160a01b038316610cea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610514565b6001600160a01b038216610d4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610514565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610514565b6001600160a01b038216610e725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610514565b60008111610ed45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610514565b600080546001600160a01b03858116911614801590610f0157506000546001600160a01b03848116911614155b8015610f1b57506005546001600160a01b03848116911614155b15611284576001600160a01b03841660009081526004602052604090205460ff16158015610f6257506001600160a01b03831660009081526004602052604090205460ff16155b610f6b57600080fd5b600e54600003610f9e57610f9b6064610788600a54600e5411610f9057600654610f94565b6008545b85906115b5565b90505b600e5415610fc357610fc06064610788600d54856115b590919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fee57506013546001600160a01b03848116911614155b801561101357506001600160a01b03831660009081526003602052604090205460ff16155b1561111857600f5482111561106a5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610514565b6010548261108d856001600160a01b031660009081526001602052604090205490565b6110979190611bfa565b11156110e55760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610514565b6111006064610788600a54600e5411610f9057600654610f94565b600e8054919250600061111283611b78565b91905055505b6014546001600160a01b03848116911614801561113e57506001600160a01b0384163014155b1561116b576111686064610788600b54600e541161115e57600754610f94565b60095485906115b5565b90505b30600090815260016020526040902054601454600160b01b900460ff161580156111a257506014546001600160a01b038581169116145b80156111b75750601454600160a81b900460ff165b80156111c4575060115481115b80156111d35750600c54600e54115b15611282576016544311156111e85760006015555b60036015541061123a5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610514565b6112576112528461124d846012546116aa565b6116aa565b611401565b478015611267576112674761157b565b6015805490600061127783611b78565b909155505043601655505b505b80156112fe57306000908152600160205260409020546112a490826116bf565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112f59085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054611321908361171e565b6001600160a01b038516600090815260016020526040902055611366611347838361171e565b6001600160a01b038516600090815260016020526040902054906116bf565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6113b0858561171e565b60405190815260200160405180910390a350505050565b600081848411156113eb5760405162461bcd60e51b815260040161051491906117e0565b5060006113f88486611c0d565b95945050505050565b6014805460ff60b01b1916600160b01b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061144957611449611b62565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c69190611c20565b816001815181106114d9576114d9611b62565b6001600160a01b0392831660209182029290920101526013546114ff9130911684610c88565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611538908590600090869030904290600401611c3d565b600060405180830381600087803b15801561155257600080fd5b505af1158015611566573d6000803e3d6000fd5b50506014805460ff60b01b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610676573d6000803e3d6000fd5b6000826000036115c7575060006104e4565b60006115d38385611b4b565b9050826115e08583611cc4565b146116375760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610514565b9392505050565b600061163783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611760565b60006001600160a01b03821683186116a261169d6103e883611cd8565b61178e565b949350505050565b60008183116116b95782611637565b50919050565b6000806116cc8385611bfa565b9050838110156116375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610514565b600061163783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113c7565b600081836117815760405162461bcd60e51b815260040161051491906117e0565b5060006113f88486611cc4565b600080805b838110156117d9576117a6816001611bfa565b6117b1826002611b4b565b6117bb9190611cc4565b6117c59083611bfa565b9150806117d181611b78565b915050611793565b5092915050565b600060208083528351808285015260005b8181101561180d578581018301518582016040015282016117f1565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461184357600080fd5b50565b80356118518161182e565b919050565b6000806040838503121561186957600080fd5b82356118748161182e565b946020939093013593505050565b60008060006060848603121561189757600080fd5b83356118a28161182e565b925060208401356118b28161182e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118ec57600080fd5b823567ffffffffffffffff8082111561190457600080fd5b818501915085601f83011261191857600080fd5b81358181111561192a5761192a6118c3565b8060051b604051601f19603f8301168101818110858211171561194f5761194f6118c3565b60405291825284820192508381018501918883111561196d57600080fd5b938501935b828510156119925761198385611846565b84529385019392850192611972565b98975050505050505050565b6000602082840312156119b057600080fd5b81356116378161182e565b6000602082840312156119cd57600080fd5b5035919050565b600080604083850312156119e757600080fd5b82356119f28161182e565b91506020830135611a028161182e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a93578160001904821115611a7957611a79611a42565b80851615611a8657918102915b93841c9390800290611a5d565b509250929050565b600082611aaa575060016104e4565b81611ab7575060006104e4565b8160018114611acd5760028114611ad757611af3565b60019150506104e4565b60ff841115611ae857611ae8611a42565b50506001821b6104e4565b5060208310610133831016604e8410600b8410161715611b16575081810a6104e4565b611b208383611a58565b8060001904821115611b3457611b34611a42565b029392505050565b600061163760ff841683611a9b565b80820281158282048414176104e4576104e4611a42565b634e487b7160e01b600052603260045260246000fd5b600060018201611b8a57611b8a611a42565b5060010190565b600060208284031215611ba357600080fd5b5051919050565b600060208284031215611bbc57600080fd5b8151801515811461163757600080fd5b600080600060608486031215611be157600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104e4576104e4611a42565b818103818111156104e4576104e4611a42565b600060208284031215611c3257600080fd5b81516116378161182e565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c8d5784516001600160a01b031683529383019391830191600101611c68565b50506001600160a01b03969096166060850152505050608001529392505050565b634e487b7160e01b600052601260045260246000fd5b600082611cd357611cd3611cae565b500490565b600082611ce757611ce7611cae565b50069056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122049f344a506096dbd706304bcb3e7a16fc1a2b00e776ef6b7eaa7754b63464fa564736f6c63430008110033";

type LoopyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoopyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Loopy__factory extends ContractFactory {
  constructor(...args: LoopyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Loopy> {
    return super.deploy(overrides || {}) as Promise<Loopy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Loopy {
    return super.attach(address) as Loopy;
  }
  override connect(signer: Signer): Loopy__factory {
    return super.connect(signer) as Loopy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoopyInterface {
    return new utils.Interface(_abi) as LoopyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Loopy {
    return new Contract(address, _abi, signerOrProvider) as Loopy;
  }
}
