/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Brad,
  BradInterface,
} from "../../../medium/0xc17d82fd34d0954fccffed0b2e414534ead91c23.sol/Brad";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "TokenAddressCleared",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
    ],
    name: "ClearToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "clearStuckToken",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052601760055560176006556000600755600060085560176009556017600a556014600b556000600c556000600d5560646009600a6100419190610377565b610050906461f313f88061038d565b61005b90600261038d565b61006591906103a4565b600e5560646100766009600a610377565b610085906461f313f88061038d565b61009090600261038d565b61009a91906103a4565b600f556103e86100ac6009600a610377565b6100bb906461f313f88061038d565b6100c690600361038d565b6100d091906103a4565b60105560646100e16009600a610377565b6100f0906461f313f88061038d565b6100fb90600161038d565b61010591906103a4565b6011556013805461ffff60a81b19169055600060148190556015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556101846009600a610377565b610193906461f313f88061038d565b3360009081526001602081905260408220929092556003906101bd6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600390935281832080548516600190811790915560045490911683529120805490921617905561021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102536009600a610377565b610262906461f313f88061038d565b60405190815260200160405180910390a36103c6565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102c9578085048111156102ad576102ad610278565b60018416156102bb57908102905b60019390931c928002610292565b935093915050565b6000826102e057506001610371565b816102ed57506000610371565b8160018114610303576002811461030d57610329565b6001915050610371565b60ff84111561031e5761031e610278565b50506001821b610371565b5060208310610133831016604e8410600b841016171561034c575081810a610371565b610359600019848461028e565b806000190482111561036d5761036d610278565b0290505b92915050565b600061038660ff8416836102d1565b9392505050565b808202811582820484141761037157610371610278565b6000826103c157634e487b7160e01b600052601260045260246000fd5b500490565b611c16806103d56000396000f3fe6080604052600436106101395760003560e01c806377b54bad116100ab578063a9059cbb1161006f578063a9059cbb14610362578063bf474bed14610382578063c9567bf914610398578063dd62ed3e146103ad578063ec1f3f63146103f3578063f42938901461041357600080fd5b806377b54bad146102c15780637d1db4a5146102e15780638da5cb5b146102f75780638f9a55c01461031f57806395d89b411461033557600080fd5b806323b872dd116100fd57806323b872dd14610210578063313ce5671461023057806351bc3c851461024c578063622565891461026157806370a0823114610276578063715018a6146102ac57600080fd5b806306fdde0314610145578063095ea7b3146101905780630faee56f146101c0578063109daa99146101e457806318160ddd146101fb57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b5060408051808201909152601081526f084e4c2c8ccdee4c8408e40a6dad2e8d60831b60208201525b60405161018791906117b2565b60405180910390f35b34801561019c57600080fd5b506101b06101ab366004611815565b610428565b6040519015158152602001610187565b3480156101cc57600080fd5b506101d660115481565b604051908152602001610187565b3480156101f057600080fd5b506101f961043f565b005b34801561020757600080fd5b506101d66104af565b34801561021c57600080fd5b506101b061022b366004611841565b6104d1565b34801561023c57600080fd5b5060405160098152602001610187565b34801561025857600080fd5b506101f961053a565b34801561026d57600080fd5b506101f961058d565b34801561028257600080fd5b506101d6610291366004611882565b6001600160a01b031660009081526001602052604090205490565b3480156102b857600080fd5b506101f961063d565b3480156102cd57600080fd5b506101b06102dc366004611815565b6106b1565b3480156102ed57600080fd5b506101d6600e5481565b34801561030357600080fd5b506000546040516001600160a01b039091168152602001610187565b34801561032b57600080fd5b506101d6600f5481565b34801561034157600080fd5b50604080518082019091526004815263109c985960e21b602082015261017a565b34801561036e57600080fd5b506101b061037d366004611815565b610809565b34801561038e57600080fd5b506101d660105481565b3480156103a457600080fd5b506101f9610816565b3480156103b957600080fd5b506101d66103c836600461189f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103ff57600080fd5b506101f961040e3660046118d8565b610c13565b34801561041f57600080fd5b506101f9610c5a565b6000610435338484610ce7565b5060015b92915050565b6000546001600160a01b031633146104725760405162461bcd60e51b8152600401610469906118f1565b60405180910390fd5b6000600c8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006104bd6009600a611a23565b6104cc906461f313f880611a32565b905090565b60006104de848484610e0b565b610530843361052b85604051806060016040528060288152602001611bb9602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061141c565b610ce7565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461055a57600080fd5b3060009081526001602052604090205480156105795761057981611456565b47801561058957610589816115d0565b5050565b6000546001600160a01b031633146105b75760405162461bcd60e51b8152600401610469906118f1565b6105c36009600a611a23565b6105d2906461f313f880611a32565b600e556105e16009600a611a23565b6105f0906461f313f880611a32565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106206009600a611a23565b61062f906461f313f880611a32565b6040519081526020016104a5565b6000546001600160a01b031633146106675760405162461bcd60e51b8152600401610469906118f1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546000906001600160a01b0316336001600160a01b0316146106d457600080fd5b81600003610747576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190611a49565b91505b604080516001600160a01b0385168152602081018490527fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f910160405180910390a16004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905284169063a9059cbb906044016020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611a62565b9392505050565b6000610435338484610e0b565b6000546001600160a01b031633146108405760405162461bcd60e51b8152600401610469906118f1565b601354600160a01b900460ff161561089a5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610469565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108e49030906108d56009600a611a23565b61052b906461f313f880611a32565b61091f3061037d6127106109196125e4610913336001600160a01b031660009081526001602052604090205490565b9061160a565b9061168c565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109979190611a84565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190611a84565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e9190611a84565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d7194730610ad6816001600160a01b031660009081526001602052604090205490565b600080610aeb6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b53573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b789190611aa1565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf59190611a62565b506013805462ff00ff60a01b19166201000160a01b17905543601655565b6004546001600160a01b0316336001600160a01b031614610c3357600080fd5b6007548111158015610c4757506008548111155b610c5057600080fd5b6007819055600855565b6004546001600160a01b0316336001600160a01b031614610c7a57600080fd5b4780610cdb5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726163742062616c616e6365206d7573742062652067726561746572604482015269207468616e207a65726f60b01b6064820152608401610469565b610ce4816115d0565b50565b6001600160a01b038316610d495760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610469565b6001600160a01b038216610daa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610469565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e6f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610469565b6001600160a01b038216610ed15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610469565b60008111610f335760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610469565b600080546001600160a01b03858116911614801590610f6057506000546001600160a01b03848116911614155b156112d957600d54600003610f9857610f956064610919600954600d5411610f8a57600554610f8e565b6007545b859061160a565b90505b600d5415610fbd57610fba6064610919600c548561160a90919063ffffffff16565b90505b6016544303611018576023600d54106110185760405162461bcd60e51b815260206004820181905260248201527f457863656564732062757973206f6e2074686520666972737420626c6f636b2e6044820152606401610469565b6013546001600160a01b03858116911614801561104357506012546001600160a01b03848116911614155b801561106857506001600160a01b03831660009081526003602052604090205460ff16155b1561116d57600e548211156110bf5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610469565b600f54826110e2856001600160a01b031660009081526001602052604090205490565b6110ec9190611acf565b111561113a5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610469565b6111556064610919600954600d5411610f8a57600554610f8e565b600d8054919250600061116783611ae2565b91905055505b6013546001600160a01b03848116911614801561119357506001600160a01b0384163014155b156111c0576111bd6064610919600a54600d54116111b357600654610f8e565b600854859061160a565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156111f757506013546001600160a01b038581169116145b801561120c5750601354600160b01b900460ff165b8015611219575060105481115b80156112285750600b54600d54115b156112d75760155443111561123d5760006014555b60036014541061128f5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610469565b6112ac6112a7846112a2846011546116ce565b6116ce565b611456565b4780156112bc576112bc476115d0565b601480549060006112cc83611ae2565b909155505043601555505b505b801561135357306000908152600160205260409020546112f990826116e3565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061134a9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113769083611742565b6001600160a01b0385166000908152600160205260409020556113bb61139c8383611742565b6001600160a01b038516600090815260016020526040902054906116e3565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114058585611742565b60405190815260200160405180910390a350505050565b600081848411156114405760405162461bcd60e51b815260040161046991906117b2565b50600061144d8486611afb565b95945050505050565b6013805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061149e5761149e611b0e565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151b9190611a84565b8160018151811061152e5761152e611b0e565b6001600160a01b0392831660209182029290920101526012546115549130911684610ce7565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac9479061158d908590600090869030904290600401611b24565b600060405180830381600087803b1580156115a757600080fd5b505af11580156115bb573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610589573d6000803e3d6000fd5b60008260000361161c57506000610439565b60006116288385611a32565b9050826116358583611b96565b146108025760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610469565b600061080283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611784565b60008183116116dd5782610802565b50919050565b6000806116f08385611acf565b9050838110156108025760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610469565b600061080283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061141c565b600081836117a55760405162461bcd60e51b815260040161046991906117b2565b50600061144d8486611b96565b602081526000825180602084015260005b818110156117e057602081860181015160408684010152016117c3565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610ce457600080fd5b6000806040838503121561182857600080fd5b823561183381611800565b946020939093013593505050565b60008060006060848603121561185657600080fd5b833561186181611800565b9250602084013561187181611800565b929592945050506040919091013590565b60006020828403121561189457600080fd5b813561080281611800565b600080604083850312156118b257600080fd5b82356118bd81611800565b915060208301356118cd81611800565b809150509250929050565b6000602082840312156118ea57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156119775780850481111561195b5761195b611926565b600184161561196957908102905b60019390931c928002611940565b935093915050565b60008261198e57506001610439565b8161199b57506000610439565b81600181146119b157600281146119bb576119d7565b6001915050610439565b60ff8411156119cc576119cc611926565b50506001821b610439565b5060208310610133831016604e8410600b84101617156119fa575081810a610439565b611a07600019848461193c565b8060001904821115611a1b57611a1b611926565b029392505050565b600061080260ff84168361197f565b808202811582820484141761043957610439611926565b600060208284031215611a5b57600080fd5b5051919050565b600060208284031215611a7457600080fd5b8151801515811461080257600080fd5b600060208284031215611a9657600080fd5b815161080281611800565b600080600060608486031215611ab657600080fd5b5050815160208301516040909301519094929350919050565b8082018082111561043957610439611926565b600060018201611af457611af4611926565b5060010190565b8181038181111561043957610439611926565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611b765783516001600160a01b0316835260209384019390920191600101611b4f565b50506001600160a01b039590951660608401525050608001529392505050565b600082611bb357634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220538429972236fe6b73f58338b7cb1eed8cbaf862497df54226c9de0b9eb21c1564736f6c634300081e0033";

type BradConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BradConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Brad__factory extends ContractFactory {
  constructor(...args: BradConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Brad & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Brad__factory {
    return super.connect(runner) as Brad__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BradInterface {
    return new Interface(_abi) as BradInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Brad {
    return new Contract(address, _abi, runner) as unknown as Brad;
  }
}
