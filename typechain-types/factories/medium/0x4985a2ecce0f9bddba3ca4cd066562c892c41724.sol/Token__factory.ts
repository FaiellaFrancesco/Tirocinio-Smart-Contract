/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x4985a2ecce0f9bddba3ca4cd066562c892c41724.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600555600a6006556000600755600760085560006009556000600b556009600a610030919061031a565b61003e90633b9aca00610330565b600c55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906003610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906061610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b03166000600080516020611c94833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906003610330565b6101b19190610347565b60405190815260200160405180910390a3306000600080516020611c9483398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906061610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b61191c806103786000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a57806395d89b411161005957806395d89b41146100f8578063a9059cbb14610288578063dd62ed3e146102a8578063fb201b1d146102ee57600080fd5b806370a08231146101f5578063715018a61461022b578063798e5036146102405780638da5cb5b1461026057600080fd5b806318160ddd116100c657806318160ddd1461018d57806320800a00146101a257806323b872dd146101b9578063313ce567146101d957600080fd5b806306fdde03146100f8578063095ea7b3146101395780630faee56f1461016957600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506040805180820182526009815268537570657247726f6b60b81b6020820152905161013091906113d7565b60405180910390f35b34801561014557600080fd5b5061015961015436600461143a565b610303565b6040519015158152602001610130565b34801561017557600080fd5b5061017f600c5481565b604051908152602001610130565b34801561019957600080fd5b5061017f61031a565b3480156101ae57600080fd5b506101b761033b565b005b3480156101c557600080fd5b506101596101d4366004611466565b6103aa565b3480156101e557600080fd5b5060405160098152602001610130565b34801561020157600080fd5b5061017f6102103660046114a7565b6001600160a01b031660009081526001602052604090205490565b34801561023757600080fd5b506101b7610455565b34801561024c57600080fd5b506101b761025b3660046114a7565b6104c9565b34801561026c57600080fd5b506000546040516001600160a01b039091168152602001610130565b34801561029457600080fd5b506101596102a336600461143a565b610507565b3480156102b457600080fd5b5061017f6102c33660046114c4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102fa57600080fd5b506101b7610514565b60006103103384846108cc565b5060015b92915050565b60006103286009600a6115fa565b61033690633b9aca00611609565b905090565b6000546001600160a01b0316331461036e5760405162461bcd60e51b815260040161036590611620565b60405180910390fd5b6000471161037b57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103a7573d6000803e3d6000fd5b50565b60006103b78484846109f0565b6004546001600160a01b031633148015906103f45750600e546001600160a01b03858116911614806103f457506001600160a01b03831661dead14155b1561044b5761044b8433610446856040518060600160405280602881526020016118bf602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ebd565b6108cc565b5060019392505050565b6000546001600160a01b0316331461047f5760405162461bcd60e51b815260040161036590611620565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b3360009081526003602052604090205460ff166104e557600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60006103103384846109f0565b6000546001600160a01b0316331461053e5760405162461bcd60e51b815260040161036590611620565b600e54600160a01b900460ff16156105985760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610365565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105e19030906105d36009600a6115fa565b61044690633b9aca00611609565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190611655565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190611655565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611655565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d7194730610797816001600160a01b031660009081526001602052604090205490565b6000806107ac6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610814573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108399190611672565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a791906116a0565b6001600160a01b03831661092e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610365565b6001600160a01b03821661098f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610365565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a545760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610365565b6001600160a01b038216610ab65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610365565b60008111610b185760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610365565b60006001600160a01b0384163014801590610b3c57506001600160a01b0383163014155b15610d5f57600e54600160a81b900460ff16610b8157610b7e6064610b7860085460095411610b6d57600654610b71565b6007545b8590610ef7565b90610f80565b90505b600e546001600160a01b038581169116148015610bac5750600d546001600160a01b03848116911614155b8015610bd157506001600160a01b03831660009081526003602052604090205460ff16155b8015610beb57506004546001600160a01b03848116911614155b15610c305743600a5414610c03576000600b5543600a555b81600b6000828254610c1591906116c2565b909155505060098054906000610c2a836116d5565b91905055505b600e546001600160a01b038481169116148015610c5657506001600160a01b0384163014155b15610cb157610c63610fc2565b600b541080610c74575043600a5414155b610cb15760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b6044820152606401610365565b30600090815260016020526040902054600e54600160a81b900460ff16158015610ce85750600e546001600160a01b038581169116145b8015610cfd5750600e54600160b01b900460ff165b8015610d1757506004546001600160a01b03868116911614155b15610d5d578015610d51576000600c548211610d335781610d37565b600c545b9050610d4f818511610d495784611150565b81611150565b505b47610d5b476112ca565b505b505b6001600160a01b038416600090815260016020526040902054610d829083611308565b6001600160a01b038516600090815260016020526040902055610dc7610da88383611308565b6001600160a01b0385166000908152600160205260409020549061134a565b6001600160a01b0384166000908152600160205260409020558015610e5a5730600090815260016020526040902054610e00908261134a565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e519085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eb7576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ea58585611308565b60405190815260200160405180910390a35b50505050565b60008184841115610ee15760405162461bcd60e51b815260040161036591906113d7565b506000610eee84866116ee565b95945050505050565b600082600003610f0957506000610314565b6000610f158385611609565b905082610f228583611701565b14610f795760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610365565b9392505050565b6000610f7983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113a9565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110549190611655565b8160008151811061106757611067611739565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061109b5761109b611739565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f906110e7906729a2241af62c0000908690600401611794565b600060405180830381865afa158015611104573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261112c91908101906117b5565b90508060018151811061114157611141611739565b60200260200101519250505090565b600e805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061119857611198611739565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112159190611655565b8160018151811061122857611228611739565b6001600160a01b039283166020918202929092010152600d5461124e91309116846108cc565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611287908590600090869030904290600401611882565b600060405180830381600087803b1580156112a157600080fd5b505af11580156112b5573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611304573d6000803e3d6000fd5b5050565b6000610f7983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebd565b60008061135783856116c2565b905083811015610f795760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610365565b600081836113ca5760405162461bcd60e51b815260040161036591906113d7565b506000610eee8486611701565b602081526000825180602084015260005b8181101561140557602081860181015160408684010152016113e8565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103a757600080fd5b6000806040838503121561144d57600080fd5b823561145881611425565b946020939093013593505050565b60008060006060848603121561147b57600080fd5b833561148681611425565b9250602084013561149681611425565b929592945050506040919091013590565b6000602082840312156114b957600080fd5b8135610f7981611425565b600080604083850312156114d757600080fd5b82356114e281611425565b915060208301356114f281611425565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561154e57808504811115611532576115326114fd565b600184161561154057908102905b60019390931c928002611517565b935093915050565b60008261156557506001610314565b8161157257506000610314565b81600181146115885760028114611592576115ae565b6001915050610314565b60ff8411156115a3576115a36114fd565b50506001821b610314565b5060208310610133831016604e8410600b84101617156115d1575081810a610314565b6115de6000198484611513565b80600019048211156115f2576115f26114fd565b029392505050565b6000610f7960ff841683611556565b8082028115828204841417610314576103146114fd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561166757600080fd5b8151610f7981611425565b60008060006060848603121561168757600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156116b257600080fd5b81518015158114610f7957600080fd5b80820180821115610314576103146114fd565b6000600182016116e7576116e76114fd565b5060010190565b81810381811115610314576103146114fd565b60008261171e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561178a5781516001600160a01b0316865260209586019590910190600101611763565b5093949350505050565b8281526040602082015260006117ad604083018461174f565b949350505050565b6000602082840312156117c757600080fd5b815167ffffffffffffffff8111156117de57600080fd5b8201601f810184136117ef57600080fd5b805167ffffffffffffffff81111561180957611809611723565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561183657611836611723565b60405291825260208184018101929081018784111561185457600080fd5b6020850194505b838510156118775784518082526020958601959093500161185b565b509695505050505050565b85815284602082015260a0604082015260006118a160a083018661174f565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122089e69a954dde6c3c6c96d0da1ddc167f9b9e877770fb4453bf27658c688f8f9d64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
