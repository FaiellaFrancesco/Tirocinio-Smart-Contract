/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  DOGEN,
  DOGENInterface,
} from "../../../medium/0x16937ffdc72a086a5216de5d4d5ded6c8be43b8d.sol/DOGEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_taxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
    ],
    name: "assistStuckedETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a600555600a6006556000600755600060085560056009556005600a556000600b5560646009600a610037919061028b565b610045906305f5e1006102a1565b61004f91906102b8565b600c55600e805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556100bf6009600a61028b565b6100cd906305f5e1006102a1565b3060009081526001602081905260408220929092556003906100f76000546001600160a01b031690565b6001600160a01b0316815260208082019290925260409081016000908120805494151560ff199586161790553080825260039093529081208054909316600117909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101686009600a61028b565b610176906305f5e1006102a1565b60405190815260200160405180910390a36102da565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101dd578085048111156101c1576101c161018c565b60018416156101cf57908102905b60019390931c9280026101a6565b935093915050565b6000826101f457506001610285565b8161020157506000610285565b816001811461021757600281146102215761023d565b6001915050610285565b60ff8411156102325761023261018c565b50506001821b610285565b5060208310610133831016604e8410600b8410161715610260575081810a610285565b61026d60001984846101a2565b80600019048211156102815761028161018c565b0290505b92915050565b600061029a60ff8416836101e5565b9392505050565b80820281158282048414176102855761028561018c565b6000826102d557634e487b7160e01b600052601260045260246000fd5b500490565b61191d806102e96000396000f3fe6080604052600436106100e15760003560e01c806370a082311161007f5780638da5cb5b116100595780638da5cb5b1461025857806395d89b4114610280578063a9059cbb146102ae578063dd62ed3e146102ce57600080fd5b806370a08231146101f8578063715018a61461022e5780638a8c523c1461024357600080fd5b806323b872dd116100bb57806323b872dd14610184578063313ce567146101a457806334376f3b146101c057806347cca60e146101d657600080fd5b806306fdde03146100ed578063095ea7b31461013157806318160ddd1461016157600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b50604080518082019091526009815268446f6765204369747960b81b60208201525b604051610128919061140d565b60405180910390f35b34801561013d57600080fd5b5061015161014c366004611470565b610314565b6040519015158152602001610128565b34801561016d57600080fd5b5061017661032b565b604051908152602001610128565b34801561019057600080fd5b5061015161019f36600461149c565b61034c565b3480156101b057600080fd5b5060405160098152602001610128565b3480156101cc57600080fd5b50610176600c5481565b3480156101e257600080fd5b506101f66101f13660046114dd565b6103fc565b005b34801561020457600080fd5b506101766102133660046114dd565b6001600160a01b031660009081526001602052604090205490565b34801561023a57600080fd5b506101f6610447565b34801561024f57600080fd5b506101f66104f0565b34801561026457600080fd5b506000546040516001600160a01b039091168152602001610128565b34801561028c57600080fd5b506040805180820190915260058152642227a3a2a760d91b602082015261011b565b3480156102ba57600080fd5b506101516102c9366004611470565b6108db565b3480156102da57600080fd5b506101766102e93660046114fa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103213384846108e8565b5060015b92915050565b60006103396009600a611630565b610347906305f5e10061163f565b905090565b6000610359848484610a0c565b3360009081526003602052604090205460ff1615801561039b5750600e546001600160a01b038581169116148061039b57506001600160a01b03831661dead14155b156103f2576103f284336103ed856040518060600160405280602881526020016118c0602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ede565b6108e8565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461041c57600080fd5b61042547610f18565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461054a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049d565b600e54600160a01b900460ff16156105a45760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161049d565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105ed9030906105df6009600a611630565b6103ed906305f5e10061163f565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190611656565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190611656565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190611656565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d71947306107a3816001600160a01b031660009081526001602052604090205490565b6000806107b86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610820573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108459190611673565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d891906116a1565b50565b6000610321338484610a0c565b6001600160a01b03831661094a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049d565b6001600160a01b0382166109ab5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a725760405162461bcd60e51b815260206004820152602760248201527f45524332303a207472616e736665722066726f6d2074686520307864656144206044820152666164647265737360c81b606482015260840161049d565b6001600160a01b038216610ad65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e7366657220746f2074686520307864656144206164604482015264647265737360d81b606482015260840161049d565b60008111610b385760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161049d565b60006001600160a01b0384163014801590610b5c57506001600160a01b0383163014155b15610d8757610b8d6064610b87600954600b5411610b7c57600554610b80565b6007545b8590610f56565b90610fdf565b600e549091506001600160a01b038581169116148015610bbb5750600d546001600160a01b03848116911614155b8015610be057506001600160a01b03831660009081526003602052604090205460ff16155b15610c6f576001600160a01b03831661dead14610c5957610bff611021565b8210610c595760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657220416d6f756e742045786365656473206d6178537761704c6044820152631a5b5a5d60e21b606482015260840161049d565b600b8054906000610c69836116c3565b91905055505b600e546001600160a01b038481169116148015610c9557506001600160a01b0384163014155b15610cc257610cbf6064610b87600a54600b5411610cb557600654610b80565b6008548590610f56565b90505b30600090815260016020526040902054600e54600160a81b900460ff16158015610cf95750600e546001600160a01b038581169116145b8015610d0e5750600e54600160b01b900460ff165b15610d8557843b15610d595760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161049d565b8015610d7c57610d7c610d7784610d7284600c546111af565b6111af565b6111c4565b610d8547610f18565b505b8015610e015730600090815260016020526040902054610da7908261133e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610df89085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610e24908361139d565b6001600160a01b038516600090815260016020526040902055610e69610e4a838361139d565b6001600160a01b0385166000908152600160205260409020549061133e565b6001600160a01b03841660008181526001602052604090209190915561dead14610ed8576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ec6858561139d565b60405190815260200160405180910390a35b50505050565b60008184841115610f025760405162461bcd60e51b815260040161049d919061140d565b506000610f0f84866116dc565b95945050505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610f52573d6000803e3d6000fd5b5050565b600082600003610f6857506000610325565b6000610f74838561163f565b905082610f8185836116ef565b14610fd85760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161049d565b9392505050565b6000610fd883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113df565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b39190611656565b816000815181106110c6576110c6611727565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110fa576110fa611727565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111469067d02ab486cedc0000908690600401611782565b600060405180830381865afa158015611163573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118b91908101906117a3565b9050806001815181106111a0576111a0611727565b60200260200101519250505090565b60008183116111be5782610fd8565b50919050565b600e805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061120c5761120c611727565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112899190611656565b8160018151811061129c5761129c611727565b6001600160a01b039283166020918202929092010152600d546112c291309116846108e8565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112fb908590600090869030904290600401611870565b600060405180830381600087803b15801561131557600080fd5b505af1158015611329573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b60008061134b83856118ac565b905083811015610fd85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161049d565b6000610fd883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ede565b600081836114005760405162461bcd60e51b815260040161049d919061140d565b506000610f0f84866116ef565b602081526000825180602084015260005b8181101561143b576020818601810151604086840101520161141e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146108d857600080fd5b6000806040838503121561148357600080fd5b823561148e8161145b565b946020939093013593505050565b6000806000606084860312156114b157600080fd5b83356114bc8161145b565b925060208401356114cc8161145b565b929592945050506040919091013590565b6000602082840312156114ef57600080fd5b8135610fd88161145b565b6000806040838503121561150d57600080fd5b82356115188161145b565b915060208301356115288161145b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115845780850481111561156857611568611533565b600184161561157657908102905b60019390931c92800261154d565b935093915050565b60008261159b57506001610325565b816115a857506000610325565b81600181146115be57600281146115c8576115e4565b6001915050610325565b60ff8411156115d9576115d9611533565b50506001821b610325565b5060208310610133831016604e8410600b8410161715611607575081810a610325565b6116146000198484611549565b806000190482111561162857611628611533565b029392505050565b6000610fd860ff84168361158c565b808202811582820484141761032557610325611533565b60006020828403121561166857600080fd5b8151610fd88161145b565b60008060006060848603121561168857600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156116b357600080fd5b81518015158114610fd857600080fd5b6000600182016116d5576116d5611533565b5060010190565b8181038181111561032557610325611533565b60008261170c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156117785781516001600160a01b0316865260209586019590910190600101611751565b5093949350505050565b82815260406020820152600061179b604083018461173d565b949350505050565b6000602082840312156117b557600080fd5b815167ffffffffffffffff8111156117cc57600080fd5b8201601f810184136117dd57600080fd5b805167ffffffffffffffff8111156117f7576117f7611711565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561182457611824611711565b60405291825260208184018101929081018784111561184257600080fd5b6020850194505b8385101561186557845180825260209586019590935001611849565b509695505050505050565b85815284602082015260a06040820152600061188f60a083018661173d565b6001600160a01b0394909416606083015250608001529392505050565b808201808211156103255761032561153356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209d0ac75588c91a16b44992f9078954fb0463d67e0c98694713f5b3ef72ffb6b764736f6c634300081c0033";

type DOGENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DOGENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DOGEN__factory extends ContractFactory {
  constructor(...args: DOGENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DOGEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DOGEN__factory {
    return super.connect(runner) as DOGEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DOGENInterface {
    return new Interface(_abi) as DOGENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DOGEN {
    return new Contract(address, _abi, runner) as unknown as DOGEN;
  }
}
