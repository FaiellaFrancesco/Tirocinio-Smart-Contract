/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0x97a858cc69df1482cdccc858bbf55daa5b70e3e2.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260026005556000600655600260075560006008556000600a556009600a61002b919061042a565b6100389062989680610440565b600b55600d805461ffff60a81b191690556000600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100eb6009600a61042a565b6100f990633b9aca00610440565b610104906060610440565b61010e9190610457565b30600090815260016020526040902055606461012c6009600a61042a565b61013a90633b9aca00610440565b610145906002610440565b61014f9190610457565b73d8da6bf26964af9d7eed9e03e53415d37aa9604560005260016020527fb931be0b3d1fb06daf0d92e2b8dfe49ead9172e102b3af1e07a10cc29003beb255606461019c6009600a61042a565b6101aa90633b9aca00610440565b6101b5906002610440565b6101bf9190610457565b7394845333028b1204fbe14e1278fd4adde46b22ce600090815260016020527fcc89cdffe6d8d6bb620c9aae10557c2897f6e2865c73c41f65fdada66306d0af919091553090600080516020611de183398151915260646102226009600a61042a565b61023090633b9aca00610440565b61023b906060610440565b6102459190610457565b60405190815260200160405180910390a373d8da6bf26964af9d7eed9e03e53415d37aa960456000600080516020611de1833981519152606461028a6009600a61042a565b61029890633b9aca00610440565b6102a3906002610440565b6102ad9190610457565b60405190815260200160405180910390a37394845333028b1204fbe14e1278fd4adde46b22ce6000600080516020611de183398151915260646102f26009600a61042a565b61030090633b9aca00610440565b61030b906002610440565b6103159190610457565b60405190815260200160405180910390a3610479565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561037c578085048111156103605761036061032b565b600184161561036e57908102905b60019390931c928002610345565b935093915050565b60008261039357506001610424565b816103a057506000610424565b81600181146103b657600281146103c0576103dc565b6001915050610424565b60ff8411156103d1576103d161032b565b50506001821b610424565b5060208310610133831016604e8410600b84101617156103ff575081810a610424565b61040c6000198484610341565b80600019048211156104205761042061032b565b0290505b92915050565b600061043960ff841683610384565b9392505050565b80820281158282048414176104245761042461032b565b60008261047457634e487b7160e01b600052601260045260246000fd5b500490565b611959806104886000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb146102a1578063c9567bf9146102c1578063dd62ed3e146102d6578063ea414b281461031c57600080fd5b806370a08231146101fc578063715018a6146102325780638da5cb5b1461024757806395d89b411461026f57600080fd5b806318160ddd116100c657806318160ddd1461019457806320969d07146101a957806323b872dd146101c0578063313ce567146101e057600080fd5b806306fdde03146100f8578063095ea7b3146101405780630faee56f1461017057600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5060408051808201909152600d81526c27a3902a292aa6a81021a7a4a760991b60208201525b6040516101379190611414565b60405180910390f35b34801561014c57600080fd5b5061016061015b366004611477565b61033c565b6040519015158152602001610137565b34801561017c57600080fd5b50610186600b5481565b604051908152602001610137565b3480156101a057600080fd5b50610186610353565b3480156101b557600080fd5b506101be610374565b005b3480156101cc57600080fd5b506101606101db3660046114a3565b6103e3565b3480156101ec57600080fd5b5060405160098152602001610137565b34801561020857600080fd5b506101866102173660046114e4565b6001600160a01b031660009081526001602052604090205490565b34801561023e57600080fd5b506101be61048e565b34801561025357600080fd5b506000546040516001600160a01b039091168152602001610137565b34801561027b57600080fd5b506040805180820190915260098152682a292aa6a821a7a4a760b91b602082015261012a565b3480156102ad57600080fd5b506101606102bc366004611477565b610502565b3480156102cd57600080fd5b506101be61050f565b3480156102e257600080fd5b506101866102f1366004611501565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032857600080fd5b506101be6103373660046114e4565b6108c7565b6000610349338484610909565b5060015b92915050565b60006103616009600a611637565b61036f90633b9aca00611646565b905090565b6000546001600160a01b031633146103a75760405162461bcd60e51b815260040161039e9061165d565b60405180910390fd5b600047116103b457600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e0573d6000803e3d6000fd5b50565b60006103f0848484610a2d565b6004546001600160a01b0316331480159061042d5750600d546001600160a01b038581169116148061042d57506001600160a01b03831661dead14155b1561048457610484843361047f856040518060600160405280602881526020016118fc602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610efa565b610909565b5060019392505050565b6000546001600160a01b031633146104b85760405162461bcd60e51b815260040161039e9061165d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610349338484610a2d565b6000546001600160a01b031633146105395760405162461bcd60e51b815260040161039e9061165d565b600d54600160a01b900460ff16156105935760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161039e565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105dc9030906105ce6009600a611637565b61047f90633b9aca00611646565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190611692565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d99190611692565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611692565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d7194730610792816001600160a01b031660009081526001602052604090205490565b6000806107a76000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561080f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061083491906116af565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e091906116dd565b6004546001600160a01b0316336001600160a01b0316146108e757600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661096b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161039e565b6001600160a01b0382166109cc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161039e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161039e565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161039e565b60008111610b555760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161039e565b60006001600160a01b0384163014801590610b7957506001600160a01b0383163014155b15610d9c57600d54600160a81b900460ff16610bbe57610bbb6064610bb560075460085411610baa57600554610bae565b6006545b8590610f34565b90610fbd565b90505b600d546001600160a01b038581169116148015610be95750600c546001600160a01b03848116911614155b8015610c0e57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c2857506004546001600160a01b03848116911614155b15610c6d574360095414610c40576000600a55436009555b81600a6000828254610c5291906116ff565b909155505060088054906000610c6783611712565b91905055505b600d546001600160a01b038481169116148015610c9357506001600160a01b0384163014155b15610cee57610ca0610fff565b600a541080610cb157504360095414155b610cee5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161039e565b30600090815260016020526040902054600d54600160a81b900460ff16158015610d255750600d546001600160a01b038581169116145b8015610d3a5750600d54600160b01b900460ff165b8015610d5457506004546001600160a01b03868116911614155b15610d9a578015610d8e576000600b548211610d705781610d74565b600b545b9050610d8c818511610d86578461118d565b8161118d565b505b47610d9847611307565b505b505b6001600160a01b038416600090815260016020526040902054610dbf9083611345565b6001600160a01b038516600090815260016020526040902055610e04610de58383611345565b6001600160a01b03851660009081526001602052604090205490611387565b6001600160a01b0384166000908152600160205260409020558015610e975730600090815260016020526040902054610e3d9082611387565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e8e9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ef4576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ee28585611345565b60405190815260200160405180910390a35b50505050565b60008184841115610f1e5760405162461bcd60e51b815260040161039e9190611414565b506000610f2b848661172b565b95945050505050565b600082600003610f465750600061034d565b6000610f528385611646565b905082610f5f858361173e565b14610fb65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161039e565b9392505050565b6000610fb683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113e6565b604080516002808252606082018352600092839291906020830190803683375050600c54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561106d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110919190611692565b816000815181106110a4576110a4611776565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110d8576110d8611776565b6001600160a01b039283166020918202929092010152600c5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061112490671bc16d674ec800009086906004016117d1565b600060405180830381865afa158015611141573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261116991908101906117f2565b90508060018151811061117e5761117e611776565b60200260200101519250505090565b600d805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111d5576111d5611776565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190611692565b8160018151811061126557611265611776565b6001600160a01b039283166020918202929092010152600c5461128b9130911684610909565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112c49085906000908690309042906004016118bf565b600060405180830381600087803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611341573d6000803e3d6000fd5b5050565b6000610fb683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610efa565b60008061139483856116ff565b905083811015610fb65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161039e565b600081836114075760405162461bcd60e51b815260040161039e9190611414565b506000610f2b848661173e565b602081526000825180602084015260005b818110156114425760208186018101516040868401015201611425565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e057600080fd5b6000806040838503121561148a57600080fd5b823561149581611462565b946020939093013593505050565b6000806000606084860312156114b857600080fd5b83356114c381611462565b925060208401356114d381611462565b929592945050506040919091013590565b6000602082840312156114f657600080fd5b8135610fb681611462565b6000806040838503121561151457600080fd5b823561151f81611462565b9150602083013561152f81611462565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561158b5780850481111561156f5761156f61153a565b600184161561157d57908102905b60019390931c928002611554565b935093915050565b6000826115a25750600161034d565b816115af5750600061034d565b81600181146115c557600281146115cf576115eb565b600191505061034d565b60ff8411156115e0576115e061153a565b50506001821b61034d565b5060208310610133831016604e8410600b841016171561160e575081810a61034d565b61161b6000198484611550565b806000190482111561162f5761162f61153a565b029392505050565b6000610fb660ff841683611593565b808202811582820484141761034d5761034d61153a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116a457600080fd5b8151610fb681611462565b6000806000606084860312156116c457600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156116ef57600080fd5b81518015158114610fb657600080fd5b8082018082111561034d5761034d61153a565b6000600182016117245761172461153a565b5060010190565b8181038181111561034d5761034d61153a565b60008261175b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156117c75781516001600160a01b03168652602095860195909101906001016117a0565b5093949350505050565b8281526040602082015260006117ea604083018461178c565b949350505050565b60006020828403121561180457600080fd5b815167ffffffffffffffff81111561181b57600080fd5b8201601f8101841361182c57600080fd5b805167ffffffffffffffff81111561184657611846611760565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561187357611873611760565b60405291825260208184018101929081018784111561189157600080fd5b6020850194505b838510156118b457845180825260209586019590935001611898565b509695505050505050565b85815284602082015260a0604082015260006118de60a083018661178c565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201f8066fdf00f5e83b06aa19a3926ed9e3c460a460012e2164c73369d4fc7f94164736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
