/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  BANG,
  BANGInterface,
} from "../../../medium/0xdae3cca7a832147221f01176a8959853d6f9b924.sol/BANG";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxHoldings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeHoldingLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "removeStuckERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeStuckETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeSwapTxLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxMul",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDiv",
        type: "uint256",
      },
    ],
    name: "setStructure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBuyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newSellFee",
        type: "uint256",
      },
    ],
    name: "setSwapFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapBackTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "updateFeeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6003600a8190556007600b55600960a09081526842616e672042616e6760b81b60c052610120604052600460e09081526342414e4760e01b61010052909161004783826103b2565b50600461005482826103b2565b50505061006d6100686101a960201b60201c565b6101ad565b6b033b2e3c9fd0803ce80000006000610092606461008c8460016101ff565b90610214565b90506100a4606461008c8460026101ff565b6007556100b7606461008c8460026101ff565b6008556100cb6103e861008c8460056101ff565b600955737b51960360ecfa872084dadf8988cd2555c872126080526000600d819055600e81905560106020527f3c801fc5336425861d5613996ca841252bea0da328865dc4f72f6fc862e83a818054600160ff19918216811790925533835260408084208054831684179055328452808420805483168417905530808552908420805483168417905561dead9093527f9e93e1db4a1f807cc22b2aecf4deeb0bf5745f1ecb319e87c68c5624c0fa6b698054909116909117905561018f9082610220565b6101a23261019d8484610303565b610220565b50506104e5565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061020b8284610486565b90505b92915050565b600061020b828461049d565b6001600160a01b03821661027a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825461028c91906104bf565b90915550506001600160a01b038216600090815260208190526040812080548392906102b99084906104bf565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600061020b82846104d2565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061033e57607f821691505b60208210810361035e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561030f57806000526020600020601f840160051c8101602085101561038b5750805b601f840160051c820191505b818110156103ab5760008155600101610397565b5050505050565b81516001600160401b038111156103cb576103cb610314565b6103df816103d9845461032a565b84610364565b6020601f82116001811461041357600083156103fb5750848201515b600019600385901b1c1916600184901b1784556103ab565b600084815260208120601f198516915b828110156104435787850151825560209485019460019092019101610423565b50848210156104615786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761020e5761020e610470565b6000826104ba57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561020e5761020e610470565b8181038181111561020e5761020e610470565b608051611ca66105236000396000818161032a015281816106530152818161072f01528181610a5901528181610d3e01526116f80152611ca66000f3fe6080604052600436106101d15760003560e01c80639049a3ce116100f7578063c9567bf911610095578063db05e5cb11610064578063db05e5cb1461050b578063dd62ed3e14610520578063e54f4faa14610566578063f2fde38b1461057c57600080fd5b8063c9567bf9146104ab578063cb4e162b146104c0578063d18afa85146104d6578063d5545462146104f657600080fd5b8063a9059cbb116100d1578063a9059cbb1461043f578063b78f7d671461045f578063c4918b4e14610475578063c83c38371461048b57600080fd5b80639049a3ce146103f557806395d89b411461040a578063a457c2d71461041f57600080fd5b806332972e461161016f57806359acbe4e1161013e57806359acbe4e1461036c57806370a082311461038c578063715018a6146103c25780638da5cb5b146103d757600080fd5b806332972e46146102c057806339509351146102f85780634127535814610318578063578878b41461034c57600080fd5b806318160ddd116101ab57806318160ddd1461024f5780631ba2c27f1461026e57806323b872dd14610284578063313ce567146102a457600080fd5b806306fdde03146101dd578063095ea7b3146102085780630f299cf11461023857600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101f261059c565b6040516101ff9190611932565b60405180910390f35b34801561021457600080fd5b50610228610223366004611995565b61062e565b60405190151581526020016101ff565b34801561024457600080fd5b5061024d610648565b005b34801561025b57600080fd5b506002545b6040519081526020016101ff565b34801561027a57600080fd5b50610260600e5481565b34801561029057600080fd5b5061022861029f3660046119c1565b6106c1565b3480156102b057600080fd5b50604051601281526020016101ff565b3480156102cc57600080fd5b506006546102e0906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b34801561030457600080fd5b50610228610313366004611995565b6106e5565b34801561032457600080fd5b506102e07f000000000000000000000000000000000000000000000000000000000000000081565b34801561035857600080fd5b5061024d610367366004611a02565b610724565b34801561037857600080fd5b5061024d610387366004611a1b565b61088e565b34801561039857600080fd5b506102606103a7366004611a3d565b6001600160a01b031660009081526020819052604090205490565b3480156103ce57600080fd5b5061024d610938565b3480156103e357600080fd5b506005546001600160a01b03166102e0565b34801561040157600080fd5b5061024d61096e565b34801561041657600080fd5b506101f261099f565b34801561042b57600080fd5b5061022861043a366004611995565b6109ae565b34801561044b57600080fd5b5061022861045a366004611995565b610a40565b34801561046b57600080fd5b50610260600d5481565b34801561048157600080fd5b5061026060075481565b34801561049757600080fd5b5061024d6104a6366004611a3d565b610a4e565b3480156104b757600080fd5b5061024d610b7d565b3480156104cc57600080fd5b5061026060095481565b3480156104e257600080fd5b5061024d6104f1366004611a1b565b610d33565b34801561050257600080fd5b5061024d610da1565b34801561051757600080fd5b5061024d610dd2565b34801561052c57600080fd5b5061026061053b366004611a5a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561057257600080fd5b5061026060085481565b34801561058857600080fd5b5061024d610597366004611a3d565b610e08565b6060600380546105ab90611a93565b80601f01602080910402602001604051908101604052809291908181526020018280546105d790611a93565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050505050905090565b60003361063c818585610ea0565b60019150505b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061068957506005546001600160a01b031633145b61069257600080fd5b60405133904780156108fc02916000818181858888f193505050501580156106be573d6000803e3d6000fd5b50565b6000336106cf858285610fc4565b6106da858585611056565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061063c908290869061071f908790611ae3565b610ea0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061076557506005546001600160a01b031633145b61076e57600080fd5b61078f620186a0610789600161078360025490565b906114b1565b906114c4565b8110156108095760405162461bcd60e51b815260206004820152603860248201527f53776170207468726573686f6c642063616e6e6f74206265206c6f776572207460448201527f68616e20302e3030312520746f74616c20737570706c792e000000000000000060648201526084015b60405180910390fd5b61081c6064610789600261078360025490565b8111156108895760405162461bcd60e51b815260206004820152603560248201527f53776170207468726573686f6c642063616e6e6f7420626520686967686572206044820152743a3430b7101912903a37ba30b61039bab838363c9760591b6064820152608401610800565b600955565b6005546001600160a01b031633146108b85760405162461bcd60e51b815260040161080090611af6565b601482111580156108ca575060148111155b61092d5760405162461bcd60e51b815260206004820152602e60248201527f417474656d7074696e6720746f2073657420666565206869676865722074686160448201526d371034b734ba34b0b6103332b29760911b6064820152608401610800565b600d91909155600e55565b6005546001600160a01b031633146109625760405162461bcd60e51b815260040161080090611af6565b61096c60006114d0565b565b6005546001600160a01b031633146109985760405162461bcd60e51b815260040161080090611af6565b6000600855565b6060600480546105ab90611a93565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610a335760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610800565b6106da8286868403610ea0565b60003361063c818585611056565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a8f57506005546001600160a01b031633145b610a9857600080fd5b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190611b2b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190611b44565b5050565b6005546001600160a01b03163314610ba75760405162461bcd60e51b815260040161080090611af6565b737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d9190611b66565b6001600160a01b031663e6a4390530737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190611b66565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d119190611b66565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610d7457506005546001600160a01b031633145b610d7d57600080fd5b60048211158015610d8d57508015155b610d9657600080fd5b600a91909155600b55565b6005546001600160a01b03163314610dcb5760405162461bcd60e51b815260040161080090611af6565b6000600755565b6005546001600160a01b03163314610dfc5760405162461bcd60e51b815260040161080090611af6565b60006008819055600755565b6005546001600160a01b03163314610e325760405162461bcd60e51b815260040161080090611af6565b6001600160a01b038116610e975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610800565b6106be816114d0565b6001600160a01b038316610f025760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610800565b6001600160a01b038216610f635760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610800565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461105057818110156110435760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610800565b6110508484848403610ea0565b50505050565b6001600160a01b0383166110c05760405162461bcd60e51b815260206004820152602b60248201527f5472616e736665722066726f6d20746865207a65726f2061646472657373206e60448201526a37ba1030b63637bbb2b21760a91b6064820152608401610800565b6001600160a01b0382166111285760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220746f20746865207a65726f2061646472657373206e6f746044820152681030b63637bbb2b21760b91b6064820152608401610800565b6000811161118b5760405162461bcd60e51b815260206004820152602a60248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152693a3430b7103d32b9379760b11b6064820152608401610800565b6001600160a01b03831660009081526010602052604081205460ff16806111ca57506001600160a01b03831660009081526010602052604090205460ff165b6006549091506001600160a01b03161515806111e35750805b61122f5760405162461bcd60e51b815260206004820152601f60248201527f4c69717569646974792070616972206e6f742079657420637265617465642e006044820152606401610800565b6006546001600160a01b03908116848216811491861614808061124f5750815b801561125d57506000600754115b8015611267575082155b156112f0576007548411156112f05760405162461bcd60e51b815260206004820152604360248201527f537761702076616c75652065786365656473206d6178207377617020616d6f7560448201527f6e742c2074727920616761696e2077697468206c65737320737761702076616c6064820152623ab29760e91b608482015260a401610800565b8115801561130057506000600854115b801561130a575082155b156113be5760085484611332876001600160a01b031660009081526020819052604090205490565b61133c9190611ae3565b11156113be5760405162461bcd60e51b8152602060048201526044602482018190527f42616c616e63652065786365656473206d617820686f6c64696e677320616d6f908201527f756e742c20636f6e7369646572207573696e672061207365636f6e642077616c6064820152633632ba1760e11b608482015260a401610800565b60095430600090815260208190526040902054101580156113e25750600f5460ff16155b80156113eb5750815b80156113f5575082155b8015611405575061140584611522565b1561142a57600f805460ff1916600117905561141f61157b565b600f805460ff191690555b60008161143957600e5461143d565b600d545b9050801561149d57831580156114565750600f5460ff16155b8015611466575081806114665750825b1561149d57600061147c606461078988856114b1565b9050801561148f5761148f883083611758565b6114998682611926565b9550505b6114a8878787611758565b50505050505050565b60006114bd8284611b83565b9392505050565b60006114bd8284611b9a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600b5460001461154357600b5460095461153e9190611b9a565b611546565b60005b82101580156106425750436000908152600c60205260408120805460029290919061157083611bbc565b919050551092915050565b30600090815260208190526040812054908190036115965750565b6009548111156115a557506009545b60408051600280825260608201835260009260208301908036833701905050905030816000815181106115da576115da611bd5565b60200260200101906001600160a01b031690816001600160a01b031681525050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561164c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116709190611b66565b8160018151811061168357611683611bd5565b60200260200101906001600160a01b031690816001600160a01b0316815250506116c230737a250d5630b4cf539739df2c5dacb4c659f2488d84610ea0565b60405163791ac94760e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d9063791ac9479061172290859060009086907f0000000000000000000000000000000000000000000000000000000000000000904290600401611beb565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b505050505050565b6001600160a01b0383166117bc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610800565b6001600160a01b03821661181e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610800565b6001600160a01b038316600090815260208190526040902054818110156118965760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610800565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906118cd908490611ae3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161191991815260200190565b60405180910390a3611050565b60006114bd8284611c5d565b602081526000825180602084015260005b818110156119605760208186018101516040868401015201611943565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106be57600080fd5b600080604083850312156119a857600080fd5b82356119b381611980565b946020939093013593505050565b6000806000606084860312156119d657600080fd5b83356119e181611980565b925060208401356119f181611980565b929592945050506040919091013590565b600060208284031215611a1457600080fd5b5035919050565b60008060408385031215611a2e57600080fd5b50508035926020909101359150565b600060208284031215611a4f57600080fd5b81356114bd81611980565b60008060408385031215611a6d57600080fd5b8235611a7881611980565b91506020830135611a8881611980565b809150509250929050565b600181811c90821680611aa757607f821691505b602082108103611ac757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561064257610642611acd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611b3d57600080fd5b5051919050565b600060208284031215611b5657600080fd5b815180151581146114bd57600080fd5b600060208284031215611b7857600080fd5b81516114bd81611980565b808202811582820484141761064257610642611acd565b600082611bb757634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611bce57611bce611acd565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611c3d5783516001600160a01b0316835260209384019390920191600101611c16565b50506001600160a01b039590951660608401525050608001529392505050565b8181038181111561064257610642611acd56fea2646970667358221220fa8919f7e2fad85bbce6bb32b39a912b8e501ce508bb3e36f5dd02912446364964736f6c634300081e0033";

type BANGConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BANGConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BANG__factory extends ContractFactory {
  constructor(...args: BANGConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BANG & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BANG__factory {
    return super.connect(runner) as BANG__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BANGInterface {
    return new Interface(_abi) as BANGInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BANG {
    return new Contract(address, _abi, runner) as unknown as BANG;
  }
}
