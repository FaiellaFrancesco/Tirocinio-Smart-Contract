/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  HOPE,
  HOPEInterface,
} from "../../../medium/0x5b6133e6d48230142f43a0b68b922187dc7aeef2.sol/HOPE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendStuckEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526011600555601660065560006007556000600855601b6009556020600a55600c600b556000600c556009600a6200003c919062000302565b6200004b9062e4e1c06200031a565b600d556200005c6009600a62000302565b6200006b9062e4e1c06200031a565b600e556200007c6009600a62000302565b6200008b9062a7d8c06200031a565b600f556200009c6009600a62000302565b620000ab90627a12006200031a565b6010556012805461ffff60a81b19169055348015620000c957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b03191673d9d5401a1c0194a1a6834fe06e40c6f8479940dc1790556200013f6009600a62000302565b6200014f90633b9aca006200031a565b3360008181526001602081815260408084209590955530835260039052838220805460ff1990811683179091556004546001600160a01b03168352938220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001c66009600a62000302565b620001d690633b9aca006200031a565b60405190815260200160405180910390a362000334565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000244578160001904821115620002285762000228620001ed565b808516156200023657918102915b93841c939080029062000208565b509250929050565b6000826200025d57506001620002fc565b816200026c57506000620002fc565b81600181146200028557600281146200029057620002b0565b6001915050620002fc565b60ff841115620002a457620002a4620001ed565b50506001821b620002fc565b5060208310610133831016604e8410600b8410161715620002d5575081810a620002fc565b620002e1838362000203565b8060001904821115620002f857620002f8620001ed565b0290505b92915050565b60006200031360ff8416836200024c565b9392505050565b8082028115828204841417620002fc57620002fc620001ed565b611ac680620003446000396000f3fe6080604052600436106101185760003560e01c8063751039fc116100a057806395d89b411161006457806395d89b41146102f4578063a9059cbb14610321578063bf474bed14610341578063dd62ed3e14610357578063fe21061a1461039d57600080fd5b8063751039fc146102765780637d1db4a51461028b5780638a8c523c146102a15780638da5cb5b146102b65780638f9a55c0146102de57600080fd5b806323b872dd116100e757806323b872dd146101d8578063313ce567146101f857806351bc3c851461021457806370a082311461022b578063715018a61461026157600080fd5b806306fdde0314610124578063095ea7b31461016f5780630faee56f1461019f57806318160ddd146101c357600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201909152601081526f4e657572616c696e6b205475726b657960801b60208201525b6040516101669190611695565b60405180910390f35b34801561017b57600080fd5b5061018f61018a3660046116f9565b6103b2565b6040519015158152602001610166565b3480156101ab57600080fd5b506101b560105481565b604051908152602001610166565b3480156101cf57600080fd5b506101b56103c9565b3480156101e457600080fd5b5061018f6101f3366004611725565b6103ea565b34801561020457600080fd5b5060405160098152602001610166565b34801561022057600080fd5b50610229610453565b005b34801561023757600080fd5b506101b5610246366004611766565b6001600160a01b031660009081526001602052604090205490565b34801561026d57600080fd5b506102296104a6565b34801561028257600080fd5b50610229610523565b34801561029757600080fd5b506101b5600d5481565b3480156102ad57600080fd5b506102296105d5565b3480156102c257600080fd5b506000546040516001600160a01b039091168152602001610166565b3480156102ea57600080fd5b506101b5600e5481565b34801561030057600080fd5b50604080518082019091526004815263484f504560e01b6020820152610159565b34801561032d57600080fd5b5061018f61033c3660046116f9565b610991565b34801561034d57600080fd5b506101b5600f5481565b34801561036357600080fd5b506101b5610372366004611783565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103a957600080fd5b5061022961099e565b60006103bf3384846109fa565b5060015b92915050565b60006103d76009600a6118b6565b6103e590633b9aca006118c5565b905090565b60006103f7848484610b1f565b610449843361044485604051806060016040528060288152602001611a69602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110c0565b6109fa565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461047357600080fd5b30600090815260016020526040902054801561049257610492816110fa565b4780156104a2576104a281611274565b5050565b6000546001600160a01b031633146104d95760405162461bcd60e51b81526004016104d0906118dc565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461054d5760405162461bcd60e51b81526004016104d0906118dc565b6105596009600a6118b6565b61056790633b9aca006118c5565b600d556105766009600a6118b6565b61058490633b9aca006118c5565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105b46009600a6118b6565b6105c290633b9aca006118c5565b60405190815260200160405180910390a1565b6000546001600160a01b031633146105ff5760405162461bcd60e51b81526004016104d0906118dc565b601254600160a01b900460ff16156106595760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d0565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106a29030906106946009600a6118b6565b61044490633b9aca006118c5565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190611911565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190611911565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190611911565b601280546001600160a81b0319166001600160a01b0392831617600160a01b1790556011541663f305d719473061085c816001600160a01b031660009081526001602052604090205490565b6000806108716000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108d9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108fe919061192e565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b919061195c565b506012805460ff60b01b1916600160b01b179055565b60006103bf338484610b1f565b6004546001600160a01b0316336001600160a01b0316146109be57600080fd5b6004546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156109f7573d6000803e3d6000fd5b50565b6001600160a01b038316610a5c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d0565b6001600160a01b038216610abd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610b835760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b6001600160a01b038216610be55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b60008111610c475760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d0565b601254600160a81b900460ff1680610c695750601254600160a01b900460ff16155b15610c7e57610c798383836112ae565b505050565b600080546001600160a01b03858116911614801590610cab57506000546001600160a01b03848116911614155b8015610cc557506004546001600160a01b03848116911614155b15610f2257610cf66064610cf0600954600c5411610ce557600554610ce9565b6007545b8590611354565b906113dd565b6012549091506001600160a01b038581169116148015610d2457506011546001600160a01b03848116911614155b8015610d4957506001600160a01b03831660009081526003602052604090205460ff16155b15610e3157600d54821115610da05760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d0565b600e5482610dc3856001600160a01b031660009081526001602052604090205490565b610dcd919061197e565b1115610e1b5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d0565b600c8054906000610e2b83611991565b91905055505b6012546001600160a01b038481169116148015610e5757506001600160a01b0384163014155b15610e8457610e816064610cf0600a54600c5411610e7757600654610ce9565b6008548590611354565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610ebb57506012546001600160a01b038581169116145b8015610ed05750601254600160b01b900460ff165b8015610edd5750600f5481115b8015610eec5750600b54600c54115b15610f2057610f0e610f0984610f048460105461141f565b61141f565b6110fa565b478015610f1e57610f1e47611274565b505b505b6001600160a01b03841660009081526003602052604090205460ff1680610f6157506001600160a01b03831660009081526003602052604090205460ff165b8015610f7657506001600160a01b0384163014155b8015610f8b57506001600160a01b0383163014155b15610f9557436015555b6001600160a01b03841660009081526003602052604090205460ff16158015610fd757506001600160a01b03831660009081526003602052604090205460ff16155b156110ae576012546001600160a01b039081169084160361102a576001600160a01b0384166000908152601360205260409020601554815461101991906119aa565b6002820155426001909101556110ae565b6001600160a01b038084166000908152601360205260409020601254909186811691160361107957805460000361107457600c54600b54101561106d5743611071565b6000195b81555b6110ac565b6001600160a01b0385166000908152601360205260409020815415806110a0575081548154105b156110aa57805482555b505b505b6110ba84848385611434565b50505050565b600081848411156110e45760405162461bcd60e51b81526004016104d09190611695565b5060006110f184866119aa565b95945050505050565b6012805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611142576111426119bd565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561119b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bf9190611911565b816001815181106111d2576111d26119bd565b6001600160a01b0392831660209182029290920101526011546111f891309116846109fa565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac947906112319085906000908690309042906004016119d3565b600060405180830381600087803b15801561124b57600080fd5b505af115801561125f573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156104a2573d6000803e3d6000fd5b6001600160a01b0383166000908152600160205260409020546112d1908261145f565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461130090826114a1565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b129085815260200190565b600082600003611366575060006103c3565b600061137283856118c5565b90508261137f8583611a46565b146113d65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d0565b9392505050565b60006113d683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611500565b600081831161142e57826113d6565b50919050565b600061144185838561152e565b9050611458858583611453868861145f565b6115e1565b5050505050565b60006113d683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110c0565b6000806114ae838561197e565b9050838110156113d65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d0565b600081836115215760405162461bcd60e51b81526004016104d09190611695565b5060006110f18486611a46565b60045460009081906001600160a01b039081169086160361155b576014546115569085611354565b61155d565b835b905082156115d9573060009081526001602052604090205461157f90846114a1565b30600081815260016020526040908190209290925590516001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115d09087815260200190565b60405180910390a35b949350505050565b6001600160a01b038416600090815260016020526040902054611604908361145f565b6001600160a01b03808616600090815260016020526040808220939093559085168152205461163390826114a1565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906116879085815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b818110156116c3578581018301518582016040015282016116a7565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146109f757600080fd5b6000806040838503121561170c57600080fd5b8235611717816116e4565b946020939093013593505050565b60008060006060848603121561173a57600080fd5b8335611745816116e4565b92506020840135611755816116e4565b929592945050506040919091013590565b60006020828403121561177857600080fd5b81356113d6816116e4565b6000806040838503121561179657600080fd5b82356117a1816116e4565b915060208301356117b1816116e4565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561180d5781600019048211156117f3576117f36117bc565b8085161561180057918102915b93841c93908002906117d7565b509250929050565b600082611824575060016103c3565b81611831575060006103c3565b816001811461184757600281146118515761186d565b60019150506103c3565b60ff841115611862576118626117bc565b50506001821b6103c3565b5060208310610133831016604e8410600b8410161715611890575081810a6103c3565b61189a83836117d2565b80600019048211156118ae576118ae6117bc565b029392505050565b60006113d660ff841683611815565b80820281158282048414176103c3576103c36117bc565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561192357600080fd5b81516113d6816116e4565b60008060006060848603121561194357600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561196e57600080fd5b815180151581146113d657600080fd5b808201808211156103c3576103c36117bc565b6000600182016119a3576119a36117bc565b5060010190565b818103818111156103c3576103c36117bc565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611a255784516001600160a01b031683529383019391830191600101611a00565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611a6357634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122040fd3985bfe8063b9ea7cb56f147bbe407b3abae705fc2572d7618c47303539964736f6c63430008170033";

type HOPEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HOPEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HOPE__factory extends ContractFactory {
  constructor(...args: HOPEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HOPE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HOPE__factory {
    return super.connect(runner) as HOPE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HOPEInterface {
    return new Interface(_abi) as HOPEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HOPE {
    return new Contract(address, _abi, runner) as unknown as HOPE;
  }
}
