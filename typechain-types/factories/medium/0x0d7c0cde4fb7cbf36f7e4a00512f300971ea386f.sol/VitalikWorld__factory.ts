/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VitalikWorld,
  VitalikWorldInterface,
} from "../../../medium/0x0d7c0cde4fb7cbf36f7e4a00512f300971ea386f.sol/VitalikWorld";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001f6012600a610185565b61002e906402540be400610198565b6000818155338082526001602052604080832084905551929350917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906100789085815260200190565b60405180910390a3506101af565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156100d7578085048111156100bb576100bb610086565b60018416156100c957908102905b60019390931c9280026100a0565b935093915050565b6000826100ee5750600161017f565b816100fb5750600061017f565b8160018114610111576002811461011b57610137565b600191505061017f565b60ff84111561012c5761012c610086565b50506001821b61017f565b5060208310610133831016604e8410600b841016171561015a575081810a61017f565b610167600019848461009c565b806000190482111561017b5761017b610086565b0290505b92915050565b600061019183836100df565b9392505050565b808202811582820484141761017f5761017f610086565b61075b806101be6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806323b872dd1161006657806323b872dd1461013a57806327e235e31461014d578063313ce5671461016d57806395d89b4114610187578063a9059cbb146101a857600080fd5b8063068990311461009857806306fdde03146100d6578063095ea7b31461010e57806318160ddd14610131575b600080fd5b6100c36100a63660046105df565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101016040518060400160405280600c81526020016b159a5d185b1a5ad5dbdc9b1960a21b81525081565b6040516100cd9190610612565b61012161011c366004610660565b6101bb565b60405190151581526020016100cd565b6100c360005481565b61012161014836600461068a565b610274565b6100c361015b3660046106c7565b60016020526000908152604090205481565b610175601281565b60405160ff90911681526020016100cd565b61010160405180604001604052806002815260200161565760f01b81525081565b6101216101b6366004610660565b610478565b6000336001600160a01b03841661020b5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21039b832b73232b960891b60448201526064015b60405180910390fd5b6001600160a01b0381811660008181526002602090815260408083209489168084529482529182902087905590518681527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a360019150505b92915050565b6000336001600160a01b0384166102c15760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610202565b6001600160a01b03851660009081526001602052604090205483111561031e5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606401610202565b6001600160a01b038086166000908152600260209081526040808320938516835292905220548311156103885760405162461bcd60e51b8152602060048201526012602482015271105b1b1bddd85b98d948195e18d95959195960721b6044820152606401610202565b6001600160a01b038516600090815260016020526040812080548592906103b09084906106ff565b90915550506001600160a01b038416600090815260016020526040812080548592906103dd908490610712565b90915550506001600160a01b038086166000908152600260209081526040808320938516835292905290812080548592906104199084906106ff565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161046591815260200190565b60405180910390a3506001949350505050565b6000336001600160a01b0384166104c55760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610202565b6001600160a01b0381166000908152600160205260409020548311156105225760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606401610202565b6001600160a01b0381166000908152600160205260408120805485929061054a9084906106ff565b90915550506001600160a01b03841660009081526001602052604081208054859290610577908490610712565b92505081905550836001600160a01b0316816001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161026091815260200190565b80356001600160a01b03811681146105da57600080fd5b919050565b600080604083850312156105f257600080fd5b6105fb836105c3565b9150610609602084016105c3565b90509250929050565b602081526000825180602084015260005b818110156106405760208186018101516040868401015201610623565b506000604082850101526040601f19601f83011684010191505092915050565b6000806040838503121561067357600080fd5b61067c836105c3565b946020939093013593505050565b60008060006060848603121561069f57600080fd5b6106a8846105c3565b92506106b6602085016105c3565b929592945050506040919091013590565b6000602082840312156106d957600080fd5b6106e2826105c3565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026e5761026e6106e9565b8082018082111561026e5761026e6106e956fea264697066735822122023d7154637769624b6484f461690c074ef353566e001090b632af00d16c50f2864736f6c634300081e0033";

type VitalikWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VitalikWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VitalikWorld__factory extends ContractFactory {
  constructor(...args: VitalikWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VitalikWorld & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VitalikWorld__factory {
    return super.connect(runner) as VitalikWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VitalikWorldInterface {
    return new Interface(_abi) as VitalikWorldInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VitalikWorld {
    return new Contract(address, _abi, runner) as unknown as VitalikWorld;
  }
}
