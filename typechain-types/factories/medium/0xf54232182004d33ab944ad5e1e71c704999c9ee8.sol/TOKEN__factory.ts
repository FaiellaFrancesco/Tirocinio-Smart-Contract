/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../../medium/0xf54232182004d33ab944ad5e1e71c704999c9ee8.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKNThresAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTradingTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETHfromPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526005805560006006556000600755600060085560006009556002600a556000600b556000600c556009600a610039919061031c565b61004790633b9aca00610332565b600d55600f805461ffff60a81b19168155601055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f36009600a61031c565b61010190633b9aca00610332565b61010c906002610332565b6101169190610349565b3360009081526001602052604090205560646101346009600a61031c565b61014290633b9aca00610332565b61014d906062610332565b6101579190610349565b30600090815260016020526040902055336001600160a01b031660006000805160206119e983398151915260646101906009600a61031c565b61019e90633b9aca00610332565b6101a9906002610332565b6101b39190610349565b60405190815260200160405180910390a33060006000805160206119e983398151915260646101e46009600a61031c565b6101f290633b9aca00610332565b6101fd906062610332565b6102079190610349565b60405190815260200160405180910390a361036b565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026e578085048111156102525761025261021d565b600184161561026057908102905b60019390931c928002610237565b935093915050565b60008261028557506001610316565b8161029257506000610316565b81600181146102a857600281146102b2576102ce565b6001915050610316565b60ff8411156102c3576102c361021d565b50506001821b610316565b5060208310610133831016604e8410600b84101617156102f1575081810a610316565b6102fe6000198484610233565b80600019048211156103125761031261021d565b0290505b92915050565b600061032b60ff841683610276565b9392505050565b80820281158282048414176103165761031661021d565b60008261036657634e487b7160e01b600052601260045260246000fd5b500490565b61166f8061037a6000396000f3fe6080604052600436106101025760003560e01c8063715018a6116100955780639639b01d116100645780639639b01d146102c0578063a9059cbb146102d6578063ba2b30da146102f6578063dd62ed3e1461030b578063ea414b281461035157600080fd5b8063715018a614610240578063751039fc146102555780638da5cb5b1461026a57806395d89b411461029257600080fd5b806323b872dd116100d157806323b872dd146101b7578063313ce567146101d757806348fd35ae146101f357806370a082311461020a57600080fd5b806306fdde031461010e578063095ea7b31461014e5780630faee56f1461017e57806318160ddd146101a257600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600581526429b4393ab160d91b60208201525b604051610145919061123d565b60405180910390f35b34801561015a57600080fd5b5061016e6101693660046112a0565b610371565b6040519015158152602001610145565b34801561018a57600080fd5b50610194600d5481565b604051908152602001610145565b3480156101ae57600080fd5b50610194610388565b3480156101c357600080fd5b5061016e6101d23660046112cc565b6103a9565b3480156101e357600080fd5b5060405160098152602001610145565b3480156101ff57600080fd5b50610208610459565b005b34801561021657600080fd5b5061019461022536600461130d565b6001600160a01b031660009081526001602052604090205490565b34801561024c57600080fd5b5061020861081d565b34801561026157600080fd5b50610208610891565b34801561027657600080fd5b506000546040516001600160a01b039091168152602001610145565b34801561029e57600080fd5b5060408051808201909152600581526429a4292aa160d91b6020820152610138565b3480156102cc57600080fd5b5061019460105481565b3480156102e257600080fd5b5061016e6102f13660046112a0565b6108bd565b34801561030257600080fd5b506102086108ca565b34801561031757600080fd5b5061019461032636600461132a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035d57600080fd5b5061020861036c36600461130d565b61092d565b600061037e33848461096b565b5060015b92915050565b60006103966009600a611460565b6103a490633b9aca0061146f565b905090565b60006103b6848484610a8f565b3360009081526003602052604090205460ff161580156103f85750600f546001600160a01b03858116911614806103f857506001600160a01b03831661dead14155b1561044f5761044f843361044a85604051806060016040528060288152602001611612602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610eb1565b61096b565b5060019392505050565b6000546001600160a01b0316331461048c5760405162461bcd60e51b815260040161048390611486565b60405180910390fd5b600f54600160a01b900460ff16156104e65760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610483565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561052f9030906105216009600a611460565b61044a90633b9aca0061146f565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a691906114bb565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c91906114bb565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d91906114bb565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306106e5816001600160a01b031660009081526001602052604090205490565b6000806106fa6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610762573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061078791906114d8565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611506565b50565b6000546001600160a01b031633146108475760405162461bcd60e51b815260040161048390611486565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108bb5760405162461bcd60e51b815260040161048390611486565b565b600061037e338484610a8f565b6000546001600160a01b031633146108f45760405162461bcd60e51b815260040161048390611486565b6000471161090157600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561081a573d6000803e3d6000fd5b3360009081526003602052604090205460ff1661094957600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109cd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610483565b6001600160a01b038216610a2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610483565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610af35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610483565b6001600160a01b038216610b555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610483565b60008111610bb75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610483565b60006001600160a01b0384163014801590610bdb57506001600160a01b0383163014155b15610d5357600f54600160a81b900460ff16610c2057610c1d6064610c1760075460085411610c0c57600554610c10565b6006545b8590610eeb565b90610f74565b90505b600f546001600160a01b038581169116148015610c4b5750600e546001600160a01b03848116911614155b8015610c7057506001600160a01b03831660009081526003602052604090205460ff16155b8015610c8a57506004546001600160a01b03848116911614155b15610ca55760088054906000610c9f83611528565b91905055505b30600090815260016020526040902054600f54600160a81b900460ff16158015610cdc5750600f546001600160a01b038581169116145b8015610cf15750600f54600160b01b900460ff165b8015610d0b57506004546001600160a01b03868116911614155b15610d51578015610d45576000600d548211610d275781610d2b565b600d545b9050610d43818511610d3d5784610fb6565b81610fb6565b505b47610d4f47611130565b505b505b6001600160a01b038416600090815260016020526040902054610d76908361116e565b6001600160a01b038516600090815260016020526040902055610dbb610d9c838361116e565b6001600160a01b038516600090815260016020526040902054906111b0565b6001600160a01b0384166000908152600160205260409020558015610e4e5730600090815260016020526040902054610df490826111b0565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e459085815260200190565b60405180910390a35b6001600160a01b03831661dead14610eab576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e99858561116e565b60405190815260200160405180910390a35b50505050565b60008184841115610ed55760405162461bcd60e51b8152600401610483919061123d565b506000610ee28486611541565b95945050505050565b600082600003610efd57506000610382565b6000610f09838561146f565b905082610f168583611554565b14610f6d5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610483565b9392505050565b6000610f6d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061120f565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ffe57610ffe611576565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b91906114bb565b8160018151811061108e5761108e611576565b6001600160a01b039283166020918202929092010152600e546110b4913091168461096b565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906110ed90859060009086903090429060040161158c565b600060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561116a573d6000803e3d6000fd5b5050565b6000610f6d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610eb1565b6000806111bd83856115fe565b905083811015610f6d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610483565b600081836112305760405162461bcd60e51b8152600401610483919061123d565b506000610ee28486611554565b602081526000825180602084015260005b8181101561126b576020818601810151604086840101520161124e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461081a57600080fd5b600080604083850312156112b357600080fd5b82356112be8161128b565b946020939093013593505050565b6000806000606084860312156112e157600080fd5b83356112ec8161128b565b925060208401356112fc8161128b565b929592945050506040919091013590565b60006020828403121561131f57600080fd5b8135610f6d8161128b565b6000806040838503121561133d57600080fd5b82356113488161128b565b915060208301356113588161128b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156113b45780850481111561139857611398611363565b60018416156113a657908102905b60019390931c92800261137d565b935093915050565b6000826113cb57506001610382565b816113d857506000610382565b81600181146113ee57600281146113f857611414565b6001915050610382565b60ff84111561140957611409611363565b50506001821b610382565b5060208310610133831016604e8410600b8410161715611437575081810a610382565b6114446000198484611379565b806000190482111561145857611458611363565b029392505050565b6000610f6d60ff8416836113bc565b808202811582820484141761038257610382611363565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114cd57600080fd5b8151610f6d8161128b565b6000806000606084860312156114ed57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561151857600080fd5b81518015158114610f6d57600080fd5b60006001820161153a5761153a611363565b5060010190565b8181038181111561038257610382611363565b60008261157157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156115de5783516001600160a01b03168352602093840193909201916001016115b7565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103825761038261136356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220499c34c6cdda574960f7eb7f0ce26f9578ef908d473841f35b5599cb01db002264736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
