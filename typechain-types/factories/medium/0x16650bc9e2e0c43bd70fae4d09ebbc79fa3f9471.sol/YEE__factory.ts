/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YEE,
  YEEInterface,
} from "../../../medium/0x16650bc9e2e0c43bd70fae4d09ebbc79fa3f9471.sol/YEE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260146006556014600755600060085560006009556019600a556019600b55600f600c556000600d556009600a6200003c919062000345565b6200004b90622dc6c06200035d565b600e556200005c6009600a62000345565b6200006b90622dc6c06200035d565b600f556200007c6009600a62000345565b6200008b90620f42406200035d565b6010556200009c6009600a62000345565b620000ab90620f42406200035d565b6011556013805461ffff60a81b1916905560006014819055601555348015620000d357600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001356009600a62000345565b62000145906305f5e1006200035d565b336000908152600160208190526040822092909255600390620001706000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001cf3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002096009600a62000345565b62000219906305f5e1006200035d565b60405190815260200160405180910390a362000377565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002875781600019048211156200026b576200026b62000230565b808516156200027957918102915b93841c93908002906200024b565b509250929050565b600082620002a0575060016200033f565b81620002af575060006200033f565b8160018114620002c85760028114620002d357620002f3565b60019150506200033f565b60ff841115620002e757620002e762000230565b50506001821b6200033f565b5060208310610133831016604e8410600b841016171562000318575081810a6200033f565b62000324838362000246565b80600019048211156200033b576200033b62000230565b0290505b92915050565b60006200035660ff8416836200028f565b9392505050565b80820281158282048414176200033f576200033f62000230565b611b4880620003876000396000f3fe6080604052600436106101395760003560e01c8063751039fc116100ab578063a9059cbb1161006f578063a9059cbb14610380578063bf474bed146103a0578063c9567bf9146103b6578063d34628cc146103cb578063dd62ed3e146103eb578063ec1f3f631461043157600080fd5b8063751039fc146102e75780637d1db4a5146102fc5780638da5cb5b146103125780638f9a55c01461033a57806395d89b411461035057600080fd5b8063313ce567116100fd578063313ce5671461021057806331c2d8471461022c5780633bbac5791461024e57806351bc3c851461028757806370a082311461029c578063715018a6146102d257600080fd5b806306fdde0314610145578063095ea7b3146101875780630faee56f146101b757806318160ddd146101db57806323b872dd146101f057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50604080518082019091526007815266059454520322e360cc1b60208201525b60405161017e9190611610565b60405180910390f35b34801561019357600080fd5b506101a76101a2366004611687565b610451565b604051901515815260200161017e565b3480156101c357600080fd5b506101cd60115481565b60405190815260200161017e565b3480156101e757600080fd5b506101cd610468565b3480156101fc57600080fd5b506101a761020b3660046116b3565b610489565b34801561021c57600080fd5b506040516009815260200161017e565b34801561023857600080fd5b5061024c61024736600461170a565b6104f2565b005b34801561025a57600080fd5b506101a76102693660046117cf565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561029357600080fd5b5061024c610587565b3480156102a857600080fd5b506101cd6102b73660046117cf565b6001600160a01b031660009081526001602052604090205490565b3480156102de57600080fd5b5061024c6105d6565b3480156102f357600080fd5b5061024c61064a565b34801561030857600080fd5b506101cd600e5481565b34801561031e57600080fd5b506000546040516001600160a01b03909116815260200161017e565b34801561034657600080fd5b506101cd600f5481565b34801561035c57600080fd5b50604080518082019091526007815266059656520322e360cc1b6020820152610171565b34801561038c57600080fd5b506101a761039b366004611687565b6106fc565b3480156103ac57600080fd5b506101cd60105481565b3480156103c257600080fd5b5061024c610709565b3480156103d757600080fd5b5061024c6103e636600461170a565b610ac5565b3480156103f757600080fd5b506101cd6104063660046117ec565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561043d57600080fd5b5061024c61044c366004611825565b610b4d565b600061045e338484610b94565b5060015b92915050565b60006104766009600a611938565b610484906305f5e100611947565b905090565b6000610496848484610cb8565b6104e884336104e385604051806060016040528060288152602001611aeb602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611273565b610b94565b5060019392505050565b6000546001600160a01b031633146105255760405162461bcd60e51b815260040161051c9061195e565b60405180910390fd5b60005b81518110156105835760006004600084848151811061054957610549611993565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610528565b5050565b6005546001600160a01b0316336001600160a01b0316146105a757600080fd5b3060009081526001602052604090205480156105c6576105c6816112ad565b4780156105835761058381611427565b6000546001600160a01b031633146106005760405162461bcd60e51b815260040161051c9061195e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106745760405162461bcd60e51b815260040161051c9061195e565b6106806009600a611938565b61068e906305f5e100611947565b600e5561069d6009600a611938565b6106ab906305f5e100611947565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106db6009600a611938565b6106e9906305f5e100611947565b60405190815260200160405180910390a1565b600061045e338484610cb8565b6000546001600160a01b031633146107335760405162461bcd60e51b815260040161051c9061195e565b601354600160a01b900460ff161561078d5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161051c565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556107d69030906107c86009600a611938565b6104e3906305f5e100611947565b601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d91906119a9565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d391906119a9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610920573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094491906119a9565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d719473061098c816001600160a01b031660009081526001602052604090205490565b6000806109a16000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a09573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a2e91906119c6565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab91906119f4565b506013805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610aef5760405162461bcd60e51b815260040161051c9061195e565b60005b815181101561058357600160046000848481518110610b1357610b13611993565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610af2565b6005546001600160a01b0316336001600160a01b031614610b6d57600080fd5b6008548111158015610b8157506009548111155b610b8a57600080fd5b6008819055600955565b6001600160a01b038316610bf65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051c565b6001600160a01b038216610c575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d1c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051c565b6001600160a01b038216610d7e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051c565b60008111610de05760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161051c565b600080546001600160a01b03858116911614801590610e0d57506000546001600160a01b03848116911614155b15611130576001600160a01b03841660009081526004602052604090205460ff16158015610e5457506001600160a01b03831660009081526004602052604090205460ff16155b610e5d57600080fd5b610e896064610e83600a54600d5411610e7857600654610e7c565b6008545b8590611461565b906114ea565b6013549091506001600160a01b038581169116148015610eb757506012546001600160a01b03848116911614155b8015610edc57506001600160a01b03831660009081526003602052604090205460ff16155b15610fc457600e54821115610f335760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161051c565b600f5482610f56856001600160a01b031660009081526001602052604090205490565b610f609190611a16565b1115610fae5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161051c565b600d8054906000610fbe83611a29565b91905055505b6013546001600160a01b038481169116148015610fea57506001600160a01b0384163014155b15611017576110146064610e83600b54600d541161100a57600754610e7c565b6009548590611461565b90505b30600090815260016020526040902054601354600160a81b900460ff1615801561104e57506013546001600160a01b038581169116145b80156110635750601354600160b01b900460ff165b8015611070575060105481115b801561107f5750600c54600d54115b1561112e576015544311156110945760006014555b6003601454106110e65760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161051c565b6111036110fe846110f98460115461152c565b61152c565b6112ad565b4780156111135761111347611427565b6014805490600061112383611a29565b909155505043601555505b505b80156111aa57306000908152600160205260409020546111509082611541565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111a19085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546111cd90836115a0565b6001600160a01b0385166000908152600160205260409020556112126111f383836115a0565b6001600160a01b03851660009081526001602052604090205490611541565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61125c85856115a0565b60405190815260200160405180910390a350505050565b600081848411156112975760405162461bcd60e51b815260040161051c9190611610565b5060006112a48486611a42565b95945050505050565b6013805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106112f5576112f5611993565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137291906119a9565b8160018151811061138557611385611993565b6001600160a01b0392831660209182029290920101526012546113ab9130911684610b94565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac947906113e4908590600090869030904290600401611a55565b600060405180830381600087803b1580156113fe57600080fd5b505af1158015611412573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610583573d6000803e3d6000fd5b60008260000361147357506000610462565b600061147f8385611947565b90508261148c8583611ac8565b146114e35760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161051c565b9392505050565b60006114e383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115e2565b600081831161153b57826114e3565b50919050565b60008061154e8385611a16565b9050838110156114e35760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161051c565b60006114e383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611273565b600081836116035760405162461bcd60e51b815260040161051c9190611610565b5060006112a48486611ac8565b60006020808352835180602085015260005b8181101561163e57858101830151858201604001528201611622565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461167457600080fd5b50565b80356116828161165f565b919050565b6000806040838503121561169a57600080fd5b82356116a58161165f565b946020939093013593505050565b6000806000606084860312156116c857600080fd5b83356116d38161165f565b925060208401356116e38161165f565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561171d57600080fd5b823567ffffffffffffffff8082111561173557600080fd5b818501915085601f83011261174957600080fd5b81358181111561175b5761175b6116f4565b8060051b604051601f19603f83011681018181108582111715611780576117806116f4565b60405291825284820192508381018501918883111561179e57600080fd5b938501935b828510156117c3576117b485611677565b845293850193928501926117a3565b98975050505050505050565b6000602082840312156117e157600080fd5b81356114e38161165f565b600080604083850312156117ff57600080fd5b823561180a8161165f565b9150602083013561181a8161165f565b809150509250929050565b60006020828403121561183757600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561188f5781600019048211156118755761187561183e565b8085161561188257918102915b93841c9390800290611859565b509250929050565b6000826118a657506001610462565b816118b357506000610462565b81600181146118c957600281146118d3576118ef565b6001915050610462565b60ff8411156118e4576118e461183e565b50506001821b610462565b5060208310610133831016604e8410600b8410161715611912575081810a610462565b61191c8383611854565b80600019048211156119305761193061183e565b029392505050565b60006114e360ff841683611897565b80820281158282048414176104625761046261183e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119bb57600080fd5b81516114e38161165f565b6000806000606084860312156119db57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611a0657600080fd5b815180151581146114e357600080fd5b808201808211156104625761046261183e565b600060018201611a3b57611a3b61183e565b5060010190565b818103818111156104625761046261183e565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611aa75784516001600160a01b031683529383019391830191600101611a82565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611ae557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220be11e4c194b538d0c2ae92292120b06c1227ca63199a07916b5af0ae3c84524964736f6c63430008170033";

type YEEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YEEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YEE__factory extends ContractFactory {
  constructor(...args: YEEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YEE> {
    return super.deploy(overrides || {}) as Promise<YEE>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YEE {
    return super.attach(address) as YEE;
  }
  override connect(signer: Signer): YEE__factory {
    return super.connect(signer) as YEE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YEEInterface {
    return new utils.Interface(_abi) as YEEInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YEE {
    return new Contract(address, _abi, signerOrProvider) as YEE;
  }
}
