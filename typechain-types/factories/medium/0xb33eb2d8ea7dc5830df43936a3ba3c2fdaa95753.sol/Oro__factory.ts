/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Oro,
  OroInterface,
} from "../../../medium/0xb33eb2d8ea7dc5830df43936a3ba3c2fdaa95753.sol/Oro";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556017600a556017600b556017600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fa56ea006200036a565b601155620000a66009600a62000352565b620000b69063fa56ea006200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611db780620003946000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103c3578063bf474bed146103e3578063c9567bf9146103f9578063d34628cc1461040e578063dd62ed3e1461042e578063ec1f3f631461047457600080fd5b8063751039fc1461030e5780637d1db4a5146103235780638cd4426d146103395780638da5cb5b146103595780638f9a55c01461038157806395d89b411461039757600080fd5b8063313ce56711610108578063313ce5671461023957806331c2d847146102555780633bbac5791461027557806351bc3c85146102ae57806370a08231146102c3578063715018a6146102f957600080fd5b806306fdde031461015b578063095ea7b3146101995780630faee56f146101c9578063109daa99146101ed57806318160ddd1461020457806323b872dd1461021957600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506040805180820190915260038152624f726f60e81b60208201525b6040516101909190611866565b60405180910390f35b3480156101a557600080fd5b506101b96101b43660046118dd565b610494565b6040519015158152602001610190565b3480156101d557600080fd5b506101df60125481565b604051908152602001610190565b3480156101f957600080fd5b506102026104ab565b005b34801561021057600080fd5b506101df61051b565b34801561022557600080fd5b506101b9610234366004611909565b61053d565b34801561024557600080fd5b5060405160098152602001610190565b34801561026157600080fd5b50610202610270366004611960565b6105a6565b34801561028157600080fd5b506101b9610290366004611a25565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102ba57600080fd5b50610202610632565b3480156102cf57600080fd5b506101df6102de366004611a25565b6001600160a01b031660009081526001602052604090205490565b34801561030557600080fd5b50610202610698565b34801561031a57600080fd5b5061020261070c565b34801561032f57600080fd5b506101df600f5481565b34801561034557600080fd5b506102026103543660046118dd565b6107bc565b34801561036557600080fd5b506000546040516001600160a01b039091168152602001610190565b34801561038d57600080fd5b506101df60105481565b3480156103a357600080fd5b506040805180820190915260038152624f524f60e81b6020820152610183565b3480156103cf57600080fd5b506101b96103de3660046118dd565b6108e9565b3480156103ef57600080fd5b506101df60115481565b34801561040557600080fd5b506102026108f6565b34801561041a57600080fd5b50610202610429366004611960565b610cb3565b34801561043a57600080fd5b506101df610449366004611a42565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561048057600080fd5b5061020261048f366004611a7b565b610d3b565b60006104a1338484610d8a565b5060015b92915050565b6000546001600160a01b031633146104de5760405162461bcd60e51b81526004016104d590611a94565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105296009600a611bc3565b610538906461f313f880611bd2565b905090565b600061054a848484610eae565b61059c843361059785604051806060016040528060288152602001611d5a602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114c9565b610d8a565b5060019392505050565b6000546001600160a01b031633146105d05760405162461bcd60e51b81526004016104d590611a94565b60005b815181101561062e576000600460008484815181106105f4576105f4611be9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105d3565b5050565b6005546001600160a01b0316336001600160a01b03161461065257600080fd5b30600090815260016020526040902054801580159061067a5750601454600160b01b900460ff165b156106885761068881611503565b47801561062e5761062e8161167d565b6000546001600160a01b031633146106c25760405162461bcd60e51b81526004016104d590611a94565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107365760405162461bcd60e51b81526004016104d590611a94565b6107426009600a611bc3565b610751906461f313f880611bd2565b600f556107606009600a611bc3565b61076f906461f313f880611bd2565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61079f6009600a611bc3565b6107ae906461f313f880611bd2565b604051908152602001610511565b6000546001600160a01b031633146107e65760405162461bcd60e51b81526004016104d590611a94565b6040516370a0823160e01b815230600482015260009061086a906064906108649085906001600160a01b038816906370a0823190602401602060405180830381865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e9190611bff565b906116b7565b90611740565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190611c18565b50505050565b60006104a1338484610eae565b6000546001600160a01b031633146109205760405162461bcd60e51b81526004016104d590611a94565b601454600160a01b900460ff161561097a5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d5565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109c49030906109b56009600a611bc3565b610597906461f313f880611bd2565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611c3a565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190611c3a565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611c3a565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610b7a816001600160a01b031660009081526001602052604090205490565b600080610b8f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610bf7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c1c9190611c57565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c999190611c18565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610cdd5760405162461bcd60e51b81526004016104d590611a94565b60005b815181101561062e57600160046000848481518110610d0157610d01611be9565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610ce0565b6000546001600160a01b03163314610d655760405162461bcd60e51b81526004016104d590611a94565b6005546001600160a01b0316336001600160a01b031614610d8557600080fd5b600955565b6001600160a01b038316610dec5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d5565b6001600160a01b038216610e4d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f125760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d5565b6001600160a01b038216610f745760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d5565b60008111610fd65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d5565b600080546001600160a01b0385811691161480159061100357506000546001600160a01b03848116911614155b801561101d57506005546001600160a01b03848116911614155b15611386576001600160a01b03841660009081526004602052604090205460ff1615801561106457506001600160a01b03831660009081526004602052604090205460ff16155b61106d57600080fd5b600e546000036110a05761109d6064610864600a54600e541161109257600654611096565b6008545b85906116b7565b90505b600e54156110c5576110c26064610864600d54856116b790919063ffffffff16565b90505b6014546001600160a01b0385811691161480156110f057506013546001600160a01b03848116911614155b801561111557506001600160a01b03831660009081526003602052604090205460ff16155b1561121a57600f5482111561116c5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d5565b6010548261118f856001600160a01b031660009081526001602052604090205490565b6111999190611c85565b11156111e75760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d5565b6112026064610864600a54600e541161109257600654611096565b600e8054919250600061121483611c98565b91905055505b6014546001600160a01b03848116911614801561124057506001600160a01b0384163014155b1561126d5761126a6064610864600b54600e541161126057600754611096565b60095485906116b7565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156112a457506014546001600160a01b038581169116145b80156112b95750601454600160b01b900460ff165b80156112c6575060115481115b80156112d55750600c54600e54115b15611384576016544311156112ea5760006015555b60036015541061133c5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d5565b6113596113548461134f84601254611782565b611782565b611503565b478015611369576113694761167d565b6015805490600061137983611c98565b909155505043601655505b505b801561140057306000908152600160205260409020546113a69082611797565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113f79085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461142390836117f6565b6001600160a01b03851660009081526001602052604090205561146861144983836117f6565b6001600160a01b03851660009081526001602052604090205490611797565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114b285856117f6565b60405190815260200160405180910390a350505050565b600081848411156114ed5760405162461bcd60e51b81526004016104d59190611866565b5060006114fa8486611cb1565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061154b5761154b611be9565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156115a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c89190611c3a565b816001815181106115db576115db611be9565b6001600160a01b0392831660209182029290920101526013546116019130911684610d8a565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac9479061163a908590600090869030904290600401611cc4565b600060405180830381600087803b15801561165457600080fd5b505af1158015611668573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561062e573d6000803e3d6000fd5b6000826000036116c9575060006104a5565b60006116d58385611bd2565b9050826116e28583611d37565b146117395760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d5565b9392505050565b600061173983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611838565b60008183116117915782611739565b50919050565b6000806117a48385611c85565b9050838110156117395760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d5565b600061173983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114c9565b600081836118595760405162461bcd60e51b81526004016104d59190611866565b5060006114fa8486611d37565b60006020808352835180602085015260005b8181101561189457858101830151858201604001528201611878565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118ca57600080fd5b50565b80356118d8816118b5565b919050565b600080604083850312156118f057600080fd5b82356118fb816118b5565b946020939093013593505050565b60008060006060848603121561191e57600080fd5b8335611929816118b5565b92506020840135611939816118b5565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561197357600080fd5b823567ffffffffffffffff8082111561198b57600080fd5b818501915085601f83011261199f57600080fd5b8135818111156119b1576119b161194a565b8060051b604051601f19603f830116810181811085821117156119d6576119d661194a565b6040529182528482019250838101850191888311156119f457600080fd5b938501935b82851015611a1957611a0a856118cd565b845293850193928501926119f9565b98975050505050505050565b600060208284031215611a3757600080fd5b8135611739816118b5565b60008060408385031215611a5557600080fd5b8235611a60816118b5565b91506020830135611a70816118b5565b809150509250929050565b600060208284031215611a8d57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b1a578160001904821115611b0057611b00611ac9565b80851615611b0d57918102915b93841c9390800290611ae4565b509250929050565b600082611b31575060016104a5565b81611b3e575060006104a5565b8160018114611b545760028114611b5e57611b7a565b60019150506104a5565b60ff841115611b6f57611b6f611ac9565b50506001821b6104a5565b5060208310610133831016604e8410600b8410161715611b9d575081810a6104a5565b611ba78383611adf565b8060001904821115611bbb57611bbb611ac9565b029392505050565b600061173960ff841683611b22565b80820281158282048414176104a5576104a5611ac9565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c1157600080fd5b5051919050565b600060208284031215611c2a57600080fd5b8151801515811461173957600080fd5b600060208284031215611c4c57600080fd5b8151611739816118b5565b600080600060608486031215611c6c57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104a5576104a5611ac9565b600060018201611caa57611caa611ac9565b5060010190565b818103818111156104a5576104a5611ac9565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d165784516001600160a01b031683529383019391830191600101611cf1565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d5457634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d75bd1de6d877e545a40e52cd63c7954ea4788dcef29fc8d173e997f5b5c46ab64736f6c63430008170033";

type OroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oro__factory extends ContractFactory {
  constructor(...args: OroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oro> {
    return super.deploy(overrides || {}) as Promise<Oro>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Oro {
    return super.attach(address) as Oro;
  }
  override connect(signer: Signer): Oro__factory {
    return super.connect(signer) as Oro__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OroInterface {
    return new utils.Interface(_abi) as OroInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oro {
    return new Contract(address, _abi, signerOrProvider) as Oro;
  }
}
