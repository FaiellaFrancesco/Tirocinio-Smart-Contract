/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  DUKE,
  DUKEInterface,
} from "../../../medium/0x084743a9b29a806a5b924540e545a47f32999d04.sol/DUKE";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_DUKEThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_DUKEamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119d58061029c6000396000f3fe60806040526004361061010d5760003560e01c8063715018a61161009557806395d89b411161006457806395d89b41146102c7578063a9059cbb146102f4578063c69f1a8914610314578063dd62ed3e1461032a578063ea414b281461037057600080fd5b8063715018a614610260578063751039fc146102755780638a8c523c1461028a5780638da5cb5b1461029f57600080fd5b806318160ddd116100dc57806318160ddd146101c257806320800a00146101d757806323b872dd146101ee578063313ce5671461020e57806370a082311461022a57600080fd5b806306fdde0314610119578063095ea7b3146101585780630faee56f1461018857806313a49716146101ac57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152600481526344756b6560e01b60208201525b60405161014f9190611490565b60405180910390f35b34801561016457600080fd5b506101786101733660046114f3565b610390565b604051901515815260200161014f565b34801561019457600080fd5b5061019e600c5481565b60405190815260200161014f565b3480156101b857600080fd5b5061019e600e5481565b3480156101ce57600080fd5b5061019e6103a7565b3480156101e357600080fd5b506101ec6103c8565b005b3480156101fa57600080fd5b5061017861020936600461151f565b610437565b34801561021a57600080fd5b506040516009815260200161014f565b34801561023657600080fd5b5061019e610245366004611560565b6001600160a01b031660009081526001602052604090205490565b34801561026c57600080fd5b506101ec6104e2565b34801561028157600080fd5b506101ec610556565b34801561029657600080fd5b506101ec610582565b3480156102ab57600080fd5b506000546040516001600160a01b03909116815260200161014f565b3480156102d357600080fd5b5060408051808201909152600481526344554b4560e01b6020820152610142565b34801561030057600080fd5b5061017861030f3660046114f3565b61093a565b34801561032057600080fd5b5061019e600d5481565b34801561033657600080fd5b5061019e61034536600461157d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561037c57600080fd5b506101ec61038b366004611560565b610947565b600061039d338484610985565b5060015b92915050565b60006103b56009600a6116b3565b6103c3906305f5e1006116c2565b905090565b6000546001600160a01b031633146103fb5760405162461bcd60e51b81526004016103f2906116d9565b60405180910390fd5b6000471161040857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610434573d6000803e3d6000fd5b50565b6000610444848484610aa9565b6004546001600160a01b0316331480159061048157506010546001600160a01b038581169116148061048157506001600160a01b03831661dead14155b156104d8576104d884336104d385604051806060016040528060288152602001611978602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f76565b610985565b5060019392505050565b6000546001600160a01b0316331461050c5760405162461bcd60e51b81526004016103f2906116d9565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105805760405162461bcd60e51b81526004016103f2906116d9565b565b6000546001600160a01b031633146105ac5760405162461bcd60e51b81526004016103f2906116d9565b601054600160a01b900460ff16156106065760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103f2565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561064f9030906106416009600a6116b3565b6104d3906305f5e1006116c2565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c6919061170e565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c919061170e565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd919061170e565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d7194730610805816001600160a01b031660009081526001602052604090205490565b60008061081a6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610882573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108a7919061172b565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610916573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611759565b600061039d338484610aa9565b3360009081526003602052604090205460ff1661096357600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f2565b6001600160a01b038216610a485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f2565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b0d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f2565b6001600160a01b038216610b6f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f2565b60008111610bd15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103f2565b60006001600160a01b0384163014801590610bf557506001600160a01b0383163014155b15610e1857601054600160a81b900460ff16610c3a57610c376064610c3160075460085411610c2657600554610c2a565b6006545b8590610fb0565b90611039565b90505b6010546001600160a01b038581169116148015610c655750600f546001600160a01b03848116911614155b8015610c8a57506001600160a01b03831660009081526003602052604090205460ff16155b8015610ca457506004546001600160a01b03848116911614155b15610ce9574360095414610cbc576000600a55436009555b81600a6000828254610cce919061177b565b909155505060088054906000610ce38361178e565b91905055505b6010546001600160a01b038481169116148015610d0f57506001600160a01b0384163014155b15610d6a57610d1c61107b565b600a541080610d2d57504360095414155b610d6a5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103f2565b30600090815260016020526040902054601054600160a81b900460ff16158015610da157506010546001600160a01b038581169116145b8015610db65750601054600160b01b900460ff165b8015610dd057506004546001600160a01b03868116911614155b15610e16578015610e0a576000600c548211610dec5781610df0565b600c545b9050610e08818511610e025784611209565b81611209565b505b47610e1447611383565b505b505b6001600160a01b038416600090815260016020526040902054610e3b90836113c1565b6001600160a01b038516600090815260016020526040902055610e80610e6183836113c1565b6001600160a01b03851660009081526001602052604090205490611403565b6001600160a01b0384166000908152600160205260409020558015610f135730600090815260016020526040902054610eb99082611403565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f0a9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f70576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f5e85856113c1565b60405190815260200160405180910390a35b50505050565b60008184841115610f9a5760405162461bcd60e51b81526004016103f29190611490565b506000610fa784866117a7565b95945050505050565b600082600003610fc2575060006103a1565b6000610fce83856116c2565b905082610fdb85836117ba565b146110325760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103f2565b9392505050565b600061103283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611462565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d919061170e565b81600081518110611120576111206117f2565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611154576111546117f2565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111a0906729a2241af62c000090869060040161184d565b600060405180830381865afa1580156111bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111e5919081019061186e565b9050806001815181106111fa576111fa6117f2565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611251576112516117f2565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce919061170e565b816001815181106112e1576112e16117f2565b6001600160a01b039283166020918202929092010152600f546113079130911684610985565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061134090859060009086903090429060040161193b565b600060405180830381600087803b15801561135a57600080fd5b505af115801561136e573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113bd573d6000803e3d6000fd5b5050565b600061103283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f76565b600080611410838561177b565b9050838110156110325760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103f2565b600081836114835760405162461bcd60e51b81526004016103f29190611490565b506000610fa784866117ba565b602081526000825180602084015260005b818110156114be57602081860181015160408684010152016114a1565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461043457600080fd5b6000806040838503121561150657600080fd5b8235611511816114de565b946020939093013593505050565b60008060006060848603121561153457600080fd5b833561153f816114de565b9250602084013561154f816114de565b929592945050506040919091013590565b60006020828403121561157257600080fd5b8135611032816114de565b6000806040838503121561159057600080fd5b823561159b816114de565b915060208301356115ab816114de565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611607578085048111156115eb576115eb6115b6565b60018416156115f957908102905b60019390931c9280026115d0565b935093915050565b60008261161e575060016103a1565b8161162b575060006103a1565b8160018114611641576002811461164b57611667565b60019150506103a1565b60ff84111561165c5761165c6115b6565b50506001821b6103a1565b5060208310610133831016604e8410600b841016171561168a575081810a6103a1565b61169760001984846115cc565b80600019048211156116ab576116ab6115b6565b029392505050565b600061103260ff84168361160f565b80820281158282048414176103a1576103a16115b6565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172057600080fd5b8151611032816114de565b60008060006060848603121561174057600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561176b57600080fd5b8151801515811461103257600080fd5b808201808211156103a1576103a16115b6565b6000600182016117a0576117a06115b6565b5060010190565b818103818111156103a1576103a16115b6565b6000826117d757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118435781516001600160a01b031686526020958601959091019060010161181c565b5093949350505050565b8281526040602082015260006118666040830184611808565b949350505050565b60006020828403121561188057600080fd5b815167ffffffffffffffff81111561189757600080fd5b8201601f810184136118a857600080fd5b805167ffffffffffffffff8111156118c2576118c26117dc565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118ef576118ef6117dc565b60405291825260208184018101929081018784111561190d57600080fd5b6020850194505b8385101561193057845180825260209586019590935001611914565b509695505050505050565b85815284602082015260a06040820152600061195a60a0830186611808565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212207587f63d10fe57702af8c3c745b27fa3b792f55af46da2bc27506f372b4ae9b864736f6c634300081e0033";

type DUKEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DUKEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DUKE__factory extends ContractFactory {
  constructor(...args: DUKEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DUKE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DUKE__factory {
    return super.connect(runner) as DUKE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DUKEInterface {
    return new Interface(_abi) as DUKEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DUKE {
    return new Contract(address, _abi, runner) as unknown as DUKE;
  }
}
