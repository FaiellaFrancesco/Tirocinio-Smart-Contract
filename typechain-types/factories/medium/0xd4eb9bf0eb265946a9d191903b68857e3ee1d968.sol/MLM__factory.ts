/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MLM,
  MLMInterface,
} from "../../../medium/0xd4eb9bf0eb265946a9d191903b68857e3ee1d968.sol/MLM";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceBuyTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reduceSellTaxAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260166006556016600755600060085560006009556017600a556016600b556016600c556000600d556000600e5560646012600a6200004391906200039e565b62000053906305f5e100620003b6565b6200005f9190620003d0565b6200006c906002620003b6565b600f5560646200007f6012600a6200039e565b6200008f906305f5e100620003b6565b6200009b9190620003d0565b620000a8906002620003b6565b6010556103e8620000bc6012600a6200039e565b620000cc906305f5e100620003b6565b620000d89190620003d0565b620000e5906001620003b6565b6011556064620000f86012600a6200039e565b62000108906305f5e100620003b6565b620001149190620003d0565b62000121906001620003b6565b6012556014805461ffff60a81b1916905560006015819055601681905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200019d6012600a6200039e565b620001ad906305f5e100620003b6565b306000908152600160208190526040822092909255600390620001d86000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553080825260039094528281208054861660019081179091556005549092168152918220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002626012600a6200039e565b62000272906305f5e100620003b6565b60405190815260200160405180910390a3620003f3565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002e0578160001904821115620002c457620002c462000289565b80851615620002d257918102915b93841c9390800290620002a4565b509250929050565b600082620002f95750600162000398565b81620003085750600062000398565b81600181146200032157600281146200032c576200034c565b600191505062000398565b60ff84111562000340576200034062000289565b50506001821b62000398565b5060208310610133831016604e8410600b841016171562000371575081810a62000398565b6200037d83836200029f565b806000190482111562000394576200039462000289565b0290505b92915050565b6000620003af60ff841683620002e8565b9392505050565b808202811582820484141762000398576200039862000289565b600082620003ee57634e487b7160e01b600052601260045260246000fd5b500490565b611d2c80620004036000396000f3fe6080604052600436106101855760003560e01c8063751039fc116100d1578063bf474bed1161008a578063d34628cc11610064578063d34628cc1461046a578063dd62ed3e1461048a578063ec1f3f63146104d0578063f2fde38b146104f057600080fd5b8063bf474bed14610429578063c36956a01461043f578063c9567bf91461045557600080fd5b8063751039fc146103745780637d1db4a5146103895780638da5cb5b1461039f5780638f9a55c0146103c757806395d89b41146103dd578063a9059cbb1461040957600080fd5b8063313ce5671161013e57806351bc3c851161011857806351bc3c85146102ff5780636fc3eaec1461031457806370a0823114610329578063715018a61461035f57600080fd5b8063313ce5671461028857806331c2d847146102a45780633bbac579146102c657600080fd5b806306fdde0314610191578063095ea7b3146101e95780630c193045146102195780630faee56f1461023d57806318160ddd1461025357806323b872dd1461026857600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b5060408051808201909152601a81527f4d616b696e67204c696665204d756c7469706c616e657461727900000000000060208201525b6040516101e091906117fa565b60405180910390f35b3480156101f557600080fd5b5061020961020436600461186d565b610510565b60405190151581526020016101e0565b34801561022557600080fd5b5061022f600a5481565b6040519081526020016101e0565b34801561024957600080fd5b5061022f60125481565b34801561025f57600080fd5b5061022f610527565b34801561027457600080fd5b50610209610283366004611899565b610548565b34801561029457600080fd5b50604051601281526020016101e0565b3480156102b057600080fd5b506102c46102bf3660046118f0565b6105b1565b005b3480156102d257600080fd5b506102096102e13660046119b5565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561030b57600080fd5b506102c4610650565b34801561032057600080fd5b506102c461069f565b34801561033557600080fd5b5061022f6103443660046119b5565b6001600160a01b031660009081526001602052604090205490565b34801561036b57600080fd5b506102c46106cc565b34801561038057600080fd5b506102c4610740565b34801561039557600080fd5b5061022f600f5481565b3480156103ab57600080fd5b506000546040516001600160a01b0390911681526020016101e0565b3480156103d357600080fd5b5061022f60105481565b3480156103e957600080fd5b506040805180820190915260038152624d4c4d60e81b60208201526101d3565b34801561041557600080fd5b5061020961042436600461186d565b6107f2565b34801561043557600080fd5b5061022f60115481565b34801561044b57600080fd5b5061022f600b5481565b34801561046157600080fd5b506102c46107ff565b34801561047657600080fd5b506102c46104853660046118f0565b610bbb565b34801561049657600080fd5b5061022f6104a53660046119d2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104dc57600080fd5b506102c46104eb366004611a0b565b610c4d565b3480156104fc57600080fd5b506102c461050b3660046119b5565b610c94565b600061051d338484610d7e565b5060015b92915050565b60006105356012600a611b1e565b610543906305f5e100611b2d565b905090565b6000610555848484610ea2565b6105a784336105a285604051806060016040528060288152602001611ccf602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061145d565b610d7e565b5060019392505050565b6000546001600160a01b031633146105e45760405162461bcd60e51b81526004016105db90611b44565b60405180910390fd5b60005b815181101561064c5760006004600084848151811061060857610608611b79565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061064481611b8f565b9150506105e7565b5050565b6005546001600160a01b0316336001600160a01b03161461067057600080fd5b30600090815260016020526040902054801561068f5761068f81611497565b47801561064c5761064c81611611565b6005546001600160a01b0316336001600160a01b0316146106bf57600080fd5b476106c981611611565b50565b6000546001600160a01b031633146106f65760405162461bcd60e51b81526004016105db90611b44565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461076a5760405162461bcd60e51b81526004016105db90611b44565b6107766012600a611b1e565b610784906305f5e100611b2d565b600f556107936012600a611b1e565b6107a1906305f5e100611b2d565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107d16012600a611b1e565b6107df906305f5e100611b2d565b60405190815260200160405180910390a1565b600061051d338484610ea2565b6000546001600160a01b031633146108295760405162461bcd60e51b81526004016105db90611b44565b601454600160a01b900460ff16156108835760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105db565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108cc9030906108be6012600a611b1e565b6105a2906305f5e100611b2d565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190611ba8565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c99190611ba8565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190611ba8565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a82816001600160a01b031660009081526001602052604090205490565b600080610a976000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610aff573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b249190611bc5565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba19190611bf3565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610be55760405162461bcd60e51b81526004016105db90611b44565b60005b815181101561064c57600160046000848481518110610c0957610c09611b79565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c4581611b8f565b915050610be8565b6005546001600160a01b0316336001600160a01b031614610c6d57600080fd5b6008548111158015610c8157506009548111155b610c8a57600080fd5b6008819055600955565b6000546001600160a01b03163314610cbe5760405162461bcd60e51b81526004016105db90611b44565b6001600160a01b038116610d235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105db565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610de05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105db565b6001600160a01b038216610e415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105db565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f065760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105db565b6001600160a01b038216610f685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105db565b60008111610fca5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105db565b600080546001600160a01b03858116911614801590610ff757506000546001600160a01b03848116911614155b1561131a576001600160a01b03841660009081526004602052604090205460ff1615801561103e57506001600160a01b03831660009081526004602052604090205460ff16155b61104757600080fd5b611073606461106d600a54600e541161106257600654611066565b6008545b859061164b565b906116d4565b6014549091506001600160a01b0385811691161480156110a157506013546001600160a01b03848116911614155b80156110c657506001600160a01b03831660009081526003602052604090205460ff16155b156111ae57600f5482111561111d5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016105db565b60105482611140856001600160a01b031660009081526001602052604090205490565b61114a9190611c15565b11156111985760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105db565b600e80549060006111a883611b8f565b91905055505b6014546001600160a01b0384811691161480156111d457506001600160a01b0384163014155b15611201576111fe606461106d600b54600e54116111f457600754611066565b600954859061164b565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561123857506014546001600160a01b038581169116145b801561124d5750601454600160b01b900460ff165b801561125a575060115481115b80156112695750600c54600e54115b156113185760165443111561127e5760006015555b6005601554106112d05760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920352073656c6c732070657220626c6f636b2100000000000000000060448201526064016105db565b6112ed6112e8846112e384601254611716565b611716565b611497565b4780156112fd576112fd47611611565b6015805490600061130d83611b8f565b909155505043601655505b505b8015611394573060009081526001602052604090205461133a908261172b565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061138b9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113b7908361178a565b6001600160a01b0385166000908152600160205260409020556113fc6113dd838361178a565b6001600160a01b0385166000908152600160205260409020549061172b565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611446858561178a565b60405190815260200160405180910390a350505050565b600081848411156114815760405162461bcd60e51b81526004016105db91906117fa565b50600061148e8486611c28565b95945050505050565b6014805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106114df576114df611b79565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155c9190611ba8565b8160018151811061156f5761156f611b79565b6001600160a01b0392831660209182029290920101526013546115959130911684610d7e565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906115ce908590600090869030904290600401611c3b565b600060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561064c573d6000803e3d6000fd5b60008260000361165d57506000610521565b60006116698385611b2d565b9050826116768583611cac565b146116cd5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016105db565b9392505050565b60006116cd83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506117cc565b600081831161172557826116cd565b50919050565b6000806117388385611c15565b9050838110156116cd5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105db565b60006116cd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061145d565b600081836117ed5760405162461bcd60e51b81526004016105db91906117fa565b50600061148e8486611cac565b600060208083528351808285015260005b818110156118275785810183015185820160400152820161180b565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106c957600080fd5b803561186881611848565b919050565b6000806040838503121561188057600080fd5b823561188b81611848565b946020939093013593505050565b6000806000606084860312156118ae57600080fd5b83356118b981611848565b925060208401356118c981611848565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561190357600080fd5b823567ffffffffffffffff8082111561191b57600080fd5b818501915085601f83011261192f57600080fd5b813581811115611941576119416118da565b8060051b604051601f19603f83011681018181108582111715611966576119666118da565b60405291825284820192508381018501918883111561198457600080fd5b938501935b828510156119a95761199a8561185d565b84529385019392850192611989565b98975050505050505050565b6000602082840312156119c757600080fd5b81356116cd81611848565b600080604083850312156119e557600080fd5b82356119f081611848565b91506020830135611a0081611848565b809150509250929050565b600060208284031215611a1d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a75578160001904821115611a5b57611a5b611a24565b80851615611a6857918102915b93841c9390800290611a3f565b509250929050565b600082611a8c57506001610521565b81611a9957506000610521565b8160018114611aaf5760028114611ab957611ad5565b6001915050610521565b60ff841115611aca57611aca611a24565b50506001821b610521565b5060208310610133831016604e8410600b8410161715611af8575081810a610521565b611b028383611a3a565b8060001904821115611b1657611b16611a24565b029392505050565b60006116cd60ff841683611a7d565b808202811582820484141761052157610521611a24565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611ba157611ba1611a24565b5060010190565b600060208284031215611bba57600080fd5b81516116cd81611848565b600080600060608486031215611bda57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611c0557600080fd5b815180151581146116cd57600080fd5b8082018082111561052157610521611a24565b8181038181111561052157610521611a24565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c8b5784516001600160a01b031683529383019391830191600101611c66565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611cc957634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220dc3dcf8a2305a64aaa8131c8d0b68af92bbc4adf6f3b4faa7b294f7eaed7f1ec64736f6c63430008150033";

type MLMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MLMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MLM__factory extends ContractFactory {
  constructor(...args: MLMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<MLM> {
    return super.deploy(overrides || {}) as Promise<MLM>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MLM {
    return super.attach(address) as MLM;
  }
  override connect(signer: Signer): MLM__factory {
    return super.connect(signer) as MLM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MLMInterface {
    return new utils.Interface(_abi) as MLMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MLM {
    return new Contract(address, _abi, signerOrProvider) as MLM;
  }
}
