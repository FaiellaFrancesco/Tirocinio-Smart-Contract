/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../medium/0x702dd2cc9ae891827176357e88fcbd1e70871e59.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b919061027b565b61004990633b9aca00610291565b61005391906102a8565b600e556000600f8190556011805461ffff60a81b191690556012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556101096009600a61027b565b61011790633b9aca00610291565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101586009600a61027b565b61016690633b9aca00610291565b60405190815260200160405180910390a36102ca565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101cd578085048111156101b1576101b161017c565b60018416156101bf57908102905b60019390931c928002610196565b935093915050565b6000826101e457506001610275565b816101f157506000610275565b816001811461020757600281146102115761022d565b6001915050610275565b60ff8411156102225761022261017c565b50506001821b610275565b5060208310610133831016604e8410600b8410161715610250575081810a610275565b61025d6000198484610192565b80600019048211156102715761027161017c565b0290505b92915050565b600061028a60ff8416836101d5565b9392505050565b80820281158282048414176102755761027561017c565b6000826102c557634e487b7160e01b600052601260045260246000fd5b500490565b6119db806102d96000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102ae578063a9059cbb146102de578063d02c9383146102fe578063dd62ed3e14610313578063f5f674311461035957600080fd5b806370a0823114610226578063715018a61461025c578063751039fc146102715780638da5cb5b1461028657600080fd5b806320800a00116100d157806320800a00146101bd57806323b872dd146101d4578063313ce567146101f45780636482c89a1461021057600080fd5b806306fdde031461010e578063095ea7b3146101545780630faee56f1461018457806318160ddd146101a857600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201909152600b81526a5079676d7920486970706f60a81b60208201525b60405161014b9190611496565b60405180910390f35b34801561016057600080fd5b5061017461016f3660046114f9565b610379565b604051901515815260200161014b565b34801561019057600080fd5b5061019a600e5481565b60405190815260200161014b565b3480156101b457600080fd5b5061019a610390565b3480156101c957600080fd5b506101d26103b1565b005b3480156101e057600080fd5b506101746101ef366004611525565b610420565b34801561020057600080fd5b506040516009815260200161014b565b34801561021c57600080fd5b5061019a600f5481565b34801561023257600080fd5b5061019a610241366004611566565b6001600160a01b031660009081526001602052604090205490565b34801561026857600080fd5b506101d26104d0565b34801561027d57600080fd5b506101d2610544565b34801561029257600080fd5b506000546040516001600160a01b03909116815260200161014b565b3480156102ba57600080fd5b506040805180820190915260078152664b6f627573686960c81b602082015261013e565b3480156102ea57600080fd5b506101746102f93660046114f9565b610570565b34801561030a57600080fd5b506101d261057d565b34801561031f57600080fd5b5061019a61032e366004611583565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036557600080fd5b506101d2610374366004611566565b610935565b600061038633848461098b565b5060015b92915050565b600061039e6009600a6116b9565b6103ac90633b9aca006116c8565b905090565b6000546001600160a01b031633146103e45760405162461bcd60e51b81526004016103db906116df565b60405180910390fd5b600047116103f157600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561041d573d6000803e3d6000fd5b50565b600061042d848484610aaf565b3360009081526003602052604090205460ff1615801561046f57506011546001600160a01b038581169116148061046f57506001600160a01b03831661dead14155b156104c6576104c684336104c18560405180606001604052806028815260200161197e602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f7c565b61098b565b5060019392505050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016103db906116df565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461056e5760405162461bcd60e51b81526004016103db906116df565b565b6000610386338484610aaf565b6000546001600160a01b031633146105a75760405162461bcd60e51b81526004016103db906116df565b601154600160a01b900460ff16156106015760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103db565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561064a90309061063c6009600a6116b9565b6104c190633b9aca006116c8565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611714565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190611714565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190611714565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d7194730610800816001600160a01b031660009081526001602052604090205490565b6000806108156000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561087d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108a29190611731565b50506011805462ff00ff60a01b1981166201000160a01b1790915560105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610911573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d919061175f565b3360009081526003602052604090205460ff1661095157600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b0383166109ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103db565b6001600160a01b038216610a4e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b135760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610b755760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b60008111610bd75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103db565b60006001600160a01b0384163014801590610bfb57506001600160a01b0383163014155b15610e1e57601154600160a81b900460ff16610c4057610c3d6064610c3760075460085411610c2c57600554610c30565b6006545b8590610fb6565b9061103f565b90505b6011546001600160a01b038581169116148015610c6b57506010546001600160a01b03848116911614155b8015610c9057506001600160a01b03831660009081526003602052604090205460ff16155b8015610caa57506004546001600160a01b03848116911614155b15610cef574360095414610cc2576000600a55436009555b81600a6000828254610cd49190611781565b909155505060088054906000610ce983611794565b91905055505b6011546001600160a01b038481169116148015610d1557506001600160a01b0384163014155b15610d7057610d22611081565b600a541080610d3357504360095414155b610d705760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103db565b30600090815260016020526040902054601154600160a81b900460ff16158015610da757506011546001600160a01b038581169116145b8015610dbc5750601154600160b01b900460ff165b8015610dd657506004546001600160a01b03868116911614155b15610e1c578015610e10576000600e548211610df25781610df6565b600e545b9050610e0e818511610e08578461120f565b8161120f565b505b47610e1a47611389565b505b505b6001600160a01b038416600090815260016020526040902054610e4190836113c7565b6001600160a01b038516600090815260016020526040902055610e86610e6783836113c7565b6001600160a01b03851660009081526001602052604090205490611409565b6001600160a01b0384166000908152600160205260409020558015610f195730600090815260016020526040902054610ebf9082611409565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f109085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f76576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6485856113c7565b60405190815260200160405180910390a35b50505050565b60008184841115610fa05760405162461bcd60e51b81526004016103db9190611496565b506000610fad84866117ad565b95945050505050565b600082600003610fc85750600061038a565b6000610fd483856116c8565b905082610fe185836117c0565b146110385760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103db565b9392505050565b600061103883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611468565b604080516002808252606082018352600092839291906020830190803683375050601054604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111139190611714565b81600081518110611126576111266117f8565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061115a5761115a6117f8565b6001600160a01b03928316602091820292909201015260105460405163d06ca61f60e01b8152600092919091169063d06ca61f906111a69067d02ab486cedc0000908690600401611853565b600060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111eb9190810190611874565b905080600181518110611200576112006117f8565b60200260200101519250505090565b6011805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611257576112576117f8565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190611714565b816001815181106112e7576112e76117f8565b6001600160a01b03928316602091820292909201015260105461130d913091168461098b565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac94790611346908590600090869030904290600401611941565b600060405180830381600087803b15801561136057600080fd5b505af1158015611374573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113c3573d6000803e3d6000fd5b5050565b600061103883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f7c565b6000806114168385611781565b9050838110156110385760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103db565b600081836114895760405162461bcd60e51b81526004016103db9190611496565b506000610fad84866117c0565b602081526000825180602084015260005b818110156114c457602081860181015160408684010152016114a7565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041d57600080fd5b6000806040838503121561150c57600080fd5b8235611517816114e4565b946020939093013593505050565b60008060006060848603121561153a57600080fd5b8335611545816114e4565b92506020840135611555816114e4565b929592945050506040919091013590565b60006020828403121561157857600080fd5b8135611038816114e4565b6000806040838503121561159657600080fd5b82356115a1816114e4565b915060208301356115b1816114e4565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561160d578085048111156115f1576115f16115bc565b60018416156115ff57908102905b60019390931c9280026115d6565b935093915050565b6000826116245750600161038a565b816116315750600061038a565b816001811461164757600281146116515761166d565b600191505061038a565b60ff841115611662576116626115bc565b50506001821b61038a565b5060208310610133831016604e8410600b8410161715611690575081810a61038a565b61169d60001984846115d2565b80600019048211156116b1576116b16115bc565b029392505050565b600061103860ff841683611615565b808202811582820484141761038a5761038a6115bc565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172657600080fd5b8151611038816114e4565b60008060006060848603121561174657600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177157600080fd5b8151801515811461103857600080fd5b8082018082111561038a5761038a6115bc565b6000600182016117a6576117a66115bc565b5060010190565b8181038181111561038a5761038a6115bc565b6000826117dd57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118495781516001600160a01b0316865260209586019590910190600101611822565b5093949350505050565b82815260406020820152600061186c604083018461180e565b949350505050565b60006020828403121561188657600080fd5b815167ffffffffffffffff81111561189d57600080fd5b8201601f810184136118ae57600080fd5b805167ffffffffffffffff8111156118c8576118c86117e2565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118f5576118f56117e2565b60405291825260208184018101929081018784111561191357600080fd5b6020850194505b838510156119365784518082526020958601959093500161191a565b509695505050505050565b85815284602082015260a06040820152600061196060a083018661180e565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212200542d7736e05b946b023d5a0d867df55ea16aa3f83931244964bb08a2dedb0f364736f6c634300081e0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
