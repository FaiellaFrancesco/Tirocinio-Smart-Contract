/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  ElonMa,
  ElonMaInterface,
} from "../../../medium/0x300ce7afce2d0d07544046bda8c74dddc6da9634.sol/ElonMa";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556014600a55601e600b556014600c556000600d556009600a61003a919061030b565b610049906401f5806640610321565b600e556100586009600a61030b565b610067906401f5806640610321565b600f556100766009600a61030b565b6100849063fac03320610321565b6010556100936009600a61030b565b6100a19063fac03320610321565b6011556013805461ffff60a81b1916905560006014819055601581905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319163317905561011b6009600a61030b565b61012a906461f313f880610321565b3360009081526001602081905260408220929092556003906101546000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556005549091168352912080549092161790556101b23390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101ea6009600a61030b565b6101f9906461f313f880610321565b60405190815260200160405180910390a3610338565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156102605781600019048211156102465761024661020f565b8085161561025357918102915b93841c939080029061022a565b509250929050565b60008261027757506001610305565b8161028457506000610305565b816001811461029a57600281146102a4576102c0565b6001915050610305565b60ff8411156102b5576102b561020f565b50506001821b610305565b5060208310610133831016604e8410600b84101617156102e3575081810a610305565b6102ed8383610225565b80600019048211156103015761030161020f565b0290505b92915050565b600061031a60ff841683610268565b9392505050565b80820281158282048414176103055761030561020f565b611bbc806103476000396000f3fe6080604052600436106101395760003560e01c8063751039fc116100ab578063a9059cbb1161006f578063a9059cbb1461037f578063bf474bed1461039f578063c9567bf9146103b5578063d34628cc146103ca578063dd62ed3e146103ea578063ec1f3f631461043057600080fd5b8063751039fc146102e75780637d1db4a5146102fc5780638da5cb5b146103125780638f9a55c01461033a57806395d89b411461035057600080fd5b8063313ce567116100fd578063313ce5671461021057806331c2d8471461022c5780633bbac5791461024e57806351bc3c851461028757806370a082311461029c578063715018a6146102d257600080fd5b806306fdde0314610145578063095ea7b3146101875780630faee56f146101b757806318160ddd146101db57806323b872dd146101f057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50604080518082019091526007815266456c6f6e204d6160c81b60208201525b60405161017e9190611684565b60405180910390f35b34801561019357600080fd5b506101a76101a23660046116fb565b610450565b604051901515815260200161017e565b3480156101c357600080fd5b506101cd60115481565b60405190815260200161017e565b3480156101e757600080fd5b506101cd610467565b3480156101fc57600080fd5b506101a761020b366004611727565b610489565b34801561021c57600080fd5b506040516009815260200161017e565b34801561023857600080fd5b5061024c61024736600461177e565b6104f2565b005b34801561025a57600080fd5b506101a7610269366004611843565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561029357600080fd5b5061024c610587565b3480156102a857600080fd5b506101cd6102b7366004611843565b6001600160a01b031660009081526001602052604090205490565b3480156102de57600080fd5b5061024c6105d6565b3480156102f357600080fd5b5061024c610685565b34801561030857600080fd5b506101cd600e5481565b34801561031e57600080fd5b506000546040516001600160a01b03909116815260200161017e565b34801561034657600080fd5b506101cd600f5481565b34801561035c57600080fd5b50604080518082019091526006815265454c4f4e4d4160d01b6020820152610171565b34801561038b57600080fd5b506101a761039a3660046116fb565b61073a565b3480156103ab57600080fd5b506101cd60105481565b3480156103c157600080fd5b5061024c610747565b3480156103d657600080fd5b5061024c6103e536600461177e565b610b3f565b3480156103f657600080fd5b506101cd610405366004611860565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561043c57600080fd5b5061024c61044b366004611899565b610bc7565b600061045d338484610c0e565b5060015b92915050565b60006104756009600a6119ac565b610484906461f313f8806119bb565b905090565b6000610496848484610d32565b6104e884336104e385604051806060016040528060288152602001611b5f602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906112e7565b610c0e565b5060019392505050565b6000546001600160a01b031633146105255760405162461bcd60e51b815260040161051c906119d2565b60405180910390fd5b60005b81518110156105835760006004600084848151811061054957610549611a07565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610528565b5050565b6005546001600160a01b0316336001600160a01b0316146105a757600080fd5b3060009081526001602052604090205480156105c6576105c681611321565b478015610583576105838161149b565b6000546001600160a01b031633146106005760405162461bcd60e51b815260040161051c906119d2565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561063a573d6000803e3d6000fd5b50600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106af5760405162461bcd60e51b815260040161051c906119d2565b6106bb6009600a6119ac565b6106ca906461f313f8806119bb565b600e556106d96009600a6119ac565b6106e8906461f313f8806119bb565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107186009600a6119ac565b610727906461f313f8806119bb565b60405190815260200160405180910390a1565b600061045d338484610d32565b6000546001600160a01b031633146107715760405162461bcd60e51b815260040161051c906119d2565b601354600160a01b900460ff16156107cb5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161051c565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556107fe3033600019610c0e565b6108373061039a6064610831605f61082b336001600160a01b031660009081526001602052604090205490565b906114d5565b9061155e565b50601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190611a1d565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190611a1d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a69190611a1d565b601380546001600160a01b0319166001600160a01b039283161790556012546109d491309116600019610c0e565b6012546001600160a01b031663f305d7194730610a06816001600160a01b031660009081526001602052604090205490565b600080610a1b6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a83573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610aa89190611a3a565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b259190611a68565b506013805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610b695760405162461bcd60e51b815260040161051c906119d2565b60005b815181101561058357600160046000848481518110610b8d57610b8d611a07565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b6c565b6005546001600160a01b0316336001600160a01b031614610be757600080fd5b6008548111158015610bfb57506009548111155b610c0457600080fd5b6008819055600955565b6001600160a01b038316610c705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051c565b6001600160a01b038216610cd15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051c565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051c565b6001600160a01b038216610df85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051c565b60008111610e5a5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161051c565b600080546001600160a01b03858116911614801590610e8757506000546001600160a01b03848116911614155b156111a4576001600160a01b03841660009081526004602052604090205460ff16158015610ece57506001600160a01b03831660009081526004602052604090205460ff16155b610ed757600080fd5b610efd6064610831600a54600d5411610ef257600654610ef6565b6008545b85906114d5565b6013549091506001600160a01b038581169116148015610f2b57506012546001600160a01b03848116911614155b8015610f5057506001600160a01b03831660009081526003602052604090205460ff16155b1561103857600e54821115610fa75760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161051c565b600f5482610fca856001600160a01b031660009081526001602052604090205490565b610fd49190611a8a565b11156110225760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161051c565b600d805490600061103283611a9d565b91905055505b6013546001600160a01b03848116911614801561105e57506001600160a01b0384163014155b1561108b576110886064610831600b54600d541161107e57600754610ef6565b60095485906114d5565b90505b30600090815260016020526040902054601354600160a81b900460ff161580156110c257506013546001600160a01b038581169116145b80156110d75750601354600160b01b900460ff165b80156110e4575060105481115b80156110f35750600c54600d54115b156111a2576015544311156111085760006014555b60036014541061115a5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161051c565b6111776111728461116d846011546115a0565b6115a0565b611321565b478015611187576111874761149b565b6014805490600061119783611a9d565b909155505043601555505b505b801561121e57306000908152600160205260409020546111c490826115b5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112159085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112419083611614565b6001600160a01b0385166000908152600160205260409020556112866112678383611614565b6001600160a01b038516600090815260016020526040902054906115b5565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6112d08585611614565b60405190815260200160405180910390a350505050565b6000818484111561130b5760405162461bcd60e51b815260040161051c9190611684565b5060006113188486611ab6565b95945050505050565b6013805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061136957611369611a07565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156113c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e69190611a1d565b816001815181106113f9576113f9611a07565b6001600160a01b03928316602091820292909201015260125461141f9130911684610c0e565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac94790611458908590600090869030904290600401611ac9565b600060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610583573d6000803e3d6000fd5b6000826000036114e757506000610461565b60006114f383856119bb565b9050826115008583611b3c565b146115575760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161051c565b9392505050565b600061155783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611656565b60008183116115af5782611557565b50919050565b6000806115c28385611a8a565b9050838110156115575760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161051c565b600061155783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112e7565b600081836116775760405162461bcd60e51b815260040161051c9190611684565b5060006113188486611b3c565b60006020808352835180602085015260005b818110156116b257858101830151858201604001528201611696565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146116e857600080fd5b50565b80356116f6816116d3565b919050565b6000806040838503121561170e57600080fd5b8235611719816116d3565b946020939093013593505050565b60008060006060848603121561173c57600080fd5b8335611747816116d3565b92506020840135611757816116d3565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561179157600080fd5b823567ffffffffffffffff808211156117a957600080fd5b818501915085601f8301126117bd57600080fd5b8135818111156117cf576117cf611768565b8060051b604051601f19603f830116810181811085821117156117f4576117f4611768565b60405291825284820192508381018501918883111561181257600080fd5b938501935b8285101561183757611828856116eb565b84529385019392850192611817565b98975050505050505050565b60006020828403121561185557600080fd5b8135611557816116d3565b6000806040838503121561187357600080fd5b823561187e816116d3565b9150602083013561188e816116d3565b809150509250929050565b6000602082840312156118ab57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119035781600019048211156118e9576118e96118b2565b808516156118f657918102915b93841c93908002906118cd565b509250929050565b60008261191a57506001610461565b8161192757506000610461565b816001811461193d576002811461194757611963565b6001915050610461565b60ff841115611958576119586118b2565b50506001821b610461565b5060208310610133831016604e8410600b8410161715611986575081810a610461565b61199083836118c8565b80600019048211156119a4576119a46118b2565b029392505050565b600061155760ff84168361190b565b8082028115828204841417610461576104616118b2565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a2f57600080fd5b8151611557816116d3565b600080600060608486031215611a4f57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611a7a57600080fd5b8151801515811461155757600080fd5b80820180821115610461576104616118b2565b600060018201611aaf57611aaf6118b2565b5060010190565b81810381811115610461576104616118b2565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611b1b5784516001600160a01b031683529383019391830191600101611af6565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611b5957634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220cbcfa4e1b925b37fc9c1071f9bc9e2e6fda3992993824b015286feaa21375b3764736f6c63430008190033";

type ElonMaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElonMaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElonMa__factory extends ContractFactory {
  constructor(...args: ElonMaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ElonMa & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ElonMa__factory {
    return super.connect(runner) as ElonMa__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElonMaInterface {
    return new Interface(_abi) as ElonMaInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ElonMa {
    return new Contract(address, _abi, runner) as unknown as ElonMa;
  }
}
