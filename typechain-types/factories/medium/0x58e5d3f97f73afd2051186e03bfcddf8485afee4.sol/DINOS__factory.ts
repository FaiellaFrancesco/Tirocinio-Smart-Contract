/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DINOS,
  DINOSInterface,
} from "../../../medium/0x58e5d3f97f73afd2051186e03bfcddf8485afee4.sol/DINOS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556017600a556017600b556017600c556000600d556000600e556009600a62000041919062000352565b62000052906401f58066406200036a565b600f55620000636009600a62000352565b62000074906401f58066406200036a565b601055620000856009600a62000352565b620000959063fa56ea006200036a565b601155620000a66009600a62000352565b620000b69063fa56ea006200036a565b6012556014805461ffff60a81b1916905560006015819055601655348015620000de57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001406009600a62000352565b62000151906461f313f8806200036a565b3360009081526001602081905260408220929092556003906200017c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001db3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002156009600a62000352565b62000226906461f313f8806200036a565b60405190815260200160405180910390a362000384565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002945781600019048211156200027857620002786200023d565b808516156200028657918102915b93841c939080029062000258565b509250929050565b600082620002ad575060016200034c565b81620002bc575060006200034c565b8160018114620002d55760028114620002e05762000300565b60019150506200034c565b60ff841115620002f457620002f46200023d565b50506001821b6200034c565b5060208310610133831016604e8410600b841016171562000325575081810a6200034c565b62000331838362000253565b80600019048211156200034857620003486200023d565b0290505b92915050565b60006200036360ff8416836200029c565b9392505050565b80820281158282048414176200034c576200034c6200023d565b611dc080620003946000396000f3fe60806040526004361061014f5760003560e01c8063751039fc116100b6578063a9059cbb1161006f578063a9059cbb146103d4578063bf474bed146103f4578063c9567bf91461040a578063d34628cc1461041f578063dd62ed3e1461043f578063ec1f3f631461048557600080fd5b8063751039fc1461031d5780637d1db4a5146103325780638cd4426d146103485780638da5cb5b146103685780638f9a55c01461039057806395d89b41146103a657600080fd5b8063313ce56711610108578063313ce5671461024857806331c2d847146102645780633bbac5791461028457806351bc3c85146102bd57806370a08231146102d2578063715018a61461030857600080fd5b806306fdde031461015b578063095ea7b3146101a85780630faee56f146101d8578063109daa99146101fc57806318160ddd1461021357806323b872dd1461022857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5060408051808201909152601281527144696e6f7361757220416476656e7475726560701b60208201525b60405161019f919061186f565b60405180910390f35b3480156101b457600080fd5b506101c86101c33660046118e6565b6104a5565b604051901515815260200161019f565b3480156101e457600080fd5b506101ee60125481565b60405190815260200161019f565b34801561020857600080fd5b506102116104bc565b005b34801561021f57600080fd5b506101ee61052c565b34801561023457600080fd5b506101c8610243366004611912565b61054e565b34801561025457600080fd5b506040516009815260200161019f565b34801561027057600080fd5b5061021161027f366004611969565b6105b7565b34801561029057600080fd5b506101c861029f366004611a2e565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102c957600080fd5b50610211610643565b3480156102de57600080fd5b506101ee6102ed366004611a2e565b6001600160a01b031660009081526001602052604090205490565b34801561031457600080fd5b506102116106a9565b34801561032957600080fd5b5061021161071d565b34801561033e57600080fd5b506101ee600f5481565b34801561035457600080fd5b506102116103633660046118e6565b6107cd565b34801561037457600080fd5b506000546040516001600160a01b03909116815260200161019f565b34801561039c57600080fd5b506101ee60105481565b3480156103b257600080fd5b5060408051808201909152600581526444494e4f5360d81b6020820152610192565b3480156103e057600080fd5b506101c86103ef3660046118e6565b6108fa565b34801561040057600080fd5b506101ee60115481565b34801561041657600080fd5b50610211610907565b34801561042b57600080fd5b5061021161043a366004611969565b610cc4565b34801561044b57600080fd5b506101ee61045a366004611a4b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561049157600080fd5b506102116104a0366004611a84565b610d4c565b60006104b2338484610d93565b5060015b92915050565b6000546001600160a01b031633146104ef5760405162461bcd60e51b81526004016104e690611a9d565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b600061053a6009600a611bcc565b610549906461f313f880611bdb565b905090565b600061055b848484610eb7565b6105ad84336105a885604051806060016040528060288152602001611d63602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906114d2565b610d93565b5060019392505050565b6000546001600160a01b031633146105e15760405162461bcd60e51b81526004016104e690611a9d565b60005b815181101561063f5760006004600084848151811061060557610605611bf2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105e4565b5050565b6005546001600160a01b0316336001600160a01b03161461066357600080fd5b30600090815260016020526040902054801580159061068b5750601454600160b01b900460ff165b15610699576106998161150c565b47801561063f5761063f81611686565b6000546001600160a01b031633146106d35760405162461bcd60e51b81526004016104e690611a9d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107475760405162461bcd60e51b81526004016104e690611a9d565b6107536009600a611bcc565b610762906461f313f880611bdb565b600f556107716009600a611bcc565b610780906461f313f880611bdb565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107b06009600a611bcc565b6107bf906461f313f880611bdb565b604051908152602001610522565b6000546001600160a01b031633146107f75760405162461bcd60e51b81526004016104e690611a9d565b6040516370a0823160e01b815230600482015260009061087b906064906108759085906001600160a01b038816906370a0823190602401602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f9190611c08565b906116c0565b90611749565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611c21565b50505050565b60006104b2338484610eb7565b6000546001600160a01b031633146109315760405162461bcd60e51b81526004016104e690611a9d565b601454600160a01b900460ff161561098b5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104e6565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109d59030906109c66009600a611bcc565b6105a8906461f313f880611bdb565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190611c43565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad29190611c43565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190611c43565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610b8b816001600160a01b031660009081526001602052604090205490565b600080610ba06000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610c08573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c2d9190611c60565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa9190611c21565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610cee5760405162461bcd60e51b81526004016104e690611a9d565b60005b815181101561063f57600160046000848481518110610d1257610d12611bf2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cf1565b6005546001600160a01b0316336001600160a01b031614610d6c57600080fd5b6008548111158015610d8057506009548111155b610d8957600080fd5b6008819055600955565b6001600160a01b038316610df55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e6565b6001600160a01b038216610e565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610f1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e6565b6001600160a01b038216610f7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e6565b60008111610fdf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104e6565b600080546001600160a01b0385811691161480159061100c57506000546001600160a01b03848116911614155b801561102657506005546001600160a01b03848116911614155b1561138f576001600160a01b03841660009081526004602052604090205460ff1615801561106d57506001600160a01b03831660009081526004602052604090205460ff16155b61107657600080fd5b600e546000036110a9576110a66064610875600a54600e541161109b5760065461109f565b6008545b85906116c0565b90505b600e54156110ce576110cb6064610875600d54856116c090919063ffffffff16565b90505b6014546001600160a01b0385811691161480156110f957506013546001600160a01b03848116911614155b801561111e57506001600160a01b03831660009081526003602052604090205460ff16155b1561122357600f548211156111755760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104e6565b60105482611198856001600160a01b031660009081526001602052604090205490565b6111a29190611c8e565b11156111f05760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104e6565b61120b6064610875600a54600e541161109b5760065461109f565b600e8054919250600061121d83611ca1565b91905055505b6014546001600160a01b03848116911614801561124957506001600160a01b0384163014155b15611276576112736064610875600b54600e54116112695760075461109f565b60095485906116c0565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156112ad57506014546001600160a01b038581169116145b80156112c25750601454600160b01b900460ff165b80156112cf575060115481115b80156112de5750600c54600e54115b1561138d576016544311156112f35760006015555b6003601554106113455760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104e6565b61136261135d846113588460125461178b565b61178b565b61150c565b4780156113725761137247611686565b6015805490600061138283611ca1565b909155505043601655505b505b801561140957306000908152600160205260409020546113af90826117a0565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114009085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461142c90836117ff565b6001600160a01b03851660009081526001602052604090205561147161145283836117ff565b6001600160a01b038516600090815260016020526040902054906117a0565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114bb85856117ff565b60405190815260200160405180910390a350505050565b600081848411156114f65760405162461bcd60e51b81526004016104e6919061186f565b5060006115038486611cba565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061155457611554611bf2565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156115ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d19190611c43565b816001815181106115e4576115e4611bf2565b6001600160a01b03928316602091820292909201015260135461160a9130911684610d93565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611643908590600090869030904290600401611ccd565b600060405180830381600087803b15801561165d57600080fd5b505af1158015611671573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561063f573d6000803e3d6000fd5b6000826000036116d2575060006104b6565b60006116de8385611bdb565b9050826116eb8583611d40565b146117425760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104e6565b9392505050565b600061174283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611841565b600081831161179a5782611742565b50919050565b6000806117ad8385611c8e565b9050838110156117425760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104e6565b600061174283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114d2565b600081836118625760405162461bcd60e51b81526004016104e6919061186f565b5060006115038486611d40565b60006020808352835180602085015260005b8181101561189d57858101830151858201604001528201611881565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146118d357600080fd5b50565b80356118e1816118be565b919050565b600080604083850312156118f957600080fd5b8235611904816118be565b946020939093013593505050565b60008060006060848603121561192757600080fd5b8335611932816118be565b92506020840135611942816118be565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561197c57600080fd5b823567ffffffffffffffff8082111561199457600080fd5b818501915085601f8301126119a857600080fd5b8135818111156119ba576119ba611953565b8060051b604051601f19603f830116810181811085821117156119df576119df611953565b6040529182528482019250838101850191888311156119fd57600080fd5b938501935b82851015611a2257611a13856118d6565b84529385019392850192611a02565b98975050505050505050565b600060208284031215611a4057600080fd5b8135611742816118be565b60008060408385031215611a5e57600080fd5b8235611a69816118be565b91506020830135611a79816118be565b809150509250929050565b600060208284031215611a9657600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611b23578160001904821115611b0957611b09611ad2565b80851615611b1657918102915b93841c9390800290611aed565b509250929050565b600082611b3a575060016104b6565b81611b47575060006104b6565b8160018114611b5d5760028114611b6757611b83565b60019150506104b6565b60ff841115611b7857611b78611ad2565b50506001821b6104b6565b5060208310610133831016604e8410600b8410161715611ba6575081810a6104b6565b611bb08383611ae8565b8060001904821115611bc457611bc4611ad2565b029392505050565b600061174260ff841683611b2b565b80820281158282048414176104b6576104b6611ad2565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c1a57600080fd5b5051919050565b600060208284031215611c3357600080fd5b8151801515811461174257600080fd5b600060208284031215611c5557600080fd5b8151611742816118be565b600080600060608486031215611c7557600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104b6576104b6611ad2565b600060018201611cb357611cb3611ad2565b5060010190565b818103818111156104b6576104b6611ad2565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611d1f5784516001600160a01b031683529383019391830191600101611cfa565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611d5d57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122026d20d9e2859ed3810477324b4fb87bf9a8a3050b4d05785e06a1e534aa31e6164736f6c63430008170033";

type DINOSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DINOSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DINOS__factory extends ContractFactory {
  constructor(...args: DINOSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DINOS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DINOS__factory {
    return super.connect(runner) as DINOS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DINOSInterface {
    return new Interface(_abi) as DINOSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DINOS {
    return new Contract(address, _abi, runner) as unknown as DINOS;
  }
}
