/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RXSFinanceToken,
  RXSFinanceTokenInterface,
} from "../../../medium/0x1b300f54fe210d39707f8383a406de7d6064d6d3.sol/RXSFinanceToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "decimals_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialBalance_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOwner_",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "feeReceiver_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "RXSFinanceVC",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRXSFinanceVC",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600660809081526518171c17191b60d11b60a05260079061002590826101d7565b50604051610fa0380380610fa083398101604081905261004491610350565b8585848685600461005586826101d7565b50600561006285826101d7565b5061006e82600a6104f5565b6100789084610508565b60028190556001600160a01b038216600081815260208181526040808320859055600387905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350506040516001600160a01b03851693503480156108fc02935091506000818181858888f1935050505015801561010c573d6000803e3d6000fd5b5050600680546001600160a01b0319166001600160a01b03929092169190911790555061051f92505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061016257607f821691505b60208210810361018257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101d257806000526020600020601f840160051c810160208510156101af5750805b601f840160051c820191505b818110156101cf57600081556001016101bb565b50505b505050565b81516001600160401b038111156101f0576101f0610138565b610204816101fe845461014e565b84610188565b6020601f82116001811461023857600083156102205750848201515b600019600385901b1c1916600184901b1784556101cf565b600084815260208120601f198516915b828110156102685787850151825560209485019460019092019101610248565b50848210156102865786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600082601f8301126102a657600080fd5b81516001600160401b038111156102bf576102bf610138565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102ed576102ed610138565b60405281815283820160200185101561030557600080fd5b60005b8281101561032457602081860181015183830182015201610308565b506000918101602001919091529392505050565b6001600160a01b038116811461034d57600080fd5b50565b60008060008060008060c0878903121561036957600080fd5b86516001600160401b0381111561037f57600080fd5b61038b89828a01610295565b602089015190975090506001600160401b038111156103a957600080fd5b6103b589828a01610295565b604089015160608a015160808b0151929850909650945090506103d781610338565b60a08801519092506103e881610338565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156104475780850481111561042b5761042b6103f6565b600184161561043957908102905b60019390931c928002610410565b935093915050565b60008261045e575060016104ef565b8161046b575060006104ef565b8160018114610481576002811461048b576104a7565b60019150506104ef565b60ff84111561049c5761049c6103f6565b50506001821b6104ef565b5060208310610133831016604e8410600b84101617156104ca575081810a6104ef565b6104d7600019848461040c565b80600019048211156104eb576104eb6103f6565b0290505b92915050565b6000610501838361044f565b9392505050565b80820281158282048414176104ef576104ef6103f6565b610a728061052e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d9578063a9059cbb146101ec578063dd62ed3e146101ff578063e58792d01461023857600080fd5b806370a0823114610183578063715018a6146101ac578063893d20e8146101b657806395d89b41146101d157600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce5671461016057806339509351146101685780635b9367591461017b57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610240565b60405161010f91906108a0565b60405180910390f35b61012b61012636600461090a565b6102d2565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610934565b6102e9565b60035461013f565b61012b61017636600461090a565b61039f565b6101026103d6565b61013f610191366004610971565b6001600160a01b031660009081526020819052604090205490565b6101b4610464565b005b6006546040516001600160a01b03909116815260200161010f565b6101026104de565b61012b6101e736600461090a565b6104ed565b61012b6101fa36600461090a565b610588565b61013f61020d366004610993565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610102610595565b60606004805461024f906109c6565b80601f016020809104026020016040519081016040528092919081815260200182805461027b906109c6565b80156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b5050505050905090565b60006102df3384846105a4565b5060015b92915050565b60006102f68484846106c8565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103805760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610394853361038f8685610a16565b6105a4565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102df91859061038f908690610a29565b600780546103e3906109c6565b80601f016020809104026020016040519081016040528092919081815260200182805461040f906109c6565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b505050505081565b6006546001600160a01b031633146104cc5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2072656e6f756e6365206f776e65604482015264072736869760dc1b6064820152608401610377565b600680546001600160a01b0319169055565b60606005805461024f906109c6565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561056f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610377565b61057e338561038f8685610a16565b5060019392505050565b60006102df3384846106c8565b60606007805461024f906109c6565b6001600160a01b0383166106065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b0382166106675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661072c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b038316600090815260208190526040902054818110156108065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b6108108282610a16565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610846908490610a29565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089291815260200190565b60405180910390a350505050565b602081526000825180602084015260005b818110156108ce57602081860181015160408684010152016108b1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461090557600080fd5b919050565b6000806040838503121561091d57600080fd5b610926836108ee565b946020939093013593505050565b60008060006060848603121561094957600080fd5b610952846108ee565b9250610960602085016108ee565b929592945050506040919091013590565b60006020828403121561098357600080fd5b61098c826108ee565b9392505050565b600080604083850312156109a657600080fd5b6109af836108ee565b91506109bd602084016108ee565b90509250929050565b600181811c908216806109da57607f821691505b6020821081036109fa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102e3576102e3610a00565b808201808211156102e3576102e3610a0056fea26469706673582212208db9cc16746dd86bdf00db1953e0261f4aea08313237cf0b29ca81c613ff47d464736f6c634300081e0033";

type RXSFinanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RXSFinanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RXSFinanceToken__factory extends ContractFactory {
  constructor(...args: RXSFinanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialBalance_: PromiseOrValue<BigNumberish>,
    tokenOwner_: PromiseOrValue<string>,
    feeReceiver_: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<RXSFinanceToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialBalance_,
      tokenOwner_,
      feeReceiver_,
      overrides || {}
    ) as Promise<RXSFinanceToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialBalance_: PromiseOrValue<BigNumberish>,
    tokenOwner_: PromiseOrValue<string>,
    feeReceiver_: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialBalance_,
      tokenOwner_,
      feeReceiver_,
      overrides || {}
    );
  }
  override attach(address: string): RXSFinanceToken {
    return super.attach(address) as RXSFinanceToken;
  }
  override connect(signer: Signer): RXSFinanceToken__factory {
    return super.connect(signer) as RXSFinanceToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RXSFinanceTokenInterface {
    return new utils.Interface(_abi) as RXSFinanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RXSFinanceToken {
    return new Contract(address, _abi, signerOrProvider) as RXSFinanceToken;
  }
}
