/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  NESA,
  NESAInterface,
} from "../../0x97dac8037b1085175522b85e946dfcb3b86cf572.sol/NESA";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b5560646009600a6100319190610271565b61003f906305f5e100610287565b610049919061029e565b600c556000600d819055600f805461ffff60a81b191690556010819055601181905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ff6009600a610271565b61010d906305f5e100610287565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61014e6009600a610271565b61015c906305f5e100610287565b60405190815260200160405180910390a36102c0565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101c3578085048111156101a7576101a7610172565b60018416156101b557908102905b60019390931c92800261018c565b935093915050565b6000826101da5750600161026b565b816101e75750600061026b565b81600181146101fd576002811461020757610223565b600191505061026b565b60ff84111561021857610218610172565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610246575081810a61026b565b6102536000198484610188565b806000190482111561026757610267610172565b0290505b92915050565b600061028060ff8416836101cb565b9392505050565b808202811582820484141761026b5761026b610172565b6000826102bb57634e487b7160e01b600052601260045260246000fd5b500490565b6119bc806102cf6000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b1461029757806395d89b41146102bf578063a9059cbb146102ec578063dd62ed3e1461030c578063ea414b281461035257600080fd5b806370a0823114610222578063715018a614610258578063751039fc1461026d5780638a8c523c1461028257600080fd5b806320800a00116100d157806320800a00146101b957806323b872dd146101d0578063313ce567146101f05780636482c89a1461020c57600080fd5b806306fdde031461010e578063095ea7b3146101505780630faee56f1461018057806318160ddd146101a457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820190915260078152664e65736120414960c81b60208201525b6040516101479190611477565b60405180910390f35b34801561015c57600080fd5b5061017061016b3660046114da565b610372565b6040519015158152602001610147565b34801561018c57600080fd5b50610196600c5481565b604051908152602001610147565b3480156101b057600080fd5b50610196610389565b3480156101c557600080fd5b506101ce6103aa565b005b3480156101dc57600080fd5b506101706101eb366004611506565b610419565b3480156101fc57600080fd5b5060405160098152602001610147565b34801561021857600080fd5b50610196600d5481565b34801561022e57600080fd5b5061019661023d366004611547565b6001600160a01b031660009081526001602052604090205490565b34801561026457600080fd5b506101ce6104c9565b34801561027957600080fd5b506101ce61053d565b34801561028e57600080fd5b506101ce610569565b3480156102a357600080fd5b506000546040516001600160a01b039091168152602001610147565b3480156102cb57600080fd5b506040805180820190915260048152634e45534160e01b602082015261013a565b3480156102f857600080fd5b506101706103073660046114da565b610921565b34801561031857600080fd5b50610196610327366004611564565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035e57600080fd5b506101ce61036d366004611547565b61092e565b600061037f33848461096c565b5060015b92915050565b60006103976009600a61169a565b6103a5906305f5e1006116a9565b905090565b6000546001600160a01b031633146103dd5760405162461bcd60e51b81526004016103d4906116c0565b60405180910390fd5b600047116103ea57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610416573d6000803e3d6000fd5b50565b6000610426848484610a90565b3360009081526003602052604090205460ff161580156104685750600f546001600160a01b038581169116148061046857506001600160a01b03831661dead14155b156104bf576104bf84336104ba8560405180606001604052806028815260200161195f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f5d565b61096c565b5060019392505050565b6000546001600160a01b031633146104f35760405162461bcd60e51b81526004016103d4906116c0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016103d4906116c0565b565b6000546001600160a01b031633146105935760405162461bcd60e51b81526004016103d4906116c0565b600f54600160a01b900460ff16156105ed5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103d4565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106369030906106286009600a61169a565b6104ba906305f5e1006116a9565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad91906116f5565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906116f5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a491906116f5565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107ec816001600160a01b031660009081526001602052604090205490565b6000806108016000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610869573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061088e9190611712565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190611740565b600061037f338484610a90565b3360009081526003602052604090205460ff1661094a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109ce5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d4565b6001600160a01b038216610a2f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d4565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610af45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d4565b6001600160a01b038216610b565760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d4565b60008111610bb85760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103d4565b60006001600160a01b0384163014801590610bdc57506001600160a01b0383163014155b15610dff57600f54600160a81b900460ff16610c2157610c1e6064610c1860075460085411610c0d57600554610c11565b6006545b8590610f97565b90611020565b90505b600f546001600160a01b038581169116148015610c4c5750600e546001600160a01b03848116911614155b8015610c7157506001600160a01b03831660009081526003602052604090205460ff16155b8015610c8b57506004546001600160a01b03848116911614155b15610cd0574360095414610ca3576000600a55436009555b81600a6000828254610cb59190611762565b909155505060088054906000610cca83611775565b91905055505b600f546001600160a01b038481169116148015610cf657506001600160a01b0384163014155b15610d5157610d03611062565b600a541080610d1457504360095414155b610d515760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103d4565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d885750600f546001600160a01b038581169116145b8015610d9d5750600f54600160b01b900460ff165b8015610db757506004546001600160a01b03868116911614155b15610dfd578015610df1576000600c548211610dd35781610dd7565b600c545b9050610def818511610de957846111f0565b816111f0565b505b47610dfb4761136a565b505b505b6001600160a01b038416600090815260016020526040902054610e2290836113a8565b6001600160a01b038516600090815260016020526040902055610e67610e4883836113a8565b6001600160a01b038516600090815260016020526040902054906113ea565b6001600160a01b0384166000908152600160205260409020558015610efa5730600090815260016020526040902054610ea090826113ea565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ef19085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f57576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f4585856113a8565b60405190815260200160405180910390a35b50505050565b60008184841115610f815760405162461bcd60e51b81526004016103d49190611477565b506000610f8e848661178e565b95945050505050565b600082600003610fa957506000610383565b6000610fb583856116a9565b905082610fc285836117a1565b146110195760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103d4565b9392505050565b600061101983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611449565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f491906116f5565b81600081518110611107576111076117d9565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061113b5761113b6117d9565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061118790674563918244f40000908690600401611834565b600060405180830381865afa1580156111a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111cc9190810190611855565b9050806001815181106111e1576111e16117d9565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611238576112386117d9565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b591906116f5565b816001815181106112c8576112c86117d9565b6001600160a01b039283166020918202929092010152600e546112ee913091168461096c565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611327908590600090869030904290600401611922565b600060405180830381600087803b15801561134157600080fd5b505af1158015611355573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113a4573d6000803e3d6000fd5b5050565b600061101983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f5d565b6000806113f78385611762565b9050838110156110195760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103d4565b6000818361146a5760405162461bcd60e51b81526004016103d49190611477565b506000610f8e84866117a1565b602081526000825180602084015260005b818110156114a55760208186018101516040868401015201611488565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041657600080fd5b600080604083850312156114ed57600080fd5b82356114f8816114c5565b946020939093013593505050565b60008060006060848603121561151b57600080fd5b8335611526816114c5565b92506020840135611536816114c5565b929592945050506040919091013590565b60006020828403121561155957600080fd5b8135611019816114c5565b6000806040838503121561157757600080fd5b8235611582816114c5565b91506020830135611592816114c5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115ee578085048111156115d2576115d261159d565b60018416156115e057908102905b60019390931c9280026115b7565b935093915050565b60008261160557506001610383565b8161161257506000610383565b816001811461162857600281146116325761164e565b6001915050610383565b60ff8411156116435761164361159d565b50506001821b610383565b5060208310610133831016604e8410600b8410161715611671575081810a610383565b61167e60001984846115b3565b80600019048211156116925761169261159d565b029392505050565b600061101960ff8416836115f6565b80820281158282048414176103835761038361159d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561170757600080fd5b8151611019816114c5565b60008060006060848603121561172757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561175257600080fd5b8151801515811461101957600080fd5b808201808211156103835761038361159d565b6000600182016117875761178761159d565b5060010190565b818103818111156103835761038361159d565b6000826117be57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561182a5781516001600160a01b0316865260209586019590910190600101611803565b5093949350505050565b82815260406020820152600061184d60408301846117ef565b949350505050565b60006020828403121561186757600080fd5b815167ffffffffffffffff81111561187e57600080fd5b8201601f8101841361188f57600080fd5b805167ffffffffffffffff8111156118a9576118a96117c3565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118d6576118d66117c3565b6040529182526020818401810192908101878411156118f457600080fd5b6020850194505b83851015611917578451808252602095860195909350016118fb565b509695505050505050565b85815284602082015260a06040820152600061194160a08301866117ef565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220147496d9d7f1f233218fc37beddb1cd64eb60a1ef45d02bdb3caf37a12170cb464736f6c634300081d0033";

type NESAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NESAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NESA__factory extends ContractFactory {
  constructor(...args: NESAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NESA & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NESA__factory {
    return super.connect(runner) as NESA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NESAInterface {
    return new Interface(_abi) as NESAInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NESA {
    return new Contract(address, _abi, runner) as unknown as NESA;
  }
}
