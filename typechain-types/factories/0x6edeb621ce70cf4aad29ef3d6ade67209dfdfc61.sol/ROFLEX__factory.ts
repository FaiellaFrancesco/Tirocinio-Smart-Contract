/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ROFLEX,
  ROFLEXInterface,
} from "../../0x6edeb621ce70cf4aad29ef3d6ade67209dfdfc61.sol/ROFLEX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526013600455601360055560006006556000600755601360085560136009556013600a556000600b556009600a6200003c919062000330565b6200004c9063fac0332062000348565b600f556200005d6009600a62000330565b6200006d9063fac0332062000348565b6010556200007e6009600a62000330565b6200008e9063fa56ea0062000348565b6011556200009f6009600a62000330565b620000af9063fac0332062000348565b6012556013805462ffff0019169055348015620000cb57600080fd5b50620000d733620001cb565b620000e56009600a62000330565b620000f6906461f313f88062000348565b33600081815260016020818152604080842095909555600c80546001600160a01b0319167367469287fcd5238095bef6230791805b8b1cae2c179055600390527f840b88be59660ae59fad1ec4cea66ae86b72e6c425d2c29a2da3c9c24f661ca4805460ff199081168317909155308352938220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001a36009600a62000330565b620001b4906461f313f88062000348565b60405190815260200160405180910390a362000362565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002725781600019048211156200025657620002566200021b565b808516156200026457918102915b93841c939080029062000236565b509250929050565b6000826200028b575060016200032a565b816200029a575060006200032a565b8160018114620002b35760028114620002be57620002de565b60019150506200032a565b60ff841115620002d257620002d26200021b565b50506001821b6200032a565b5060208310610133831016604e8410600b841016171562000303575081810a6200032a565b6200030f838362000231565b80600019048211156200032657620003266200021b565b0290505b92915050565b60006200034160ff8416836200027a565b9392505050565b80820281158282048414176200032a576200032a6200021b565b611a8580620003726000396000f3fe6080604052600436106101185760003560e01c8063751039fc116100a0578063a9059cbb11610064578063a9059cbb146102d2578063bf474bed146102f2578063c9567bf914610308578063dd62ed3e1461031d578063f42938901461036357600080fd5b8063751039fc146102695780637d1db4a51461027e5780638da5cb5b146102945780638f9a55c0146102bc57806395d89b411461012457600080fd5b806323b872dd116100e757806323b872dd146101cb578063313ce567146101eb57806351bc3c851461020757806370a082311461021e578063715018a61461025457600080fd5b806306fdde0314610124578063095ea7b3146101625780630faee56f1461019257806318160ddd146101b657600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201825260068152650a49e8c988ab60d31b602082015290516101599190611654565b60405180910390f35b34801561016e57600080fd5b5061018261017d3660046116b8565b610378565b6040519015158152602001610159565b34801561019e57600080fd5b506101a860125481565b604051908152602001610159565b3480156101c257600080fd5b506101a861038f565b3480156101d757600080fd5b506101826101e63660046116e4565b6103b1565b3480156101f757600080fd5b5060405160098152602001610159565b34801561021357600080fd5b5061021c61041a565b005b34801561022a57600080fd5b506101a8610239366004611725565b6001600160a01b031660009081526001602052604090205490565b34801561026057600080fd5b5061021c610469565b34801561027557600080fd5b5061021c6104a8565b34801561028a57600080fd5b506101a8600f5481565b3480156102a057600080fd5b506000546040516001600160a01b039091168152602001610159565b3480156102c857600080fd5b506101a860105481565b3480156102de57600080fd5b506101826102ed3660046116b8565b61055d565b3480156102fe57600080fd5b506101a860115481565b34801561031457600080fd5b5061021c61056a565b34801561032957600080fd5b506101a8610338366004611742565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036f57600080fd5b5061021c61091e565b6000610385338484610976565b5060015b92915050565b600061039d6009600a611875565b6103ac906461f313f880611884565b905090565b60006103be848484610a9b565b610410843361040b85604051806060016040528060288152602001611a28602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611035565b610976565b5060019392505050565b3360009081526003602052604090205460ff1661043657600080fd5b306000908152600160205260409020548015610455576104558161106f565b47801561046557610465816111e3565b5050565b6000546001600160a01b0316331461049c5760405162461bcd60e51b81526004016104939061189b565b60405180910390fd5b6104a6600061121d565b565b6000546001600160a01b031633146104d25760405162461bcd60e51b81526004016104939061189b565b6104de6009600a611875565b6104ed906461f313f880611884565b600f556104fc6009600a611875565b61050b906461f313f880611884565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61053b6009600a611875565b61054a906461f313f880611884565b60405190815260200160405180910390a1565b6000610385338484610a9b565b6000546001600160a01b031633146105945760405162461bcd60e51b81526004016104939061189b565b60135460ff16156105e75760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610493565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106319030906106226009600a611875565b61040b906461f313f880611884565b6013805462ff0000191662010000179055600d546040805163c45a015560e01b815290516001600160a01b039092169163c45a0155916004808201926020929091908290030181865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906118d0565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073691906118d0565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a791906118d0565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d71947306107ef816001600160a01b031660009081526001602052604090205490565b6000806108046000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561086c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061089191906118ed565b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e919061191b565b506013805460ff19166001179055565b3360009081526003602052604090205460ff1661093a57600080fd5b600c546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610973573d6000803e3d6000fd5b50565b6001600160a01b0383166109d85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610493565b6001600160a01b038216610a395760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610493565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610493565b6001600160a01b038216610b615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610493565b60008111610bc35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610493565b60135462010000900460ff161580610be25750601354610100900460ff165b15610bf757610bf283838361126d565b505050565b600080546001600160a01b03858116911614801590610c2457506000546001600160a01b03848116911614155b8015610c3e5750600c546001600160a01b03848116911614155b15610e9857610c6f6064610c69600854600b5411610c5e57600454610c62565b6006545b8590611313565b9061139c565b600e549091506001600160a01b038581169116148015610c9d5750600d546001600160a01b03848116911614155b8015610cc257506001600160a01b03831660009081526003602052604090205460ff16155b15610daa57600f54821115610d195760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610493565b60105482610d3c856001600160a01b031660009081526001602052604090205490565b610d46919061193d565b1115610d945760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610493565b600b8054906000610da483611950565b91905055505b600e546001600160a01b038481169116148015610dd057506001600160a01b0384163014155b15610dfd57610dfa6064610c69600954600b5411610df057600554610c62565b6007548590611313565b90505b30600090815260016020526040902054601354610100900460ff16158015610e325750600e546001600160a01b038581169116145b8015610e46575060135462010000900460ff165b8015610e53575060115481115b8015610e625750600a54600b54115b15610e9657610e84610e7f84610e7a846012546113de565b6113de565b61106f565b478015610e9457610e94476111e3565b505b505b6001600160a01b03841660009081526003602052604090205460ff1680610ed757506001600160a01b03831660009081526003602052604090205460ff165b8015610eec57506001600160a01b0384163014155b8015610f0157506001600160a01b0383163014155b15610f0b57436015555b6001600160a01b03841660009081526003602052604090205460ff16158015610f4d57506001600160a01b03831660009081526003602052604090205460ff16155b1561102357600e546001600160a01b03848116911614610ff0576001600160a01b038084166000908152601660205260409020600e54909190811690861603610fb7578054600003610fb257600a54600b541115610fab5743610faf565b6000195b81555b610fea565b6001600160a01b038516600090815260166020526040902081541580610fde575081548154105b15610fe857805482555b505b50611023565b6001600160a01b03841660009081526016602052604090206015548154611016916113f3565b6001820155436002909101555b61102f84838386611435565b50505050565b600081848411156110595760405162461bcd60e51b81526004016104939190611654565b5060006110668486611969565b95945050505050565b6013805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110b3576110b361197c565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561110c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113091906118d0565b816001815181106111435761114361197c565b6001600160a01b039283166020918202929092010152600d546111699130911684610976565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac947906111a2908590600090869030904290600401611992565b600060405180830381600087803b1580156111bc57600080fd5b505af11580156111d0573d6000803e3d6000fd5b50506013805461ff001916905550505050565b600c546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610465573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03831660009081526001602052604090205461129090826113f3565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112bf9082611460565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a8e9085815260200190565b60008260000361132557506000610389565b60006113318385611884565b90508261133e8583611a05565b146113955760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610493565b9392505050565b600061139583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114bf565b60008183116113ed5782611395565b50919050565b600061139583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611035565b60006114428385876114ed565b905061145985838361145488886113f3565b6115a0565b5050505050565b60008061146d838561193d565b9050838110156113955760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610493565b600081836114e05760405162461bcd60e51b81526004016104939190611654565b5060006110668486611a05565b600c5460009081906001600160a01b039081169084160361151a576014546115159085611313565b61151c565b835b90508415611598573060009081526001602052604090205461153e9086611460565b30600081815260016020526040908190209290925590516001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061158f9089815260200190565b60405180910390a35b949350505050565b6001600160a01b0384166000908152600160205260409020546115c390836113f3565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546115f29082611460565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906116469085815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b8181101561168257858101830151858201604001528201611666565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461097357600080fd5b600080604083850312156116cb57600080fd5b82356116d6816116a3565b946020939093013593505050565b6000806000606084860312156116f957600080fd5b8335611704816116a3565b92506020840135611714816116a3565b929592945050506040919091013590565b60006020828403121561173757600080fd5b8135611395816116a3565b6000806040838503121561175557600080fd5b8235611760816116a3565b91506020830135611770816116a3565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117cc5781600019048211156117b2576117b261177b565b808516156117bf57918102915b93841c9390800290611796565b509250929050565b6000826117e357506001610389565b816117f057506000610389565b816001811461180657600281146118105761182c565b6001915050610389565b60ff8411156118215761182161177b565b50506001821b610389565b5060208310610133831016604e8410600b841016171561184f575081810a610389565b6118598383611791565b806000190482111561186d5761186d61177b565b029392505050565b600061139560ff8416836117d4565b80820281158282048414176103895761038961177b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156118e257600080fd5b8151611395816116a3565b60008060006060848603121561190257600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561192d57600080fd5b8151801515811461139557600080fd5b808201808211156103895761038961177b565b6000600182016119625761196261177b565b5060010190565b818103818111156103895761038961177b565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156119e45784516001600160a01b0316835293830193918301916001016119bf565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611a2257634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212208f120654fdc23927845867348fdfd590dcae4737d97de634d7b5f6279c970cfc64736f6c63430008170033";

type ROFLEXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ROFLEXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ROFLEX__factory extends ContractFactory {
  constructor(...args: ROFLEXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ROFLEX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ROFLEX__factory {
    return super.connect(runner) as ROFLEX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ROFLEXInterface {
    return new Interface(_abi) as ROFLEXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ROFLEX {
    return new Contract(address, _abi, runner) as unknown as ROFLEX;
  }
}
