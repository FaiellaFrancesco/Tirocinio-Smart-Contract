/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CHEST,
  CHESTInterface,
} from "../../0xa4bdd976bd05bf0b89ca640bfc76a10ed054bdbd.sol/CHEST";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "redisBuyTax",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "buyFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "redisSellTax",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellFee",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTransaction",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_buyMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapTokensAtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualswap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redisBuyTax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redisSellTax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellFee",
        type: "uint256",
      },
    ],
    name: "setNewFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapTokensAtAmount",
        type: "uint256",
      },
    ],
    name: "swapTokensAtMin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxTxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWalletSize",
        type: "uint256",
      },
    ],
    name: "updateTransactionAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260075460025560085460035561271062000028670de0b6b3a76400006019620003eb565b62000034919062000421565b6004556103e86200004f670de0b6b3a7640000600f620003eb565b6200005b919062000421565b6005556103e862000076670de0b6b3a7640000600f620003eb565b62000082919062000421565b600655600d54600755600e54600855620000b2670de0b6b3a76400006c0c9f2c9cd04674edea4000000062000438565b620000cb906c0c9f2c9cd04674edea400000006200044f565b6009556000600b819055600c819055600d819055600e55601480546001600160a01b0319908116339081179092556015805490911690911790556017805461ffff60a81b1916600160b01b1790553480156200012657600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600954336000908152600f602090815260409182902092909255601680546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155815163c45a015560e01b815291519092839263c45a015592600480830193928290030181865afa158015620001e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020a919062000465565b6001600160a01b031663c9c6539630601660009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200026d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000293919062000465565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620002e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000307919062000465565b601780546001600160a01b0319166001600160a01b03928316179055600080548216815260126020526040808220805460ff1990811660019081179092553084528284208054821683179055601454851684528284208054821683179055601554909416835291208054909216179055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a7640000604051620003c691815260200190565b60405180910390a35062000497565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620004055762000405620003d5565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826200043357620004336200040b565b500490565b6000826200044a576200044a6200040b565b500690565b81810381811115620004055762000405620003d5565b6000602082840312156200047857600080fd5b81516001600160a01b03811681146200049057600080fd5b9392505050565b6118b680620004a76000396000f3fe60806040526004361061016a5760003560e01c8063715018a6116100d1578063a9059cbb1161008a578063da7003d411610064578063da7003d41461044b578063dd62ed3e14610461578063ef7a37ea146104a7578063f2fde38b146104c757600080fd5b8063a9059cbb146103f6578063ba5ff6a914610416578063c3c8cd801461043657600080fd5b8063715018a614610339578063751039fc1461034e5780637f2feddc1461036357806382247ec0146103905780638da5cb5b146103a657806395d89b41146103c457600080fd5b8063293230b811610123578063293230b81461029d5780632fd689e3146102b2578063313ce567146102c857806349bd5a5e146102e45780636fc3eaec1461030457806370a082311461031957600080fd5b806306fdde0314610176578063095ea7b3146101ce57806315757735146101fe5780631694505e1461022057806318160ddd1461025857806323b872dd1461027d57600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5060408051808201909152601881527f43686573742046616365206279204d617474204675726965000000000000000060208201525b6040516101c59190611577565b60405180910390f35b3480156101da57600080fd5b506101ee6101e93660046115da565b6104e7565b60405190151581526020016101c5565b34801561020a57600080fd5b5061021e610219366004611606565b6104fe565b005b34801561022c57600080fd5b50601654610240906001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b34801561026457600080fd5b50670de0b6b3a76400005b6040519081526020016101c5565b34801561028957600080fd5b506101ee610298366004611628565b61053c565b3480156102a957600080fd5b5061021e6105a5565b3480156102be57600080fd5b5061026f60045481565b3480156102d457600080fd5b50604051600981526020016101c5565b3480156102f057600080fd5b50601754610240906001600160a01b031681565b34801561031057600080fd5b5061021e6105e4565b34801561032557600080fd5b5061026f610334366004611669565b61062f565b34801561034557600080fd5b5061021e610651565b34801561035a57600080fd5b5061021e6106c5565b34801561036f57600080fd5b5061026f61037e366004611669565b60136020526000908152604090205481565b34801561039c57600080fd5b5061026f60065481565b3480156103b257600080fd5b506000546001600160a01b0316610240565b3480156103d057600080fd5b5060408051808201909152600981526843484553544641434560b81b60208201526101b8565b34801561040257600080fd5b506101ee6104113660046115da565b6106fc565b34801561042257600080fd5b5061021e610431366004611686565b610709565b34801561044257600080fd5b5061021e610738565b34801561045757600080fd5b5061026f60055481565b34801561046d57600080fd5b5061026f61047c36600461169f565b6001600160a01b03918216600090815260116020908152604080832093909416825291909152205490565b3480156104b357600080fd5b5061021e6104c23660046116d8565b61078c565b3480156104d357600080fd5b5061021e6104e2366004611669565b610809565b60006104f43384846108f3565b5060015b92915050565b6000546001600160a01b031633146105315760405162461bcd60e51b81526004016105289061170a565b60405180910390fd5b600591909155600655565b6000610549848484610a17565b61059b843361059685604051806060016040528060288152602001611859602891396001600160a01b038a1660009081526011602090815260408083203384529091529020549190610e78565b6108f3565b5060019392505050565b6000546001600160a01b031633146105cf5760405162461bcd60e51b81526004016105289061170a565b6017805460ff60a01b1916600160a01b179055565b6014546001600160a01b0316336001600160a01b0316148061061957506015546001600160a01b0316336001600160a01b0316145b61062257600080fd5b4761062c81610eb2565b50565b6001600160a01b0381166000908152600f60205260408120546104f890610ef0565b6000546001600160a01b0316331461067b5760405162461bcd60e51b81526004016105289061170a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106ef5760405162461bcd60e51b81526004016105289061170a565b6000196005819055600655565b60006104f4338484610a17565b6000546001600160a01b031633146107335760405162461bcd60e51b81526004016105289061170a565b600455565b6014546001600160a01b0316336001600160a01b0316148061076d57506015546001600160a01b0316336001600160a01b0316145b61077657600080fd5b60006107813061062f565b905061062c81610f0e565b6000546001600160a01b031633146107b65760405162461bcd60e51b81526004016105289061170a565b600b849055600c839055600d829055600e8190556040518181528290849086907f16e6f67290546b8dd0e587f4b7f67d4f61932ae17ffd8c60d3509dbc05c175fe9060200160405180910390a450505050565b6000546001600160a01b031633146108335760405162461bcd60e51b81526004016105289061170a565b6001600160a01b0381166108985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610528565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610528565b6001600160a01b0382166109b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610528565b6001600160a01b0383811660008181526011602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a7b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610528565b6001600160a01b038216610add5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610528565b60008111610b3f5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610528565b601754600160a01b900460ff1680610b6457506000546001600160a01b038481169116145b80610b7c57506000546001600160a01b038381169116145b610bbe5760405162461bcd60e51b81526020600482015260136024820152722a3930b234b7339034b9903737ba1037b832b760691b6044820152606401610528565b6000546001600160a01b03848116911614801590610bea57506000546001600160a01b03838116911614155b15610d9d57600554811115610c415760405162461bcd60e51b815260206004820152601c60248201527f544f4b454e3a204d6178205472616e73616374696f6e204c696d6974000000006044820152606401610528565b6017546001600160a01b03838116911614610cc65760065481610c638461062f565b610c6d9190611755565b10610cc65760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073696044820152627a652160e81b6064820152608401610528565b6000610cd13061062f565b600454600554919250821015908210610cea5760055491505b808015610d015750601754600160a81b900460ff16155b8015610d1b57506017546001600160a01b03868116911614155b8015610d305750601754600160b01b900460ff165b8015610d5557506001600160a01b03851660009081526012602052604090205460ff16155b8015610d7a57506001600160a01b03841660009081526012602052604090205460ff16155b15610d9a57610d8882610f0e565b478015610d9857610d9847610eb2565b505b50505b6001600160a01b03831660009081526012602052604090205460019060ff1680610ddf57506001600160a01b03831660009081526012602052604090205460ff165b15610dec57506000610e66565b6017546001600160a01b038581169116148015610e1757506016546001600160a01b03848116911614155b15610e2957600b54600755600c546008555b6017546001600160a01b038481169116148015610e5457506016546001600160a01b03858116911614155b15610e6657600d54600755600e546008555b610e72848484846110a0565b50505050565b60008184841115610e9c5760405162461bcd60e51b81526004016105289190611577565b506000610ea98486611768565b95945050505050565b6014546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610eec573d6000803e3d6000fd5b5050565b600080610efb6110d3565b9050610f0783826110f6565b9392505050565b6017805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f5657610f5661177b565b6001600160a01b03928316602091820292909201810191909152601654604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd39190611791565b81600181518110610fe657610fe661177b565b6001600160a01b03928316602091820292909201015260165461100c91309116846108f3565b60048054611019916117ae565b821061102457600080fd5b60165460405163791ac94760e01b81526001600160a01b039091169063791ac9479061105d9085906000908690309042906004016117c5565b600060405180830381600087803b15801561107757600080fd5b505af115801561108b573d6000803e3d6000fd5b50506017805460ff60a81b1916905550505050565b806110ad576110ad611138565b6110b884848461116b565b80610e7257610e726002546007556003546008556064600a55565b60008060006110e0611262565b90925090506110ef82826110f6565b9250505090565b6000610f0783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506112a2565b6007541580156111485750600854155b1561114f57565b60078054600255600880546003556000600a8190559182905555565b60008060008060008061117d876112d0565b6001600160a01b038f166000908152600f6020526040902054959b509399509197509550935091506111af908761132d565b6001600160a01b03808b166000908152600f602052604080822093909355908a16815220546111de908661136f565b6001600160a01b0389166000908152600f6020526040902055611200816113ce565b61120a8483611418565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161124f91815260200190565b60405180910390a3505050505050505050565b6009546000908190670de0b6b3a764000061127d82826110f6565b82101561129957505060095492670de0b6b3a764000092509050565b90939092509050565b600081836112c35760405162461bcd60e51b81526004016105289190611577565b506000610ea98486611836565b60008060008060008060008060006112ed8a60075460085461142c565b92509250925060006112fd6110d3565b905060008060006113108e878787611481565b919e509c509a509598509396509194505050505091939550919395565b6000610f0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e78565b60008061137c8385611755565b905083811015610f075760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610528565b60006113d86110d3565b905060006113e683836114f5565b306000908152600f6020526040902054909150611403908261136f565b306000908152600f6020526040902055505050565b600954611425908361132d565b6009555050565b6000808080611446606461144089896114f5565b906110f6565b9050600061145960646114408a896114f5565b905060006114718261146b8b8661132d565b9061132d565b9992985090965090945050505050565b600080808061149088866114f5565b9050600061149e88876114f5565b905060006114ac88886114f5565b905060006114be8261146b868661132d565b9050600a5460001480156114d95750670de0b6b3a76400008b115b156114e357600093505b929a9299509097509095505050505050565b600082600003611507575060006104f8565b600061151383856117ae565b9050826115208583611836565b14610f075760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610528565b600060208083528351808285015260005b818110156115a457858101830151858201604001528201611588565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461062c57600080fd5b600080604083850312156115ed57600080fd5b82356115f8816115c5565b946020939093013593505050565b6000806040838503121561161957600080fd5b50508035926020909101359150565b60008060006060848603121561163d57600080fd5b8335611648816115c5565b92506020840135611658816115c5565b929592945050506040919091013590565b60006020828403121561167b57600080fd5b8135610f07816115c5565b60006020828403121561169857600080fd5b5035919050565b600080604083850312156116b257600080fd5b82356116bd816115c5565b915060208301356116cd816115c5565b809150509250929050565b600080600080608085870312156116ee57600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156104f8576104f861173f565b818103818111156104f8576104f861173f565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156117a357600080fd5b8151610f07816115c5565b80820281158282048414176104f8576104f861173f565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156118155784516001600160a01b0316835293830193918301916001016117f0565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261185357634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204b9e12325784e753eeb051be5f12b1bb0e38862c9b239b03e4f19d5c9e8056c564736f6c63430008130033";

type CHESTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CHESTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CHEST__factory extends ContractFactory {
  constructor(...args: CHESTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CHEST & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CHEST__factory {
    return super.connect(runner) as CHEST__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CHESTInterface {
    return new Interface(_abi) as CHESTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CHEST {
    return new Contract(address, _abi, runner) as unknown as CHEST;
  }
}
