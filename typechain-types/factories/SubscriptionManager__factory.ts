/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SubscriptionManager,
  SubscriptionManagerInterface,
} from "../SubscriptionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "ParametersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isSubscribed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscribe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "updateParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610558380380610558833981016040819052602c91604b565b600080546001600160a01b03191633179055600191909155600255606e565b60008060408385031215605d57600080fd5b505080516020909101519092909150565b6104db8061007d6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146101765780638f449a05146101ae578063b92ae87c146101b6578063bdc8e54c146101ff57600080fd5b806316128211146100e05780633ccfd60b14610102578063726fb2a5146101175780637a94a6331461016057600080fd5b366100db5760405162461bcd60e51b815260206004820152602160248201527f55736520737562736372696265282920746f206d616b652061207061796d656e6044820152601d60fa1b60648201526084015b60405180910390fd5b600080fd5b3480156100ec57600080fd5b506101006100fb36600461042c565b610215565b005b34801561010e57600080fd5b506101006102b1565b34801561012357600080fd5b5061014d61013236600461044e565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b5061014d60025481565b34801561018257600080fd5b50600054610196906001600160a01b031681565b6040516001600160a01b039091168152602001610157565b610100610343565b3480156101c257600080fd5b506101ef6101d136600461044e565b6001600160a01b031660009081526003602052604090205442111590565b6040519015158152602001610157565b34801561020b57600080fd5b5061014d60015481565b6000546001600160a01b0316331461026a5760405162461bcd60e51b81526020600482015260186024820152774f6e6c79206f776e65722063616e2063616c6c207468697360401b60448201526064016100d2565b6001829055600281905560408051838152602081018390527ffaccb0639ff7851e0e24f3b2d9ab03cd62ffb63f5b4d90aaeff85bb078c1fa48910160405180910390a15050565b6000546001600160a01b031633146103065760405162461bcd60e51b81526020600482015260186024820152774f6e6c79206f776e65722063616e2063616c6c207468697360401b60448201526064016100d2565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610340573d6000803e3d6000fd5b50565b60015434146103945760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e74000000000000000060448201526064016100d2565b3360009081526003602052604081205442116103cc57600254336000908152600360205260409020546103c7919061047e565b6103d9565b6002546103d9904261047e565b336000818152600360205260409081902083905551919250907f4b90d6788928d63c1821907a6a8b95f40d26562d8fe41b105f7489db9966dfcb906104219084815260200190565b60405180910390a250565b6000806040838503121561043f57600080fd5b50508035926020909101359150565b60006020828403121561046057600080fd5b81356001600160a01b038116811461047757600080fd5b9392505050565b8082018082111561049f57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209a90aa7a2205d396883e438e3e1ab0d5266068a45ff83851f969ab8058b9132f64736f6c634300081e0033";

type SubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionManager__factory extends ContractFactory {
  constructor(...args: SubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _price: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_price, _duration, overrides || {});
  }
  override deploy(
    _price: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_price, _duration, overrides || {}) as Promise<
      SubscriptionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SubscriptionManager__factory {
    return super.connect(runner) as SubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionManagerInterface {
    return new Interface(_abi) as SubscriptionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubscriptionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SubscriptionManager;
  }
}
