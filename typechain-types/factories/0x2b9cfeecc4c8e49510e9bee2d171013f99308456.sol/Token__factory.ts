/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x2b9cfeecc4c8e49510e9bee2d171013f99308456.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalTokenTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initTokenDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokenETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b61181d806102c66000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b4114610125578063a9059cbb146102a4578063ba18ed0d146102c4578063dd62ed3e146102da578063ea414b281461032057600080fd5b806370a082311461021c578063715018a6146102525780638a8c523c146102675780638da5cb5b1461027c57600080fd5b806318160ddd116100d157806318160ddd146101b557806323b872dd146101ca578063313ce567146101ea5780635ce74cbf1461020657600080fd5b8063022321f21461010e57806306fdde0314610125578063095ea7b3146101615780630faee56f1461019157600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123610340565b005b34801561013157600080fd5b5060408051808201825260048152634352454560e01b6020820152905161015891906112fa565b60405180910390f35b34801561016d57600080fd5b5061018161017c36600461135d565b6103af565b6040519015158152602001610158565b34801561019d57600080fd5b506101a7600b5481565b604051908152602001610158565b3480156101c157600080fd5b506101a76103c6565b3480156101d657600080fd5b506101816101e5366004611389565b6103e7565b3480156101f657600080fd5b5060405160098152602001610158565b34801561021257600080fd5b506101a7600d5481565b34801561022857600080fd5b506101a76102373660046113ca565b6001600160a01b031660009081526001602052604090205490565b34801561025e57600080fd5b506101236104aa565b34801561027357600080fd5b5061012361051e565b34801561028857600080fd5b506000546040516001600160a01b039091168152602001610158565b3480156102b057600080fd5b506101816102bf36600461135d565b6108d6565b3480156102d057600080fd5b506101a7600c5481565b3480156102e657600080fd5b506101a76102f53660046113e7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032c57600080fd5b5061012361033b3660046113ca565b6108e3565b6000546001600160a01b031633146103735760405162461bcd60e51b815260040161036a90611420565b60405180910390fd5b6000471161038057600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103ac573d6000803e3d6000fd5b50565b60006103bc338484610921565b5060015b92915050565b60006103d46009600a611552565b6103e2906305f5e100611561565b905090565b60006103f4848484610a45565b3360009081526003602052604090205460ff161580156104495750600f546001600160a01b038581169116148061043657506001600160a01b03831661dead14155b8061044957506001600160a01b03841630145b156104a0576104a0843361049b856040518060600160405280602881526020016117c0602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ed2565b610921565b5060019392505050565b6000546001600160a01b031633146104d45760405162461bcd60e51b815260040161036a90611420565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105485760405162461bcd60e51b815260040161036a90611420565b600f54600160a01b900460ff16156105a25760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161036a565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105eb9030906105dd6009600a611552565b61049b906305f5e100611561565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190611578565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190611578565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190611578565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107a1816001600160a01b031660009081526001602052604090205490565b6000806107b66000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561081e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108439190611595565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac91906115c3565b60006103bc338484610a45565b3360009081526003602052604090205460ff166108ff57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036a565b6001600160a01b0382166109e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036a565b6001600160a01b038216610b0b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036a565b60008111610b6d5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161036a565b60006001600160a01b0384163014801590610b9157506001600160a01b0383163014155b15610d7457600f546001600160a01b038581169116148015610bc15750600e546001600160a01b03848116911614155b8015610be657506001600160a01b03831660009081526003602052604090205460ff16155b8015610c0057506004546001600160a01b03848116911614155b15610c45574360095414610c18576000600a55436009555b81600a6000828254610c2a91906115e5565b909155505060088054906000610c3f836115f8565b91905055505b600f546001600160a01b038481169116148015610c6b57506001600160a01b0384163014155b15610cc657610c78610f0c565b600a541080610c8957504360095414155b610cc65760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161036a565b30600090815260016020526040902054600f54600160a81b900460ff16158015610cfd5750600f546001600160a01b038581169116145b8015610d125750600f54600160b01b900460ff165b8015610d2c57506004546001600160a01b03868116911614155b15610d72578015610d66576000600b548211610d485781610d4c565b600b545b9050610d64818511610d5e578461109a565b8161109a565b505b47610d7047611214565b505b505b6001600160a01b038416600090815260016020526040902054610d979083611252565b6001600160a01b038516600090815260016020526040902055610ddc610dbd8383611252565b6001600160a01b0385166000908152600160205260409020549061129b565b6001600160a01b0384166000908152600160205260409020558015610e6f5730600090815260016020526040902054610e15908261129b565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e669085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ecc576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eba8585611252565b60405190815260200160405180910390a35b50505050565b60008184841115610ef65760405162461bcd60e51b815260040161036a91906112fa565b506000610f038486611611565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e9190611578565b81600081518110610fb157610fb161163a565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110610fe557610fe561163a565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611031906729a2241af62c0000908690600401611695565b600060405180830381865afa15801561104e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107691908101906116b6565b90508060018151811061108b5761108b61163a565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110e2576110e261163a565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f9190611578565b816001815181106111725761117261163a565b6001600160a01b039283166020918202929092010152600e546111989130911684610921565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906111d1908590600090869030904290600401611783565b600060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561124e573d6000803e3d6000fd5b5050565b600061129483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ed2565b9392505050565b6000806112a883856115e5565b9050838110156112945760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161036a565b602081526000825180602084015260005b81811015611328576020818601810151604086840101520161130b565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103ac57600080fd5b6000806040838503121561137057600080fd5b823561137b81611348565b946020939093013593505050565b60008060006060848603121561139e57600080fd5b83356113a981611348565b925060208401356113b981611348565b929592945050506040919091013590565b6000602082840312156113dc57600080fd5b813561129481611348565b600080604083850312156113fa57600080fd5b823561140581611348565b9150602083013561141581611348565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114a65780850481111561148a5761148a611455565b600184161561149857908102905b60019390931c92800261146f565b935093915050565b6000826114bd575060016103c0565b816114ca575060006103c0565b81600181146114e057600281146114ea57611506565b60019150506103c0565b60ff8411156114fb576114fb611455565b50506001821b6103c0565b5060208310610133831016604e8410600b8410161715611529575081810a6103c0565b611536600019848461146b565b806000190482111561154a5761154a611455565b029392505050565b600061129460ff8416836114ae565b80820281158282048414176103c0576103c0611455565b60006020828403121561158a57600080fd5b815161129481611348565b6000806000606084860312156115aa57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156115d557600080fd5b8151801515811461129457600080fd5b808201808211156103c0576103c0611455565b60006001820161160a5761160a611455565b5060010190565b818103818111156103c0576103c0611455565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561168b5781516001600160a01b0316865260209586019590910190600101611664565b5093949350505050565b8281526040602082015260006116ae6040830184611650565b949350505050565b6000602082840312156116c857600080fd5b815167ffffffffffffffff8111156116df57600080fd5b8201601f810184136116f057600080fd5b805167ffffffffffffffff81111561170a5761170a611624565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561173757611737611624565b60405291825260208184018101929081018784111561175557600080fd5b6020850194505b838510156117785784518082526020958601959093500161175c565b509695505050505050565b85815284602082015260a0604082015260006117a260a0830186611650565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209a72e353b9312270a595cb905f29733bdeafc483cc16afe8fa0fbbdb8cf3c34764736f6c634300081d0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
