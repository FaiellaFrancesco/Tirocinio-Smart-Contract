/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SWAPXDEX,
  SWAPXDEXInterface,
} from "../../0x69d0feda52bcf13708223ddfabff33c9efac6f56.sol/SWAPXDEX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "MaxTokensUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "purchaseToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokensBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ETHBuyHelper",
    outputs: [
      {
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MaxUSDTRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PresaleRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDTRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregatorInterface",
    outputs: [
      {
        internalType: "contract Aggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyWithETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyWithUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTokensToBuy",
        type: "uint256",
      },
    ],
    name: "changeMaxTokensToBuy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "changeSaleEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    name: "changeSaleStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdtBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "usdtBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokensToBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUsdtRaised",
        type: "uint256",
      },
    ],
    name: "setMaxUSDTRaised",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokensSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "updatePresaleRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "usdtBuyHelper",
    outputs: [
      {
        internalType: "uint256",
        name: "numOfTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a336100c6565b6000805460ff60a01b19169055600180546001600160a01b031990811673f823856d43e09adde1900092b6d025ace9844bc21790915560028054821673dac17f958d2ee523a2206206994597c13d831ec7179055600a805490911673ee9f2375b4bdf6387aa8265dd4fb8f16512a1d461790556969e10de76676d08000006005554260078190556100ae9062069780610116565b60085561049860095565048c2739500060045561013d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8082018082111561013757634e487b7160e01b600052601160045260246000fd5b92915050565b6118e38061014c6000396000f3fe6080604052600436106101e75760003560e01c806380425e9d11610102578063bdb57aa511610095578063f2fde38b11610064578063f2fde38b14610517578063f40b1ce414610537578063f9e3503a1461054d578063fc0c546a1461056d57600080fd5b8063bdb57aa5146104a1578063c49cc645146104b7578063c5fe41e1146104d7578063f14210a6146104f757600080fd5b80638da5cb5b116100d15780638da5cb5b146104385780638e15f473146104565780639cfa0f7c1461046b578063a7c601601461048157600080fd5b806380425e9d146103ce57806382b2e257146103ee5780638456cb59146104035780638495292c1461041857600080fd5b80633f4ba83a1161017a57806363e408791161014957806363e408791461036f5780636e9472981461038f57806378e97925146103a25780637b6c37c9146103b857600080fd5b80633f4ba83a146103005780634e71d92d146103255780635c975abb1461033a57806363b201171461035957600080fd5b8063150d283d116101b6578063150d283d1461028a578063278c278b146102925780632f48ab7d146102b25780633197cbb6146102ea57600080fd5b806306292f2b146101f357806306b091f91461021b5780630ba36dcd1461023d5780630e90c00a1461026a57600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b5061020861058d565b6040519081526020015b60405180910390f35b34801561022757600080fd5b5061023b6102363660046116fb565b610600565b005b34801561024957600080fd5b50610208610258366004611725565b600b6020526000908152604090205481565b34801561027657600080fd5b5061023b610285366004611740565b6107bb565b61023b61082e565b34801561029e57600080fd5b5061023b6102ad366004611740565b6109db565b3480156102be57600080fd5b506002546102d2906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b3480156102f657600080fd5b5061020860085481565b34801561030c57600080fd5b50610315610a9c565b6040519015158152602001610212565b34801561033157600080fd5b50610315610ad5565b34801561034657600080fd5b50600054600160a01b900460ff16610315565b34801561036557600080fd5b5061020860065481565b34801561037b57600080fd5b5061020861038a366004611740565b610c9c565b34801561039b57600080fd5b5047610208565b3480156103ae57600080fd5b5061020860075481565b3480156103c457600080fd5b5061020860045481565b3480156103da57600080fd5b5061023b6103e9366004611740565b610caf565b3480156103fa57600080fd5b50610208610d61565b34801561040f57600080fd5b50610315610d92565b34801561042457600080fd5b5061023b610433366004611740565b610dc5565b34801561044457600080fd5b506000546001600160a01b03166102d2565b34801561046257600080fd5b50610208610e3a565b34801561047757600080fd5b5061020860055481565b34801561048d57600080fd5b5061023b61049c366004611740565b610ebf565b3480156104ad57600080fd5b5061020860095481565b3480156104c357600080fd5b50600a546102d2906001600160a01b031681565b3480156104e357600080fd5b5061023b6104f2366004611740565b6111d5565b34801561050357600080fd5b5061023b610512366004611740565b6112ad565b34801561052357600080fd5b5061023b610532366004611725565b61133c565b34801561054357600080fd5b5061020860035481565b34801561055957600080fd5b50610208610568366004611740565b6113d7565b34801561057957600080fd5b506001546102d2906001600160a01b031681565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb9190611759565b905090565b6000546001600160a01b031633146106335760405162461bcd60e51b815260040161062a90611772565b60405180910390fd5b813b63ffffffff166106875760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e747261637420616464726573730000000000000000604482015260640161062a565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f19190611759565b10156107355760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420746f6b656e7360681b604482015260640161062a565b6001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b691906117a9565b505050565b6000546001600160a01b031633146107e55760405162461bcd60e51b815260040161062a90611772565b804211156108295760405162461bcd60e51b815260206004820152601160248201527014d85b19481d1a5b59481a5b881c185cdd607a1b604482015260640161062a565b600755565b344260075411156108715760405162461bcd60e51b815260206004820152600d60248201526c1250d3c81b9bdd081cdd185c9d609a1b604482015260640161062a565b4260085410156108ad5760405162461bcd60e51b81526020600482015260076024820152661250d3c8195b9960ca1b604482015260640161062a565b600081116108ee5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b604482015260640161062a565b6108f6611410565b60006305f5e10034610906610e3a565b61091091906117e1565b61091a91906117f8565b9050600061092982600061146c565b905060055481111561096e5760405162461bcd60e51b815260206004820152600e60248201526d6d617820746f6b656e732062757960901b604482015260640161062a565b336000908152600b602052604081208290556006805483929061099290849061181a565b909155505060408051838152426020820152600091839133917f62e796e00a8e66154d78da76daae129635b4795a6e1b889f2caa6c5cea22ac68910160405180910390a4505050565b6000546001600160a01b03163314610a055760405162461bcd60e51b815260040161062a90611772565b60008111610a555760405162461bcd60e51b815260206004820152601c60248201527f5a65726f206d617820746f6b656e7320746f206275792076616c756500000000604482015260640161062a565b60058190556040805182815260208101839052428183015290517f76f9e5e1f6af6a9f180708b77a5c99210fbf19b91f1f194f3918c262b8edf77c9181900360600190a150565b600080546001600160a01b03163314610ac75760405162461bcd60e51b815260040161062a90611772565b610acf6114cf565b50600190565b6000610adf611410565b4260085410610b305760405162461bcd60e51b815260206004820152601a60248201527f436c61696d2074696d6520686173206e6f742073746172746564000000000000604482015260640161062a565b336000908152600b6020526040902054610b795760405162461bcd60e51b815260206004820152600a602482015269139bc819195c1bdcda5d60b21b604482015260640161062a565b336000818152600b6020908152604080832054600154825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169263a9059cbb9260448082019391829003018187875af1158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0591906117a9565b905080610c4c5760405162461bcd60e51b81526020600482015260156024820152744661696c656420746f2073656e6420746f6b656e7360581b604482015260640161062a565b6040805183815242602082015233917f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b910160405180910390a2336000908152600b602052604081205592915050565b6000610ca982600161146c565b92915050565b6000546001600160a01b03163314610cd95760405162461bcd60e51b815260040161062a90611772565b6007548111610d1c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420656e6454696d6560881b604482015260640161062a565b42811015610d5c5760405162461bcd60e51b815260206004820152600d60248201526c115b99081d1a5b59481c185cdd609a1b604482015260640161062a565b600855565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016105ba565b600080546001600160a01b03163314610dbd5760405162461bcd60e51b815260040161062a90611772565b610acf611524565b6000546001600160a01b03163314610def5760405162461bcd60e51b815260040161062a90611772565b60008111610e355760405162461bcd60e51b8152602060048201526013602482015272496e616c69642070726573616c65207261746560681b604482015260640161062a565b600955565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190611847565b509195945050505050565b80426007541115610f025760405162461bcd60e51b815260206004820152600d60248201526c1250d3c81b9bdd081cdd185c9d609a1b604482015260640161062a565b426008541015610f3e5760405162461bcd60e51b81526020600482015260076024820152661250d3c8195b9960ca1b604482015260640161062a565b60008111610f7f5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b604482015260640161062a565b610f87611410565b6000610f9483600161146c565b9050600554811115610fd95760405162461bcd60e51b815260206004820152600e60248201526d6d617820746f6b656e732062757960901b604482015260640161062a565b6002546000906001600160a01b031663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611759565b9050808411156110b85760405162461bcd60e51b815260206004820152602160248201527f4d616b65207375726520746f2061646420656e6f75676820616c6c6f77616e636044820152606560f81b606482015260840161062a565b6002546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018790526064016020604051808303816000875af115801561111d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114191906117a9565b50336000908152600b602052604081208390556003805486929061116690849061181a565b92505081905550816006600082825461117f919061181a565b9091555050600254604080518681524260208201526001600160a01b0390921691849133917f62e796e00a8e66154d78da76daae129635b4795a6e1b889f2caa6c5cea22ac68910160405180910390a450505050565b6000546001600160a01b031633146111ff5760405162461bcd60e51b815260040161062a90611772565b6000811161123d5760405162461bcd60e51b815260206004820152600b60248201526a57726f6e672076616c756560a81b604482015260640161062a565b60035481116112a85760405162461bcd60e51b815260206004820152603160248201527f4d6178696d756d2055534454206d7573742062652067726561746572207468616044820152701b881d1a19481554d1150814985a5cd959607a1b606482015260840161062a565b600455565b6000546001600160a01b031633146112d75760405162461bcd60e51b815260040161062a90611772565b6000811161131e5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a5908195b9d195c88185b5bdd5b9d60621b604482015260640161062a565b6113396113336000546001600160a01b031690565b82611567565b50565b6000546001600160a01b031633146113665760405162461bcd60e51b815260040161062a90611772565b6001600160a01b0381166113ce5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c653a206e6577206f776e65722063616e6e6f74206265207a65726044820152686f206164647265737360b81b606482015260840161062a565b6113398161163f565b6000806305f5e100836113e8610e3a565b6113f291906117e1565b6113fc91906117f8565b905061140981600061146c565b9392505050565b600054600160a01b900460ff161561146a5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20636f6e74726163742070617573656400000000000000604482015260640161062a565b565b600080600183600181111561148357611483611897565b036114ab5760095461149590856117e1565b6114a49064e8d4a510006117e1565b90506114bb565b6009546114b890856117e1565b90505b6114c76103e8826117f8565b949350505050565b6114d761168f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61152c611410565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115073390565b804710156115a55760405162461bcd60e51b815260206004820152600b60248201526a4c6f772062616c616e636560a81b604482015260640161062a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146115f2576040519150601f19603f3d011682016040523d82523d6000602084013e6115f7565b606091505b50509050806107b65760405162461bcd60e51b815260206004820152601460248201527318da58d8d84814185e5b595b9d0819985a5b195960621b604482015260640161062a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1661146a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161062a565b80356001600160a01b03811681146116f657600080fd5b919050565b6000806040838503121561170e57600080fd5b611717836116df565b946020939093013593505050565b60006020828403121561173757600080fd5b611409826116df565b60006020828403121561175257600080fd5b5035919050565b60006020828403121561176b57600080fd5b5051919050565b6020808252601c908201527f4f776e61626c653a204f6e6c79206f776e65722063616e2063616c6c00000000604082015260600190565b6000602082840312156117bb57600080fd5b8151801515811461140957600080fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ca957610ca96117cb565b60008261181557634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610ca957610ca96117cb565b805169ffffffffffffffffffff811681146116f657600080fd5b600080600080600060a0868803121561185f57600080fd5b6118688661182d565b945060208601519350604086015192506060860151915061188b6080870161182d565b90509295509295909350565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c49b781973eff83f7a490bf38f5d3c8328b904ecd05c857915b0eb84b971ef3664736f6c63430008130033";

type SWAPXDEXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SWAPXDEXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SWAPXDEX__factory extends ContractFactory {
  constructor(...args: SWAPXDEXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SWAPXDEX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SWAPXDEX__factory {
    return super.connect(runner) as SWAPXDEX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SWAPXDEXInterface {
    return new Interface(_abi) as SWAPXDEXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SWAPXDEX {
    return new Contract(address, _abi, runner) as unknown as SWAPXDEX;
  }
}
