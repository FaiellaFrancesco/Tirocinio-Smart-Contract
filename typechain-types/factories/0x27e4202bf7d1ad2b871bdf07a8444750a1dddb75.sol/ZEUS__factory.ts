/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  ZEUS,
  ZEUSInterface,
} from "../../0x27e4202bf7d1ad2b871bdf07a8444750a1dddb75.sol/ZEUS";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxZEUSTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueZEUSTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061183d83398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061183d83398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b6114cd806103706000396000f3fe6080604052600436106100ec5760003560e01c80638a8c523c1161008a578063a9059cbb11610059578063a9059cbb146102a0578063dd62ed3e146102c0578063ea414b2814610306578063ffa8c9fd1461032657600080fd5b80638a8c523c146102215780638da5cb5b146102365780639401dbdb1461025e57806395d89b411461027357600080fd5b806323b872dd116100c657806323b872dd14610198578063313ce567146101b857806370a08231146101d4578063715018a61461020a57600080fd5b806306fdde03146100f8578063095ea7b31461014557806318160ddd1461017557600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506040805180820190915260128152715a657573206279204d61747420467572696560701b60208201525b60405161013c91906110bd565b60405180910390f35b34801561015157600080fd5b50610165610160366004611120565b61033c565b604051901515815260200161013c565b34801561018157600080fd5b5061018a610353565b60405190815260200161013c565b3480156101a457600080fd5b506101656101b336600461114c565b610374565b3480156101c457600080fd5b506040516009815260200161013c565b3480156101e057600080fd5b5061018a6101ef36600461118d565b6001600160a01b031660009081526001602052604090205490565b34801561021657600080fd5b5061021f610437565b005b34801561022d57600080fd5b5061021f6104b4565b34801561024257600080fd5b506000546040516001600160a01b03909116815260200161013c565b34801561026a57600080fd5b5061021f61086f565b34801561027f57600080fd5b506040805180820190915260048152635a45555360e01b602082015261012f565b3480156102ac57600080fd5b506101656102bb366004611120565b6108d2565b3480156102cc57600080fd5b5061018a6102db3660046111aa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561031257600080fd5b5061021f61032136600461118d565b6108df565b34801561033257600080fd5b5061018a60095481565b600061034933848461091d565b5060015b92915050565b60006103616009600a6112e0565b61036f90633b9aca006112ef565b905090565b6000610381848484610a41565b3360009081526003602052604090205460ff161580156103d65750600b546001600160a01b03858116911614806103c357506001600160a01b03831661dead14155b806103d657506001600160a01b03841630145b1561042d5761042d843361042885604051806060016040528060288152602001611470602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e23565b61091d565b5060019392505050565b6000546001600160a01b0316331461046a5760405162461bcd60e51b815260040161046190611306565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104de5760405162461bcd60e51b815260040161046190611306565b600b54600160a01b900460ff16156105385760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610461565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561058191309190610573906009906112e0565b61042890633b9aca006112ef565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f8919061133b565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e919061133b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef919061133b565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d7194730610737816001600160a01b031660009081526001602052604090205490565b60008061074c6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156107b4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107d99190611358565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190611386565b50565b6000546001600160a01b031633146108995760405162461bcd60e51b815260040161046190611306565b600047116108a657600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561086c573d6000803e3d6000fd5b6000610349338484610a41565b3360009081526003602052604090205460ff166108fb57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661097f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610461565b6001600160a01b0382166109e05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610461565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610461565b6001600160a01b038216610b075760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610461565b60008111610b695760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610461565b60006001600160a01b0384163014801590610b8d57506001600160a01b0383163014155b15610cc557600b546001600160a01b038581169116148015610bbd5750600a546001600160a01b03848116911614155b8015610be257506001600160a01b03831660009081526003602052604090205460ff16155b8015610bfc57506004546001600160a01b03848116911614155b15610c175760088054906000610c11836113a8565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c4e5750600b546001600160a01b038581169116145b8015610c635750600b54600160b01b900460ff165b8015610c7d57506004546001600160a01b03868116911614155b15610cc3578015610cb75760006009548211610c995781610c9d565b6009545b9050610cb5818511610caf5784610e5d565b81610e5d565b505b47610cc147610fd7565b505b505b6001600160a01b038416600090815260016020526040902054610ce89083611015565b6001600160a01b038516600090815260016020526040902055610d2d610d0e8383611015565b6001600160a01b0385166000908152600160205260409020549061105e565b6001600160a01b0384166000908152600160205260409020558015610dc05730600090815260016020526040902054610d66908261105e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610db79085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e1d576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e0b8585611015565b60405190815260200160405180910390a35b50505050565b60008184841115610e475760405162461bcd60e51b815260040161046191906110bd565b506000610e5484866113c1565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610ea557610ea56113d4565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f22919061133b565b81600181518110610f3557610f356113d4565b6001600160a01b039283166020918202929092010152600a54610f5b913091168461091d565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610f949085906000908690309042906004016113ea565b600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611011573d6000803e3d6000fd5b5050565b600061105783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e23565b9392505050565b60008061106b838561145c565b9050838110156110575760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610461565b602081526000825180602084015260005b818110156110eb57602081860181015160408684010152016110ce565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461086c57600080fd5b6000806040838503121561113357600080fd5b823561113e8161110b565b946020939093013593505050565b60008060006060848603121561116157600080fd5b833561116c8161110b565b9250602084013561117c8161110b565b929592945050506040919091013590565b60006020828403121561119f57600080fd5b81356110578161110b565b600080604083850312156111bd57600080fd5b82356111c88161110b565b915060208301356111d88161110b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561123457808504811115611218576112186111e3565b600184161561122657908102905b60019390931c9280026111fd565b935093915050565b60008261124b5750600161034d565b816112585750600061034d565b816001811461126e576002811461127857611294565b600191505061034d565b60ff841115611289576112896111e3565b50506001821b61034d565b5060208310610133831016604e8410600b84101617156112b7575081810a61034d565b6112c460001984846111f9565b80600019048211156112d8576112d86111e3565b029392505050565b600061105760ff84168361123c565b808202811582820484141761034d5761034d6111e3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561134d57600080fd5b81516110578161110b565b60008060006060848603121561136d57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561139857600080fd5b8151801515811461105757600080fd5b6000600182016113ba576113ba6111e3565b5060010190565b8181038181111561034d5761034d6111e3565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b8181101561143c5783516001600160a01b0316835260209384019390920191600101611415565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561034d5761034d6111e356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122051c1ff7fb5c9329cbd1ae0d91e9eedd224a409c01e13300eefa039bf7acaf64c64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type ZEUSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZEUSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZEUS__factory extends ContractFactory {
  constructor(...args: ZEUSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZEUS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZEUS__factory {
    return super.connect(runner) as ZEUS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZEUSInterface {
    return new Interface(_abi) as ZEUSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZEUS {
    return new Contract(address, _abi, runner) as unknown as ZEUS;
  }
}
