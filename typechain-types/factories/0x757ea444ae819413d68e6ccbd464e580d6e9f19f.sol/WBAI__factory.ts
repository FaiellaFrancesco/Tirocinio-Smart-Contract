/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  WBAI,
  WBAIInterface,
} from "../../0x757ea444ae819413d68e6ccbd464e580d6e9f19f.sol/WBAI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_WBAIThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_WBAIamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119ee8061029c6000396000f3fe60806040526004361061010d5760003560e01c8063715018a6116100955780638da5cb5b116100645780638da5cb5b146102ce57806395d89b41146102f6578063a9059cbb14610323578063dd62ed3e14610343578063ea414b281461038957600080fd5b8063715018a614610279578063751039fc1461028e5780638a8c523c146102a35780638d156dd3146102b857600080fd5b806318160ddd116100dc57806318160ddd146101db57806320800a00146101f057806323b872dd14610207578063313ce5671461022757806370a082311461024357600080fd5b806306fdde0314610119578063095ea7b3146101715780630faee56f146101a1578063112e2d10146101c557600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152601c81527f5768697465427269646765204149204167656e74204e6574776f726b0000000060208201525b60405161016891906114a9565b60405180910390f35b34801561017d57600080fd5b5061019161018c36600461150c565b6103a9565b6040519015158152602001610168565b3480156101ad57600080fd5b506101b7600c5481565b604051908152602001610168565b3480156101d157600080fd5b506101b7600d5481565b3480156101e757600080fd5b506101b76103c0565b3480156101fc57600080fd5b506102056103e1565b005b34801561021357600080fd5b50610191610222366004611538565b610450565b34801561023357600080fd5b5060405160098152602001610168565b34801561024f57600080fd5b506101b761025e366004611579565b6001600160a01b031660009081526001602052604090205490565b34801561028557600080fd5b506102056104fb565b34801561029a57600080fd5b5061020561056f565b3480156102af57600080fd5b5061020561059b565b3480156102c457600080fd5b506101b7600e5481565b3480156102da57600080fd5b506000546040516001600160a01b039091168152602001610168565b34801561030257600080fd5b506040805180820190915260048152635742414960e01b602082015261015b565b34801561032f57600080fd5b5061019161033e36600461150c565b610953565b34801561034f57600080fd5b506101b761035e366004611596565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561039557600080fd5b506102056103a4366004611579565b610960565b60006103b633848461099e565b5060015b92915050565b60006103ce6009600a6116cc565b6103dc906305f5e1006116db565b905090565b6000546001600160a01b031633146104145760405162461bcd60e51b815260040161040b906116f2565b60405180910390fd5b6000471161042157600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561044d573d6000803e3d6000fd5b50565b600061045d848484610ac2565b6004546001600160a01b0316331480159061049a57506010546001600160a01b038581169116148061049a57506001600160a01b03831661dead14155b156104f1576104f184336104ec85604051806060016040528060288152602001611991602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f8f565b61099e565b5060019392505050565b6000546001600160a01b031633146105255760405162461bcd60e51b815260040161040b906116f2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105995760405162461bcd60e51b815260040161040b906116f2565b565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260040161040b906116f2565b601054600160a01b900460ff161561061f5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161040b565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561066890309061065a6009600a6116cc565b6104ec906305f5e1006116db565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190611727565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190611727565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190611727565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d719473061081e816001600160a01b031660009081526001602052604090205490565b6000806108336000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561089b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c09190611744565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561092f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190611772565b60006103b6338484610ac2565b3360009081526003602052604090205460ff1661097c57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610a005760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161040b565b6001600160a01b038216610a615760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161040b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161040b565b6001600160a01b038216610b885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161040b565b60008111610bea5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161040b565b60006001600160a01b0384163014801590610c0e57506001600160a01b0383163014155b15610e3157601054600160a81b900460ff16610c5357610c506064610c4a60075460085411610c3f57600554610c43565b6006545b8590610fc9565b90611052565b90505b6010546001600160a01b038581169116148015610c7e5750600f546001600160a01b03848116911614155b8015610ca357506001600160a01b03831660009081526003602052604090205460ff16155b8015610cbd57506004546001600160a01b03848116911614155b15610d02574360095414610cd5576000600a55436009555b81600a6000828254610ce79190611794565b909155505060088054906000610cfc836117a7565b91905055505b6010546001600160a01b038481169116148015610d2857506001600160a01b0384163014155b15610d8357610d35611094565b600a541080610d4657504360095414155b610d835760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161040b565b30600090815260016020526040902054601054600160a81b900460ff16158015610dba57506010546001600160a01b038581169116145b8015610dcf5750601054600160b01b900460ff165b8015610de957506004546001600160a01b03868116911614155b15610e2f578015610e23576000600c548211610e055781610e09565b600c545b9050610e21818511610e1b5784611222565b81611222565b505b47610e2d4761139c565b505b505b6001600160a01b038416600090815260016020526040902054610e5490836113da565b6001600160a01b038516600090815260016020526040902055610e99610e7a83836113da565b6001600160a01b0385166000908152600160205260409020549061141c565b6001600160a01b0384166000908152600160205260409020558015610f2c5730600090815260016020526040902054610ed2908261141c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f239085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f89576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f7785856113da565b60405190815260200160405180910390a35b50505050565b60008184841115610fb35760405162461bcd60e51b815260040161040b91906114a9565b506000610fc084866117c0565b95945050505050565b600082600003610fdb575060006103ba565b6000610fe783856116db565b905082610ff485836117d3565b1461104b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161040b565b9392505050565b600061104b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061147b565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015611102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111269190611727565b816000815181106111395761113961180b565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061116d5761116d61180b565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111b9906729a2241af62c0000908690600401611866565b600060405180830381865afa1580156111d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111fe9190810190611887565b9050806001815181106112135761121361180b565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061126a5761126a61180b565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e79190611727565b816001815181106112fa576112fa61180b565b6001600160a01b039283166020918202929092010152600f54611320913091168461099e565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611359908590600090869030904290600401611954565b600060405180830381600087803b15801561137357600080fd5b505af1158015611387573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113d6573d6000803e3d6000fd5b5050565b600061104b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f8f565b6000806114298385611794565b90508381101561104b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161040b565b6000818361149c5760405162461bcd60e51b815260040161040b91906114a9565b506000610fc084866117d3565b602081526000825180602084015260005b818110156114d757602081860181015160408684010152016114ba565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461044d57600080fd5b6000806040838503121561151f57600080fd5b823561152a816114f7565b946020939093013593505050565b60008060006060848603121561154d57600080fd5b8335611558816114f7565b92506020840135611568816114f7565b929592945050506040919091013590565b60006020828403121561158b57600080fd5b813561104b816114f7565b600080604083850312156115a957600080fd5b82356115b4816114f7565b915060208301356115c4816114f7565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561162057808504811115611604576116046115cf565b600184161561161257908102905b60019390931c9280026115e9565b935093915050565b600082611637575060016103ba565b81611644575060006103ba565b816001811461165a576002811461166457611680565b60019150506103ba565b60ff841115611675576116756115cf565b50506001821b6103ba565b5060208310610133831016604e8410600b84101617156116a3575081810a6103ba565b6116b060001984846115e5565b80600019048211156116c4576116c46115cf565b029392505050565b600061104b60ff841683611628565b80820281158282048414176103ba576103ba6115cf565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561173957600080fd5b815161104b816114f7565b60008060006060848603121561175957600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561178457600080fd5b8151801515811461104b57600080fd5b808201808211156103ba576103ba6115cf565b6000600182016117b9576117b96115cf565b5060010190565b818103818111156103ba576103ba6115cf565b6000826117f057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561185c5781516001600160a01b0316865260209586019590910190600101611835565b5093949350505050565b82815260406020820152600061187f6040830184611821565b949350505050565b60006020828403121561189957600080fd5b815167ffffffffffffffff8111156118b057600080fd5b8201601f810184136118c157600080fd5b805167ffffffffffffffff8111156118db576118db6117f5565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611908576119086117f5565b60405291825260208184018101929081018784111561192657600080fd5b6020850194505b838510156119495784518082526020958601959093500161192d565b509695505050505050565b85815284602082015260a06040820152600061197360a0830186611821565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122009b84c68fad59ee564bf85b030bb04525694a2bbc8048b306a24435bcbf8d08e64736f6c634300081e0033";

type WBAIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WBAIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WBAI__factory extends ContractFactory {
  constructor(...args: WBAIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WBAI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WBAI__factory {
    return super.connect(runner) as WBAI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WBAIInterface {
    return new Interface(_abi) as WBAIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WBAI {
    return new Contract(address, _abi, runner) as unknown as WBAI;
  }
}
