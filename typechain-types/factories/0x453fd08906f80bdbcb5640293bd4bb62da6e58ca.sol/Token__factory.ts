/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x453fd08906f80bdbcb5640293bd4bb62da6e58ca.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalTokenTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initTokenDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokenETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b611820806102c66000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b4114610125578063a9059cbb146102a7578063ba18ed0d146102c7578063dd62ed3e146102dd578063ea414b281461032357600080fd5b806370a082311461021f578063715018a6146102555780638a8c523c1461026a5780638da5cb5b1461027f57600080fd5b806318160ddd116100d157806318160ddd146101b857806323b872dd146101cd578063313ce567146101ed5780635ce74cbf1461020957600080fd5b8063022321f21461010e57806306fdde0314610125578063095ea7b3146101645780630faee56f1461019457600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123610343565b005b34801561013157600080fd5b5060408051808201825260078152664d656d656e746f60c81b6020820152905161015b91906112fd565b60405180910390f35b34801561017057600080fd5b5061018461017f366004611360565b6103b2565b604051901515815260200161015b565b3480156101a057600080fd5b506101aa600b5481565b60405190815260200161015b565b3480156101c457600080fd5b506101aa6103c9565b3480156101d957600080fd5b506101846101e836600461138c565b6103ea565b3480156101f957600080fd5b506040516009815260200161015b565b34801561021557600080fd5b506101aa600d5481565b34801561022b57600080fd5b506101aa61023a3660046113cd565b6001600160a01b031660009081526001602052604090205490565b34801561026157600080fd5b506101236104ad565b34801561027657600080fd5b50610123610521565b34801561028b57600080fd5b506000546040516001600160a01b03909116815260200161015b565b3480156102b357600080fd5b506101846102c2366004611360565b6108d9565b3480156102d357600080fd5b506101aa600c5481565b3480156102e957600080fd5b506101aa6102f83660046113ea565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032f57600080fd5b5061012361033e3660046113cd565b6108e6565b6000546001600160a01b031633146103765760405162461bcd60e51b815260040161036d90611423565b60405180910390fd5b6000471161038357600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103af573d6000803e3d6000fd5b50565b60006103bf338484610924565b5060015b92915050565b60006103d76009600a611555565b6103e5906305f5e100611564565b905090565b60006103f7848484610a48565b3360009081526003602052604090205460ff1615801561044c5750600f546001600160a01b038581169116148061043957506001600160a01b03831661dead14155b8061044c57506001600160a01b03841630145b156104a3576104a3843361049e856040518060600160405280602881526020016117c3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ed5565b610924565b5060019392505050565b6000546001600160a01b031633146104d75760405162461bcd60e51b815260040161036d90611423565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461054b5760405162461bcd60e51b815260040161036d90611423565b600f54600160a01b900460ff16156105a55760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161036d565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105ee9030906105e06009600a611555565b61049e906305f5e100611564565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061157b565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb919061157b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c919061157b565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107a4816001600160a01b031660009081526001602052604090205490565b6000806107b96000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610821573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108469190611598565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af91906115c6565b60006103bf338484610a48565b3360009081526003602052604090205460ff1661090257600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109865760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036d565b6001600160a01b0382166109e75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036d565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aac5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036d565b6001600160a01b038216610b0e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036d565b60008111610b705760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161036d565b60006001600160a01b0384163014801590610b9457506001600160a01b0383163014155b15610d7757600f546001600160a01b038581169116148015610bc45750600e546001600160a01b03848116911614155b8015610be957506001600160a01b03831660009081526003602052604090205460ff16155b8015610c0357506004546001600160a01b03848116911614155b15610c48574360095414610c1b576000600a55436009555b81600a6000828254610c2d91906115e8565b909155505060088054906000610c42836115fb565b91905055505b600f546001600160a01b038481169116148015610c6e57506001600160a01b0384163014155b15610cc957610c7b610f0f565b600a541080610c8c57504360095414155b610cc95760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161036d565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d005750600f546001600160a01b038581169116145b8015610d155750600f54600160b01b900460ff165b8015610d2f57506004546001600160a01b03868116911614155b15610d75578015610d69576000600b548211610d4b5781610d4f565b600b545b9050610d67818511610d61578461109d565b8161109d565b505b47610d7347611217565b505b505b6001600160a01b038416600090815260016020526040902054610d9a9083611255565b6001600160a01b038516600090815260016020526040902055610ddf610dc08383611255565b6001600160a01b0385166000908152600160205260409020549061129e565b6001600160a01b0384166000908152600160205260409020558015610e725730600090815260016020526040902054610e18908261129e565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e699085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ecf576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ebd8585611255565b60405190815260200160405180910390a35b50505050565b60008184841115610ef95760405162461bcd60e51b815260040161036d91906112fd565b506000610f068486611614565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa1919061157b565b81600081518110610fb457610fb461163d565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110610fe857610fe861163d565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611034906729a2241af62c0000908690600401611698565b600060405180830381865afa158015611051573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107991908101906116b9565b90508060018151811061108e5761108e61163d565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110e5576110e561163d565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561113e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611162919061157b565b816001815181106111755761117561163d565b6001600160a01b039283166020918202929092010152600e5461119b9130911684610924565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906111d4908590600090869030904290600401611786565b600060405180830381600087803b1580156111ee57600080fd5b505af1158015611202573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611251573d6000803e3d6000fd5b5050565b600061129783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ed5565b9392505050565b6000806112ab83856115e8565b9050838110156112975760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161036d565b602081526000825180602084015260005b8181101561132b576020818601810151604086840101520161130e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103af57600080fd5b6000806040838503121561137357600080fd5b823561137e8161134b565b946020939093013593505050565b6000806000606084860312156113a157600080fd5b83356113ac8161134b565b925060208401356113bc8161134b565b929592945050506040919091013590565b6000602082840312156113df57600080fd5b81356112978161134b565b600080604083850312156113fd57600080fd5b82356114088161134b565b915060208301356114188161134b565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114a95780850481111561148d5761148d611458565b600184161561149b57908102905b60019390931c928002611472565b935093915050565b6000826114c0575060016103c3565b816114cd575060006103c3565b81600181146114e357600281146114ed57611509565b60019150506103c3565b60ff8411156114fe576114fe611458565b50506001821b6103c3565b5060208310610133831016604e8410600b841016171561152c575081810a6103c3565b611539600019848461146e565b806000190482111561154d5761154d611458565b029392505050565b600061129760ff8416836114b1565b80820281158282048414176103c3576103c3611458565b60006020828403121561158d57600080fd5b81516112978161134b565b6000806000606084860312156115ad57600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156115d857600080fd5b8151801515811461129757600080fd5b808201808211156103c3576103c3611458565b60006001820161160d5761160d611458565b5060010190565b818103818111156103c3576103c3611458565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561168e5781516001600160a01b0316865260209586019590910190600101611667565b5093949350505050565b8281526040602082015260006116b16040830184611653565b949350505050565b6000602082840312156116cb57600080fd5b815167ffffffffffffffff8111156116e257600080fd5b8201601f810184136116f357600080fd5b805167ffffffffffffffff81111561170d5761170d611627565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561173a5761173a611627565b60405291825260208184018101929081018784111561175857600080fd5b6020850194505b8385101561177b5784518082526020958601959093500161175f565b509695505050505050565b85815284602082015260a0604082015260006117a560a0830186611653565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122035283aaf0ca9edfada604f407abf7a81c8ec2aefb8a72751f4785da84b93a2b564736f6c634300081d0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
