/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ETHER,
  ETHERInterface,
} from "../../0xc851dd2b03e0d47e5c641f5858c342ef72110c67.sol/ETHER";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxnAmount",
        type: "uint256",
      },
    ],
    name: "maxTxnAmountUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_autoAddLiquidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_buyMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapTokensAtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "blacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeMultipleAccountsFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxWalletSize",
        type: "uint256",
      },
    ],
    name: "setMaxWalletsSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapTokensAtAmount",
        type: "uint256",
      },
    ],
    name: "setMinSwapTokensThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxTxnAmount",
        type: "uint256",
      },
    ],
    name: "setmaxTxAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_openTrading",
        type: "bool",
      },
    ],
    name: "startTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_swapEnabled",
        type: "bool",
      },
    ],
    name: "toggleSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notbot",
        type: "address",
      },
    ],
    name: "unBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redFeeOnSell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "devFeeOnBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "devFeeOnSell",
        type: "uint256",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052610016655af3107a400060001961034e565b61002290600019610370565b60065560006008819055600f6009819055600a829055600b819055600c829055600d819055600e919091558055601280546001600160a01b0319908116738e08aee6f1e4c55ba17e38c53dd2e8e367f2086f9081179092556013805490911690911790556015805461ffff60a81b1916600160b01b17905564746a5288006016556501d1a94a2000601755633b9aca006018553480156100c157600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506006543360009081526002602090815260409182902092909255601480546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155815163c45a015560e01b815291519092839263c45a015592600480830193928290030181865afa15801561017e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a29190610397565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102139190610397565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102849190610397565b601580546001600160a01b0319166001600160a01b03928316179055600080548216815260056020526040808220805460ff1990811660019081179092553084528284208054821683179055601254851684528284208054821683179055601354909416835291208054909216179055336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef655af3107a400060405161034091815260200190565b60405180910390a3506103c7565b60008261036b57634e487b7160e01b600052601260045260246000fd5b500690565b8181038181111561039157634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156103a957600080fd5b81516001600160a01b03811681146103c057600080fd5b9392505050565b611def806103d66000396000f3fe6080604052600436106101dc5760003560e01c80636912652c1161010257806398a5c31511610095578063c6616ba111610064578063c6616ba11461057f578063dd62ed3e1461059f578063ee3b16c1146105e5578063f2fde38b1461060557600080fd5b806398a5c315146104ef578063a9059cbb1461050f578063bfd792841461052f578063c492f0461461055f57600080fd5b80637f2feddc116100d15780637f2feddc146104625780638da5cb5b1461048f5780638f9a55c0146104ad57806395d89b41146104c357600080fd5b80636912652c146103ec5780636d8aa8f81461040d57806370a082311461042d578063715018a61461044d57600080fd5b806323b872dd1161017a57806349bd5a5e1161014957806349bd5a5e1461038257806351bc3c85146103a257806365e47de2146103b757806367a5ea2a146103d757600080fd5b806323b872dd146103105780632fd689e314610330578063313ce567146103465780633a065f981461036257600080fd5b80631694505e116101b65780631694505e1461027f57806318160ddd146102b75780631a895266146102da5780631de12516146102fa57600080fd5b8063041f173f146101e857806306fdde031461020a578063095ea7b31461024f57600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b50610208610203366004611965565b610625565b005b34801561021657600080fd5b5060408051808201909152600a815269457468657265756d393560b01b60208201525b6040516102469190611a35565b60405180910390f35b34801561025b57600080fd5b5061026f61026a366004611a83565b6106ba565b6040519015158152602001610246565b34801561028b57600080fd5b5060145461029f906001600160a01b031681565b6040516001600160a01b039091168152602001610246565b3480156102c357600080fd5b50655af3107a40005b604051908152602001610246565b3480156102e657600080fd5b506102086102f5366004611aaf565b6106d1565b34801561030657600080fd5b506102cc60165481565b34801561031c57600080fd5b5061026f61032b366004611acc565b61071c565b34801561033c57600080fd5b506102cc60185481565b34801561035257600080fd5b5060405160098152602001610246565b34801561036e57600080fd5b5061020861037d366004611b0d565b610785565b34801561038e57600080fd5b5060155461029f906001600160a01b031681565b3480156103ae57600080fd5b506102086107b4565b3480156103c357600080fd5b506102086103d2366004611b0d565b61080b565b3480156103e357600080fd5b5061020861083a565b3480156103f857600080fd5b5060155461026f90600160b81b900460ff1681565b34801561041957600080fd5b50610208610428366004611b36565b610882565b34801561043957600080fd5b506102cc610448366004611aaf565b6108ca565b34801561045957600080fd5b506102086108ec565b34801561046e57600080fd5b506102cc61047d366004611aaf565b60116020526000908152604090205481565b34801561049b57600080fd5b506000546001600160a01b031661029f565b3480156104b957600080fd5b506102cc60175481565b3480156104cf57600080fd5b5060408051808201909152600381526245393560e81b6020820152610239565b3480156104fb57600080fd5b5061020861050a366004611b0d565b610960565b34801561051b57600080fd5b5061026f61052a366004611a83565b61098f565b34801561053b57600080fd5b5061026f61054a366004611aaf565b60106020526000908152604090205460ff1681565b34801561056b57600080fd5b5061020861057a366004611b51565b61099c565b34801561058b57600080fd5b5061020861059a366004611bd7565b610a33565b3480156105ab57600080fd5b506102cc6105ba366004611c09565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b3480156105f157600080fd5b50610208610600366004611b36565b610a71565b34801561061157600080fd5b50610208610620366004611aaf565b610ab9565b6000546001600160a01b031633146106585760405162461bcd60e51b815260040161064f90611c42565b60405180910390fd5b60005b81518110156106b65760016010600084848151811061067c5761067c611c77565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161065b565b5050565b60006106c7338484610ba3565b5060015b92915050565b6000546001600160a01b031633146106fb5760405162461bcd60e51b815260040161064f90611c42565b6001600160a01b03166000908152601060205260409020805460ff19169055565b6000610729848484610cc7565b61077b843361077685604051806060016040528060288152602001611d92602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190611203565b610ba3565b5060019392505050565b6000546001600160a01b031633146107af5760405162461bcd60e51b815260040161064f90611c42565b601755565b6012546001600160a01b0316336001600160a01b031614806107e957506013546001600160a01b0316336001600160a01b0316145b6107f257600080fd5b60006107fd306108ca565b90506108088161123d565b50565b6000546001600160a01b031633146108355760405162461bcd60e51b815260040161064f90611c42565b601655565b6012546001600160a01b0316336001600160a01b0316148061086f57506013546001600160a01b0316336001600160a01b0316145b61087857600080fd5b47610808816113b7565b6000546001600160a01b031633146108ac5760405162461bcd60e51b815260040161064f90611c42565b60158054911515600160b01b0260ff60b01b19909216919091179055565b6001600160a01b0381166000908152600260205260408120546106cb906113f1565b6000546001600160a01b031633146109165760405162461bcd60e51b815260040161064f90611c42565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461098a5760405162461bcd60e51b815260040161064f90611c42565b601855565b60006106c7338484610cc7565b6000546001600160a01b031633146109c65760405162461bcd60e51b815260040161064f90611c42565b60005b82811015610a2d5781600560008686858181106109e8576109e8611c77565b90506020020160208101906109fd9190611aaf565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016109c9565b50505050565b6000546001600160a01b03163314610a5d5760405162461bcd60e51b815260040161064f90611c42565b600893909355600a91909155600955600b55565b6000546001600160a01b03163314610a9b5760405162461bcd60e51b815260040161064f90611c42565b60158054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b03163314610ae35760405162461bcd60e51b815260040161064f90611c42565b6001600160a01b038116610b485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610c055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161064f565b6001600160a01b038216610c665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161064f565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d2b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161064f565b6001600160a01b038216610d8d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161064f565b60008111610def5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161064f565b6000546001600160a01b03848116911614801590610e1b57506000546001600160a01b03838116911614155b156110fc57601554600160a01b900460ff16610eb4576000546001600160a01b03848116911614610eb45760405162461bcd60e51b815260206004820152603f60248201527f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060448201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400606482015260840161064f565b601654811115610f065760405162461bcd60e51b815260206004820152601c60248201527f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000604482015260640161064f565b6001600160a01b03831660009081526010602052604090205460ff16158015610f4857506001600160a01b03821660009081526010602052604090205460ff16155b610fa05760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460448201526265642160e81b606482015260840161064f565b6015546001600160a01b038381169116146110255760175481610fc2846108ca565b610fcc9190611ca3565b106110255760405162461bcd60e51b815260206004820152602360248201527f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073696044820152627a652160e81b606482015260840161064f565b6000611030306108ca565b6018546016549192508210159082106110495760165491505b8080156110605750601554600160a81b900460ff16155b801561107a57506015546001600160a01b03868116911614155b801561108f5750601554600160b01b900460ff165b80156110b457506001600160a01b03851660009081526005602052604090205460ff16155b80156110d957506001600160a01b03841660009081526005602052604090205460ff16155b156110f9576110e78261123d565b4780156110f7576110f7476113b7565b505b50505b6001600160a01b03831660009081526005602052604090205460019060ff168061113e57506001600160a01b03831660009081526005602052604090205460ff165b8061117057506015546001600160a01b0385811691161480159061117057506015546001600160a01b03848116911614155b1561117d575060006111f7565b6015546001600160a01b0385811691161480156111a857506014546001600160a01b03848116911614155b156111ba57600854600c55600954600d555b6015546001600160a01b0384811691161480156111e557506014546001600160a01b03858116911614155b156111f757600a54600c55600b54600d555b610a2d84848484611475565b600081848411156112275760405162461bcd60e51b815260040161064f9190611a35565b5060006112348486611cb6565b95945050505050565b6015805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061128557611285611c77565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190611cc9565b8160018151811061131557611315611c77565b6001600160a01b03928316602091820292909201015260145461133b9130911684610ba3565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac94790611374908590600090869030904290600401611ce6565b600060405180830381600087803b15801561138e57600080fd5b505af11580156113a2573d6000803e3d6000fd5b50506015805460ff60a81b1916905550505050565b6013546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106b6573d6000803e3d6000fd5b60006006548211156114585760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b606482015260840161064f565b60006114626114a3565b905061146e83826114c6565b9392505050565b8061148257611482611508565b61148d848484611536565b80610a2d57610a2d600e54600c55600f54600d55565b60008060006114b061162d565b90925090506114bf82826114c6565b9250505090565b600061146e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611669565b600c541580156115185750600d54155b1561151f57565b600c8054600e55600d8054600f5560009182905555565b60008060008060008061154887611697565b6001600160a01b038f16600090815260026020526040902054959b5093995091975095509350915061157a90876116f4565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115a99086611736565b6001600160a01b0389166000908152600260205260409020556115cb81611795565b6115d584836117df565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161161a91815260200190565b60405180910390a3505050505050505050565b6006546000908190655af3107a400061164682826114c6565b82101561166057505060065492655af3107a400092509050565b90939092509050565b6000818361168a5760405162461bcd60e51b815260040161064f9190611a35565b5060006112348486611d58565b60008060008060008060008060006116b48a600c54600d54611803565b92509250925060006116c46114a3565b905060008060006116d78e878787611858565b919e509c509a509598509396509194505050505091939550919395565b600061146e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611203565b6000806117438385611ca3565b90508381101561146e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161064f565b600061179f6114a3565b905060006117ad83836118a8565b306000908152600260205260409020549091506117ca9082611736565b30600090815260026020526040902055505050565b6006546117ec90836116f4565b6006556007546117fc9082611736565b6007555050565b600080808061181d606461181789896118a8565b906114c6565b9050600061183060646118178a896118a8565b90506000611848826118428b866116f4565b906116f4565b9992985090965090945050505050565b600080808061186788866118a8565b9050600061187588876118a8565b9050600061188388886118a8565b905060006118958261184286866116f4565b939b939a50919850919650505050505050565b6000826000036118ba575060006106cb565b60006118c68385611d7a565b9050826118d38583611d58565b1461146e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161064f565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080857600080fd5b803561196081611940565b919050565b60006020828403121561197757600080fd5b813567ffffffffffffffff81111561198e57600080fd5b8201601f8101841361199f57600080fd5b803567ffffffffffffffff8111156119b9576119b961192a565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156119e6576119e661192a565b604052918252602081840181019290810187841115611a0457600080fd5b6020850194505b83851015611a2a57611a1c85611955565b815260209485019401611a0b565b509695505050505050565b602081526000825180602084015260005b81811015611a635760208186018101516040868401015201611a46565b506000604082850101526040601f19601f83011684010191505092915050565b60008060408385031215611a9657600080fd5b8235611aa181611940565b946020939093013593505050565b600060208284031215611ac157600080fd5b813561146e81611940565b600080600060608486031215611ae157600080fd5b8335611aec81611940565b92506020840135611afc81611940565b929592945050506040919091013590565b600060208284031215611b1f57600080fd5b5035919050565b8035801515811461196057600080fd5b600060208284031215611b4857600080fd5b61146e82611b26565b600080600060408486031215611b6657600080fd5b833567ffffffffffffffff811115611b7d57600080fd5b8401601f81018613611b8e57600080fd5b803567ffffffffffffffff811115611ba557600080fd5b8660208260051b8401011115611bba57600080fd5b602091820194509250611bce908501611b26565b90509250925092565b60008060008060808587031215611bed57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611c1c57600080fd5b8235611c2781611940565b91506020830135611c3781611940565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106cb576106cb611c8d565b818103818111156106cb576106cb611c8d565b600060208284031215611cdb57600080fd5b815161146e81611940565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b81811015611d385783516001600160a01b0316835260209384019390920191600101611d11565b50506001600160a01b039590951660608401525050608001529392505050565b600082611d7557634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176106cb576106cb611c8d56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220aa3f75fcdd7b2ed2fab038bc061c4488899b9977b3caeeaa16360d9b30b8757364736f6c634300081d0033";

type ETHERConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHERConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHER__factory extends ContractFactory {
  constructor(...args: ETHERConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ETHER & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETHER__factory {
    return super.connect(runner) as ETHER__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHERInterface {
    return new Interface(_abi) as ETHERInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ETHER {
    return new Contract(address, _abi, runner) as unknown as ETHER;
  }
}
