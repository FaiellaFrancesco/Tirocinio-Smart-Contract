/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../0x604a96ba919896c1edb64686806440279e73abfc.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTOKNETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061180083398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061180083398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b611490806103706000396000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a57806395d89b411161005957806395d89b41146100f8578063a9059cbb14610279578063dd62ed3e14610299578063ea414b28146102df57600080fd5b8063715018a6146102105780638a8c523c146102275780638da5cb5b1461023c578063959cbb9d1461026457600080fd5b806318160ddd116100c657806318160ddd1461018957806323b872dd1461019e578063313ce567146101be57806370a08231146101da57600080fd5b806306fdde03146100f8578063095ea7b3146101355780630faee56f1461016557600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50604080518082018252600581526442616c6c7360d81b6020820152905161012c9190611080565b60405180910390f35b34801561014157600080fd5b506101556101503660046110e3565b6102ff565b604051901515815260200161012c565b34801561017157600080fd5b5061017b60095481565b60405190815260200161012c565b34801561019557600080fd5b5061017b610316565b3480156101aa57600080fd5b506101556101b936600461110f565b610337565b3480156101ca57600080fd5b506040516009815260200161012c565b3480156101e657600080fd5b5061017b6101f5366004611150565b6001600160a01b031660009081526001602052604090205490565b34801561021c57600080fd5b506102256103fa565b005b34801561023357600080fd5b50610225610477565b34801561024857600080fd5b506000546040516001600160a01b03909116815260200161012c565b34801561027057600080fd5b50610225610832565b34801561028557600080fd5b506101556102943660046110e3565b610895565b3480156102a557600080fd5b5061017b6102b436600461116d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156102eb57600080fd5b506102256102fa366004611150565b6108a2565b600061030c3384846108e0565b5060015b92915050565b60006103246009600a6112a3565b61033290633b9aca006112b2565b905090565b6000610344848484610a04565b3360009081526003602052604090205460ff161580156103995750600b546001600160a01b038581169116148061038657506001600160a01b03831661dead14155b8061039957506001600160a01b03841630145b156103f0576103f084336103eb85604051806060016040528060288152602001611433602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610de6565b6108e0565b5060019392505050565b6000546001600160a01b0316331461042d5760405162461bcd60e51b8152600401610424906112c9565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104a15760405162461bcd60e51b8152600401610424906112c9565b600b54600160a01b900460ff16156104fb5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610424565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561054491309190610536906009906112a3565b6103eb90633b9aca006112b2565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906112fe565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064191906112fe565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b291906112fe565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306106fa816001600160a01b031660009081526001602052604090205490565b60008061070f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610777573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061079c919061131b565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190611349565b50565b6000546001600160a01b0316331461085c5760405162461bcd60e51b8152600401610424906112c9565b6000471161086957600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561082f573d6000803e3d6000fd5b600061030c338484610a04565b3360009081526003602052604090205460ff166108be57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109425760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b0382166109a35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610424565b6001600160a01b038216610aca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b60008111610b2c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610424565b60006001600160a01b0384163014801590610b5057506001600160a01b0383163014155b15610c8857600b546001600160a01b038581169116148015610b805750600a546001600160a01b03848116911614155b8015610ba557506001600160a01b03831660009081526003602052604090205460ff16155b8015610bbf57506004546001600160a01b03848116911614155b15610bda5760088054906000610bd48361136b565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c115750600b546001600160a01b038581169116145b8015610c265750600b54600160b01b900460ff165b8015610c4057506004546001600160a01b03868116911614155b15610c86578015610c7a5760006009548211610c5c5781610c60565b6009545b9050610c78818511610c725784610e20565b81610e20565b505b47610c8447610f9a565b505b505b6001600160a01b038416600090815260016020526040902054610cab9083610fd8565b6001600160a01b038516600090815260016020526040902055610cf0610cd18383610fd8565b6001600160a01b03851660009081526001602052604090205490611021565b6001600160a01b0384166000908152600160205260409020558015610d835730600090815260016020526040902054610d299082611021565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d7a9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610de0576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610dce8585610fd8565b60405190815260200160405180910390a35b50505050565b60008184841115610e0a5760405162461bcd60e51b81526004016104249190611080565b506000610e178486611384565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610e6857610e68611397565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906112fe565b81600181518110610ef857610ef8611397565b6001600160a01b039283166020918202929092010152600a54610f1e91309116846108e0565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610f579085906000908690309042906004016113ad565b600060405180830381600087803b158015610f7157600080fd5b505af1158015610f85573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610fd4573d6000803e3d6000fd5b5050565b600061101a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610de6565b9392505050565b60008061102e838561141f565b90508381101561101a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610424565b602081526000825180602084015260005b818110156110ae5760208186018101516040868401015201611091565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461082f57600080fd5b600080604083850312156110f657600080fd5b8235611101816110ce565b946020939093013593505050565b60008060006060848603121561112457600080fd5b833561112f816110ce565b9250602084013561113f816110ce565b929592945050506040919091013590565b60006020828403121561116257600080fd5b813561101a816110ce565b6000806040838503121561118057600080fd5b823561118b816110ce565b9150602083013561119b816110ce565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156111f7578085048111156111db576111db6111a6565b60018416156111e957908102905b60019390931c9280026111c0565b935093915050565b60008261120e57506001610310565b8161121b57506000610310565b8160018114611231576002811461123b57611257565b6001915050610310565b60ff84111561124c5761124c6111a6565b50506001821b610310565b5060208310610133831016604e8410600b841016171561127a575081810a610310565b61128760001984846111bc565b806000190482111561129b5761129b6111a6565b029392505050565b600061101a60ff8416836111ff565b8082028115828204841417610310576103106111a6565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561131057600080fd5b815161101a816110ce565b60008060006060848603121561133057600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561135b57600080fd5b8151801515811461101a57600080fd5b60006001820161137d5761137d6111a6565b5060010190565b81810381811115610310576103106111a6565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156113ff5783516001600160a01b03168352602093840193909201916001016113d8565b50506001600160a01b039590951660608401525050608001529392505050565b80820180821115610310576103106111a656fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220f34426b51ed8f84e8f86ab1e338603832008fe2e6e1d3db317a87e5d4846277a64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
