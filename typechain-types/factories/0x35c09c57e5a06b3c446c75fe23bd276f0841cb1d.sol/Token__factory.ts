/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x35c09c57e5a06b3c446c75fe23bd276f0841cb1d.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b556000600c556000600d5560646009600a61003b919061032d565b61004990633b9aca00610343565b610053919061035a565b600e556000600f8190556011805461ffff60a81b191690556012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b0316835291208054909216179055606461010b6009600a61032d565b61011990633b9aca00610343565b610124906062610343565b61012e919061035a565b30600090815260016020526040902055606461014c6009600a61032d565b61015a90633b9aca00610343565b610165906002610343565b61016f919061035a565b336000908152600160205260408120919091553090600080516020611d2e83398151915260646101a16009600a61032d565b6101af90633b9aca00610343565b6101ba906062610343565b6101c4919061035a565b60405190815260200160405180910390a3336000600080516020611d2e83398151915260646101f56009600a61032d565b61020390633b9aca00610343565b61020e906002610343565b610218919061035a565b60405190815260200160405180910390a361037c565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561027f578085048111156102635761026361022e565b600184161561027157908102905b60019390931c928002610248565b935093915050565b60008261029657506001610327565b816102a357506000610327565b81600181146102b957600281146102c3576102df565b6001915050610327565b60ff8411156102d4576102d461022e565b50506001821b610327565b5060208310610133831016604e8410600b8410161715610302575081810a610327565b61030f6000198484610244565b80600019048211156103235761032361022e565b0290505b92915050565b600061033c60ff841683610287565b9392505050565b80820281158282048414176103275761032761022e565b60008261037757634e487b7160e01b600052601260045260246000fd5b500490565b6119a38061038b6000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b411461010e578063a9059cbb146102a6578063d02c9383146102c6578063dd62ed3e146102db578063f5f674311461032157600080fd5b806370a082311461021e578063715018a614610254578063751039fc146102695780638da5cb5b1461027e57600080fd5b806320800a00116100d157806320800a00146101b557806323b872dd146101cc578063313ce567146101ec5780636482c89a1461020857600080fd5b806306fdde031461010e578063095ea7b31461014c5780630faee56f1461017c57806318160ddd146101a057600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060408051808201825260068152654a706567414960d01b60208201529051610143919061145e565b60405180910390f35b34801561015857600080fd5b5061016c6101673660046114c1565b610341565b6040519015158152602001610143565b34801561018857600080fd5b50610192600e5481565b604051908152602001610143565b3480156101ac57600080fd5b50610192610358565b3480156101c157600080fd5b506101ca610379565b005b3480156101d857600080fd5b5061016c6101e73660046114ed565b6103e8565b3480156101f857600080fd5b5060405160098152602001610143565b34801561021457600080fd5b50610192600f5481565b34801561022a57600080fd5b5061019261023936600461152e565b6001600160a01b031660009081526001602052604090205490565b34801561026057600080fd5b506101ca610498565b34801561027557600080fd5b506101ca61050c565b34801561028a57600080fd5b506000546040516001600160a01b039091168152602001610143565b3480156102b257600080fd5b5061016c6102c13660046114c1565b610538565b3480156102d257600080fd5b506101ca610545565b3480156102e757600080fd5b506101926102f636600461154b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032d57600080fd5b506101ca61033c36600461152e565b6108fd565b600061034e338484610953565b5060015b92915050565b60006103666009600a611681565b61037490633b9aca00611690565b905090565b6000546001600160a01b031633146103ac5760405162461bcd60e51b81526004016103a3906116a7565b60405180910390fd5b600047116103b957600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e5573d6000803e3d6000fd5b50565b60006103f5848484610a77565b3360009081526003602052604090205460ff1615801561043757506011546001600160a01b038581169116148061043757506001600160a01b03831661dead14155b1561048e5761048e843361048985604051806060016040528060288152602001611946602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f44565b610953565b5060019392505050565b6000546001600160a01b031633146104c25760405162461bcd60e51b81526004016103a3906116a7565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105365760405162461bcd60e51b81526004016103a3906116a7565b565b600061034e338484610a77565b6000546001600160a01b0316331461056f5760405162461bcd60e51b81526004016103a3906116a7565b601154600160a01b900460ff16156105c95760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103a3565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106129030906106046009600a611681565b61048990633b9aca00611690565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068991906116dc565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f91906116dc565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561075c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078091906116dc565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d71947306107c8816001600160a01b031660009081526001602052604090205490565b6000806107dd6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610845573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061086a91906116f9565b50506011805462ff00ff60a01b1981166201000160a01b1790915560105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611727565b3360009081526003602052604090205460ff1661091957600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000908152600360205260409020805460ff19166001179055565b6001600160a01b0383166109b55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a3565b6001600160a01b038216610a165760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610adb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a3565b6001600160a01b038216610b3d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a3565b60008111610b9f5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103a3565b60006001600160a01b0384163014801590610bc357506001600160a01b0383163014155b15610de657601154600160a81b900460ff16610c0857610c056064610bff60075460085411610bf457600554610bf8565b6006545b8590610f7e565b90611007565b90505b6011546001600160a01b038581169116148015610c3357506010546001600160a01b03848116911614155b8015610c5857506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7257506004546001600160a01b03848116911614155b15610cb7574360095414610c8a576000600a55436009555b81600a6000828254610c9c9190611749565b909155505060088054906000610cb18361175c565b91905055505b6011546001600160a01b038481169116148015610cdd57506001600160a01b0384163014155b15610d3857610cea611049565b600a541080610cfb57504360095414155b610d385760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103a3565b30600090815260016020526040902054601154600160a81b900460ff16158015610d6f57506011546001600160a01b038581169116145b8015610d845750601154600160b01b900460ff165b8015610d9e57506004546001600160a01b03868116911614155b15610de4578015610dd8576000600e548211610dba5781610dbe565b600e545b9050610dd6818511610dd057846111d7565b816111d7565b505b47610de247611351565b505b505b6001600160a01b038416600090815260016020526040902054610e09908361138f565b6001600160a01b038516600090815260016020526040902055610e4e610e2f838361138f565b6001600160a01b038516600090815260016020526040902054906113d1565b6001600160a01b0384166000908152600160205260409020558015610ee15730600090815260016020526040902054610e8790826113d1565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ed89085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f3e576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f2c858561138f565b60405190815260200160405180910390a35b50505050565b60008184841115610f685760405162461bcd60e51b81526004016103a3919061145e565b506000610f758486611775565b95945050505050565b600082600003610f9057506000610352565b6000610f9c8385611690565b905082610fa98583611788565b146110005760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103a3565b9392505050565b600061100083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611430565b604080516002808252606082018352600092839291906020830190803683375050601054604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110db91906116dc565b816000815181106110ee576110ee6117c0565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611122576111226117c0565b6001600160a01b03928316602091820292909201015260105460405163d06ca61f60e01b8152600092919091169063d06ca61f9061116e9067d02ab486cedc000090869060040161181b565b600060405180830381865afa15801561118b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b3919081019061183c565b9050806001815181106111c8576111c86117c0565b60200260200101519250505090565b6011805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061121f5761121f6117c0565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129c91906116dc565b816001815181106112af576112af6117c0565b6001600160a01b0392831660209182029290920101526010546112d59130911684610953565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac9479061130e908590600090869030904290600401611909565b600060405180830381600087803b15801561132857600080fd5b505af115801561133c573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561138b573d6000803e3d6000fd5b5050565b600061100083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f44565b6000806113de8385611749565b9050838110156110005760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103a3565b600081836114515760405162461bcd60e51b81526004016103a3919061145e565b506000610f758486611788565b602081526000825180602084015260005b8181101561148c576020818601810151604086840101520161146f565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e557600080fd5b600080604083850312156114d457600080fd5b82356114df816114ac565b946020939093013593505050565b60008060006060848603121561150257600080fd5b833561150d816114ac565b9250602084013561151d816114ac565b929592945050506040919091013590565b60006020828403121561154057600080fd5b8135611000816114ac565b6000806040838503121561155e57600080fd5b8235611569816114ac565b91506020830135611579816114ac565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115d5578085048111156115b9576115b9611584565b60018416156115c757908102905b60019390931c92800261159e565b935093915050565b6000826115ec57506001610352565b816115f957506000610352565b816001811461160f576002811461161957611635565b6001915050610352565b60ff84111561162a5761162a611584565b50506001821b610352565b5060208310610133831016604e8410600b8410161715611658575081810a610352565b611665600019848461159a565b806000190482111561167957611679611584565b029392505050565b600061100060ff8416836115dd565b808202811582820484141761035257610352611584565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116ee57600080fd5b8151611000816114ac565b60008060006060848603121561170e57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173957600080fd5b8151801515811461100057600080fd5b8082018082111561035257610352611584565b60006001820161176e5761176e611584565b5060010190565b8181038181111561035257610352611584565b6000826117a557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118115781516001600160a01b03168652602095860195909101906001016117ea565b5093949350505050565b82815260406020820152600061183460408301846117d6565b949350505050565b60006020828403121561184e57600080fd5b815167ffffffffffffffff81111561186557600080fd5b8201601f8101841361187657600080fd5b805167ffffffffffffffff811115611890576118906117aa565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118bd576118bd6117aa565b6040529182526020818401810192908101878411156118db57600080fd5b6020850194505b838510156118fe578451808252602095860195909350016118e2565b509695505050505050565b85815284602082015260a06040820152600061192860a08301866117d6565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220034e02df0a048aeba3558136747d738dfc48dd78a97784e0536cd14c524f885164736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
