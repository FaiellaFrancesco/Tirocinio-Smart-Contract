/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  LORE,
  LOREInterface,
} from "../../0x336543840b64ae7326a94bc48a503d20786e4750.sol/LORE";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600d600555600d6006556000600755600060085560176009556017600a556017600b556000600c556009600a61003a9190610306565b610047906298968061031c565b600d556100566009600a610306565b610063906298968061031c565b600e556100726009600a610306565b61007f906298968061031c565b600f5561008e6009600a610306565b61009b906298968061031c565b6010556012805461ffff60a81b1916905560006013819055601481905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b031916331790556101156009600a610306565b61012390633b9aca0061031c565b33600090815260016020819052604082209290925560039061014d6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905530815260039093528183208054851660019081179091556004549091168352912080549092161790556101ab3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101e36009600a610306565b6101f190633b9aca0061031c565b60405190815260200160405180910390a3610333565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102585780850481111561023c5761023c610207565b600184161561024a57908102905b60019390931c928002610221565b935093915050565b60008261026f57506001610300565b8161027c57506000610300565b8160018114610292576002811461029c576102b8565b6001915050610300565b60ff8411156102ad576102ad610207565b50506001821b610300565b5060208310610133831016604e8410600b84101617156102db575081810a610300565b6102e8600019848461021d565b80600019048211156102fc576102fc610207565b0290505b92915050565b600061031560ff841683610260565b9392505050565b808202811582820484141761030057610300610207565b6118d8806103426000396000f3fe6080604052600436106101185760003560e01c8063751039fc116100a0578063a9059cbb11610064578063a9059cbb14610304578063bf474bed14610324578063c9567bf91461033a578063dd62ed3e1461034f578063ec1f3f631461039557600080fd5b8063751039fc1461026e5780637d1db4a5146102835780638da5cb5b146102995780638f9a55c0146102c157806395d89b41146102d757600080fd5b806323b872dd116100e757806323b872dd146101d0578063313ce567146101f057806351bc3c851461020c57806370a0823114610223578063715018a61461025957600080fd5b806306fdde0314610124578063095ea7b3146101675780630faee56f1461019757806318160ddd146101bb57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b50604080518082019091526008815267506570654c6f726560c01b60208201525b60405161015e919061148a565b60405180910390f35b34801561017357600080fd5b506101876101823660046114f0565b6103b5565b604051901515815260200161015e565b3480156101a357600080fd5b506101ad60105481565b60405190815260200161015e565b3480156101c757600080fd5b506101ad6103cc565b3480156101dc57600080fd5b506101876101eb36600461151c565b6103ed565b3480156101fc57600080fd5b506040516009815260200161015e565b34801561021857600080fd5b50610221610456565b005b34801561022f57600080fd5b506101ad61023e36600461155d565b6001600160a01b031660009081526001602052604090205490565b34801561026557600080fd5b506102216104a9565b34801561027a57600080fd5b50610221610561565b34801561028f57600080fd5b506101ad600d5481565b3480156102a557600080fd5b506000546040516001600160a01b03909116815260200161015e565b3480156102cd57600080fd5b506101ad600e5481565b3480156102e357600080fd5b506040805180820190915260048152634c4f524560e01b6020820152610151565b34801561031057600080fd5b5061018761031f3660046114f0565b610613565b34801561033057600080fd5b506101ad600f5481565b34801561034657600080fd5b50610221610620565b34801561035b57600080fd5b506101ad61036a36600461157a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103a157600080fd5b506102216103b03660046115b3565b610a18565b60006103c2338484610a5f565b5060015b92915050565b60006103da6009600a6116c9565b6103e890633b9aca006116d8565b905090565b60006103fa848484610b83565b61044c84336104478560405180606001604052806028815260200161187b602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110ed565b610a5f565b5060019392505050565b6004546001600160a01b0316336001600160a01b03161461047657600080fd5b3060009081526001602052604090205480156104955761049581611127565b4780156104a5576104a5816112a1565b5050565b6000546001600160a01b031633146104dc5760405162461bcd60e51b81526004016104d3906116ef565b60405180910390fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610516573d6000803e3d6000fd5b50600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461058b5760405162461bcd60e51b81526004016104d3906116ef565b6105976009600a6116c9565b6105a590633b9aca006116d8565b600d556105b46009600a6116c9565b6105c290633b9aca006116d8565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105f26009600a6116c9565b61060090633b9aca006116d8565b60405190815260200160405180910390a1565b60006103c2338484610b83565b6000546001600160a01b0316331461064a5760405162461bcd60e51b81526004016104d3906116ef565b601254600160a01b900460ff16156106a45760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d3565b601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556106d73033600019610a5f565b6107103061031f606461070a6062610704336001600160a01b031660009081526001602052604090205490565b906112db565b90611364565b50601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190611724565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190611724565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190611724565b601280546001600160a01b0319166001600160a01b039283161790556011546108ad91309116600019610a5f565b6011546001600160a01b031663f305d71947306108df816001600160a01b031660009081526001602052604090205490565b6000806108f46000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561095c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109819190611741565b505060125460115460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe919061176f565b506012805462ff00ff60a01b19166201000160a01b179055565b6004546001600160a01b0316336001600160a01b031614610a3857600080fd5b6007548111158015610a4c57506008548111155b610a5557600080fd5b6007819055600855565b6001600160a01b038316610ac15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d3565b6001600160a01b038216610b225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d3565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610be75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d3565b6001600160a01b038216610c495760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d3565b60008111610cab5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d3565b600080546001600160a01b03858116911614801590610cd857506000546001600160a01b03848116911614155b15610faa57610d03606461070a600954600c5411610cf857600554610cfc565b6007545b85906112db565b6012549091506001600160a01b038581169116148015610d3157506011546001600160a01b03848116911614155b8015610d5657506001600160a01b03831660009081526003602052604090205460ff16155b15610e3e57600d54821115610dad5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d3565b600e5482610dd0856001600160a01b031660009081526001602052604090205490565b610dda9190611791565b1115610e285760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d3565b600c8054906000610e38836117a4565b91905055505b6012546001600160a01b038481169116148015610e6457506001600160a01b0384163014155b15610e9157610e8e606461070a600a54600c5411610e8457600654610cfc565b60085485906112db565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610ec857506012546001600160a01b038581169116145b8015610edd5750601254600160b01b900460ff165b8015610eea5750600f5481115b8015610ef95750600b54600c54115b15610fa857601454431115610f0e5760006013555b600360135410610f605760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d3565b610f7d610f7884610f73846010546113a6565b6113a6565b611127565b478015610f8d57610f8d476112a1565b60138054906000610f9d836117a4565b909155505043601455505b505b80156110245730600090815260016020526040902054610fca90826113bb565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061101b9085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054611047908361141a565b6001600160a01b03851660009081526001602052604090205561108c61106d838361141a565b6001600160a01b038516600090815260016020526040902054906113bb565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6110d6858561141a565b60405190815260200160405180910390a350505050565b600081848411156111115760405162461bcd60e51b81526004016104d3919061148a565b50600061111e84866117bd565b95945050505050565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061116f5761116f6117d0565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190611724565b816001815181106111ff576111ff6117d0565b6001600160a01b0392831660209182029290920101526011546112259130911684610a5f565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac9479061125e9085906000908690309042906004016117e6565b600060405180830381600087803b15801561127857600080fd5b505af115801561128c573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156104a5573d6000803e3d6000fd5b6000826000036112ed575060006103c6565b60006112f983856116d8565b9050826113068583611858565b1461135d5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d3565b9392505050565b600061135d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061145c565b60008183116113b5578261135d565b50919050565b6000806113c88385611791565b90508381101561135d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d3565b600061135d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110ed565b6000818361147d5760405162461bcd60e51b81526004016104d3919061148a565b50600061111e8486611858565b602081526000825180602084015260005b818110156114b8576020818601810151604086840101520161149b565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146114ed57600080fd5b50565b6000806040838503121561150357600080fd5b823561150e816114d8565b946020939093013593505050565b60008060006060848603121561153157600080fd5b833561153c816114d8565b9250602084013561154c816114d8565b929592945050506040919091013590565b60006020828403121561156f57600080fd5b813561135d816114d8565b6000806040838503121561158d57600080fd5b8235611598816114d8565b915060208301356115a8816114d8565b809150509250929050565b6000602082840312156115c557600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561161d57808504811115611601576116016115cc565b600184161561160f57908102905b60019390931c9280026115e6565b935093915050565b600082611634575060016103c6565b81611641575060006103c6565b816001811461165757600281146116615761167d565b60019150506103c6565b60ff841115611672576116726115cc565b50506001821b6103c6565b5060208310610133831016604e8410600b84101617156116a0575081810a6103c6565b6116ad60001984846115e2565b80600019048211156116c1576116c16115cc565b029392505050565b600061135d60ff841683611625565b80820281158282048414176103c6576103c66115cc565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561173657600080fd5b815161135d816114d8565b60008060006060848603121561175657600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561178157600080fd5b8151801515811461135d57600080fd5b808201808211156103c6576103c66115cc565b6000600182016117b6576117b66115cc565b5060010190565b818103818111156103c6576103c66115cc565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156118385783516001600160a01b0316835260209384019390920191600101611811565b50506001600160a01b039590951660608401525050608001529392505050565b60008261187557634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212204b4ed85b1da5919e967b7a18e59209ccb5b5f8fd121e61bf591016bb292d146664736f6c634300081e0033";

type LOREConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LOREConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LORE__factory extends ContractFactory {
  constructor(...args: LOREConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LORE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LORE__factory {
    return super.connect(runner) as LORE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LOREInterface {
    return new Interface(_abi) as LOREInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LORE {
    return new Contract(address, _abi, runner) as unknown as LORE;
  }
}
