/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0xb58dce1cecc0de1b68f591cdcebdaf2c44f5eefa.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverStuckETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "recoverStuckToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600260055560026006556000600755600060085560056009556005600a556005600b556000600c5560646009600a61003c91906103e8565b61004a90633b9aca006103fe565b6100559060646103fe565b61005f9190610415565b600d5560646100706009600a6103e8565b61007e90633b9aca006103fe565b6100899060646103fe565b6100939190610415565b600e5560646100a46009600a6103e8565b6100b290633b9aca006103fe565b6100bd9060016103fe565b6100c79190610415565b600f5560646100d86009600a6103e8565b6100e690633b9aca006103fe565b6100f19060016103fe565b6100fb9190610415565b601055601180546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d179055600061012d3390565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546301000000600160b81b0319166301000000330217905560646101a06009600a6103e8565b6101ae90633b9aca006103fe565b6101b99060616103fe565b6101c39190610415565b3060009081526001602052604090205560646101e16009600a6103e8565b6101ef90633b9aca006103fe565b6101fa9060036103fe565b6102049190610415565b3360009081526001602081815260408084209490945560039052828220805460ff1990811683179091553080845293832080549091169091179055600080516020611d86833981519152606461025c6009600a6103e8565b61026a90633b9aca006103fe565b6102759060616103fe565b61027f9190610415565b60405190815260200160405180910390a3336000600080516020611d8683398151915260646102b06009600a6103e8565b6102be90633b9aca006103fe565b6102c99060036103fe565b6102d39190610415565b60405190815260200160405180910390a3610437565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561033a5780850481111561031e5761031e6102e9565b600184161561032c57908102905b60019390931c928002610303565b935093915050565b600082610351575060016103e2565b8161035e575060006103e2565b8160018114610374576002811461037e5761039a565b60019150506103e2565b60ff84111561038f5761038f6102e9565b50506001821b6103e2565b5060208310610133831016604e8410600b84101617156103bd575081810a6103e2565b6103ca60001984846102ff565b80600019048211156103de576103de6102e9565b0290505b92915050565b60006103f760ff841683610342565b9392505050565b80820281158282048414176103e2576103e26102e9565b60008261043257634e487b7160e01b600052601260045260246000fd5b500490565b611940806104466000396000f3fe6080604052600436106101235760003560e01c80637d1db4a5116100a0578063a9059cbb11610064578063a9059cbb14610333578063bf474bed14610353578063dd62ed3e14610369578063fb201b1d146103af578063fd3e76c4146103c457600080fd5b80637d1db4a51461029c57806381a16445146102b25780638da5cb5b146102c75780638f9a55c0146102ef57806395d89b411461030557600080fd5b8063313ce567116100e7578063313ce567146101fe57806370a082311461021a578063715018a614610250578063751039fc14610267578063798e50361461027c57600080fd5b806306fdde031461012f578063095ea7b3146101755780630faee56f146101a557806318160ddd146101c957806323b872dd146101de57600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5060408051808201909152600b81526a546172696666204b696e6760a81b60208201525b60405161016c91906114f5565b60405180910390f35b34801561018157600080fd5b50610195610190366004611558565b6103e4565b604051901515815260200161016c565b3480156101b157600080fd5b506101bb60105481565b60405190815260200161016c565b3480156101d557600080fd5b506101bb6103fb565b3480156101ea57600080fd5b506101956101f9366004611584565b61041c565b34801561020a57600080fd5b506040516009815260200161016c565b34801561022657600080fd5b506101bb6102353660046115c5565b6001600160a01b031660009081526001602052604090205490565b34801561025c57600080fd5b50610265610493565b005b34801561027357600080fd5b506102656104f7565b34801561028857600080fd5b506102656102973660046115c5565b6105a9565b3480156102a857600080fd5b506101bb600d5481565b3480156102be57600080fd5b506102656105f1565b3480156102d357600080fd5b506000546040516001600160a01b03909116815260200161016c565b3480156102fb57600080fd5b506101bb600e5481565b34801561031157600080fd5b5060408051808201909152600581526405452554d560dc1b602082015261015f565b34801561033f57600080fd5b5061019561034e366004611558565b610657565b34801561035f57600080fd5b506101bb600f5481565b34801561037557600080fd5b506101bb6103843660046115e2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103bb57600080fd5b50610265610664565b3480156103d057600080fd5b506102656103df366004611558565b610979565b60006103f1338484610ab0565b5060015b92915050565b60006104096009600a611718565b61041790633b9aca00611727565b905090565b6000610429848484610bd4565b61043384846110a3565b610489576104898433610484856040518060600160405280602881526020016118e3602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906110f7565b610ab0565b5060019392505050565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016104bd9061173e565b60405180910390fd5b6104d26009600a611718565b6104e090633b9aca00611727565b600d54146104ed57600080fd5b6104f5611131565b565b6000546001600160a01b031633146105215760405162461bcd60e51b81526004016104bd9061173e565b61052d6009600a611718565b61053b90633b9aca00611727565b600d5561054a6009600a611718565b61055890633b9aca00611727565b600e557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105886009600a611718565b61059690633b9aca00611727565b60405190815260200160405180910390a1565b3360009081526003602052604090205460ff166105c557600080fd5b600480546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b6000546001600160a01b0316331461061b5760405162461bcd60e51b81526004016104bd9061173e565b6000471161062857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610654573d6000803e3d6000fd5b50565b60006103f1338484610bd4565b6000546001600160a01b0316331461068e5760405162461bcd60e51b81526004016104bd9061173e565b60045460ff16156106e15760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104bd565b601160009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107589190611773565b6001600160a01b031663c9c6539630601160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611773565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190611773565b601280546001600160a01b0319166001600160a01b0392831617905560115461088f913091166108816009600a611718565b61048490633b9aca00611727565b6011546001600160a01b031663f305d71947306108c1816001600160a01b031660009081526001602052604090205490565b6000806108d66000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561093e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109639190611790565b50506004805462ff00ff19166201000117905550565b6000546001600160a01b031633146109a35760405162461bcd60e51b81526004016104bd9061173e565b6040516370a0823160e01b8152306004820152600090610a2790606490610a219085906001600160a01b038816906370a0823190602401602060405180830381865afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b91906117be565b906111a5565b9061122e565b90506001600160a01b03831663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa91906117d7565b50505050565b6001600160a01b038316610b125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104bd565b6001600160a01b038216610b735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104bd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610c385760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104bd565b6001600160a01b038216610c9a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104bd565b60008111610cfc5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104bd565b600080546001600160a01b03858116911614801590610d2957506000546001600160a01b03848116911614155b15610f4d576012546001600160a01b038581169116148015610d5957506011546001600160a01b03848116911614155b8015610d7e57506001600160a01b03831660009081526003602052604090205460ff16155b15610e595760045460ff16610dcd5760405162461bcd60e51b81526020600482015260156024820152742a3930b234b733903737ba1037b832b7103cb2ba1760591b60448201526064016104bd565b610dd96009600a611718565b821015610e1b5760405162461bcd60e51b815260206004820152601060248201526f105b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064016104bd565b610e416064610a21600954600c5411610e3657600554610e3a565b6007545b85906111a5565b600c80549192506000610e53836117f9565b91905055505b6012546001600160a01b0390811690841603610e9757610e946064610a21600a54600c5411610e8a57600654610e3a565b60085485906111a5565b90505b600454610100900460ff16158015610ebc57506012546001600160a01b038481169116145b8015610ed0575060045462010000900460ff165b8015610ef157506004546001600160a01b0385811663010000009092041614155b8015610f005750600b54600c54115b15610f4d5730600090815260016020526040902054600f54811115610f435760105480821015610f2d5750805b80841015610f385750825b610f4181611270565b505b610f4b6113e4565b505b8015610fc75730600090815260016020526040902054610f6d9082611426565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fbe9085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610fea9083611485565b6001600160a01b03851660009081526001602052604090205561102f6110108383611485565b6001600160a01b03851660009081526001602052604090205490611426565b6001600160a01b03841660008181526001602052604090209190915561dead14610aaa576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61108c8585611485565b60405190815260200160405180910390a350505050565b600454600090630100000090046001600160a01b031633148015906110ea57506012546001600160a01b03848116911614806110ea57506001600160a01b03821661dead14155b156103f1575060006103f5565b6000818484111561111b5760405162461bcd60e51b81526004016104bd91906114f5565b5060006111288486611812565b95945050505050565b6000546001600160a01b0316331461115b5760405162461bcd60e51b81526004016104bd9061173e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000826000036111b7575060006103f5565b60006111c38385611727565b9050826111d08583611825565b146112275760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104bd565b9392505050565b600061122783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114c7565b6004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106112b4576112b4611847565b6001600160a01b03928316602091820292909201810191909152601154604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113319190611773565b8160018151811061134457611344611847565b6001600160a01b03928316602091820292909201015260115461136a9130911684610ab0565b60115460405163791ac94760e01b81526001600160a01b039091169063791ac947906113a390859060009086903090429060040161185d565b600060405180830381600087803b1580156113bd57600080fd5b505af11580156113d1573d6000803e3d6000fd5b50506004805461ff001916905550505050565b6004546040516001600160a01b03630100000090920491909116904780156108fc02916000818181858888f19350505050158015610654573d6000803e3d6000fd5b60008061143383856118cf565b9050838110156112275760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104bd565b600061122783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110f7565b600081836114e85760405162461bcd60e51b81526004016104bd91906114f5565b5060006111288486611825565b602081526000825180602084015260005b818110156115235760208186018101516040868401015201611506565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461065457600080fd5b6000806040838503121561156b57600080fd5b823561157681611543565b946020939093013593505050565b60008060006060848603121561159957600080fd5b83356115a481611543565b925060208401356115b481611543565b929592945050506040919091013590565b6000602082840312156115d757600080fd5b813561122781611543565b600080604083850312156115f557600080fd5b823561160081611543565b9150602083013561161081611543565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561166c578085048111156116505761165061161b565b600184161561165e57908102905b60019390931c928002611635565b935093915050565b600082611683575060016103f5565b81611690575060006103f5565b81600181146116a657600281146116b0576116cc565b60019150506103f5565b60ff8411156116c1576116c161161b565b50506001821b6103f5565b5060208310610133831016604e8410600b84101617156116ef575081810a6103f5565b6116fc6000198484611631565b80600019048211156117105761171061161b565b029392505050565b600061122760ff841683611674565b80820281158282048414176103f5576103f561161b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561178557600080fd5b815161122781611543565b6000806000606084860312156117a557600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117d057600080fd5b5051919050565b6000602082840312156117e957600080fd5b8151801515811461122757600080fd5b60006001820161180b5761180b61161b565b5060010190565b818103818111156103f5576103f561161b565b60008261184257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156118af5783516001600160a01b0316835260209384019390920191600101611888565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103f5576103f561161b56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122065dcf8c8eb0baa84e1fb3cb6c23594ab06e4f7a5457c47031e0ff5e16b20457e64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
