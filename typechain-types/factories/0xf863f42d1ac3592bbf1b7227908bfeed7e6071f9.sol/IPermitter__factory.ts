/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPermitter,
  IPermitterInterface,
} from "../../0xf863f42d1ac3592bbf1b7227908bfeed7e6071f9.sol/IPermitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "permission",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPermitter__factory {
  static readonly abi = _abi;
  static createInterface(): IPermitterInterface {
    return new Interface(_abi) as IPermitterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPermitter {
    return new Contract(address, _abi, runner) as unknown as IPermitter;
  }
}
