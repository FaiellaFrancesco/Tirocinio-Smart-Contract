/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Contract,
  ContractInterface,
} from "../../0xb528f6c0c676bf936b37d3e3373cbd6892e52c19.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualsend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556015600a556015600b55600b600c556000600d556000600e556009600a6200004191906200034d565b62000051906301312d0062000365565b600f55620000626009600a6200034d565b62000072906301312d0062000365565b601055620000836009600a6200034d565b62000092906298968062000365565b601155620000a36009600a6200034d565b620000b39063011bd04062000365565b6012556014805461ffff60a81b1916905560006015819055601655348015620000db57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013d6009600a6200034d565b6200014d90633b9aca0062000365565b336000908152600160208190526040822092909255600390620001786000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d73390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002116009600a6200034d565b6200022190633b9aca0062000365565b60405190815260200160405180910390a36200037f565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028f57816000190482111562000273576200027362000238565b808516156200028157918102915b93841c939080029062000253565b509250929050565b600082620002a85750600162000347565b81620002b75750600062000347565b8160018114620002d05760028114620002db57620002fb565b600191505062000347565b60ff841115620002ef57620002ef62000238565b50506001821b62000347565b5060208310610133831016604e8410600b841016171562000320575081810a62000347565b6200032c83836200024e565b806000190482111562000343576200034362000238565b0290505b92915050565b60006200035e60ff84168362000297565b9392505050565b808202811582820484141762000347576200034762000238565b611c60806200038f6000396000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063a9059cbb1161006f578063a9059cbb146103c0578063bf474bed146103e0578063c9567bf9146103f6578063d34628cc1461040b578063dd62ed3e1461042b578063ec1f3f631461047157600080fd5b8063715018a614610312578063751039fc146103275780637d1db4a51461033c5780638da5cb5b146103525780638f9a55c01461037a57806395d89b411461039057600080fd5b8063313ce56711610108578063313ce5671461023d57806331c2d847146102595780633bbac5791461027957806351bc3c85146102b25780636fc3eaec146102c757806370a08231146102dc57600080fd5b806306fdde031461015b578063095ea7b31461019d5780630faee56f146101cd578063109daa99146101f157806318160ddd1461020857806323b872dd1461021d57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b50604080518082019091526007815266283ab9b432b2b760c91b60208201525b604051610194919061172b565b60405180910390f35b3480156101a957600080fd5b506101bd6101b836600461179f565b610491565b6040519015158152602001610194565b3480156101d957600080fd5b506101e360125481565b604051908152602001610194565b3480156101fd57600080fd5b506102066104a8565b005b34801561021457600080fd5b506101e3610518565b34801561022957600080fd5b506101bd6102383660046117cb565b610539565b34801561024957600080fd5b5060405160098152602001610194565b34801561026557600080fd5b50610206610274366004611822565b6105a2565b34801561028557600080fd5b506101bd6102943660046118e7565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102be57600080fd5b5061020661062e565b3480156102d357600080fd5b5061020661067d565b3480156102e857600080fd5b506101e36102f73660046118e7565b6001600160a01b031660009081526001602052604090205490565b34801561031e57600080fd5b506102066106aa565b34801561033357600080fd5b5061020661071e565b34801561034857600080fd5b506101e3600f5481565b34801561035e57600080fd5b506000546040516001600160a01b039091168152602001610194565b34801561038657600080fd5b506101e360105481565b34801561039c57600080fd5b50604080518082019091526007815266282aa9a422a2a760c91b6020820152610187565b3480156103cc57600080fd5b506101bd6103db36600461179f565b6107cb565b3480156103ec57600080fd5b506101e360115481565b34801561040257600080fd5b506102066107d8565b34801561041757600080fd5b50610206610426366004611822565b610b94565b34801561043757600080fd5b506101e3610446366004611904565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561047d57600080fd5b5061020661048c36600461193d565b610c1c565b600061049e338484610c63565b5060015b92915050565b6000546001600160a01b031633146104db5760405162461bcd60e51b81526004016104d290611956565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105266009600a611a85565b61053490633b9aca00611a94565b905090565b6000610546848484610d87565b610598843361059385604051806060016040528060288152602001611c03602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061138e565b610c63565b5060019392505050565b6000546001600160a01b031633146105cc5760405162461bcd60e51b81526004016104d290611956565b60005b815181101561062a576000600460008484815181106105f0576105f0611aab565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105cf565b5050565b6005546001600160a01b0316336001600160a01b03161461064e57600080fd5b30600090815260016020526040902054801561066d5761066d816113c8565b47801561062a5761062a81611542565b6005546001600160a01b0316336001600160a01b03161461069d57600080fd5b476106a781611542565b50565b6000546001600160a01b031633146106d45760405162461bcd60e51b81526004016104d290611956565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016104d290611956565b6107546009600a611a85565b61076290633b9aca00611a94565b600f556107716009600a611a85565b61077f90633b9aca00611a94565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6107af6009600a611a85565b6107bd90633b9aca00611a94565b60405190815260200161050e565b600061049e338484610d87565b6000546001600160a01b031633146108025760405162461bcd60e51b81526004016104d290611956565b601454600160a01b900460ff161561085c5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104d2565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556108a59030906108976009600a611a85565b61059390633b9aca00611a94565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091c9190611ac1565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611ac1565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a139190611ac1565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610a5b816001600160a01b031660009081526001602052604090205490565b600080610a706000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610ad8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610afd9190611ade565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7a9190611b0c565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bbe5760405162461bcd60e51b81526004016104d290611956565b60005b815181101561062a57600160046000848481518110610be257610be2611aab565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc1565b6005546001600160a01b0316336001600160a01b031614610c3c57600080fd5b6008548111158015610c5057506009548111155b610c5957600080fd5b6008819055600955565b6001600160a01b038316610cc55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d2565b6001600160a01b038216610d265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d2565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610deb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d2565b6001600160a01b038216610e4d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d2565b60008111610eaf5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104d2565b600080546001600160a01b03858116911614801590610edc57506000546001600160a01b03848116911614155b1561124b576001600160a01b03841660009081526004602052604090205460ff16158015610f2357506001600160a01b03831660009081526004602052604090205460ff16155b610f2c57600080fd5b600e54600003610f6557610f626064610f5c600a54600e5411610f5157600654610f55565b6008545b859061157c565b90611605565b90505b600e5415610f8a57610f876064610f5c600d548561157c90919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fb557506013546001600160a01b03848116911614155b8015610fda57506001600160a01b03831660009081526003602052604090205460ff16155b156110df57600f548211156110315760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104d2565b60105482611054856001600160a01b031660009081526001602052604090205490565b61105e9190611b2e565b11156110ac5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104d2565b6110c76064610f5c600a54600e5411610f5157600654610f55565b600e805491925060006110d983611b41565b91905055505b6014546001600160a01b03848116911614801561110557506001600160a01b0384163014155b156111325761112f6064610f5c600b54600e541161112557600754610f55565b600954859061157c565b90505b30600090815260016020526040902054601454600160a81b900460ff1615801561116957506014546001600160a01b038581169116145b801561117e5750601454600160b01b900460ff165b801561118b575060115481115b801561119a5750600c54600e54115b15611249576016544311156111af5760006015555b6003601554106112015760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016104d2565b61121e6112198461121484601254611647565b611647565b6113c8565b47801561122e5761122e47611542565b6015805490600061123e83611b41565b909155505043601655505b505b80156112c5573060009081526001602052604090205461126b908261165c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bc9085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546112e890836116bb565b6001600160a01b03851660009081526001602052604090205561132d61130e83836116bb565b6001600160a01b0385166000908152600160205260409020549061165c565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61137785856116bb565b60405190815260200160405180910390a350505050565b600081848411156113b25760405162461bcd60e51b81526004016104d2919061172b565b5060006113bf8486611b5a565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061141057611410611aab565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148d9190611ac1565b816001815181106114a0576114a0611aab565b6001600160a01b0392831660209182029290920101526013546114c69130911684610c63565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906114ff908590600090869030904290600401611b6d565b600060405180830381600087803b15801561151957600080fd5b505af115801561152d573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561062a573d6000803e3d6000fd5b60008260000361158e575060006104a2565b600061159a8385611a94565b9050826115a78583611be0565b146115fe5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d2565b9392505050565b60006115fe83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116fd565b600081831161165657826115fe565b50919050565b6000806116698385611b2e565b9050838110156115fe5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d2565b60006115fe83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138e565b6000818361171e5760405162461bcd60e51b81526004016104d2919061172b565b5060006113bf8486611be0565b60006020808352835180602085015260005b818110156117595785810183015185820160400152820161173d565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146106a757600080fd5b803561179a8161177a565b919050565b600080604083850312156117b257600080fd5b82356117bd8161177a565b946020939093013593505050565b6000806000606084860312156117e057600080fd5b83356117eb8161177a565b925060208401356117fb8161177a565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561183557600080fd5b823567ffffffffffffffff8082111561184d57600080fd5b818501915085601f83011261186157600080fd5b8135818111156118735761187361180c565b8060051b604051601f19603f830116810181811085821117156118985761189861180c565b6040529182528482019250838101850191888311156118b657600080fd5b938501935b828510156118db576118cc8561178f565b845293850193928501926118bb565b98975050505050505050565b6000602082840312156118f957600080fd5b81356115fe8161177a565b6000806040838503121561191757600080fd5b82356119228161177a565b915060208301356119328161177a565b809150509250929050565b60006020828403121561194f57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156119dc5781600019048211156119c2576119c261198b565b808516156119cf57918102915b93841c93908002906119a6565b509250929050565b6000826119f3575060016104a2565b81611a00575060006104a2565b8160018114611a165760028114611a2057611a3c565b60019150506104a2565b60ff841115611a3157611a3161198b565b50506001821b6104a2565b5060208310610133831016604e8410600b8410161715611a5f575081810a6104a2565b611a6983836119a1565b8060001904821115611a7d57611a7d61198b565b029392505050565b60006115fe60ff8416836119e4565b80820281158282048414176104a2576104a261198b565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ad357600080fd5b81516115fe8161177a565b600080600060608486031215611af357600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b1e57600080fd5b815180151581146115fe57600080fd5b808201808211156104a2576104a261198b565b600060018201611b5357611b5361198b565b5060010190565b818103818111156104a2576104a261198b565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611bbf5784516001600160a01b031683529383019391830191600101611b9a565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611bfd57634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212205039c90fe348adacbffa09591504952fd0ef600a1bf0a3e63192db9edddf10f964736f6c63430008170033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
