/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x95f4764377ce79c2399627e172ec8727a1a24010.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600555600a6006556000600755600760085560006009556000600b556009600a610030919061031a565b61003e90633b9aca00610330565b600c55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b03166000600080516020611d17833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a3306000600080516020611d1783398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b61199f806103786000396000f3fe6080604052600436106100f75760003560e01c8063715018a61161008a57806395d89b411161005957806395d89b41146102af578063a9059cbb146102df578063dd62ed3e146102ff578063fb201b1d1461034557600080fd5b8063715018a61461023d578063751039fc14610252578063798e5036146102675780638da5cb5b1461028757600080fd5b806320800a00116100c657806320800a00146101b457806323b872dd146101cb578063313ce567146101eb57806370a082311461020757600080fd5b806306fdde0314610103578063095ea7b31461014b5780630faee56f1461017b57806318160ddd1461019f57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060408051808201909152600d81526c04d4f474e414c44205452554d5609c1b60208201525b604051610142919061145a565b60405180910390f35b34801561015757600080fd5b5061016b6101663660046114bd565b61035a565b6040519015158152602001610142565b34801561018757600080fd5b50610191600c5481565b604051908152602001610142565b3480156101ab57600080fd5b50610191610371565b3480156101c057600080fd5b506101c9610392565b005b3480156101d757600080fd5b5061016b6101e63660046114e9565b610401565b3480156101f757600080fd5b5060405160098152602001610142565b34801561021357600080fd5b5061019161022236600461152a565b6001600160a01b031660009081526001602052604090205490565b34801561024957600080fd5b506101c96104ac565b34801561025e57600080fd5b506101c9610520565b34801561027357600080fd5b506101c961028236600461152a565b61054c565b34801561029357600080fd5b506000546040516001600160a01b039091168152602001610142565b3480156102bb57600080fd5b506040805180820190915260078152661353d1d390531160ca1b6020820152610135565b3480156102eb57600080fd5b5061016b6102fa3660046114bd565b61058a565b34801561030b57600080fd5b5061019161031a366004611547565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561035157600080fd5b506101c9610597565b600061036733848461094f565b5060015b92915050565b600061037f6009600a61167d565b61038d90633b9aca0061168c565b905090565b6000546001600160a01b031633146103c55760405162461bcd60e51b81526004016103bc906116a3565b60405180910390fd5b600047116103d257600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103fe573d6000803e3d6000fd5b50565b600061040e848484610a73565b6004546001600160a01b0316331480159061044b5750600e546001600160a01b038581169116148061044b57506001600160a01b03831661dead14155b156104a2576104a2843361049d85604051806060016040528060288152602001611942602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f40565b61094f565b5060019392505050565b6000546001600160a01b031633146104d65760405162461bcd60e51b81526004016103bc906116a3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461054a5760405162461bcd60e51b81526004016103bc906116a3565b565b3360009081526003602052604090205460ff1661056857600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610367338484610a73565b6000546001600160a01b031633146105c15760405162461bcd60e51b81526004016103bc906116a3565b600e54600160a01b900460ff161561061b5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103bc565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106649030906106566009600a61167d565b61049d90633b9aca0061168c565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db91906116d8565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076191906116d8565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d291906116d8565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d719473061081a816001600160a01b031660009081526001602052604090205490565b60008061082f6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610897573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108bc91906116f5565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561092b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190611723565b6001600160a01b0383166109b15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103bc565b6001600160a01b038216610a125760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103bc565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ad75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103bc565b6001600160a01b038216610b395760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103bc565b60008111610b9b5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103bc565b60006001600160a01b0384163014801590610bbf57506001600160a01b0383163014155b15610de257600e54600160a81b900460ff16610c0457610c016064610bfb60085460095411610bf057600654610bf4565b6007545b8590610f7a565b90611003565b90505b600e546001600160a01b038581169116148015610c2f5750600d546001600160a01b03848116911614155b8015610c5457506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6e57506004546001600160a01b03848116911614155b15610cb35743600a5414610c86576000600b5543600a555b81600b6000828254610c989190611745565b909155505060098054906000610cad83611758565b91905055505b600e546001600160a01b038481169116148015610cd957506001600160a01b0384163014155b15610d3457610ce6611045565b600b541080610cf7575043600a5414155b610d345760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103bc565b30600090815260016020526040902054600e54600160a81b900460ff16158015610d6b5750600e546001600160a01b038581169116145b8015610d805750600e54600160b01b900460ff165b8015610d9a57506004546001600160a01b03868116911614155b15610de0578015610dd4576000600c548211610db65781610dba565b600c545b9050610dd2818511610dcc57846111d3565b816111d3565b505b47610dde4761134d565b505b505b6001600160a01b038416600090815260016020526040902054610e05908361138b565b6001600160a01b038516600090815260016020526040902055610e4a610e2b838361138b565b6001600160a01b038516600090815260016020526040902054906113cd565b6001600160a01b0384166000908152600160205260409020558015610edd5730600090815260016020526040902054610e8390826113cd565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ed49085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f3a576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f28858561138b565b60405190815260200160405180910390a35b50505050565b60008184841115610f645760405162461bcd60e51b81526004016103bc919061145a565b506000610f718486611771565b95945050505050565b600082600003610f8c5750600061036b565b6000610f98838561168c565b905082610fa58583611784565b14610ffc5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103bc565b9392505050565b6000610ffc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061142c565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d791906116d8565b816000815181106110ea576110ea6117bc565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061111e5761111e6117bc565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061116a906729a2241af62c0000908690600401611817565b600060405180830381865afa158015611187573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111af9190810190611838565b9050806001815181106111c4576111c46117bc565b60200260200101519250505090565b600e805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061121b5761121b6117bc565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611274573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129891906116d8565b816001815181106112ab576112ab6117bc565b6001600160a01b039283166020918202929092010152600d546112d1913091168461094f565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061130a908590600090869030904290600401611905565b600060405180830381600087803b15801561132457600080fd5b505af1158015611338573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611387573d6000803e3d6000fd5b5050565b6000610ffc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f40565b6000806113da8385611745565b905083811015610ffc5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103bc565b6000818361144d5760405162461bcd60e51b81526004016103bc919061145a565b506000610f718486611784565b602081526000825180602084015260005b81811015611488576020818601810151604086840101520161146b565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103fe57600080fd5b600080604083850312156114d057600080fd5b82356114db816114a8565b946020939093013593505050565b6000806000606084860312156114fe57600080fd5b8335611509816114a8565b92506020840135611519816114a8565b929592945050506040919091013590565b60006020828403121561153c57600080fd5b8135610ffc816114a8565b6000806040838503121561155a57600080fd5b8235611565816114a8565b91506020830135611575816114a8565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115d1578085048111156115b5576115b5611580565b60018416156115c357908102905b60019390931c92800261159a565b935093915050565b6000826115e85750600161036b565b816115f55750600061036b565b816001811461160b576002811461161557611631565b600191505061036b565b60ff84111561162657611626611580565b50506001821b61036b565b5060208310610133831016604e8410600b8410161715611654575081810a61036b565b6116616000198484611596565b806000190482111561167557611675611580565b029392505050565b6000610ffc60ff8416836115d9565b808202811582820484141761036b5761036b611580565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116ea57600080fd5b8151610ffc816114a8565b60008060006060848603121561170a57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173557600080fd5b81518015158114610ffc57600080fd5b8082018082111561036b5761036b611580565b60006001820161176a5761176a611580565b5060010190565b8181038181111561036b5761036b611580565b6000826117a157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561180d5781516001600160a01b03168652602095860195909101906001016117e6565b5093949350505050565b82815260406020820152600061183060408301846117d2565b949350505050565b60006020828403121561184a57600080fd5b815167ffffffffffffffff81111561186157600080fd5b8201601f8101841361187257600080fd5b805167ffffffffffffffff81111561188c5761188c6117a6565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118b9576118b96117a6565b6040529182526020818401810192908101878411156118d757600080fd5b6020850194505b838510156118fa578451808252602095860195909350016118de565b509695505050505050565b85815284602082015260a06040820152600061192460a08301866117d2565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220eba38cc675084d0a601b340fa4f1f27ded88354dd46dec55b94cff1f7df143a864736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
