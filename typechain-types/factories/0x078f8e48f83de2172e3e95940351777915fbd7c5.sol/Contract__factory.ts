/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Contract,
  ContractInterface,
} from "../../0x078f8e48f83de2172e3e95940351777915fbd7c5.sol/Contract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600b600455600b60055560006006556000600755601660085560166009556021600a556000600b5560646009600a6200003e9190620003e2565b6200004f906461f313f880620003fa565b6200005b919062000414565b62000068906002620003fa565b600c5560646200007b6009600a620003e2565b6200008c906461f313f880620003fa565b62000098919062000414565b620000a5906002620003fa565b600d556103e8620000b96009600a620003e2565b620000ca906461f313f880620003fa565b620000d6919062000414565b620000e3906005620003fa565b600e556103e8620000f76009600a620003e2565b62000108906461f313f880620003fa565b62000114919062000414565b62000121906005620003fa565b600f556012805462ffffff60a01b191690553480156200014057600080fd5b506200014c336200027d565b601280546001600160a01b03191673d879439e9abae4a9f155077ce3e6f685e40ab5d2179055620001806009600a620003e2565b62000191906461f313f880620003fa565b336000908152600160208190526040822092909255600390620001bc6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff1996871617905560125490911681526003909252808220805484166001908117909155308352912080549092161790556200021b3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002556009600a620003e2565b62000266906461f313f880620003fa565b60405190815260200160405180910390a362000437565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000324578160001904821115620003085762000308620002cd565b808516156200031657918102915b93841c9390800290620002e8565b509250929050565b6000826200033d57506001620003dc565b816200034c57506000620003dc565b8160018114620003655760028114620003705762000390565b6001915050620003dc565b60ff841115620003845762000384620002cd565b50506001821b620003dc565b5060208310610133831016604e8410600b8410161715620003b5575081810a620003dc565b620003c18383620002e3565b8060001904821115620003d857620003d8620002cd565b0290505b92915050565b6000620003f360ff8416836200032c565b9392505050565b8082028115828204841417620003dc57620003dc620002cd565b6000826200043257634e487b7160e01b600052601260045260246000fd5b500490565b61199c80620004476000396000f3fe6080604052600436106101235760003560e01c80637d1db4a5116100a0578063bf474bed11610064578063bf474bed14610334578063c9567bf91461034a578063dd62ed3e1461035f578063f2fde38b146103a5578063f4293890146103c557600080fd5b80637d1db4a5146102905780638da5cb5b146102a65780638f9a55c0146102ce57806395d89b41146102e4578063a9059cbb1461031457600080fd5b8063313ce567116100e7578063313ce567146101fd57806351bc3c851461021957806370a0823114610230578063715018a614610266578063751039fc1461027b57600080fd5b806306fdde031461012f578063095ea7b3146101745780630faee56f146101a457806318160ddd146101c857806323b872dd146101dd57600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5060408051808201909152600a81526920b733b2b61022b637b760b11b60208201525b60405161016b919061156b565b60405180910390f35b34801561018057600080fd5b5061019461018f3660046115cf565b6103da565b604051901515815260200161016b565b3480156101b057600080fd5b506101ba600f5481565b60405190815260200161016b565b3480156101d457600080fd5b506101ba6103f1565b3480156101e957600080fd5b506101946101f83660046115fb565b610413565b34801561020957600080fd5b506040516009815260200161016b565b34801561022557600080fd5b5061022e61047d565b005b34801561023c57600080fd5b506101ba61024b36600461163c565b6001600160a01b031660009081526001602052604090205490565b34801561027257600080fd5b5061022e6104cc565b34801561028757600080fd5b5061022e61050b565b34801561029c57600080fd5b506101ba600c5481565b3480156102b257600080fd5b506000546040516001600160a01b03909116815260200161016b565b3480156102da57600080fd5b506101ba600d5481565b3480156102f057600080fd5b5060408051808201909152600781526620a723a2a627a760c91b602082015261015e565b34801561032057600080fd5b5061019461032f3660046115cf565b6105c0565b34801561034057600080fd5b506101ba600e5481565b34801561035657600080fd5b5061022e6105cd565b34801561036b57600080fd5b506101ba61037a366004611659565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156103b157600080fd5b5061022e6103c036600461163c565b61098a565b3480156103d157600080fd5b5061022e610a25565b60006103e7338484610a4b565b5060015b92915050565b60006103ff6009600a61178c565b61040e906461f313f88061179b565b905090565b6000610420848484610b6f565b610472843361046d8560405180606001604052806028815260200161193f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611092565b610a4b565b5060015b9392505050565b3360009081526003602052604090205460ff1661049957600080fd5b3060009081526001602052604090205480156104b8576104b8816110cc565b4780156104c8576104c881611246565b5050565b6000546001600160a01b031633146104ff5760405162461bcd60e51b81526004016104f6906117b2565b60405180910390fd5b6105096000611280565b565b6000546001600160a01b031633146105355760405162461bcd60e51b81526004016104f6906117b2565b6105416009600a61178c565b610550906461f313f88061179b565b600c5561055f6009600a61178c565b61056e906461f313f88061179b565b600d557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61059e6009600a61178c565b6105ad906461f313f88061179b565b60405190815260200160405180910390a1565b60006103e7338484610b6f565b6000546001600160a01b031633146105f75760405162461bcd60e51b81526004016104f6906117b2565b601254600160a01b900460ff16156106515760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016104f6565b601080546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561069b90309061068c6009600a61178c565b61046d906461f313f88061179b565b601060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071291906117e7565b6001600160a01b031663c9c6539630601060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079891906117e7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080991906117e7565b601180546001600160a01b039283166001600160a01b03199091161790556010541663f305d7194730610851816001600160a01b031660009081526001602052604090205490565b6000806108666000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108ce573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108f39190611804565b505060115460105460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109709190611832565b506012805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b031633146109b45760405162461bcd60e51b81526004016104f6906117b2565b6001600160a01b038116610a195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f6565b610a2281611280565b50565b3360009081526003602052604090205460ff16610a4157600080fd5b47610a2281611246565b6001600160a01b038316610aad5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f6565b6001600160a01b038216610b0e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bd35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f6565b6001600160a01b038216610c355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f6565b60008111610c975760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016104f6565b600080546001600160a01b03858116911614801590610cc457506000546001600160a01b03848116911614155b15610f4f576000600b54118015610ce45750601254600160b01b900460ff165b15610cf757610cf48285856112d0565b90505b610d236064610d1d600854600b5411610d1257600454610d16565b6006545b85906113c3565b90611445565b6011549091506001600160a01b038581169116148015610d5157506010546001600160a01b03848116911614155b8015610d7657506001600160a01b03831660009081526003602052604090205460ff16155b15610e5e57600c54821115610dcd5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e0000000000000060448201526064016104f6565b600d5482610df0856001600160a01b031660009081526001602052604090205490565b610dfa9190611854565b1115610e485760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016104f6565b600b8054906000610e5883611867565b91905055505b6011546001600160a01b038481169116148015610e8457506001600160a01b0384163014155b15610eb157610eae6064610d1d600954600b5411610ea457600554610d16565b60075485906113c3565b90505b30600090815260016020526040902054601254600160a81b900460ff16158015610ee857506011546001600160a01b038581169116145b8015610efd5750601254600160b01b900460ff165b8015610f0a5750600e5481115b8015610f195750600a54600b54115b15610f4d57610f3b610f3684610f3184600f54611487565b611487565b6110cc565b478015610f4b57610f4b47611246565b505b505b8015610fc95730600090815260016020526040902054610f6f908261149c565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610fc09085815260200190565b60405180910390a35b6001600160a01b038416600090815260016020526040902054610fec90836114fb565b6001600160a01b03851660009081526001602052604090205561103161101283836114fb565b6001600160a01b0385166000908152600160205260409020549061149c565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61107b85856114fb565b60405190815260200160405180910390a350505050565b600081848411156110b65760405162461bcd60e51b81526004016104f6919061156b565b5060006110c38486611880565b95945050505050565b6012805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061111457611114611893565b6001600160a01b03928316602091820292909201810191909152601054604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561116d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119191906117e7565b816001815181106111a4576111a4611893565b6001600160a01b0392831660209182029290920101526010546111ca9130911684610a4b565b60105460405163791ac94760e01b81526001600160a01b039091169063791ac947906112039085906000908690309042906004016118a9565b600060405180830381600087803b15801561121d57600080fd5b505af1158015611231573d6000803e3d6000fd5b50506012805460ff60a81b1916905550505050565b6012546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156104c8573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b03831630148015906112eb5750333b15155b801561130657503360009081526003602052604090205460ff165b801561132657506011546001600160a01b0316336001600160a01b031614155b1561135757506001600160a01b03821660009081526002602090815260408083203384529091528120849055610476565b813b1515801561137557506011546001600160a01b03838116911614155b801561139057503360009081526003602052604090205460ff165b156113b9576001600160a01b0382166000908152600360205260409020805460ff191660011790555b5060009392505050565b6000826000036113d5575060006103eb565b60006113e1838561179b565b9050826113ee858361191c565b146104765760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104f6565b600061047683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061153d565b60008183116114965782610476565b50919050565b6000806114a98385611854565b9050838110156104765760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104f6565b600061047683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611092565b6000818361155e5760405162461bcd60e51b81526004016104f6919061156b565b5060006110c3848661191c565b60006020808352835180602085015260005b818110156115995785810183015185820160400152820161157d565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610a2257600080fd5b600080604083850312156115e257600080fd5b82356115ed816115ba565b946020939093013593505050565b60008060006060848603121561161057600080fd5b833561161b816115ba565b9250602084013561162b816115ba565b929592945050506040919091013590565b60006020828403121561164e57600080fd5b8135610476816115ba565b6000806040838503121561166c57600080fd5b8235611677816115ba565b91506020830135611687816115ba565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156116e35781600019048211156116c9576116c9611692565b808516156116d657918102915b93841c93908002906116ad565b509250929050565b6000826116fa575060016103eb565b81611707575060006103eb565b816001811461171d576002811461172757611743565b60019150506103eb565b60ff84111561173857611738611692565b50506001821b6103eb565b5060208310610133831016604e8410600b8410161715611766575081810a6103eb565b61177083836116a8565b806000190482111561178457611784611692565b029392505050565b600061047660ff8416836116eb565b80820281158282048414176103eb576103eb611692565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156117f957600080fd5b8151610476816115ba565b60008060006060848603121561181957600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561184457600080fd5b8151801515811461047657600080fd5b808201808211156103eb576103eb611692565b60006001820161187957611879611692565b5060010190565b818103818111156103eb576103eb611692565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156118fb5784516001600160a01b0316835293830193918301916001016118d6565b50506001600160a01b03969096166060850152505050608001529392505050565b60008261193957634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d4da39a1522ee9c82aa1151d94451087ffbbc3a9cba33ef54efafa0dad54f90564736f6c63430008160033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Contract__factory {
    return super.connect(runner) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new Interface(_abi) as ContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Contract {
    return new Contract(address, _abi, runner) as unknown as Contract;
  }
}
