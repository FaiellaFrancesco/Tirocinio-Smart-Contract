/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x5c10f170883a0b87b0a4fd4ee1b76c1f6c6ad0b0.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalTokenTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initTokenDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokenETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b611853806102c66000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102ae578063a9059cbb146102da578063ba18ed0d146102fa578063dd62ed3e14610310578063ea414b281461035657600080fd5b806370a0823114610226578063715018a61461025c5780638a8c523c146102715780638da5cb5b1461028657600080fd5b806318160ddd116100d157806318160ddd146101bf57806323b872dd146101d4578063313ce567146101f45780635ce74cbf1461021057600080fd5b8063022321f21461010e57806306fdde0314610125578063095ea7b31461016b5780630faee56f1461019b57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123610376565b005b34801561013157600080fd5b5060408051808201909152600b81526a16515149d4c8149255905360aa1b60208201525b6040516101629190611330565b60405180910390f35b34801561017757600080fd5b5061018b610186366004611393565b6103e5565b6040519015158152602001610162565b3480156101a757600080fd5b506101b1600b5481565b604051908152602001610162565b3480156101cb57600080fd5b506101b16103fc565b3480156101e057600080fd5b5061018b6101ef3660046113bf565b61041d565b34801561020057600080fd5b5060405160098152602001610162565b34801561021c57600080fd5b506101b1600d5481565b34801561023257600080fd5b506101b1610241366004611400565b6001600160a01b031660009081526001602052604090205490565b34801561026857600080fd5b506101236104e0565b34801561027d57600080fd5b50610123610554565b34801561029257600080fd5b506000546040516001600160a01b039091168152602001610162565b3480156102ba57600080fd5b5060408051808201909152600381526241524b60e81b6020820152610155565b3480156102e657600080fd5b5061018b6102f5366004611393565b61090c565b34801561030657600080fd5b506101b1600c5481565b34801561031c57600080fd5b506101b161032b36600461141d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036257600080fd5b50610123610371366004611400565b610919565b6000546001600160a01b031633146103a95760405162461bcd60e51b81526004016103a090611456565b60405180910390fd5b600047116103b657600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e2573d6000803e3d6000fd5b50565b60006103f2338484610957565b5060015b92915050565b600061040a6009600a611588565b610418906305f5e100611597565b905090565b600061042a848484610a7b565b3360009081526003602052604090205460ff1615801561047f5750600f546001600160a01b038581169116148061046c57506001600160a01b03831661dead14155b8061047f57506001600160a01b03841630145b156104d6576104d684336104d1856040518060600160405280602881526020016117f6602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f08565b610957565b5060019392505050565b6000546001600160a01b0316331461050a5760405162461bcd60e51b81526004016103a090611456565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461057e5760405162461bcd60e51b81526004016103a090611456565b600f54600160a01b900460ff16156105d85760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103a0565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106219030906106136009600a611588565b6104d1906305f5e100611597565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069891906115ae565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e91906115ae565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f91906115ae565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107d7816001600160a01b031660009081526001602052604090205490565b6000806107ec6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610854573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087991906115cb565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e291906115f9565b60006103f2338484610a7b565b3360009081526003602052604090205460ff1661093557600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109b95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a0565b6001600160a01b038216610a1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610adf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a0565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a0565b60008111610ba35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103a0565b60006001600160a01b0384163014801590610bc757506001600160a01b0383163014155b15610daa57600f546001600160a01b038581169116148015610bf75750600e546001600160a01b03848116911614155b8015610c1c57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c3657506004546001600160a01b03848116911614155b15610c7b574360095414610c4e576000600a55436009555b81600a6000828254610c60919061161b565b909155505060088054906000610c758361162e565b91905055505b600f546001600160a01b038481169116148015610ca157506001600160a01b0384163014155b15610cfc57610cae610f42565b600a541080610cbf57504360095414155b610cfc5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103a0565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d335750600f546001600160a01b038581169116145b8015610d485750600f54600160b01b900460ff165b8015610d6257506004546001600160a01b03868116911614155b15610da8578015610d9c576000600b548211610d7e5781610d82565b600b545b9050610d9a818511610d9457846110d0565b816110d0565b505b47610da64761124a565b505b505b6001600160a01b038416600090815260016020526040902054610dcd9083611288565b6001600160a01b038516600090815260016020526040902055610e12610df38383611288565b6001600160a01b038516600090815260016020526040902054906112d1565b6001600160a01b0384166000908152600160205260409020558015610ea55730600090815260016020526040902054610e4b90826112d1565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e9c9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f02576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ef08585611288565b60405190815260200160405180910390a35b50505050565b60008184841115610f2c5760405162461bcd60e51b81526004016103a09190611330565b506000610f398486611647565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd491906115ae565b81600081518110610fe757610fe7611670565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061101b5761101b611670565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611067906729a2241af62c00009086906004016116cb565b600060405180830381865afa158015611084573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ac91908101906116ec565b9050806001815181106110c1576110c1611670565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061111857611118611670565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119591906115ae565b816001815181106111a8576111a8611670565b6001600160a01b039283166020918202929092010152600e546111ce9130911684610957565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112079085906000908690309042906004016117b9565b600060405180830381600087803b15801561122157600080fd5b505af1158015611235573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611284573d6000803e3d6000fd5b5050565b60006112ca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f08565b9392505050565b6000806112de838561161b565b9050838110156112ca5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103a0565b602081526000825180602084015260005b8181101561135e5760208186018101516040868401015201611341565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e257600080fd5b600080604083850312156113a657600080fd5b82356113b18161137e565b946020939093013593505050565b6000806000606084860312156113d457600080fd5b83356113df8161137e565b925060208401356113ef8161137e565b929592945050506040919091013590565b60006020828403121561141257600080fd5b81356112ca8161137e565b6000806040838503121561143057600080fd5b823561143b8161137e565b9150602083013561144b8161137e565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114dc578085048111156114c0576114c061148b565b60018416156114ce57908102905b60019390931c9280026114a5565b935093915050565b6000826114f3575060016103f6565b81611500575060006103f6565b816001811461151657600281146115205761153c565b60019150506103f6565b60ff8411156115315761153161148b565b50506001821b6103f6565b5060208310610133831016604e8410600b841016171561155f575081810a6103f6565b61156c60001984846114a1565b80600019048211156115805761158061148b565b029392505050565b60006112ca60ff8416836114e4565b80820281158282048414176103f6576103f661148b565b6000602082840312156115c057600080fd5b81516112ca8161137e565b6000806000606084860312156115e057600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561160b57600080fd5b815180151581146112ca57600080fd5b808201808211156103f6576103f661148b565b6000600182016116405761164061148b565b5060010190565b818103818111156103f6576103f661148b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116c15781516001600160a01b031686526020958601959091019060010161169a565b5093949350505050565b8281526040602082015260006116e46040830184611686565b949350505050565b6000602082840312156116fe57600080fd5b815167ffffffffffffffff81111561171557600080fd5b8201601f8101841361172657600080fd5b805167ffffffffffffffff8111156117405761174061165a565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561176d5761176d61165a565b60405291825260208184018101929081018784111561178b57600080fd5b6020850194505b838510156117ae57845180825260209586019590935001611792565b509695505050505050565b85815284602082015260a0604082015260006117d860a0830186611686565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220dd3ee3f69c355bf55e57fd999ef1463c7c6d591c8735ecd21ca4646a4846bfc764736f6c634300081d0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
