/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Gork,
  GorkInterface,
} from "../../0x4745939d6dd52520ac24a20880c692df209a07dc.sol/Gork";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_gorkThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gorkamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119a58061029c6000396000f3fe60806040526004361061010d5760003560e01c8063751039fc1161009557806395d89b411161006457806395d89b4114610119578063a9059cbb146102c4578063d3c0140a146102e4578063dd62ed3e146102fa578063ea414b281461034057600080fd5b8063751039fc1461025c5780638147a26d146102715780638a8c523c146102875780638da5cb5b1461029c57600080fd5b806320800a00116100dc57806320800a00146101be57806323b872dd146101d5578063313ce567146101f557806370a0823114610211578063715018a61461024757600080fd5b806306fdde0314610119578063095ea7b3146101555780630faee56f1461018557806318160ddd146101a957600080fd5b3661011457005b600080fd5b34801561012557600080fd5b506040805180820182526004815263676f726b60e01b6020820152905161014c9190611460565b60405180910390f35b34801561016157600080fd5b506101756101703660046114c3565b610360565b604051901515815260200161014c565b34801561019157600080fd5b5061019b600c5481565b60405190815260200161014c565b3480156101b557600080fd5b5061019b610377565b3480156101ca57600080fd5b506101d3610398565b005b3480156101e157600080fd5b506101756101f03660046114ef565b610407565b34801561020157600080fd5b506040516009815260200161014c565b34801561021d57600080fd5b5061019b61022c366004611530565b6001600160a01b031660009081526001602052604090205490565b34801561025357600080fd5b506101d36104b2565b34801561026857600080fd5b506101d3610526565b34801561027d57600080fd5b5061019b600d5481565b34801561029357600080fd5b506101d3610552565b3480156102a857600080fd5b506000546040516001600160a01b03909116815260200161014c565b3480156102d057600080fd5b506101756102df3660046114c3565b61090a565b3480156102f057600080fd5b5061019b600e5481565b34801561030657600080fd5b5061019b61031536600461154d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034c57600080fd5b506101d361035b366004611530565b610917565b600061036d338484610955565b5060015b92915050565b60006103856009600a611683565b610393906305f5e100611692565b905090565b6000546001600160a01b031633146103cb5760405162461bcd60e51b81526004016103c2906116a9565b60405180910390fd5b600047116103d857600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610404573d6000803e3d6000fd5b50565b6000610414848484610a79565b6004546001600160a01b0316331480159061045157506010546001600160a01b038581169116148061045157506001600160a01b03831661dead14155b156104a8576104a884336104a385604051806060016040528060288152602001611948602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f46565b610955565b5060019392505050565b6000546001600160a01b031633146104dc5760405162461bcd60e51b81526004016103c2906116a9565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105505760405162461bcd60e51b81526004016103c2906116a9565b565b6000546001600160a01b0316331461057c5760405162461bcd60e51b81526004016103c2906116a9565b601054600160a01b900460ff16156105d65760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103c2565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561061f9030906106116009600a611683565b6104a3906305f5e100611692565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069691906116de565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c91906116de565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906116de565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d71947306107d5816001600160a01b031660009081526001602052604090205490565b6000806107ea6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610852573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061087791906116fb565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190611729565b600061036d338484610a79565b3360009081526003602052604090205460ff1661093357600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109b75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6001600160a01b038216610a185760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c2565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610add5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c2565b6001600160a01b038216610b3f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c2565b60008111610ba15760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103c2565b60006001600160a01b0384163014801590610bc557506001600160a01b0383163014155b15610de857601054600160a81b900460ff16610c0a57610c076064610c0160075460085411610bf657600554610bfa565b6006545b8590610f80565b90611009565b90505b6010546001600160a01b038581169116148015610c355750600f546001600160a01b03848116911614155b8015610c5a57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c7457506004546001600160a01b03848116911614155b15610cb9574360095414610c8c576000600a55436009555b81600a6000828254610c9e919061174b565b909155505060088054906000610cb38361175e565b91905055505b6010546001600160a01b038481169116148015610cdf57506001600160a01b0384163014155b15610d3a57610cec61104b565b600a541080610cfd57504360095414155b610d3a5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103c2565b30600090815260016020526040902054601054600160a81b900460ff16158015610d7157506010546001600160a01b038581169116145b8015610d865750601054600160b01b900460ff165b8015610da057506004546001600160a01b03868116911614155b15610de6578015610dda576000600c548211610dbc5781610dc0565b600c545b9050610dd8818511610dd257846111d9565b816111d9565b505b47610de447611353565b505b505b6001600160a01b038416600090815260016020526040902054610e0b9083611391565b6001600160a01b038516600090815260016020526040902055610e50610e318383611391565b6001600160a01b038516600090815260016020526040902054906113d3565b6001600160a01b0384166000908152600160205260409020558015610ee35730600090815260016020526040902054610e8990826113d3565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eda9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f40576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f2e8585611391565b60405190815260200160405180910390a35b50505050565b60008184841115610f6a5760405162461bcd60e51b81526004016103c29190611460565b506000610f778486611777565b95945050505050565b600082600003610f9257506000610371565b6000610f9e8385611692565b905082610fab858361178a565b146110025760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103c2565b9392505050565b600061100283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611432565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dd91906116de565b816000815181106110f0576110f06117c2565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611124576111246117c2565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611170906729a2241af62c000090869060040161181d565b600060405180830381865afa15801561118d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b5919081019061183e565b9050806001815181106111ca576111ca6117c2565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611221576112216117c2565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129e91906116de565b816001815181106112b1576112b16117c2565b6001600160a01b039283166020918202929092010152600f546112d79130911684610955565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061131090859060009086903090429060040161190b565b600060405180830381600087803b15801561132a57600080fd5b505af115801561133e573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561138d573d6000803e3d6000fd5b5050565b600061100283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f46565b6000806113e0838561174b565b9050838110156110025760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103c2565b600081836114535760405162461bcd60e51b81526004016103c29190611460565b506000610f77848661178a565b602081526000825180602084015260005b8181101561148e5760208186018101516040868401015201611471565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461040457600080fd5b600080604083850312156114d657600080fd5b82356114e1816114ae565b946020939093013593505050565b60008060006060848603121561150457600080fd5b833561150f816114ae565b9250602084013561151f816114ae565b929592945050506040919091013590565b60006020828403121561154257600080fd5b8135611002816114ae565b6000806040838503121561156057600080fd5b823561156b816114ae565b9150602083013561157b816114ae565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115d7578085048111156115bb576115bb611586565b60018416156115c957908102905b60019390931c9280026115a0565b935093915050565b6000826115ee57506001610371565b816115fb57506000610371565b8160018114611611576002811461161b57611637565b6001915050610371565b60ff84111561162c5761162c611586565b50506001821b610371565b5060208310610133831016604e8410600b841016171561165a575081810a610371565b611667600019848461159c565b806000190482111561167b5761167b611586565b029392505050565b600061100260ff8416836115df565b808202811582820484141761037157610371611586565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116f057600080fd5b8151611002816114ae565b60008060006060848603121561171057600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173b57600080fd5b8151801515811461100257600080fd5b8082018082111561037157610371611586565b60006001820161177057611770611586565b5060010190565b8181038181111561037157610371611586565b6000826117a757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118135781516001600160a01b03168652602095860195909101906001016117ec565b5093949350505050565b82815260406020820152600061183660408301846117d8565b949350505050565b60006020828403121561185057600080fd5b815167ffffffffffffffff81111561186757600080fd5b8201601f8101841361187857600080fd5b805167ffffffffffffffff811115611892576118926117ac565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118bf576118bf6117ac565b6040529182526020818401810192908101878411156118dd57600080fd5b6020850194505b83851015611900578451808252602095860195909350016118e4565b509695505050505050565b85815284602082015260a06040820152600061192a60a08301866117d8565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206f5bdd82a7e7c1f50c7f204b4e0ef08a7b4fc368b2ce736caab36bc80bb6902f64736f6c634300081e0033";

type GorkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GorkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gork__factory extends ContractFactory {
  constructor(...args: GorkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Gork & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Gork__factory {
    return super.connect(runner) as Gork__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GorkInterface {
    return new Interface(_abi) as GorkInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Gork {
    return new Contract(address, _abi, runner) as unknown as Gork;
  }
}
