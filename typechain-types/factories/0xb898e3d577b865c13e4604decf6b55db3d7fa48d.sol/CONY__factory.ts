/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  CONY,
  CONYInterface,
} from "../../0xb898e3d577b865c13e4604decf6b55db3d7fa48d.sol/CONY";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueCONYETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556000600755600060085560646009600a6100289190610317565b61003690633b9aca0061032d565b6100409190610344565b6009556000600a819055600c805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100ee6009600a610317565b6100fc90633b9aca0061032d565b61010790600261032d565b6101119190610344565b33600090815260016020526040902055606461012f6009600a610317565b61013d90633b9aca0061032d565b61014890606261032d565b6101529190610344565b30600090815260016020526040902055336001600160a01b031660006000805160206118e2833981519152606461018b6009600a610317565b61019990633b9aca0061032d565b6101a490600261032d565b6101ae9190610344565b60405190815260200160405180910390a33060006000805160206118e283398151915260646101df6009600a610317565b6101ed90633b9aca0061032d565b6101f890606261032d565b6102029190610344565b60405190815260200160405180910390a3610366565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102695780850481111561024d5761024d610218565b600184161561025b57908102905b60019390931c928002610232565b935093915050565b60008261028057506001610311565b8161028d57506000610311565b81600181146102a357600281146102ad576102c9565b6001915050610311565b60ff8411156102be576102be610218565b50506001821b610311565b5060208310610133831016604e8410600b84101617156102ec575081810a610311565b6102f9600019848461022e565b806000190482111561030d5761030d610218565b0290505b92915050565b600061032660ff841683610271565b9392505050565b808202811582820484141761031157610311610218565b60008261036157634e487b7160e01b600052601260045260246000fd5b500490565b61156d806103756000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b1461029f57806395d89b41146102c7578063a9059cbb146102f4578063dd62ed3e14610314578063fb201b1d1461035a57600080fd5b806370a082311461021f578063715018a614610255578063751039fc1461026a578063798e50361461027f57600080fd5b806323b872dd116100d157806323b872dd146101b6578063313ce567146101d657806341807df0146101f25780636482c89a1461020957600080fd5b806306fdde031461010e578063095ea7b31461014d5780630faee56f1461017d57806318160ddd146101a157600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526004815263436f6e7960e01b60208201525b604051610144919061115d565b60405180910390f35b34801561015957600080fd5b5061016d6101683660046111c0565b61036f565b6040519015158152602001610144565b34801561018957600080fd5b5061019360095481565b604051908152602001610144565b3480156101ad57600080fd5b50610193610386565b3480156101c257600080fd5b5061016d6101d13660046111ec565b6103a7565b3480156101e257600080fd5b5060405160098152602001610144565b3480156101fe57600080fd5b50610207610465565b005b34801561021557600080fd5b50610193600a5481565b34801561022b57600080fd5b5061019361023a36600461122d565b6001600160a01b031660009081526001602052604090205490565b34801561026157600080fd5b506102076104d4565b34801561027657600080fd5b50610207610548565b34801561028b57600080fd5b5061020761029a36600461122d565b610574565b3480156102ab57600080fd5b506000546040516001600160a01b039091168152602001610144565b3480156102d357600080fd5b50604080518082019091526004815263434f4e5960e01b6020820152610137565b34801561030057600080fd5b5061016d61030f3660046111c0565b6105b2565b34801561032057600080fd5b5061019361032f36600461124a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036657600080fd5b506102076105bf565b600061037c338484610977565b5060015b92915050565b60006103946009600a611380565b6103a290633b9aca0061138f565b905090565b60006103b4848484610a9b565b6004546001600160a01b031633148015906104045750600c546001600160a01b03858116911614806103f157506001600160a01b03831661dead14155b8061040457506001600160a01b03841630145b1561045b5761045b843361045685604051806060016040528060288152602001611510602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610ec3565b610977565b5060019392505050565b6000546001600160a01b031633146104985760405162461bcd60e51b815260040161048f906113a6565b60405180910390fd5b600047116104a557600080fd5b60405133904780156108fc02916000818181858888f193505050501580156104d1573d6000803e3d6000fd5b50565b6000546001600160a01b031633146104fe5760405162461bcd60e51b815260040161048f906113a6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105725760405162461bcd60e51b815260040161048f906113a6565b565b3360009081526003602052604090205460ff1661059057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600061037c338484610a9b565b6000546001600160a01b031633146105e95760405162461bcd60e51b815260040161048f906113a6565b600c54600160a01b900460ff16156106435760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161048f565b600b80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561068c90309061067e6009600a611380565b61045690633b9aca0061138f565b600b60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070391906113db565b6001600160a01b031663c9c6539630600b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906113db565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa91906113db565b600c80546001600160a01b039283166001600160a01b0319909116179055600b541663f305d7194730610842816001600160a01b031660009081526001602052604090205490565b6000806108576000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108bf573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108e491906113f8565b5050600c805462ff00ff60a01b1981166201000160a01b17909155600b5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190611426565b6001600160a01b0383166109d95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048f565b6001600160a01b038216610a3a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048f565b6001600160a01b038216610b615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048f565b60008111610bc35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161048f565b60006001600160a01b0384163014801590610be757506001600160a01b0383163014155b15610d6557600c546001600160a01b038581169116148015610c175750600b546001600160a01b03848116911614155b8015610c3c57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c5657506004546001600160a01b03848116911614155b15610c715760088054906000610c6b83611448565b91905055505b30600090815260016020526040902054600c54600160a81b900460ff16158015610ca85750600c546001600160a01b038581169116145b8015610cbd5750600c54600160b01b900460ff165b8015610cd757506004546001600160a01b03868116911614155b15610d6357843b15610d225760405162461bcd60e51b8152602060048201526014602482015273115490cc8c0e88115e1d195c9b985b0818d85b1b60621b604482015260640161048f565b8015610d575760006009548211610d395781610d3d565b6009545b9050610d55818511610d4f5784610efd565b81610efd565b505b47610d6147611077565b505b505b6001600160a01b038416600090815260016020526040902054610d8890836110b5565b6001600160a01b038516600090815260016020526040902055610dcd610dae83836110b5565b6001600160a01b038516600090815260016020526040902054906110fe565b6001600160a01b0384166000908152600160205260409020558015610e605730600090815260016020526040902054610e0690826110fe565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e579085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ebd576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610eab85856110b5565b60405190815260200160405180910390a35b50505050565b60008184841115610ee75760405162461bcd60e51b815260040161048f919061115d565b506000610ef48486611461565b95945050505050565b600c805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610f4557610f45611474565b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc291906113db565b81600181518110610fd557610fd5611474565b6001600160a01b039283166020918202929092010152600b54610ffb9130911684610977565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061103490859060009086903090429060040161148a565b600060405180830381600087803b15801561104e57600080fd5b505af1158015611062573d6000803e3d6000fd5b5050600c805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156110b1573d6000803e3d6000fd5b5050565b60006110f783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ec3565b9392505050565b60008061110b83856114fc565b9050838110156110f75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161048f565b602081526000825180602084015260005b8181101561118b576020818601810151604086840101520161116e565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146104d157600080fd5b600080604083850312156111d357600080fd5b82356111de816111ab565b946020939093013593505050565b60008060006060848603121561120157600080fd5b833561120c816111ab565b9250602084013561121c816111ab565b929592945050506040919091013590565b60006020828403121561123f57600080fd5b81356110f7816111ab565b6000806040838503121561125d57600080fd5b8235611268816111ab565b91506020830135611278816111ab565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156112d4578085048111156112b8576112b8611283565b60018416156112c657908102905b60019390931c92800261129d565b935093915050565b6000826112eb57506001610380565b816112f857506000610380565b816001811461130e576002811461131857611334565b6001915050610380565b60ff84111561132957611329611283565b50506001821b610380565b5060208310610133831016604e8410600b8410161715611357575081810a610380565b6113646000198484611299565b806000190482111561137857611378611283565b029392505050565b60006110f760ff8416836112dc565b808202811582820484141761038057610380611283565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113ed57600080fd5b81516110f7816111ab565b60008060006060848603121561140d57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561143857600080fd5b815180151581146110f757600080fd5b60006001820161145a5761145a611283565b5060010190565b8181038181111561038057610380611283565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114dc5783516001600160a01b03168352602093840193909201916001016114b5565b50506001600160a01b039590951660608401525050608001529392505050565b808201808211156103805761038061128356fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212200375e70795109195b7c139637651c8d57af8b2f7c91bb8985a5117712fcd45c064736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type CONYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CONYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CONY__factory extends ContractFactory {
  constructor(...args: CONYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CONY & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CONY__factory {
    return super.connect(runner) as CONY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CONYInterface {
    return new Interface(_abi) as CONYInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CONY {
    return new Contract(address, _abi, runner) as unknown as CONY;
  }
}
