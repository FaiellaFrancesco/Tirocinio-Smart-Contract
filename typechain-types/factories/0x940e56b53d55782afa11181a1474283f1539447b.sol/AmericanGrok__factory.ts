/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AmericanGrok,
  AmericanGrokInterface,
} from "../../0x940e56b53d55782afa11181a1474283f1539447b.sol/AmericanGrok";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refundEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526013600755601360085560006009556000600a556001600b556001600c556001600d556000600e556009600a6200003c91906200031e565b6200004c906301312d0062000336565b600f556200005d6009600a6200031e565b6200006d906301312d0062000336565b6010556200007e6009600a6200031e565b6200008e906301312d0062000336565b6011556200009f6009600a6200031e565b620000af906301312d0062000336565b6012556013805462ffff0019169055348015620000cb57600080fd5b50620000d733620001b9565b600480546001600160a01b031916736877952e462bbc76626f5c03ef589a265e5ad60e1790556200010b6009600a6200031e565b6200011b90633b9aca0062000336565b336000818152600160208181526040808420959095556004546001600160a01b0316835260039052838220805460ff199081168317909155308352938220805490941617909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001926009600a6200031e565b620001a290633b9aca0062000336565b60405190815260200160405180910390a362000350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200026057816000190482111562000244576200024462000209565b808516156200025257918102915b93841c939080029062000224565b509250929050565b600082620002795750600162000318565b81620002885750600062000318565b8160018114620002a15760028114620002ac57620002cc565b600191505062000318565b60ff841115620002c057620002c062000209565b50506001821b62000318565b5060208310610133831016604e8410600b8410161715620002f1575081810a62000318565b620002fd83836200021f565b806000190482111562000314576200031462000209565b0290505b92915050565b60006200032f60ff84168362000268565b9392505050565b808202811582820484141762000318576200031862000209565b611aa980620003606000396000f3fe6080604052600436106101185760003560e01c8063715018a6116100a057806395d89b411161006457806395d89b41146102f1578063a9059cbb1461031f578063bf474bed1461033f578063c9567bf914610355578063dd62ed3e1461036a57600080fd5b8063715018a614610273578063751039fc146102885780637d1db4a51461029d5780638da5cb5b146102b35780638f9a55c0146102db57600080fd5b80631faa4133116100e75780631faa4133146101d557806323b872dd146101ec578063313ce5671461020c57806351bc3c851461022857806370a082311461023d57600080fd5b806306fdde0314610124578063095ea7b31461016c5780630faee56f1461019c57806318160ddd146101c057600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5060408051808201909152600d81526c416d65726963616e2047726f6b60981b60208201525b6040516101639190611678565b60405180910390f35b34801561017857600080fd5b5061018c6101873660046116dc565b6103b0565b6040519015158152602001610163565b3480156101a857600080fd5b506101b260125481565b604051908152602001610163565b3480156101cc57600080fd5b506101b26103c7565b3480156101e157600080fd5b506101ea6103e8565b005b3480156101f857600080fd5b5061018c610207366004611708565b610444565b34801561021857600080fd5b5060405160098152602001610163565b34801561023457600080fd5b506101ea6104ad565b34801561024957600080fd5b506101b2610258366004611749565b6001600160a01b031660009081526001602052604090205490565b34801561027f57600080fd5b506101ea6104e0565b34801561029457600080fd5b506101ea61051f565b3480156102a957600080fd5b506101b2600f5481565b3480156102bf57600080fd5b506000546040516001600160a01b039091168152602001610163565b3480156102e757600080fd5b506101b260105481565b3480156102fd57600080fd5b506040805180820190915260058152644147524f4b60d81b6020820152610156565b34801561032b57600080fd5b5061018c61033a3660046116dc565b6105d1565b34801561034b57600080fd5b506101b260115481565b34801561036157600080fd5b506101ea6105de565b34801561037657600080fd5b506101b2610385366004611766565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006103bd33848461099a565b5060015b92915050565b60006103d56009600a611899565b6103e390633b9aca006118a8565b905090565b6004546001600160a01b0316336001600160a01b03161461040857600080fd5b6004546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610441573d6000803e3d6000fd5b50565b6000610451848484610abf565b6104a3843361049e85604051806060016040528060288152602001611a4c602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611059565b61099a565b5060019392505050565b3060009081526001602052604090205480156104cc576104cc81611093565b4780156104dc576104dc81611207565b5050565b6000546001600160a01b031633146105135760405162461bcd60e51b815260040161050a906118bf565b60405180910390fd5b61051d6000611241565b565b6000546001600160a01b031633146105495760405162461bcd60e51b815260040161050a906118bf565b6105556009600a611899565b61056390633b9aca006118a8565b600f556105726009600a611899565b61058090633b9aca006118a8565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6105b06009600a611899565b6105be90633b9aca006118a8565b60405190815260200160405180910390a1565b60006103bd338484610abf565b6000546001600160a01b031633146106085760405162461bcd60e51b815260040161050a906118bf565b60135460ff161561065b5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161050a565b600580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106a49030906106966009600a611899565b61049e90633b9aca006118a8565b600560009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b91906118f4565b6001600160a01b031663c9c6539630600560009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a191906118f4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081291906118f4565b600680546001600160a01b039283166001600160a01b03199091161790556013805462ff00001916620100001790556005541663f305d719473061086b816001600160a01b031660009081526001602052604090205490565b6000806108806000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156108e8573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061090d9190611911565b505060065460055460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061193f565b506013805460ff19166001179055565b6001600160a01b0383166109fc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050a565b6001600160a01b038216610a5d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610b235760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050a565b6001600160a01b038216610b855760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050a565b60008111610be75760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161050a565b60135462010000900460ff161580610c065750601354610100900460ff165b15610c1b57610c16838383611291565b505050565b600080546001600160a01b03858116911614801590610c4857506000546001600160a01b03848116911614155b8015610c6257506004546001600160a01b03848116911614155b15610ebc57610c936064610c8d600b54600e5411610c8257600754610c86565b6009545b8590611337565b906113c0565b6006549091506001600160a01b038581169116148015610cc157506005546001600160a01b03848116911614155b8015610ce657506001600160a01b03831660009081526003602052604090205460ff16155b15610dce57600f54821115610d3d5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161050a565b60105482610d60856001600160a01b031660009081526001602052604090205490565b610d6a9190611961565b1115610db85760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161050a565b600e8054906000610dc883611974565b91905055505b6006546001600160a01b038481169116148015610df457506001600160a01b0384163014155b15610e2157610e1e6064610c8d600c54600e5411610e1457600854610c86565b600a548590611337565b90505b30600090815260016020526040902054601354610100900460ff16158015610e5657506006546001600160a01b038581169116145b8015610e6a575060135462010000900460ff165b8015610e77575060115481115b8015610e865750600d54600e54115b15610eba57610ea8610ea384610e9e84601254611402565b611402565b611093565b478015610eb857610eb847611207565b505b505b6001600160a01b03841660009081526003602052604090205460ff1680610efb57506001600160a01b03831660009081526003602052604090205460ff165b8015610f1057506001600160a01b0384163014155b8015610f2557506001600160a01b0383163014155b15610f2f57436014555b6001600160a01b03841660009081526003602052604090205460ff16158015610f7157506001600160a01b03831660009081526003602052604090205460ff16155b15611047576006546001600160a01b03848116911614611014576001600160a01b038084166000908152601660205260409020600654909190811690861603610fdb578054600003610fd657600d54600e541115610fcf5743610fd3565b6000195b81555b61100e565b6001600160a01b038516600090815260166020526040902081541580611002575081548154105b1561100c57805482555b505b50611047565b6001600160a01b0384166000908152601660205260409020601454815461103a91611417565b6001820155436002909101555b61105384848484611459565b50505050565b6000818484111561107d5760405162461bcd60e51b815260040161050a9190611678565b50600061108a848661198d565b95945050505050565b6013805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106110d7576110d76119a0565b6001600160a01b03928316602091820292909201810191909152600554604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611130573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115491906118f4565b81600181518110611167576111676119a0565b6001600160a01b03928316602091820292909201015260055461118d913091168461099a565b60055460405163791ac94760e01b81526001600160a01b039091169063791ac947906111c69085906000908690309042906004016119b6565b600060405180830381600087803b1580156111e057600080fd5b505af11580156111f4573d6000803e3d6000fd5b50506013805461ff001916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156104dc573d6000803e3d6000fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383166000908152600160205260409020546112b49082611417565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112e39082611484565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ab29085815260200190565b600082600003611349575060006103c1565b600061135583856118a8565b9050826113628583611a29565b146113b95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161050a565b9392505050565b60006113b983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114e3565b600081831161141157826113b9565b50919050565b60006113b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611059565b6000611466858385611511565b905061147d8585836114788787611417565b6115c4565b5050505050565b6000806114918385611961565b9050838110156113b95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161050a565b600081836115045760405162461bcd60e51b815260040161050a9190611678565b50600061108a8486611a29565b60045460009081906001600160a01b039081169086160361153e576015546115399084611337565b611540565b825b905083156115bc57306000908152600160205260409020546115629085611484565b30600081815260016020526040908190209290925590516001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115b39088815260200190565b60405180910390a35b949350505050565b6001600160a01b0384166000908152600160205260409020546115e79083611417565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546116169082611484565b6001600160a01b0380851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061166a9085815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b818110156116a65785810183015185820160400152820161168a565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461044157600080fd5b600080604083850312156116ef57600080fd5b82356116fa816116c7565b946020939093013593505050565b60008060006060848603121561171d57600080fd5b8335611728816116c7565b92506020840135611738816116c7565b929592945050506040919091013590565b60006020828403121561175b57600080fd5b81356113b9816116c7565b6000806040838503121561177957600080fd5b8235611784816116c7565b91506020830135611794816116c7565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117f05781600019048211156117d6576117d661179f565b808516156117e357918102915b93841c93908002906117ba565b509250929050565b600082611807575060016103c1565b81611814575060006103c1565b816001811461182a576002811461183457611850565b60019150506103c1565b60ff8411156118455761184561179f565b50506001821b6103c1565b5060208310610133831016604e8410600b8410161715611873575081810a6103c1565b61187d83836117b5565b80600019048211156118915761189161179f565b029392505050565b60006113b960ff8416836117f8565b80820281158282048414176103c1576103c161179f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561190657600080fd5b81516113b9816116c7565b60008060006060848603121561192657600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561195157600080fd5b815180151581146113b957600080fd5b808201808211156103c1576103c161179f565b6000600182016119865761198661179f565b5060010190565b818103818111156103c1576103c161179f565b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611a085784516001600160a01b0316835293830193918301916001016119e3565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611a4657634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209f0b65164231de735128ee21510830cab24a7f41b8eacea62dfb9e89ce2d900364736f6c63430008170033";

type AmericanGrokConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmericanGrokConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmericanGrok__factory extends ContractFactory {
  constructor(...args: AmericanGrokConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AmericanGrok & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AmericanGrok__factory {
    return super.connect(runner) as AmericanGrok__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmericanGrokInterface {
    return new Interface(_abi) as AmericanGrokInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AmericanGrok {
    return new Contract(address, _abi, runner) as unknown as AmericanGrok;
  }
}
