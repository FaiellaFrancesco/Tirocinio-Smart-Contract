/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0xadc12c206c8f7598579c7fde11409f5099556fbe.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_assist_bnTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_oijboijoiTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblTOKN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_vnbbvlkTOKN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTOKNTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6001819055600281815560146003556000600481905560058290556006919091556007819055815461ffff60a81b19168255600b819055600c5560649061004f90600990610341565b61005d90633b9aca00610357565b610067919061036e565b60115567d02ab486cedc0000601255600a601355600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350601080546001600160a01b0319163317905560646100dc6009600a610341565b6100ea90633b9aca00610357565b6100f5906002610357565b6100ff919061036e565b336000908152600d6020526040902055606461011d6009600a610341565b61012b90633b9aca00610357565b610136906062610357565b610140919061036e565b306000908152600d6020908152604080832093909355600f90528181208054600160ff1991821681179092556010546001600160a01b0316835292909120805490921617905561018d3390565b6001600160a01b03166000600080516020611d7e83398151915260646101b56009600a610341565b6101c390633b9aca00610357565b6101ce906002610357565b6101d8919061036e565b60405190815260200160405180910390a3306000600080516020611d7e83398151915260646102096009600a610341565b61021790633b9aca00610357565b610222906062610357565b61022c919061036e565b60405190815260200160405180910390a3610390565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102935780850481111561027757610277610242565b600184161561028557908102905b60019390931c92800261025c565b935093915050565b6000826102aa5750600161033b565b816102b75750600061033b565b81600181146102cd57600281146102d7576102f3565b600191505061033b565b60ff8411156102e8576102e8610242565b50506001821b61033b565b5060208310610133831016604e8410600b8410161715610316575081810a61033b565b6103236000198484610258565b806000190482111561033757610337610242565b0290505b92915050565b600061035060ff84168361029b565b9392505050565b808202811582820484141761033b5761033b610242565b60008261038b57634e487b7160e01b600052601260045260246000fd5b500490565b6119df8061039f6000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063c888c7c611610064578063c888c7c61461029d578063d02c9383146102b3578063d8fbd06f146102c8578063dd62ed3e146102de578063f5f674311461032457600080fd5b80638da5cb5b1461024057806395d89b411461010e578063a9059cbb14610268578063bd6c5bae1461028857600080fd5b8063313ce567116100d1578063313ce567146101c257806370a08231146101de578063715018a614610214578063751039fc1461022b57600080fd5b806306fdde031461010e578063095ea7b31461014f57806318160ddd1461017f57806323b872dd146101a257600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506040805180820182526009815268537570657247726f6b60b81b60208201529051610146919061149a565b60405180910390f35b34801561015b57600080fd5b5061016f61016a3660046114fd565b610344565b6040519015158152602001610146565b34801561018b57600080fd5b5061019461035b565b604051908152602001610146565b3480156101ae57600080fd5b5061016f6101bd366004611529565b61037c565b3480156101ce57600080fd5b5060405160098152602001610146565b3480156101ea57600080fd5b506101946101f936600461156a565b6001600160a01b03166000908152600d602052604090205490565b34801561022057600080fd5b506102296103f4565b005b34801561023757600080fd5b50610229610471565b34801561024c57600080fd5b506000546040516001600160a01b039091168152602001610146565b34801561027457600080fd5b5061016f6102833660046114fd565b61049d565b34801561029457600080fd5b506102296104aa565b3480156102a957600080fd5b5061019460125481565b3480156102bf57600080fd5b50610229610510565b3480156102d457600080fd5b5061019460115481565b3480156102ea57600080fd5b506101946102f9366004611587565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205490565b34801561033057600080fd5b5061022961033f36600461156a565b6108c8565b600061035133848461091e565b5060015b92915050565b60006103696009600a6116bd565b61037790633b9aca006116cc565b905090565b6000610389848484610a42565b6103938484610f1f565b156103ea576103ea84336103e585604051806060016040528060288152602001611982602891396001600160a01b038a166000908152600e602090815260408083203384529091529020549190610f84565b61091e565b5060019392505050565b6000546001600160a01b031633146104275760405162461bcd60e51b815260040161041e906116e3565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461049b5760405162461bcd60e51b815260040161041e906116e3565b565b6000610351338484610a42565b6000546001600160a01b031633146104d45760405162461bcd60e51b815260040161041e906116e3565b600047116104e157600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561050d573d6000803e3d6000fd5b50565b6000546001600160a01b0316331461053a5760405162461bcd60e51b815260040161041e906116e3565b600a54600160a01b900460ff16156105945760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161041e565b600880546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105dd9030906105cf6009600a6116bd565b6103e590633b9aca006116cc565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190611718565b6001600160a01b031663c9c6539630600860009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611718565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190611718565b600a80546001600160a01b039283166001600160a01b03199091161790556008541663f305d7194730610793816001600160a01b03166000908152600d602052604090205490565b6000806107a86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610810573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108359190611735565b5050600a805462ff00ff60a01b1981166201000160a01b1790915560085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d9190611763565b336000908152600f602052604090205460ff166108e457600080fd5b601080546001600160a01b039092166001600160a01b0319909216821790556000908152600f60205260409020805460ff19166001179055565b6001600160a01b0383166109805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041e565b6001600160a01b0382166109e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041e565b6001600160a01b038381166000818152600e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aa65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041e565b6001600160a01b038216610b085760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041e565b60008111610b6a5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161041e565b600080546001600160a01b03858116911614801590610b9757506000546001600160a01b03848116911614155b8015610bac57506001600160a01b0384163014155b8015610bc157506001600160a01b0383163014155b15610dc157600a54600160a81b900460ff16610c0657610c036064610bfd60055460075411610bf257600354610bf6565b6004545b8590610fbe565b90611047565b90505b600a546001600160a01b038581169116148015610c3157506008546001600160a01b03848116911614155b8015610c5657506001600160a01b0383166000908152600f602052604090205460ff16155b8015610c7057506010546001600160a01b03848116911614155b15610c8b5760078054906000610c8583611785565b91905055505b306000908152600d602052604081205490546001600160a01b03868116911614801590610cc25750600a54600160a81b900460ff16155b8015610cdb5750600a546001600160a01b038581169116145b8015610cf557506010546001600160a01b03868116911614155b8015610d0a5750600a54600160b01b900460ff165b8015610d195750600654600754115b15610dbf57600c54431115610d2e576000600b555b610d3783611089565b600b54610d44919061179e565b600b8190556012541015610d8b5760405162461bcd60e51b815260206004820152600e60248201526d13585e081cddd85c081b1a5b5a5d60921b604482015260640161041e565b601154811115610daf57610daf8360115411610da957601154611201565b83611201565b47610db94761138d565b5043600c555b505b6001600160a01b0384166000908152600d6020526040902054610de490836113cb565b6001600160a01b0385166000908152600d6020526040902055610e29610e0a83836113cb565b6001600160a01b0385166000908152600d60205260409020549061140d565b6001600160a01b0384166000908152600d60205260409020558015610ebc57306000908152600d6020526040902054610e62908261140d565b306000818152600d6020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eb39085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f19576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f0785856113cb565b60405190815260200160405180910390a35b50505050565b336000908152600f602052604081205460ff1615610f515750336000908152600f602052604090205460ff1615610355565b600a546001600160a01b0384811691161480610f7857506001600160a01b03821661dead14155b61035157506000610355565b60008184841115610fa85760405162461bcd60e51b815260040161041e919061149a565b506000610fb584866117b1565b95945050505050565b600082600003610fd057506000610355565b6000610fdc83856116cc565b905082610fe985836117c4565b146110405760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161041e565b9392505050565b600061104083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061146c565b6040805160028082526060820183526000928392919060208301908036833701905050905030816000815181106110c2576110c26117fc565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f9190611718565b81600181518110611152576111526117fc565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b8152600092919091169063d06ca61f906111969087908690600401611857565b600060405180830381865afa1580156111b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111db9190810190611878565b9050806001815181106111f0576111f06117fc565b602002602001015192505050919050565b600a805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611249576112496117fc565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c69190611718565b816001815181106112d9576112d96117fc565b6001600160a01b0392831660209182029290920101526008546112ff913091168461091e565b600854600980546001600160a01b0319166001600160a01b03909216918217905560405163791ac94760e01b815263791ac9479061134a908590600090869030904290600401611945565b600060405180830381600087803b15801561136457600080fd5b505af1158015611378573d6000803e3d6000fd5b5050600a805460ff60a81b1916905550505050565b6010546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113c7573d6000803e3d6000fd5b5050565b600061104083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f84565b60008061141a838561179e565b9050838110156110405760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161041e565b6000818361148d5760405162461bcd60e51b815260040161041e919061149a565b506000610fb584866117c4565b602081526000825180602084015260005b818110156114c857602081860181015160408684010152016114ab565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461050d57600080fd5b6000806040838503121561151057600080fd5b823561151b816114e8565b946020939093013593505050565b60008060006060848603121561153e57600080fd5b8335611549816114e8565b92506020840135611559816114e8565b929592945050506040919091013590565b60006020828403121561157c57600080fd5b8135611040816114e8565b6000806040838503121561159a57600080fd5b82356115a5816114e8565b915060208301356115b5816114e8565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611611578085048111156115f5576115f56115c0565b600184161561160357908102905b60019390931c9280026115da565b935093915050565b60008261162857506001610355565b8161163557506000610355565b816001811461164b576002811461165557611671565b6001915050610355565b60ff841115611666576116666115c0565b50506001821b610355565b5060208310610133831016604e8410600b8410161715611694575081810a610355565b6116a160001984846115d6565b80600019048211156116b5576116b56115c0565b029392505050565b600061104060ff841683611619565b8082028115828204841417610355576103556115c0565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172a57600080fd5b8151611040816114e8565b60008060006060848603121561174a57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177557600080fd5b8151801515811461104057600080fd5b600060018201611797576117976115c0565b5060010190565b80820180821115610355576103556115c0565b81810381811115610355576103556115c0565b6000826117e157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561184d5781516001600160a01b0316865260209586019590910190600101611826565b5093949350505050565b8281526040602082015260006118706040830184611812565b949350505050565b60006020828403121561188a57600080fd5b815167ffffffffffffffff8111156118a157600080fd5b8201601f810184136118b257600080fd5b805167ffffffffffffffff8111156118cc576118cc6117e6565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118f9576118f96117e6565b60405291825260208184018101929081018784111561191757600080fd5b6020850194505b8385101561193a5784518082526020958601959093500161191e565b509695505050505050565b85815284602082015260a06040820152600061196460a0830186611812565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220c60c683d8515986973e2c07e99f22b29a9dfba520b7e83c6745ab6c34a8709ee64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
