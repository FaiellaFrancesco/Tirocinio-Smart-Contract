/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  EventTicketing,
  EventTicketingInterface,
} from "../EventTicketing";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCapacity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ticketPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "TicketRefunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "TicketUsed",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "markTicketUsed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCapacity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ownsTicket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "buyer",
        type: "address",
      },
    ],
    name: "refundTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "buyers",
        type: "address[]",
      },
    ],
    name: "refundTicketsBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketsSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c39380380610c3983398101604081905261002f91610115565b600082116100935760405162461bcd60e51b815260206004820152602660248201527f4d6178206361706163697479206d7573742062652067726561746572207468616044820152656e207a65726f60d01b60648201526084015b60405180910390fd5b600081116100f25760405162461bcd60e51b815260206004820152602660248201527f5469636b6574207072696365206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161008a565b600080546001600160a01b03191633178155600192909255600255600355610139565b6000806040838503121561012857600080fd5b505080516020909101519092909150565b610af1806101486000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146101555780638f15024f1461018d5780639bb805db146101a3578063d3a87d20146101c3578063edca914c146101e357600080fd5b80631209b1f61461009657806324d8b0b2146100bf5780633ccfd60b146101085780634a3d16a41461011f57806359b6a0c91461013f575b600080fd5b3480156100a257600080fd5b506100ac60025481565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100f86100da36600461093d565b6001600160a01b031660009081526004602052604090205460ff1690565b60405190151581526020016100b6565b34801561011457600080fd5b5061011d6101eb565b005b34801561012b57600080fd5b5061011d61013a36600461093d565b61030c565b34801561014b57600080fd5b506100ac60015481565b34801561016157600080fd5b50600054610175906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b34801561019957600080fd5b506100ac60035481565b3480156101af57600080fd5b5061011d6101be366004610961565b610423565b3480156101cf57600080fd5b5061011d6101de36600461093d565b6105e1565b61011d6107a6565b6000546001600160a01b0316331461021e5760405162461bcd60e51b8152600401610215906109d8565b60405180910390fd5b47806102655760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610215565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102b2576040519150601f19603f3d011682016040523d82523d6000602084013e6102b7565b606091505b50509050806103085760405162461bcd60e51b815260206004820152601860248201527f5769746864726177207472616e73666572206661696c656400000000000000006044820152606401610215565b5050565b6000546001600160a01b031633146103365760405162461bcd60e51b8152600401610215906109d8565b6001600160a01b038116600090815260046020526040902054819060ff166103705760405162461bcd60e51b815260040161021590610a19565b6001600160a01b038216600090815260046020526040902054610100900460ff16156103d45760405162461bcd60e51b8152602060048201526013602482015272151a58dad95d08185b1c9958591e481d5cd959606a1b6044820152606401610215565b6001600160a01b038216600081815260046020526040808220805461ff001916610100179055517f615f183294d34c8c83e3ea0f5c354f67b0f1b3fd1aafc2c14283b29132793d509190a25050565b6000546001600160a01b0316331461044d5760405162461bcd60e51b8152600401610215906109d8565b60005b818110156105dc57600083838381811061046c5761046c610a5f565b9050602002016020810190610481919061093d565b6001600160a01b03811660009081526004602052604090205490915060ff1680156104ca57506001600160a01b038116600090815260046020526040902054610100900460ff16155b156105d3576001600160a01b0381166000908152600460205260408120805460ff1916905560038054916104fd83610a8b565b90915550506002546040516000916001600160a01b038416918381818185875af1925050503d806000811461054e576040519150601f19603f3d011682016040523d82523d6000602084013e610553565b606091505b505090508061059d5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b6044820152606401610215565b6040516001600160a01b038316907f3fd578cb373e4201bc843f3c6d9ef6bdc7e481f4dee7a56df015f8764bee7ab990600090a2505b50600101610450565b505050565b6000546001600160a01b0316331461060b5760405162461bcd60e51b8152600401610215906109d8565b6001600160a01b038116600090815260046020526040902054819060ff166106455760405162461bcd60e51b815260040161021590610a19565b6001600160a01b03821660009081526004602052604090208054610100900460ff16156106b45760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420726566756e6420612075736564207469636b657400000000006044820152606401610215565b805460ff19168155600380549060006106cc83610a8b565b90915550506002546040516000916001600160a01b038616918381818185875af1925050503d806000811461071d576040519150601f19603f3d011682016040523d82523d6000602084013e610722565b606091505b505090508061076c5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b6044820152606401610215565b6040516001600160a01b038516907f3fd578cb373e4201bc843f3c6d9ef6bdc7e481f4dee7a56df015f8764bee7ab990600090a250505050565b600154600354106107ec5760405162461bcd60e51b815260206004820152601060248201526f105b1b081d1a58dad95d1cc81cdbdb1960821b6044820152606401610215565b600254341461083d5760405162461bcd60e51b815260206004820152601a60248201527f496e636f72726563742045746865722076616c75652073656e740000000000006044820152606401610215565b3360009081526004602052604090205460ff161561089d5760405162461bcd60e51b815260206004820152601860248201527f5469636b657420616c72656164792070757263686173656400000000000000006044820152606401610215565b6040805180820182526001815260006020808301828152338352600490915292812091518254935161ffff1990941690151561ff001916176101009315159390930292909217905560038054916108f383610aa2565b909155505060405133907f23443ac3afaec974c2d4368824912f61a50fee541bcc94ec52414ba6a9b14aab90600090a2565b6001600160a01b038116811461093a57600080fd5b50565b60006020828403121561094f57600080fd5b813561095a81610925565b9392505050565b6000806020838503121561097457600080fd5b823567ffffffffffffffff81111561098b57600080fd5b8301601f8101851361099c57600080fd5b803567ffffffffffffffff8111156109b357600080fd5b8560208260051b84010111156109c857600080fd5b6020919091019590945092505050565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b60208082526026908201527f5469636b657420646f6573206e6f7420657869737420666f722074686973206160408201526564647265737360d01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081610a9a57610a9a610a75565b506000190190565b600060018201610ab457610ab4610a75565b506001019056fea2646970667358221220727e2906757914bf09a20aaf4e11a02f70318b66c0f130bc2147865ea054f7e864736f6c634300081e0033";

type EventTicketingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventTicketingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventTicketing__factory extends ContractFactory {
  constructor(...args: EventTicketingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _maxCapacity: BigNumberish,
    _ticketPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _maxCapacity,
      _ticketPrice,
      overrides || {}
    );
  }
  override deploy(
    _maxCapacity: BigNumberish,
    _ticketPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_maxCapacity, _ticketPrice, overrides || {}) as Promise<
      EventTicketing & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EventTicketing__factory {
    return super.connect(runner) as EventTicketing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventTicketingInterface {
    return new Interface(_abi) as EventTicketingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EventTicketing {
    return new Contract(address, _abi, runner) as unknown as EventTicketing;
  }
}
