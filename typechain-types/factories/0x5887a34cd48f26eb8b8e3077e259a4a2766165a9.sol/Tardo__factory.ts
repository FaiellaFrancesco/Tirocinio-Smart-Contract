/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Tardo,
  TardoInterface,
} from "../../0x5887a34cd48f26eb8b8e3077e259a4a2766165a9.sol/Tardo";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ExcludedFromFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_taxWallet",
        type: "address",
      },
    ],
    name: "FeeReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "buyFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellFee",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LimitsRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_txAmountLimit",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_walletAmountLimit",
        type: "uint256",
      },
    ],
    name: "MaxWalletAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_swapbackMin",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_swapbackMax",
        type: "uint256",
      },
    ],
    name: "SwapbackUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TradingOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTxMax",
        type: "uint256",
      },
    ],
    name: "maxTxSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newWalletMax",
        type: "uint256",
      },
    ],
    name: "maxWalletSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readView",
    outputs: [
      {
        internalType: "uint256",
        name: "_buyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWalletSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taxSwapThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTaxSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimitsNow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeStuckBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newRcv",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exempt",
        type: "bool",
      },
    ],
    name: "setFeeExempt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxSwapThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTaxSwap",
        type: "uint256",
      },
    ],
    name: "setSBValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeSell",
        type: "uint256",
      },
    ],
    name: "taxesSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000600a8190556014600b819055600c8190556001600d55600e91909155805461ffff60a81b191690553480156200003b57600080fd5b5060405180604001604052806005815260200164546172646f60d81b81525060405180604001604052806005815260200164544152444f60d81b8152508160039081620000899190620003d5565b506004620000988282620003d5565b505050620000b5620000af620001ee60201b60201c565b620001f2565b6b033b2e3c9fd0803ce80000006103e8620000d282600a620004b7565b620000de9190620004d7565b600f556103e8620000f182600a620004b7565b620000fd9190620004d7565b60105561271062000110826005620004b7565b6200011c9190620004d7565b6011556127106200012f8260c8620004b7565b6200013b9190620004d7565b601255600780546001600160a01b031916731cc4c48a5db72f8faee2b377450d3a8c1cbc0c111790556001600660006200017d6005546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526006909352818320805485166001908117909155600754909116835291208054909216179055620001e7620001e03390565b8262000244565b5062000510565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200029f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620002b39190620004fa565b90915550506001600160a01b03821660009081526020819052604081208054839290620002e2908490620004fa565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200035c57607f821691505b6020821081036200037d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032c57600081815260208120601f850160051c81016020861015620003ac5750805b601f850160051c820191505b81811015620003cd57828155600101620003b8565b505050505050565b81516001600160401b03811115620003f157620003f162000331565b620004098162000402845462000347565b8462000383565b602080601f831160018114620004415760008415620004285750858301515b600019600386901b1c1916600185901b178555620003cd565b600085815260208120601f198616915b82811015620004725788860151825594840194600190910190840162000451565b5085821015620004915787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620004d157620004d1620004a1565b92915050565b600082620004f557634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115620004d157620004d1620004a1565b61204e80620005206000396000f3fe60806040526004361061016a5760003560e01c8063715018a6116100d1578063a18ee1dd1161008a578063c636cb4811610064578063c636cb4814610441578063c9567bf914610461578063dd62ed3e14610476578063f2fde38b146104bc57600080fd5b8063a18ee1dd146103e1578063a457c2d714610401578063a9059cbb1461042157600080fd5b8063715018a61461033a5780637173163e1461034f5780638705fcd4146103645780638da5cb5b146103845780638ebfc796146103ac57806395d89b41146103cc57600080fd5b8063313ce56711610123578063313ce5671461024757806335d210a01461026357806339509351146102af5780634c45ece1146102cf57806351bc3c85146102ef57806370a082311461030457600080fd5b806306fdde0314610176578063095ea7b3146101a157806318160ddd146101d15780631ee406da146101f057806323b872dd1461021257806330409cf71461023257600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5061018b6104dc565b6040516101989190611c0d565b60405180910390f35b3480156101ad57600080fd5b506101c16101bc366004611c70565b61056e565b6040519015158152602001610198565b3480156101dd57600080fd5b506002545b604051908152602001610198565b3480156101fc57600080fd5b5061021061020b366004611c9c565b610585565b005b34801561021e57600080fd5b506101c161022d366004611cb5565b610666565b34801561023e57600080fd5b50610210610710565b34801561025357600080fd5b5060405160128152602001610198565b34801561026f57600080fd5b50600b54600c54600f54601054601154601254604080519687526020870195909552938501929092526060840152608083015260a082015260c001610198565b3480156102bb57600080fd5b506101c16102ca366004611c70565b6107a6565b3480156102db57600080fd5b506102106102ea366004611cf6565b6107e2565b3480156102fb57600080fd5b506102106108e7565b34801561031057600080fd5b506101e261031f366004611d18565b6001600160a01b031660009081526020819052604090205490565b34801561034657600080fd5b50610210610982565b34801561035b57600080fd5b506102106109b8565b34801561037057600080fd5b5061021061037f366004611d18565b610a66565b34801561039057600080fd5b506005546040516001600160a01b039091168152602001610198565b3480156103b857600080fd5b506102106103c7366004611d43565b610ade565b3480156103d857600080fd5b5061018b610b64565b3480156103ed57600080fd5b506102106103fc366004611cf6565b610b73565b34801561040d57600080fd5b506101c161041c366004611c70565b610c1b565b34801561042d57600080fd5b506101c161043c366004611c70565b610cb4565b34801561044d57600080fd5b5061021061045c366004611c9c565b610cc1565b34801561046d57600080fd5b50610210610d9d565b34801561048257600080fd5b506101e2610491366004611d7c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156104c857600080fd5b506102106104d7366004611d18565b6111b4565b6060600380546104eb90611daa565b80601f016020809104026020016040519081016040528092919081815260200182805461051790611daa565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b5050505050905090565b600061057b33848461124c565b5060015b92915050565b6005546001600160a01b031633146105b85760405162461bcd60e51b81526004016105af90611dde565b60405180910390fd5b60018110156106095760405162461bcd60e51b815260206004820152601e60248201527f4d61782074782063616e74206265206c6f776572207468616e20302e3125000060448201526064016105af565b6103e88161061660025490565b6106209190611e29565b61062a9190611e40565b600f8190556040519081527f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf906020015b60405180910390a150565b6000610673848484611370565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106f85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016105af565b610705853385840361124c565b506001949350505050565b6007546001600160a01b0316331461076a5760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206665652072656365697665722063616e207472696767657200000060448201526064016105af565b6007546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156107a3573d6000803e3d6000fd5b50565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161057b9185906107dd908690611e62565b61124c565b6005546001600160a01b0316331461080c5760405162461bcd60e51b81526004016105af90611dde565b60638211156108555760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420627579207461782076616c756560581b60448201526064016105af565b606381111561089f5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656c6c207461782076616c756560501b60448201526064016105af565b600b829055600c81905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191015b60405180910390a15050565b6007546001600160a01b031633148061090a57506005546001600160a01b031633145b6109565760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206665652072656365697665722063616e207472696767657200000060448201526064016105af565b3060009081526020819052604090205461096f81611841565b47801561097e5761097e6119da565b5050565b6005546001600160a01b031633146109ac5760405162461bcd60e51b81526004016105af90611dde565b6109b66000611a27565b565b6005546001600160a01b031633146109e25760405162461bcd60e51b81526004016105af90611dde565b600254600f556002546010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf610a1860025490565b60405190815260200160405180910390a17f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001610a5360025490565b60405190815260200160405180910390a1565b6005546001600160a01b03163314610a905760405162461bcd60e51b81526004016105af90611dde565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee9060200161065b565b6005546001600160a01b03163314610b085760405162461bcd60e51b81526004016105af90611dde565b6001600160a01b038216600081815260066020908152604091829020805460ff19168515159081179091558251938452908301527f2d43abd87b27cee7b0aa8c6f7e0b4a3247b683262a83cbc2318b0df398a49aa991016108db565b6060600480546104eb90611daa565b6005546001600160a01b03163314610b9d5760405162461bcd60e51b81526004016105af90611dde565b61271082610baa60025490565b610bb49190611e29565b610bbe9190611e40565b60115561271081610bce60025490565b610bd89190611e29565b610be29190611e40565b60125560408051838152602081018390527f2b3f4c022d9943b151090e389857495bb9d8493714259cc19a540f5a11475fb191016108db565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610c9d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105af565b610caa338585840361124c565b5060019392505050565b600061057b338484611370565b6005546001600160a01b03163314610ceb5760405162461bcd60e51b81526004016105af90611dde565b6001811015610d475760405162461bcd60e51b815260206004820152602260248201527f4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e604482015261312560f01b60648201526084016105af565b6103e881610d5460025490565b610d5e9190611e29565b610d689190611e40565b60108190556040519081527f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e0019060200161065b565b6005546001600160a01b03163314610dc75760405162461bcd60e51b81526004016105af90611dde565b601454600160a01b900460ff1615610e215760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016105af565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155610e599030906107dd60025490565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed09190611e75565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190611e75565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc79190611e75565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d719473061100f816001600160a01b031660009081526020819052604090205490565b6000806110246005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561108c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110b19190611e92565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af115801561110a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112e9190611ec0565b506014805462ff00ff60a01b19166201000160a01b1790554360088190556009805467ffffffffffffffff191667ffffffffffffffff90921691909117905530600090815260066020526040808220805460ff19166001179055600b829055517fea4359d5c4b8f0945a64ab9c37fe830b3407d45e0e6e6f84275977a570457d6f9190a1565b6005546001600160a01b031633146111de5760405162461bcd60e51b81526004016105af90611dde565b6001600160a01b0381166112435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105af565b6107a381611a27565b6001600160a01b0383166112ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105af565b6001600160a01b03821661130f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105af565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166113965760405162461bcd60e51b81526004016105af90611edd565b6001600160a01b0382166113bc5760405162461bcd60e51b81526004016105af90611f22565b6000811161141e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105af565b60006114326005546001600160a01b031690565b6001600160a01b0316846001600160a01b03161415801561146157506005546001600160a01b03848116911614155b80156114775750601454600160a81b900460ff16155b156118165761149c6064611496600b5485611a7990919063ffffffff16565b90611a8c565b6014549091506001600160a01b0385811691161480156114ca57506013546001600160a01b03848116911614155b80156114ef57506001600160a01b03831660009081526006602052604090205460ff16155b156115f957600f548211156115465760405162461bcd60e51b815260206004820152601b60248201527f4578636565647320746865205f7478416d6f756e744c696d69742e000000000060448201526064016105af565b60105482611569856001600160a01b031660009081526020819052604090205490565b6115739190611e62565b11156115c15760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105af565b4360085460036115d19190611e62565b11156115e357823b156115e357600080fd5b600e80549060006115f383611f65565b91905055505b6014546001600160a01b0384811691161480159061163057506001600160a01b03831660009081526006602052604090205460ff16155b156116b05760105482611658856001600160a01b031660009081526020819052604090205490565b6116629190611e62565b11156116b05760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016105af565b6014546001600160a01b0384811691161480156116d657506001600160a01b0384163014155b156116f8576116f56064611496600c5485611a7990919063ffffffff16565b90505b30600090815260208190526040902054601454600160a81b900460ff1615801561172f57506014546001600160a01b038581169116145b80156117445750601454600160b01b900460ff165b8015611751575060115481115b80156117605750600d54600e54115b156118145760095467ffffffffffffffff1643111561177f576000600a555b6003600a54106117d15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b2100000000000000000060448201526064016105af565b6117ee6117e9846117e484601254611a98565b611a98565b611841565b4780156117fd576117fd6119da565b600a805490600061180d83611f65565b9190505550505b505b801561182757611827843083611aad565b61183b84846118368585611c01565b611aad565b50505050565b6014805460ff60a81b1916600160a81b1790556009805467ffffffffffffffff431667ffffffffffffffff1990911617905560408051600280825260608201835260009260208301908036833701905050905030816000815181106118a8576118a8611f7e565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119259190611e75565b8160018151811061193857611938611f7e565b6001600160a01b03928316602091820292909201015260135461195e913091168461124c565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611997908590600090869030904290600401611f94565b600060405180830381600087803b1580156119b157600080fd5b505af11580156119c5573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6007546040516000916001600160a01b03169047908381818185875af1925050503d806000811461183b576040519150601f19603f3d011682016040523d82523d6000602084013e61183b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611a858284611e29565b9392505050565b6000611a858284611e40565b6000818311611aa75782611a85565b50919050565b6001600160a01b038316611ad35760405162461bcd60e51b81526004016105af90611edd565b6001600160a01b038216611af95760405162461bcd60e51b81526004016105af90611f22565b6001600160a01b03831660009081526020819052604090205481811015611b715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105af565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611ba8908490611e62565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611bf491815260200190565b60405180910390a361183b565b6000611a858284612005565b600060208083528351808285015260005b81811015611c3a57858101830151858201604001528201611c1e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107a357600080fd5b60008060408385031215611c8357600080fd5b8235611c8e81611c5b565b946020939093013593505050565b600060208284031215611cae57600080fd5b5035919050565b600080600060608486031215611cca57600080fd5b8335611cd581611c5b565b92506020840135611ce581611c5b565b929592945050506040919091013590565b60008060408385031215611d0957600080fd5b50508035926020909101359150565b600060208284031215611d2a57600080fd5b8135611a8581611c5b565b80151581146107a357600080fd5b60008060408385031215611d5657600080fd5b8235611d6181611c5b565b91506020830135611d7181611d35565b809150509250929050565b60008060408385031215611d8f57600080fd5b8235611d9a81611c5b565b91506020830135611d7181611c5b565b600181811c90821680611dbe57607f821691505b602082108103611aa757634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761057f5761057f611e13565b600082611e5d57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561057f5761057f611e13565b600060208284031215611e8757600080fd5b8151611a8581611c5b565b600080600060608486031215611ea757600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611ed257600080fd5b8151611a8581611d35565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b600060018201611f7757611f77611e13565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611fe45784516001600160a01b031683529383019391830191600101611fbf565b50506001600160a01b03969096166060850152505050608001529392505050565b8181038181111561057f5761057f611e1356fea2646970667358221220b3005b2af661d4a943784c87262d77b8a2a6b31d9fa09078628619c2fc58601a64736f6c63430008130033";

type TardoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TardoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tardo__factory extends ContractFactory {
  constructor(...args: TardoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Tardo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Tardo__factory {
    return super.connect(runner) as Tardo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TardoInterface {
    return new Interface(_abi) as TardoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Tardo {
    return new Contract(address, _abi, runner) as unknown as Tardo;
  }
}
