/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDexFactory,
  IDexFactoryInterface,
} from "../../0x78fca1a50af3a9dabe90099df80a4a809ce386b3.sol/IDexFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDexFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDexFactoryInterface {
    return new Interface(_abi) as IDexFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IDexFactory {
    return new Contract(address, _abi, runner) as unknown as IDexFactory;
  }
}
