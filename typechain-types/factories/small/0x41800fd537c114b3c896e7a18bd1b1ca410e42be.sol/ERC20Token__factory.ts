/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../small/0x41800fd537c114b3c896e7a18bd1b1ca410e42be.sol/ERC20Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260036080908152621554d160ea1b60a052600090610022908261012a565b506040805180820190915260038152621554d160ea1b602082015260019061004a908261012a565b5034801561005757600080fd5b5060005b6107d08110156100855760006002826107d0811061007b5761007b6101e8565b015560010161005b565b506101fe565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100b557607f821691505b6020821081036100d557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012557806000526020600020601f840160051c810160208510156101025750805b601f840160051c820191505b81811015610122576000815560010161010e565b50505b505050565b81516001600160401b038111156101435761014361008b565b6101578161015184546100a1565b846100db565b6020601f82116001811461018b57600083156101735750848201515b600019600385901b1c1916600184901b178455610122565b600084815260208120601f198516915b828110156101bb578785015182556020948501946001909201910161019b565b50848210156101d95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b61023b8061020d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde031461004657806395d89b4114610064578063b0a4d7d31461006c575b600080fd5b61004e610081565b60405161005b9190610145565b60405180910390f35b61004e61010f565b61007f61007a366004610193565b61011c565b005b6000805461008e906101b5565b80601f01602080910402602001604051908101604052809291908181526020018280546100ba906101b5565b80156101075780601f106100dc57610100808354040283529160200191610107565b820191906000526020600020905b8154815290600101906020018083116100ea57829003601f168201915b505050505081565b6001805461008e906101b5565b6107d0821061012a57600080fd5b806002836107d0811061013f5761013f6101ef565b01555050565b602081526000825180602084015260005b818110156101735760208186018101516040868401015201610156565b506000604082850101526040601f19601f83011684010191505092915050565b600080604083850312156101a657600080fd5b50508035926020909101359150565b600181811c908216806101c957607f821691505b6020821081036101e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207c1cc94669814a0c4c160eb34b1bd2840b556fd6ad1832f5c9510aef73c7bd8364736f6c634300081e0033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
