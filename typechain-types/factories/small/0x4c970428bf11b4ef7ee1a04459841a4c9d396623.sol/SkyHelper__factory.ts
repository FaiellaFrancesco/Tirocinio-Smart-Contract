/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SkyHelper,
  SkyHelperInterface,
} from "../../../small/0x4c970428bf11b4ef7ee1a04459841a4c9d396623.sol/SkyHelper";

const _abi = [
  {
    inputs: [],
    name: "transferSky",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160a01b031990811673072e42363a9b15d1ca01d48cd06e970fa70eac70179091556001805482167366d280b4da7da0c46e5f99c7ce7b945df0a0bc8c179055600280549091167356072c95faa701256059aa122697b133aded9279179055348015607557600080fd5b506101e3806100856000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636f9d896d14610030575b600080fd5b61003861003a565b005b6002546001546000546040516370a0823160e01b81526001600160a01b0392831660048201819052938316936323b872dd939092169060649085906370a0823190602401602060405180830381865afa15801561009b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bf9190610144565b6100c9919061015d565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561011d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101419190610184565b50565b60006020828403121561015657600080fd5b5051919050565b8181038181111561017e57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561019657600080fd5b815180151581146101a657600080fd5b939250505056fea264697066735822122043ced4b129c92ef543b50711b0fef0968d09d041d1955c9bf54058ae1694e5b264736f6c634300081e0033";

type SkyHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SkyHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SkyHelper__factory extends ContractFactory {
  constructor(...args: SkyHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SkyHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SkyHelper__factory {
    return super.connect(runner) as SkyHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SkyHelperInterface {
    return new Interface(_abi) as SkyHelperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SkyHelper {
    return new Contract(address, _abi, runner) as unknown as SkyHelper;
  }
}
