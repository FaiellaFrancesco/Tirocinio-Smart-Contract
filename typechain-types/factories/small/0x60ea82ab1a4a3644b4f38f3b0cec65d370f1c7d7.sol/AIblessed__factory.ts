/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AIblessed,
  AIblessedInterface,
} from "../../../small/0x60ea82ab1a4a3644b4f38f3b0cec65d370f1c7d7.sol/AIblessed";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260096080908152681052589b195cdcd95960ba1b60a0526000906100289082610140565b5060408051808201909152600381526220a4a160e91b60208201526001906100509082610140565b506002805460ff1916601290811790915561006c90600a6102fd565b61007990620f4240610310565b60035534801561008857600080fd5b5060035433600090815260046020526040902055610327565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100cb57607f821691505b6020821081036100eb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561013b57806000526020600020601f840160051c810160208510156101185750805b601f840160051c820191505b818110156101385760008155600101610124565b50505b505050565b81516001600160401b03811115610159576101596100a1565b61016d8161016784546100b7565b846100f1565b6020601f8211600181146101a157600083156101895750848201515b600019600385901b1c1916600184901b178455610138565b600084815260208120601f198516915b828110156101d157878501518255602094850194600190920191016101b1565b50848210156101ef5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561024f57808504811115610233576102336101fe565b600184161561024157908102905b60019390931c928002610218565b935093915050565b600082610266575060016102f7565b81610273575060006102f7565b81600181146102895760028114610293576102af565b60019150506102f7565b60ff8411156102a4576102a46101fe565b50506001821b6102f7565b5060208310610133831016604e8410600b84101617156102d2575081810a6102f7565b6102df6000198484610214565b80600019048211156102f3576102f36101fe565b0290505b92915050565b60006103098383610257565b9392505050565b80820281158282048414176102f7576102f76101fe565b6103f8806103366000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd14610085578063313ce5671461009c57806370a08231146100bb57806395d89b41146100db578063a9059cbb146100e3575b600080fd5b61006f610106565b60405161007c9190610296565b60405180910390f35b61008e60035481565b60405190815260200161007c565b6002546100a99060ff1681565b60405160ff909116815260200161007c565b61008e6100c9366004610300565b60046020526000908152604090205481565b61006f610194565b6100f66100f1366004610322565b6101a1565b604051901515815260200161007c565b600080546101139061034c565b80601f016020809104026020016040519081016040528092919081815260200182805461013f9061034c565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b505050505081565b600180546101139061034c565b336000908152600460205260408120548211156101fb5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640160405180910390fd5b336000908152600460205260408120805484929061021a90849061039c565b90915550506001600160a01b038316600090815260046020526040812080548492906102479084906103af565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35060015b92915050565b602081526000825180602084015260005b818110156102c457602081860181015160408684010152016102a7565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146102fb57600080fd5b919050565b60006020828403121561031257600080fd5b61031b826102e4565b9392505050565b6000806040838503121561033557600080fd5b61033e836102e4565b946020939093013593505050565b600181811c9082168061036057607f821691505b60208210810361038057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561029057610290610386565b808201808211156102905761029061038656fea26469706673582212201c118b2803b47351944c29085a9d114bcbad93612fb07ec53274fea1c20c12fa64736f6c634300081e0033";

type AIblessedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIblessedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIblessed__factory extends ContractFactory {
  constructor(...args: AIblessedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AIblessed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AIblessed__factory {
    return super.connect(runner) as AIblessed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIblessedInterface {
    return new Interface(_abi) as AIblessedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AIblessed {
    return new Contract(address, _abi, runner) as unknown as AIblessed;
  }
}
