/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0xbc09553ba184a4ac742d5092382f3ae1614d12bd.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxwallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600555600a6006556000600755600760085560006009556000600b556009600a610030919061031a565b61003e90633b9aca00610330565b600c55600e805461ffff60a81b191690556000600f819055601081905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100f16009600a61031a565b6100ff90633b9aca00610330565b61010a906002610330565b6101149190610347565b3360009081526001602052604090205560646101326009600a61031a565b61014090633b9aca00610330565b61014b906062610330565b6101559190610347565b30600090815260016020526040902055336001600160a01b03166000600080516020611d14833981519152606461018e6009600a61031a565b61019c90633b9aca00610330565b6101a7906002610330565b6101b19190610347565b60405190815260200160405180910390a3306000600080516020611d1483398151915260646101e26009600a61031a565b6101f090633b9aca00610330565b6101fb906062610330565b6102059190610347565b60405190815260200160405180910390a3610369565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561026c578085048111156102505761025061021b565b600184161561025e57908102905b60019390931c928002610235565b935093915050565b60008261028357506001610314565b8161029057506000610314565b81600181146102a657600281146102b0576102cc565b6001915050610314565b60ff8411156102c1576102c161021b565b50506001821b610314565b5060208310610133831016604e8410600b84101617156102ef575081810a610314565b6102fc6000198484610231565b80600019048211156103105761031061021b565b0290505b92915050565b600061032960ff841683610274565b9392505050565b80820281158282048414176103145761031461021b565b60008261036457634e487b7160e01b600052601260045260246000fd5b500490565b61199c806103786000396000f3fe6080604052600436106100f75760003560e01c8063715018a61161008a57806395d89b411161005957806395d89b41146102ad578063a9059cbb146102dc578063dd62ed3e146102fc578063fb201b1d1461034257600080fd5b8063715018a61461023b578063751039fc14610250578063798e5036146102655780638da5cb5b1461028557600080fd5b806320800a00116100c657806320800a00146101b257806323b872dd146101c9578063313ce567146101e957806370a082311461020557600080fd5b806306fdde0314610103578063095ea7b3146101495780630faee56f1461017957806318160ddd1461019d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060408051808201909152600b81526a1a9d5cdd1a58d94d18d85d60aa1b60208201525b6040516101409190611457565b60405180910390f35b34801561015557600080fd5b506101696101643660046114ba565b610357565b6040519015158152602001610140565b34801561018557600080fd5b5061018f600c5481565b604051908152602001610140565b3480156101a957600080fd5b5061018f61036e565b3480156101be57600080fd5b506101c761038f565b005b3480156101d557600080fd5b506101696101e43660046114e6565b6103fe565b3480156101f557600080fd5b5060405160098152602001610140565b34801561021157600080fd5b5061018f610220366004611527565b6001600160a01b031660009081526001602052604090205490565b34801561024757600080fd5b506101c76104a9565b34801561025c57600080fd5b506101c761051d565b34801561027157600080fd5b506101c7610280366004611527565b610549565b34801561029157600080fd5b506000546040516001600160a01b039091168152602001610140565b3480156102b957600080fd5b5060408051808201909152600681526518983bb0bd1960d11b6020820152610133565b3480156102e857600080fd5b506101696102f73660046114ba565b610587565b34801561030857600080fd5b5061018f610317366004611544565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561034e57600080fd5b506101c7610594565b600061036433848461094c565b5060015b92915050565b600061037c6009600a61167a565b61038a90633b9aca00611689565b905090565b6000546001600160a01b031633146103c25760405162461bcd60e51b81526004016103b9906116a0565b60405180910390fd5b600047116103cf57600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103fb573d6000803e3d6000fd5b50565b600061040b848484610a70565b6004546001600160a01b031633148015906104485750600e546001600160a01b038581169116148061044857506001600160a01b03831661dead14155b1561049f5761049f843361049a8560405180606001604052806028815260200161193f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f3d565b61094c565b5060019392505050565b6000546001600160a01b031633146104d35760405162461bcd60e51b81526004016103b9906116a0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105475760405162461bcd60e51b81526004016103b9906116a0565b565b3360009081526003602052604090205460ff1661056557600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610364338484610a70565b6000546001600160a01b031633146105be5760405162461bcd60e51b81526004016103b9906116a0565b600e54600160a01b900460ff16156106185760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103b9565b600d80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556106619030906106536009600a61167a565b61049a90633b9aca00611689565b600d60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d891906116d5565b6001600160a01b031663c9c6539630600d60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e91906116d5565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf91906116d5565b600e80546001600160a01b039283166001600160a01b0319909116179055600d541663f305d7194730610817816001600160a01b031660009081526001602052604090205490565b60008061082c6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610894573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108b991906116f2565b5050600e805462ff00ff60a01b1981166201000160a01b17909155600d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610928573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190611720565b6001600160a01b0383166109ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b9565b6001600160a01b038216610a0f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ad45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b9565b6001600160a01b038216610b365760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b9565b60008111610b985760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103b9565b60006001600160a01b0384163014801590610bbc57506001600160a01b0383163014155b15610ddf57600e54600160a81b900460ff16610c0157610bfe6064610bf860085460095411610bed57600654610bf1565b6007545b8590610f77565b90611000565b90505b600e546001600160a01b038581169116148015610c2c5750600d546001600160a01b03848116911614155b8015610c5157506001600160a01b03831660009081526003602052604090205460ff16155b8015610c6b57506004546001600160a01b03848116911614155b15610cb05743600a5414610c83576000600b5543600a555b81600b6000828254610c959190611742565b909155505060098054906000610caa83611755565b91905055505b600e546001600160a01b038481169116148015610cd657506001600160a01b0384163014155b15610d3157610ce3611042565b600b541080610cf4575043600a5414155b610d315760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103b9565b30600090815260016020526040902054600e54600160a81b900460ff16158015610d685750600e546001600160a01b038581169116145b8015610d7d5750600e54600160b01b900460ff165b8015610d9757506004546001600160a01b03868116911614155b15610ddd578015610dd1576000600c548211610db35781610db7565b600c545b9050610dcf818511610dc957846111d0565b816111d0565b505b47610ddb4761134a565b505b505b6001600160a01b038416600090815260016020526040902054610e029083611388565b6001600160a01b038516600090815260016020526040902055610e47610e288383611388565b6001600160a01b038516600090815260016020526040902054906113ca565b6001600160a01b0384166000908152600160205260409020558015610eda5730600090815260016020526040902054610e8090826113ca565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ed19085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f37576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f258585611388565b60405190815260200160405180910390a35b50505050565b60008184841115610f615760405162461bcd60e51b81526004016103b99190611457565b506000610f6e848661176e565b95945050505050565b600082600003610f8957506000610368565b6000610f958385611689565b905082610fa28583611781565b14610ff95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103b9565b9392505050565b6000610ff983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611429565b604080516002808252606082018352600092839291906020830190803683375050600d54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d491906116d5565b816000815181106110e7576110e76117b9565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061111b5761111b6117b9565b6001600160a01b039283166020918202929092010152600d5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611167906729a2241af62c0000908690600401611814565b600060405180830381865afa158015611184573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ac9190810190611835565b9050806001815181106111c1576111c16117b9565b60200260200101519250505090565b600e805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110611218576112186117b9565b6001600160a01b03928316602091820292909201810191909152600d54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906116d5565b816001815181106112a8576112a86117b9565b6001600160a01b039283166020918202929092010152600d546112ce913091168461094c565b600d5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611307908590600090869030904290600401611902565b600060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b5050600e805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611384573d6000803e3d6000fd5b5050565b6000610ff983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f3d565b6000806113d78385611742565b905083811015610ff95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103b9565b6000818361144a5760405162461bcd60e51b81526004016103b99190611457565b506000610f6e8486611781565b602081526000825180602084015260005b818110156114855760208186018101516040868401015201611468565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103fb57600080fd5b600080604083850312156114cd57600080fd5b82356114d8816114a5565b946020939093013593505050565b6000806000606084860312156114fb57600080fd5b8335611506816114a5565b92506020840135611516816114a5565b929592945050506040919091013590565b60006020828403121561153957600080fd5b8135610ff9816114a5565b6000806040838503121561155757600080fd5b8235611562816114a5565b91506020830135611572816114a5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115ce578085048111156115b2576115b261157d565b60018416156115c057908102905b60019390931c928002611597565b935093915050565b6000826115e557506001610368565b816115f257506000610368565b816001811461160857600281146116125761162e565b6001915050610368565b60ff8411156116235761162361157d565b50506001821b610368565b5060208310610133831016604e8410600b8410161715611651575081810a610368565b61165e6000198484611593565b80600019048211156116725761167261157d565b029392505050565b6000610ff960ff8416836115d6565b80820281158282048414176103685761036861157d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116e757600080fd5b8151610ff9816114a5565b60008060006060848603121561170757600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561173257600080fd5b81518015158114610ff957600080fd5b808201808211156103685761036861157d565b6000600182016117675761176761157d565b5060010190565b818103818111156103685761036861157d565b60008261179e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561180a5781516001600160a01b03168652602095860195909101906001016117e3565b5093949350505050565b82815260406020820152600061182d60408301846117cf565b949350505050565b60006020828403121561184757600080fd5b815167ffffffffffffffff81111561185e57600080fd5b8201601f8101841361186f57600080fd5b805167ffffffffffffffff811115611889576118896117a3565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118b6576118b66117a3565b6040529182526020818401810192908101878411156118d457600080fd5b6020850194505b838510156118f7578451808252602095860195909350016118db565b509695505050505050565b85815284602082015260a06040820152600061192160a08301866117cf565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220907a2d5a908c26ca1057df8b777f7f7102780ec92b4336fce105b429e501274264736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
