/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  TOKEN,
  TOKENInterface,
} from "../../0x6fbc8a2a67ea2e06f56561b02748058a31893b39.sol/TOKEN";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260026005556000600655600260075560006008556000600a556009600a61002b919061042a565b6100389062989680610440565b600b55600d805461ffff60a81b191690556000600e819055600f81905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100eb6009600a61042a565b6100f990633b9aca00610440565b610104906060610440565b61010e9190610457565b30600090815260016020526040902055606461012c6009600a61042a565b61013a90633b9aca00610440565b610145906002610440565b61014f9190610457565b73d8da6bf26964af9d7eed9e03e53415d37aa9604560005260016020527fb931be0b3d1fb06daf0d92e2b8dfe49ead9172e102b3af1e07a10cc29003beb255606461019c6009600a61042a565b6101aa90633b9aca00610440565b6101b5906002610440565b6101bf9190610457565b7394845333028b1204fbe14e1278fd4adde46b22ce600090815260016020527fcc89cdffe6d8d6bb620c9aae10557c2897f6e2865c73c41f65fdada66306d0af919091553090600080516020611de283398151915260646102226009600a61042a565b61023090633b9aca00610440565b61023b906060610440565b6102459190610457565b60405190815260200160405180910390a373d8da6bf26964af9d7eed9e03e53415d37aa960456000600080516020611de2833981519152606461028a6009600a61042a565b61029890633b9aca00610440565b6102a3906002610440565b6102ad9190610457565b60405190815260200160405180910390a37394845333028b1204fbe14e1278fd4adde46b22ce6000600080516020611de283398151915260646102f26009600a61042a565b61030090633b9aca00610440565b61030b906002610440565b6103159190610457565b60405190815260200160405180910390a3610479565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561037c578085048111156103605761036061032b565b600184161561036e57908102905b60019390931c928002610345565b935093915050565b60008261039357506001610424565b816103a057506000610424565b81600181146103b657600281146103c0576103dc565b6001915050610424565b60ff8411156103d1576103d161032b565b50506001821b610424565b5060208310610133831016604e8410600b84101617156103ff575081810a610424565b61040c6000198484610341565b80600019048211156104205761042061032b565b0290505b92915050565b600061043960ff841683610384565b9392505050565b80820281158282048414176104245761042461032b565b60008261047457634e487b7160e01b600052601260045260246000fd5b500490565b61195a806104886000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb146102a2578063c9567bf9146102c2578063dd62ed3e146102d7578063ea414b281461031d57600080fd5b806370a08231146101ff578063715018a6146102355780638da5cb5b1461024a57806395d89b411461027257600080fd5b806318160ddd116100c657806318160ddd1461019757806320969d07146101ac57806323b872dd146101c3578063313ce567146101e357600080fd5b806306fdde03146100f8578063095ea7b3146101435780630faee56f1461017357600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5060408051808201909152601081526f2222a9aa24a72ca99021a424a1a5a2a760811b60208201525b60405161013a9190611415565b60405180910390f35b34801561014f57600080fd5b5061016361015e366004611478565b61033d565b604051901515815260200161013a565b34801561017f57600080fd5b50610189600b5481565b60405190815260200161013a565b3480156101a357600080fd5b50610189610354565b3480156101b857600080fd5b506101c1610375565b005b3480156101cf57600080fd5b506101636101de3660046114a4565b6103e4565b3480156101ef57600080fd5b506040516009815260200161013a565b34801561020b57600080fd5b5061018961021a3660046114e5565b6001600160a01b031660009081526001602052604090205490565b34801561024157600080fd5b506101c161048f565b34801561025657600080fd5b506000546040516001600160a01b03909116815260200161013a565b34801561027e57600080fd5b5060408051808201909152600781526644455354494e5960c81b602082015261012d565b3480156102ae57600080fd5b506101636102bd366004611478565b610503565b3480156102ce57600080fd5b506101c1610510565b3480156102e357600080fd5b506101896102f2366004611502565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032957600080fd5b506101c16103383660046114e5565b6108c8565b600061034a33848461090a565b5060015b92915050565b60006103626009600a611638565b61037090633b9aca00611647565b905090565b6000546001600160a01b031633146103a85760405162461bcd60e51b815260040161039f9061165e565b60405180910390fd5b600047116103b557600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103e1573d6000803e3d6000fd5b50565b60006103f1848484610a2e565b6004546001600160a01b0316331480159061042e5750600d546001600160a01b038581169116148061042e57506001600160a01b03831661dead14155b15610485576104858433610480856040518060600160405280602881526020016118fd602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610efb565b61090a565b5060019392505050565b6000546001600160a01b031633146104b95760405162461bcd60e51b815260040161039f9061165e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061034a338484610a2e565b6000546001600160a01b0316331461053a5760405162461bcd60e51b815260040161039f9061165e565b600d54600160a01b900460ff16156105945760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161039f565b600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556105dd9030906105cf6009600a611638565b61048090633b9aca00611647565b600c60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190611693565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611693565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190611693565b600d80546001600160a01b039283166001600160a01b0319909116179055600c541663f305d7194730610793816001600160a01b031660009081526001602052604090205490565b6000806107a86000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610810573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061083591906116b0565b5050600d805462ff00ff60a01b1981166201000160a01b17909155600c5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e191906116de565b6004546001600160a01b0316336001600160a01b0316146108e857600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661096c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161039f565b6001600160a01b0382166109cd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161039f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a925760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161039f565b6001600160a01b038216610af45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161039f565b60008111610b565760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161039f565b60006001600160a01b0384163014801590610b7a57506001600160a01b0383163014155b15610d9d57600d54600160a81b900460ff16610bbf57610bbc6064610bb660075460085411610bab57600554610baf565b6006545b8590610f35565b90610fbe565b90505b600d546001600160a01b038581169116148015610bea5750600c546001600160a01b03848116911614155b8015610c0f57506001600160a01b03831660009081526003602052604090205460ff16155b8015610c2957506004546001600160a01b03848116911614155b15610c6e574360095414610c41576000600a55436009555b81600a6000828254610c539190611700565b909155505060088054906000610c6883611713565b91905055505b600d546001600160a01b038481169116148015610c9457506001600160a01b0384163014155b15610cef57610ca1611000565b600a541080610cb257504360095414155b610cef5760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b604482015260640161039f565b30600090815260016020526040902054600d54600160a81b900460ff16158015610d265750600d546001600160a01b038581169116145b8015610d3b5750600d54600160b01b900460ff165b8015610d5557506004546001600160a01b03868116911614155b15610d9b578015610d8f576000600b548211610d715781610d75565b600b545b9050610d8d818511610d87578461118e565b8161118e565b505b47610d9947611308565b505b505b6001600160a01b038416600090815260016020526040902054610dc09083611346565b6001600160a01b038516600090815260016020526040902055610e05610de68383611346565b6001600160a01b03851660009081526001602052604090205490611388565b6001600160a01b0384166000908152600160205260409020558015610e985730600090815260016020526040902054610e3e9082611388565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e8f9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610ef5576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610ee38585611346565b60405190815260200160405180910390a35b50505050565b60008184841115610f1f5760405162461bcd60e51b815260040161039f9190611415565b506000610f2c848661172c565b95945050505050565b600082600003610f475750600061034e565b6000610f538385611647565b905082610f60858361173f565b14610fb75760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161039f565b9392505050565b6000610fb783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113e7565b604080516002808252606082018352600092839291906020830190803683375050600c54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561106e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110929190611693565b816000815181106110a5576110a5611777565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110d9576110d9611777565b6001600160a01b039283166020918202929092010152600c5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061112590671bc16d674ec800009086906004016117d2565b600060405180830381865afa158015611142573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261116a91908101906117f3565b90508060018151811061117f5761117f611777565b60200260200101519250505090565b600d805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111d6576111d6611777565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561122f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190611693565b8160018151811061126657611266611777565b6001600160a01b039283166020918202929092010152600c5461128c913091168461090a565b600c5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112c59085906000908690309042906004016118c0565b600060405180830381600087803b1580156112df57600080fd5b505af11580156112f3573d6000803e3d6000fd5b5050600d805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611342573d6000803e3d6000fd5b5050565b6000610fb783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610efb565b6000806113958385611700565b905083811015610fb75760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161039f565b600081836114085760405162461bcd60e51b815260040161039f9190611415565b506000610f2c848661173f565b602081526000825180602084015260005b818110156114435760208186018101516040868401015201611426565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103e157600080fd5b6000806040838503121561148b57600080fd5b823561149681611463565b946020939093013593505050565b6000806000606084860312156114b957600080fd5b83356114c481611463565b925060208401356114d481611463565b929592945050506040919091013590565b6000602082840312156114f757600080fd5b8135610fb781611463565b6000806040838503121561151557600080fd5b823561152081611463565b9150602083013561153081611463565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561158c578085048111156115705761157061153b565b600184161561157e57908102905b60019390931c928002611555565b935093915050565b6000826115a35750600161034e565b816115b05750600061034e565b81600181146115c657600281146115d0576115ec565b600191505061034e565b60ff8411156115e1576115e161153b565b50506001821b61034e565b5060208310610133831016604e8410600b841016171561160f575081810a61034e565b61161c6000198484611551565b80600019048211156116305761163061153b565b029392505050565b6000610fb760ff841683611594565b808202811582820484141761034e5761034e61153b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116a557600080fd5b8151610fb781611463565b6000806000606084860312156116c557600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156116f057600080fd5b81518015158114610fb757600080fd5b8082018082111561034e5761034e61153b565b6000600182016117255761172561153b565b5060010190565b8181038181111561034e5761034e61153b565b60008261175c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156117c85781516001600160a01b03168652602095860195909101906001016117a1565b5093949350505050565b8281526040602082015260006117eb604083018461178d565b949350505050565b60006020828403121561180557600080fd5b815167ffffffffffffffff81111561181c57600080fd5b8201601f8101841361182d57600080fd5b805167ffffffffffffffff81111561184757611847611761565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561187457611874611761565b60405291825260208184018101929081018784111561189257600080fd5b6020850194505b838510156118b557845180825260209586019590935001611899565b509695505050505050565b85815284602082015260a0604082015260006118df60a083018661178d565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220077b58a741528bbec573c441104977a10db4f03d4788d6af2deadb758c04bb5764736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOKEN__factory extends ContractFactory {
  constructor(...args: TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TOKEN__factory {
    return super.connect(runner) as TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOKENInterface {
    return new Interface(_abi) as TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TOKEN {
    return new Contract(address, _abi, runner) as unknown as TOKEN;
  }
}
