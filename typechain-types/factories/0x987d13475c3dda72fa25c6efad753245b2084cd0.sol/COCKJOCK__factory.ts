/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  COCKJOCK,
  COCKJOCKInterface,
} from "../../0x987d13475c3dda72fa25c6efad753245b2084cd0.sol/COCKJOCK";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_buyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalBuyTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_finalSellTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_transferTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260196006556019600755600060085560006009556005600a55600a600b55600a600c556000600d556000600e556009600a62000041919062000361565b62000051906301312d0062000379565b600f55620000626009600a62000361565b62000072906301312d0062000379565b601055620000836009600a62000361565b62000092906298968062000379565b601155620000a36009600a62000361565b620000b3906301312d0062000379565b6012556014805461ffff60a81b1916905560006015819055601655348015620000db57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916731973032d4bef8abea1fc413f5b854b7741364481179055620001516009600a62000361565b6200016190633b9aca0062000379565b3360009081526001602081905260408220929092556003906200018c6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001eb3390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002256009600a62000361565b6200023590633b9aca0062000379565b60405190815260200160405180910390a362000393565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a35781600019048211156200028757620002876200024c565b808516156200029557918102915b93841c939080029062000267565b509250929050565b600082620002bc575060016200035b565b81620002cb575060006200035b565b8160018114620002e45760028114620002ef576200030f565b60019150506200035b565b60ff8411156200030357620003036200024c565b50506001821b6200035b565b5060208310610133831016604e8410600b841016171562000334575081810a6200035b565b62000340838362000262565b80600019048211156200035757620003576200024c565b0290505b92915050565b60006200037260ff841683620002ab565b9392505050565b80820281158282048414176200035b576200035b6200024c565b611cec80620003a36000396000f3fe6080604052600436106101a05760003560e01c806370a08231116100ec578063a9059cbb1161008a578063c9567bf911610064578063c9567bf914610492578063d34628cc146104a7578063dd62ed3e146104c7578063ec1f3f631461050d57600080fd5b8063a9059cbb14610446578063baeb7a7d14610466578063bf474bed1461047c57600080fd5b80637d1db4a5116100c65780637d1db4a5146103c15780638da5cb5b146103d75780638f9a55c0146103ff57806395d89b411461041557600080fd5b806370a0823114610361578063715018a614610397578063751039fc146103ac57600080fd5b806323b872dd1161015957806331c2d8471161013357806331c2d847146102dd5780633bbac579146102fd5780633ef947211461033657806351bc3c851461034c57600080fd5b806323b872dd1461028b57806327b1a8e9146102ab578063313ce567146102c157600080fd5b806306fdde03146101ac578063095ea7b3146101f55780630faee56f14610225578063109daa991461024957806317391e491461026057806318160ddd1461027657600080fd5b366101a757005b600080fd5b3480156101b857600080fd5b5060408051808201909152600e81526d436869636b656e204a6f636b657960901b60208201525b6040516101ec91906117b4565b60405180910390f35b34801561020157600080fd5b5061021561021036600461182b565b61052d565b60405190151581526020016101ec565b34801561023157600080fd5b5061023b60125481565b6040519081526020016101ec565b34801561025557600080fd5b5061025e610544565b005b34801561026c57600080fd5b5061023b600d5481565b34801561028257600080fd5b5061023b6105b4565b34801561029757600080fd5b506102156102a6366004611857565b6105d5565b3480156102b757600080fd5b5061023b600e5481565b3480156102cd57600080fd5b50604051600981526020016101ec565b3480156102e957600080fd5b5061025e6102f83660046118ae565b61063e565b34801561030957600080fd5b50610215610318366004611973565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561034257600080fd5b5061023b60095481565b34801561035857600080fd5b5061025e6106ca565b34801561036d57600080fd5b5061023b61037c366004611973565b6001600160a01b031660009081526001602052604090205490565b3480156103a357600080fd5b5061025e610719565b3480156103b857600080fd5b5061025e61078d565b3480156103cd57600080fd5b5061023b600f5481565b3480156103e357600080fd5b506000546040516001600160a01b0390911681526020016101ec565b34801561040b57600080fd5b5061023b60105481565b34801561042157600080fd5b50604080518082019091526008815267434f434b4a4f434b60c01b60208201526101df565b34801561045257600080fd5b5061021561046136600461182b565b61083a565b34801561047257600080fd5b5061023b60085481565b34801561048857600080fd5b5061023b60115481565b34801561049e57600080fd5b5061025e610847565b3480156104b357600080fd5b5061025e6104c23660046118ae565b610c03565b3480156104d357600080fd5b5061023b6104e2366004611990565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561051957600080fd5b5061025e6105283660046119c9565b610c8b565b600061053a338484610cd2565b5060015b92915050565b6000546001600160a01b031633146105775760405162461bcd60e51b815260040161056e906119e2565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105c26009600a611b11565b6105d090633b9aca00611b20565b905090565b60006105e2848484610df6565b610634843361062f85604051806060016040528060288152602001611c8f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611417565b610cd2565b5060019392505050565b6000546001600160a01b031633146106685760405162461bcd60e51b815260040161056e906119e2565b60005b81518110156106c65760006004600084848151811061068c5761068c611b37565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161066b565b5050565b6005546001600160a01b0316336001600160a01b0316146106ea57600080fd5b3060009081526001602052604090205480156107095761070981611451565b4780156106c6576106c6816115cb565b6000546001600160a01b031633146107435760405162461bcd60e51b815260040161056e906119e2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146107b75760405162461bcd60e51b815260040161056e906119e2565b6107c36009600a611b11565b6107d190633b9aca00611b20565b600f556107e06009600a611b11565b6107ee90633b9aca00611b20565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61081e6009600a611b11565b61082c90633b9aca00611b20565b6040519081526020016105aa565b600061053a338484610df6565b6000546001600160a01b031633146108715760405162461bcd60e51b815260040161056e906119e2565b601454600160a01b900460ff16156108cb5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161056e565b601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556109149030906109066009600a611b11565b61062f90633b9aca00611b20565b601360009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190611b4d565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a119190611b4d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190611b4d565b601480546001600160a01b039283166001600160a01b03199091161790556013541663f305d7194730610aca816001600160a01b031660009081526001602052604090205490565b600080610adf6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610b47573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b6c9190611b6a565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611b98565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b815260040161056e906119e2565b60005b81518110156106c657600160046000848481518110610c5157610c51611b37565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610c30565b6005546001600160a01b0316336001600160a01b031614610cab57600080fd5b6008548111158015610cbf57506009548111155b610cc857600080fd5b6008819055600955565b6001600160a01b038316610d345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056e565b6001600160a01b038216610d955760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056e565b6001600160a01b038216610ebc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056e565b60008111610f1e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161056e565b600080546001600160a01b03858116911614801590610f4b57506000546001600160a01b03848116911614155b8015610f6557506005546001600160a01b03848116911614155b156112d4576001600160a01b03841660009081526004602052604090205460ff16158015610fac57506001600160a01b03831660009081526004602052604090205460ff16155b610fb557600080fd5b600e54600003610fee57610feb6064610fe5600a54600e5411610fda57600654610fde565b6008545b8590611605565b9061168e565b90505b600e5415611013576110106064610fe5600d548561160590919063ffffffff16565b90505b6014546001600160a01b03858116911614801561103e57506013546001600160a01b03848116911614155b801561106357506001600160a01b03831660009081526003602052604090205460ff16155b1561116857600f548211156110ba5760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161056e565b601054826110dd856001600160a01b031660009081526001602052604090205490565b6110e79190611bba565b11156111355760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161056e565b6111506064610fe5600a54600e5411610fda57600654610fde565b600e8054919250600061116283611bcd565b91905055505b6014546001600160a01b03848116911614801561118e57506001600160a01b0384163014155b156111bb576111b86064610fe5600b54600e54116111ae57600754610fde565b6009548590611605565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156111f257506014546001600160a01b038581169116145b80156112075750601454600160b01b900460ff165b8015611214575060115481115b80156112235750600c54600e54115b156112d2576016544311156112385760006015555b60036015541061128a5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161056e565b6112a76112a28461129d846012546116d0565b6116d0565b611451565b4780156112b7576112b7476115cb565b601580549060006112c783611bcd565b909155505043601655505b505b801561134e57306000908152600160205260409020546112f490826116e5565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113459085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546113719083611744565b6001600160a01b0385166000908152600160205260409020556113b66113978383611744565b6001600160a01b038516600090815260016020526040902054906116e5565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114008585611744565b60405190815260200160405180910390a350505050565b6000818484111561143b5760405162461bcd60e51b815260040161056e91906117b4565b5060006114488486611be6565b95945050505050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061149957611499611b37565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115169190611b4d565b8160018151811061152957611529611b37565b6001600160a01b03928316602091820292909201015260135461154f9130911684610cd2565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611588908590600090869030904290600401611bf9565b600060405180830381600087803b1580156115a257600080fd5b505af11580156115b6573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156106c6573d6000803e3d6000fd5b6000826000036116175750600061053e565b60006116238385611b20565b9050826116308583611c6c565b146116875760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161056e565b9392505050565b600061168783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611786565b60008183116116df5782611687565b50919050565b6000806116f28385611bba565b9050838110156116875760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161056e565b600061168783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611417565b600081836117a75760405162461bcd60e51b815260040161056e91906117b4565b5060006114488486611c6c565b60006020808352835180602085015260005b818110156117e2578581018301518582016040015282016117c6565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461181857600080fd5b50565b803561182681611803565b919050565b6000806040838503121561183e57600080fd5b823561184981611803565b946020939093013593505050565b60008060006060848603121561186c57600080fd5b833561187781611803565b9250602084013561188781611803565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118c157600080fd5b823567ffffffffffffffff808211156118d957600080fd5b818501915085601f8301126118ed57600080fd5b8135818111156118ff576118ff611898565b8060051b604051601f19603f8301168101818110858211171561192457611924611898565b60405291825284820192508381018501918883111561194257600080fd5b938501935b82851015611967576119588561181b565b84529385019392850192611947565b98975050505050505050565b60006020828403121561198557600080fd5b813561168781611803565b600080604083850312156119a357600080fd5b82356119ae81611803565b915060208301356119be81611803565b809150509250929050565b6000602082840312156119db57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a68578160001904821115611a4e57611a4e611a17565b80851615611a5b57918102915b93841c9390800290611a32565b509250929050565b600082611a7f5750600161053e565b81611a8c5750600061053e565b8160018114611aa25760028114611aac57611ac8565b600191505061053e565b60ff841115611abd57611abd611a17565b50506001821b61053e565b5060208310610133831016604e8410600b8410161715611aeb575081810a61053e565b611af58383611a2d565b8060001904821115611b0957611b09611a17565b029392505050565b600061168760ff841683611a70565b808202811582820484141761053e5761053e611a17565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b5f57600080fd5b815161168781611803565b600080600060608486031215611b7f57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611baa57600080fd5b8151801515811461168757600080fd5b8082018082111561053e5761053e611a17565b600060018201611bdf57611bdf611a17565b5060010190565b8181038181111561053e5761053e611a17565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611c4b5784516001600160a01b031683529383019391830191600101611c26565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611c8957634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220163a9f8ec0dedd98d111a8813e7ba8c8de61fa89e569e923e5d2ba3867fc38de64736f6c63430008170033";

type COCKJOCKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: COCKJOCKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class COCKJOCK__factory extends ContractFactory {
  constructor(...args: COCKJOCKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      COCKJOCK & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): COCKJOCK__factory {
    return super.connect(runner) as COCKJOCK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): COCKJOCKInterface {
    return new Interface(_abi) as COCKJOCKInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): COCKJOCK {
    return new Contract(address, _abi, runner) as unknown as COCKJOCK;
  }
}
