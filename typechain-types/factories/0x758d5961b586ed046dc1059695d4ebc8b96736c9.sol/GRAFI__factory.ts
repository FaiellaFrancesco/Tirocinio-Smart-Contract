/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  GRAFI,
  GRAFIInterface,
} from "../../0x758d5961b586ed046dc1059695d4ebc8b96736c9.sol/GRAFI";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_swapThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a60055560006006556007805560006008556000600a556000600b5560646009600a6100319190610271565b61003f906305f5e100610287565b610049919061029e565b600c556000600d819055600f805461ffff60a81b191690556010819055601181905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ff6009600a610271565b61010d906305f5e100610287565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61014e6009600a610271565b61015c906305f5e100610287565b60405190815260200160405180910390a36102c0565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101c3578085048111156101a7576101a7610172565b60018416156101b557908102905b60019390931c92800261018c565b935093915050565b6000826101da5750600161026b565b816101e75750600061026b565b81600181146101fd576002811461020757610223565b600191505061026b565b60ff84111561021857610218610172565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610246575081810a61026b565b6102536000198484610188565b806000190482111561026757610267610172565b0290505b92915050565b600061028060ff8416836101cb565b9392505050565b808202811582820484141761026b5761026b610172565b6000826102bb57634e487b7160e01b600052601260045260246000fd5b500490565b6119be806102cf6000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b1461029857806395d89b41146102c0578063a9059cbb146102ee578063dd62ed3e1461030e578063ea414b281461035457600080fd5b806370a0823114610223578063715018a614610259578063751039fc1461026e5780638a8c523c1461028357600080fd5b806320800a00116100d157806320800a00146101ba57806323b872dd146101d1578063313ce567146101f15780636482c89a1461020d57600080fd5b806306fdde031461010e578063095ea7b3146101515780630faee56f1461018157806318160ddd146101a557600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526008815267477261666920414960c01b60208201525b6040516101489190611479565b60405180910390f35b34801561015d57600080fd5b5061017161016c3660046114dc565b610374565b6040519015158152602001610148565b34801561018d57600080fd5b50610197600c5481565b604051908152602001610148565b3480156101b157600080fd5b5061019761038b565b3480156101c657600080fd5b506101cf6103ac565b005b3480156101dd57600080fd5b506101716101ec366004611508565b61041b565b3480156101fd57600080fd5b5060405160098152602001610148565b34801561021957600080fd5b50610197600d5481565b34801561022f57600080fd5b5061019761023e366004611549565b6001600160a01b031660009081526001602052604090205490565b34801561026557600080fd5b506101cf6104cb565b34801561027a57600080fd5b506101cf61053f565b34801561028f57600080fd5b506101cf61056b565b3480156102a457600080fd5b506000546040516001600160a01b039091168152602001610148565b3480156102cc57600080fd5b50604080518082019091526005815264475241464960d81b602082015261013b565b3480156102fa57600080fd5b506101716103093660046114dc565b610923565b34801561031a57600080fd5b50610197610329366004611566565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036057600080fd5b506101cf61036f366004611549565b610930565b600061038133848461096e565b5060015b92915050565b60006103996009600a61169c565b6103a7906305f5e1006116ab565b905090565b6000546001600160a01b031633146103df5760405162461bcd60e51b81526004016103d6906116c2565b60405180910390fd5b600047116103ec57600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610418573d6000803e3d6000fd5b50565b6000610428848484610a92565b3360009081526003602052604090205460ff1615801561046a5750600f546001600160a01b038581169116148061046a57506001600160a01b03831661dead14155b156104c1576104c184336104bc85604051806060016040528060288152602001611961602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f5f565b61096e565b5060019392505050565b6000546001600160a01b031633146104f55760405162461bcd60e51b81526004016103d6906116c2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105695760405162461bcd60e51b81526004016103d6906116c2565b565b6000546001600160a01b031633146105955760405162461bcd60e51b81526004016103d6906116c2565b600f54600160a01b900460ff16156105ef5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103d6565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561063890309061062a6009600a61169c565b6104bc906305f5e1006116ab565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af91906116f7565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073591906116f7565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a691906116f7565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107ee816001600160a01b031660009081526001602052604090205490565b6000806108036000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561086b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108909190611714565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190611742565b6000610381338484610a92565b3360009081526003602052604090205460ff1661094c57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109d05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d6565b6001600160a01b038216610a315760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d6565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610af65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d6565b6001600160a01b038216610b585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d6565b60008111610bba5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103d6565b60006001600160a01b0384163014801590610bde57506001600160a01b0383163014155b15610e0157600f54600160a81b900460ff16610c2357610c206064610c1a60075460085411610c0f57600554610c13565b6006545b8590610f99565b90611022565b90505b600f546001600160a01b038581169116148015610c4e5750600e546001600160a01b03848116911614155b8015610c7357506001600160a01b03831660009081526003602052604090205460ff16155b8015610c8d57506004546001600160a01b03848116911614155b15610cd2574360095414610ca5576000600a55436009555b81600a6000828254610cb79190611764565b909155505060088054906000610ccc83611777565b91905055505b600f546001600160a01b038481169116148015610cf857506001600160a01b0384163014155b15610d5357610d05611064565b600a541080610d1657504360095414155b610d535760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103d6565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d8a5750600f546001600160a01b038581169116145b8015610d9f5750600f54600160b01b900460ff165b8015610db957506004546001600160a01b03868116911614155b15610dff578015610df3576000600c548211610dd55781610dd9565b600c545b9050610df1818511610deb57846111f2565b816111f2565b505b47610dfd4761136c565b505b505b6001600160a01b038416600090815260016020526040902054610e2490836113aa565b6001600160a01b038516600090815260016020526040902055610e69610e4a83836113aa565b6001600160a01b038516600090815260016020526040902054906113ec565b6001600160a01b0384166000908152600160205260409020558015610efc5730600090815260016020526040902054610ea290826113ec565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ef39085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f59576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f4785856113aa565b60405190815260200160405180910390a35b50505050565b60008184841115610f835760405162461bcd60e51b81526004016103d69190611479565b506000610f908486611790565b95945050505050565b600082600003610fab57506000610385565b6000610fb783856116ab565b905082610fc485836117a3565b1461101b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103d6565b9392505050565b600061101b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061144b565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f691906116f7565b81600081518110611109576111096117db565b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061113d5761113d6117db565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061118990674563918244f40000908690600401611836565b600060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ce9190810190611857565b9050806001815181106111e3576111e36117db565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061123a5761123a6117db565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b791906116f7565b816001815181106112ca576112ca6117db565b6001600160a01b039283166020918202929092010152600e546112f0913091168461096e565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611329908590600090869030904290600401611924565b600060405180830381600087803b15801561134357600080fd5b505af1158015611357573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113a6573d6000803e3d6000fd5b5050565b600061101b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f5f565b6000806113f98385611764565b90508381101561101b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103d6565b6000818361146c5760405162461bcd60e51b81526004016103d69190611479565b506000610f9084866117a3565b602081526000825180602084015260005b818110156114a7576020818601810151604086840101520161148a565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461041857600080fd5b600080604083850312156114ef57600080fd5b82356114fa816114c7565b946020939093013593505050565b60008060006060848603121561151d57600080fd5b8335611528816114c7565b92506020840135611538816114c7565b929592945050506040919091013590565b60006020828403121561155b57600080fd5b813561101b816114c7565b6000806040838503121561157957600080fd5b8235611584816114c7565b91506020830135611594816114c7565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156115f0578085048111156115d4576115d461159f565b60018416156115e257908102905b60019390931c9280026115b9565b935093915050565b60008261160757506001610385565b8161161457506000610385565b816001811461162a576002811461163457611650565b6001915050610385565b60ff8411156116455761164561159f565b50506001821b610385565b5060208310610133831016604e8410600b8410161715611673575081810a610385565b61168060001984846115b5565b80600019048211156116945761169461159f565b029392505050565b600061101b60ff8416836115f8565b80820281158282048414176103855761038561159f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561170957600080fd5b815161101b816114c7565b60008060006060848603121561172957600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561175457600080fd5b8151801515811461101b57600080fd5b808201808211156103855761038561159f565b6000600182016117895761178961159f565b5060010190565b818103818111156103855761038561159f565b6000826117c057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b8281101561182c5781516001600160a01b0316865260209586019590910190600101611805565b5093949350505050565b82815260406020820152600061184f60408301846117f1565b949350505050565b60006020828403121561186957600080fd5b815167ffffffffffffffff81111561188057600080fd5b8201601f8101841361189157600080fd5b805167ffffffffffffffff8111156118ab576118ab6117c5565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118d8576118d86117c5565b6040529182526020818401810192908101878411156118f657600080fd5b6020850194505b83851015611919578451808252602095860195909350016118fd565b509695505050505050565b85815284602082015260a06040820152600061194360a08301866117f1565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a0dbaae689e2748c861465ee5ca6acd7fb1ff469668596956059bf46c38c23f764736f6c634300081d0033";

type GRAFIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GRAFIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GRAFI__factory extends ContractFactory {
  constructor(...args: GRAFIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GRAFI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GRAFI__factory {
    return super.connect(runner) as GRAFI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GRAFIInterface {
    return new Interface(_abi) as GRAFIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GRAFI {
    return new Contract(address, _abi, runner) as unknown as GRAFI;
  }
}
