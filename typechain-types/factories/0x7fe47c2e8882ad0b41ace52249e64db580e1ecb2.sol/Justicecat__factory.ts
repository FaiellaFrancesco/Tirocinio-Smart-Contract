/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Justicecat,
  JusticecatInterface,
} from "../../0x7fe47c2e8882ad0b41ace52249e64db580e1ecb2.sol/Justicecat";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_justicecatThres",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_justicecatamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a556000600b556009600a6100309190610260565b61003d90620f4240610276565b600c556000600d8190556064600e556010805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100ee6009600a610260565b6100fc906305f5e100610276565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61013d6009600a610260565b61014b906305f5e100610276565b60405190815260200160405180910390a361028d565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101b25780850481111561019657610196610161565b60018416156101a457908102905b60019390931c92800261017b565b935093915050565b6000826101c95750600161025a565b816101d65750600061025a565b81600181146101ec57600281146101f657610212565b600191505061025a565b60ff84111561020757610207610161565b50506001821b61025a565b5060208310610133831016604e8410600b8410161715610235575081810a61025a565b6102426000198484610177565b806000190482111561025657610256610161565b0290505b92915050565b600061026f60ff8416836101ba565b9392505050565b808202811582820484141761025a5761025a610161565b6119e28061029c6000396000f3fe60806040526004361061010d5760003560e01c8063715018a6116100955780638da5cb5b116100645780638da5cb5b146102c057806395d89b41146102e8578063a9059cbb14610317578063dd62ed3e14610337578063ea414b281461037d57600080fd5b8063715018a61461026b578063751039fc146102805780638a8c523c146102955780638d80ce87146102aa57600080fd5b806320800a00116100dc57806320800a00146101cc57806323b872dd146101e3578063313ce5671461020357806333ec0fe01461021f57806370a082311461023557600080fd5b806306fdde0314610119578063095ea7b3146101635780630faee56f1461019357806318160ddd146101b757600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5060408051808201909152600f81526e129d5cdd1a58d948119bdc8810d85d608a1b60208201525b60405161015a919061149d565b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611500565b61039d565b604051901515815260200161015a565b34801561019f57600080fd5b506101a9600c5481565b60405190815260200161015a565b3480156101c357600080fd5b506101a96103b4565b3480156101d857600080fd5b506101e16103d5565b005b3480156101ef57600080fd5b506101836101fe36600461152c565b610444565b34801561020f57600080fd5b506040516009815260200161015a565b34801561022b57600080fd5b506101a9600e5481565b34801561024157600080fd5b506101a961025036600461156d565b6001600160a01b031660009081526001602052604090205490565b34801561027757600080fd5b506101e16104ef565b34801561028c57600080fd5b506101e1610563565b3480156102a157600080fd5b506101e161058f565b3480156102b657600080fd5b506101a9600d5481565b3480156102cc57600080fd5b506000546040516001600160a01b03909116815260200161015a565b3480156102f457600080fd5b5060408051808201909152600681526518983bb0bd1960d11b602082015261014d565b34801561032357600080fd5b50610183610332366004611500565b610947565b34801561034357600080fd5b506101a961035236600461158a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561038957600080fd5b506101e161039836600461156d565b610954565b60006103aa338484610992565b5060015b92915050565b60006103c26009600a6116c0565b6103d0906305f5e1006116cf565b905090565b6000546001600160a01b031633146104085760405162461bcd60e51b81526004016103ff906116e6565b60405180910390fd5b6000471161041557600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610441573d6000803e3d6000fd5b50565b6000610451848484610ab6565b6004546001600160a01b0316331480159061048e57506010546001600160a01b038581169116148061048e57506001600160a01b03831661dead14155b156104e5576104e584336104e085604051806060016040528060288152602001611985602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f83565b610992565b5060019392505050565b6000546001600160a01b031633146105195760405162461bcd60e51b81526004016103ff906116e6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461058d5760405162461bcd60e51b81526004016103ff906116e6565b565b6000546001600160a01b031633146105b95760405162461bcd60e51b81526004016103ff906116e6565b601054600160a01b900460ff16156106135760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103ff565b600f80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561065c90309061064e6009600a6116c0565b6104e0906305f5e1006116cf565b600f60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d3919061171b565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610759919061171b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca919061171b565b601080546001600160a01b039283166001600160a01b0319909116179055600f541663f305d7194730610812816001600160a01b031660009081526001602052604090205490565b6000806108276000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561088f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108b49190611738565b50506010805462ff00ff60a01b1981166201000160a01b17909155600f5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104419190611766565b60006103aa338484610ab6565b3360009081526003602052604090205460ff1661097057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109f45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ff565b6001600160a01b038216610a555760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ff565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b1a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ff565b6001600160a01b038216610b7c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ff565b60008111610bde5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103ff565b60006001600160a01b0384163014801590610c0257506001600160a01b0383163014155b15610e2557601054600160a81b900460ff16610c4757610c446064610c3e60075460085411610c3357600554610c37565b6006545b8590610fbd565b90611046565b90505b6010546001600160a01b038581169116148015610c725750600f546001600160a01b03848116911614155b8015610c9757506001600160a01b03831660009081526003602052604090205460ff16155b8015610cb157506004546001600160a01b03848116911614155b15610cf6574360095414610cc9576000600a55436009555b81600a6000828254610cdb9190611788565b909155505060088054906000610cf08361179b565b91905055505b6010546001600160a01b038481169116148015610d1c57506001600160a01b0384163014155b15610d7757610d29611088565b600a541080610d3a57504360095414155b610d775760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103ff565b30600090815260016020526040902054601054600160a81b900460ff16158015610dae57506010546001600160a01b038581169116145b8015610dc35750601054600160b01b900460ff165b8015610ddd57506004546001600160a01b03868116911614155b15610e23578015610e17576000600c548211610df95781610dfd565b600c545b9050610e15818511610e0f5784611216565b81611216565b505b47610e2147611390565b505b505b6001600160a01b038416600090815260016020526040902054610e4890836113ce565b6001600160a01b038516600090815260016020526040902055610e8d610e6e83836113ce565b6001600160a01b03851660009081526001602052604090205490611410565b6001600160a01b0384166000908152600160205260409020558015610f205730600090815260016020526040902054610ec69082611410565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f179085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f7d576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f6b85856113ce565b60405190815260200160405180910390a35b50505050565b60008184841115610fa75760405162461bcd60e51b81526004016103ff919061149d565b506000610fb484866117b4565b95945050505050565b600082600003610fcf575060006103ae565b6000610fdb83856116cf565b905082610fe885836117c7565b1461103f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103ff565b9392505050565b600061103f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061146f565b604080516002808252606082018352600092839291906020830190803683375050600f54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a919061171b565b8160008151811061112d5761112d6117ff565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611161576111616117ff565b6001600160a01b039283166020918202929092010152600f5460405163d06ca61f60e01b8152600092919091169063d06ca61f906111ad906729a2241af62c000090869060040161185a565b600060405180830381865afa1580156111ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f2919081019061187b565b905080600181518110611207576112076117ff565b60200260200101519250505090565b6010805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061125e5761125e6117ff565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db919061171b565b816001815181106112ee576112ee6117ff565b6001600160a01b039283166020918202929092010152600f546113149130911684610992565b600f5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061134d908590600090869030904290600401611948565b600060405180830381600087803b15801561136757600080fd5b505af115801561137b573d6000803e3d6000fd5b50506010805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156113ca573d6000803e3d6000fd5b5050565b600061103f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f83565b60008061141d8385611788565b90508381101561103f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ff565b600081836114905760405162461bcd60e51b81526004016103ff919061149d565b506000610fb484866117c7565b602081526000825180602084015260005b818110156114cb57602081860181015160408684010152016114ae565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461044157600080fd5b6000806040838503121561151357600080fd5b823561151e816114eb565b946020939093013593505050565b60008060006060848603121561154157600080fd5b833561154c816114eb565b9250602084013561155c816114eb565b929592945050506040919091013590565b60006020828403121561157f57600080fd5b813561103f816114eb565b6000806040838503121561159d57600080fd5b82356115a8816114eb565b915060208301356115b8816114eb565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115611614578085048111156115f8576115f86115c3565b600184161561160657908102905b60019390931c9280026115dd565b935093915050565b60008261162b575060016103ae565b81611638575060006103ae565b816001811461164e576002811461165857611674565b60019150506103ae565b60ff841115611669576116696115c3565b50506001821b6103ae565b5060208310610133831016604e8410600b8410161715611697575081810a6103ae565b6116a460001984846115d9565b80600019048211156116b8576116b86115c3565b029392505050565b600061103f60ff84168361161c565b80820281158282048414176103ae576103ae6115c3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561172d57600080fd5b815161103f816114eb565b60008060006060848603121561174d57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561177857600080fd5b8151801515811461103f57600080fd5b808201808211156103ae576103ae6115c3565b6000600182016117ad576117ad6115c3565b5060010190565b818103818111156103ae576103ae6115c3565b6000826117e457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118505781516001600160a01b0316865260209586019590910190600101611829565b5093949350505050565b8281526040602082015260006118736040830184611815565b949350505050565b60006020828403121561188d57600080fd5b815167ffffffffffffffff8111156118a457600080fd5b8201601f810184136118b557600080fd5b805167ffffffffffffffff8111156118cf576118cf6117e9565b8060051b604051601f19603f830116810181811067ffffffffffffffff821117156118fc576118fc6117e9565b60405291825260208184018101929081018784111561191a57600080fd5b6020850194505b8385101561193d57845180825260209586019590935001611921565b509695505050505050565b85815284602082015260a06040820152600061196760a0830186611815565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a22d43655599f780233035e6227027eeef1e53601c99f219a0f7f8b6c9e9c40a64736f6c634300081e0033";

type JusticecatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JusticecatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Justicecat__factory extends ContractFactory {
  constructor(...args: JusticecatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Justicecat & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Justicecat__factory {
    return super.connect(runner) as Justicecat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JusticecatInterface {
    return new Interface(_abi) as JusticecatInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Justicecat {
    return new Contract(address, _abi, runner) as unknown as Justicecat;
  }
}
