/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x7f042895b230764e617d0086a325c62e0107897d.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "launch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueChoco9UN1FETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600060055560006006556000600755600060085560646009600a6100289190610312565b61003690633b9aca00610328565b610040919061033f565b600955600b805461ffff60a81b19169055600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b031683529120805490921617905560646100e96009600a610312565b6100f790633b9aca00610328565b610102906002610328565b61010c919061033f565b33600090815260016020526040902055606461012a6009600a610312565b61013890633b9aca00610328565b610143906062610328565b61014d919061033f565b30600090815260016020526040902055336001600160a01b0316600060008051602061184283398151915260646101866009600a610312565b61019490633b9aca00610328565b61019f906002610328565b6101a9919061033f565b60405190815260200160405180910390a330600060008051602061184283398151915260646101da6009600a610312565b6101e890633b9aca00610328565b6101f3906062610328565b6101fd919061033f565b60405190815260200160405180910390a3610361565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102645780850481111561024857610248610213565b600184161561025657908102905b60019390931c92800261022d565b935093915050565b60008261027b5750600161030c565b816102885750600061030c565b816001811461029e57600281146102a8576102c4565b600191505061030c565b60ff8411156102b9576102b9610213565b50506001821b61030c565b5060208310610133831016604e8410600b84101617156102e7575081810a61030c565b6102f46000198484610229565b806000190482111561030857610308610213565b0290505b92915050565b600061032160ff84168361026c565b9392505050565b808202811582820484141761030c5761030c610213565b60008261035c57634e487b7160e01b600052601260045260246000fd5b500490565b6114d2806103706000396000f3fe6080604052600436106100ec5760003560e01c80634160ef2d1161008a57806395d89b411161005957806395d89b411461028d578063a9059cbb146102bb578063dd62ed3e146102db578063ea414b281461032157600080fd5b80634160ef2d1461020557806370a082311461021a578063715018a6146102505780638da5cb5b1461026557600080fd5b80630faee56f116100c65780630faee56f1461019057806318160ddd146101b457806323b872dd146101c9578063313ce567146101e957600080fd5b806301339c21146100f857806306fdde031461010f578063095ea7b31461016057600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061010d610341565b005b34801561011b57600080fd5b50604080518082019091526016815275213937bbb713b9903cb7bab733b2b91039b4b9ba32b960511b60208201525b60405161015791906110c2565b60405180910390f35b34801561016c57600080fd5b5061018061017b366004611125565b61070a565b6040519015158152602001610157565b34801561019c57600080fd5b506101a660095481565b604051908152602001610157565b3480156101c057600080fd5b506101a6610721565b3480156101d557600080fd5b506101806101e4366004611151565b610742565b3480156101f557600080fd5b5060405160098152602001610157565b34801561021157600080fd5b5061010d610800565b34801561022657600080fd5b506101a6610235366004611192565b6001600160a01b031660009081526001602052604090205490565b34801561025c57600080fd5b5061010d610863565b34801561027157600080fd5b506000546040516001600160a01b039091168152602001610157565b34801561029957600080fd5b5060408051808201909152600581526443686f636f60d81b602082015261014a565b3480156102c757600080fd5b506101806102d6366004611125565b6108d7565b3480156102e757600080fd5b506101a66102f63660046111af565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561032d57600080fd5b5061010d61033c366004611192565b6108e4565b6000546001600160a01b031633146103745760405162461bcd60e51b815260040161036b906111e8565b60405180910390fd5b600b54600160a01b900460ff16156103ce5760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161036b565b600a80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117825561041c913091906104099060099061131a565b61041790633b9aca00611329565b610922565b600a60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190611340565b6001600160a01b031663c9c6539630600a60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190611340565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190611340565b600b80546001600160a01b039283166001600160a01b0319909116179055600a541663f305d71947306105d2816001600160a01b031660009081526001602052604090205490565b6000806105e76000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561064f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610674919061135d565b5050600b805462ff00ff60a01b1981166201000160a01b17909155600a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610707919061138b565b50565b6000610717338484610922565b5060015b92915050565b600061072f6009600a61131a565b61073d90633b9aca00611329565b905090565b600061074f848484610a46565b3360009081526003602052604090205460ff161580156107a45750600b546001600160a01b038581169116148061079157506001600160a01b03831661dead14155b806107a457506001600160a01b03841630145b156107f6576107f6843361041785604051806060016040528060288152602001611475602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610e28565b5060019392505050565b6000546001600160a01b0316331461082a5760405162461bcd60e51b815260040161036b906111e8565b6000471161083757600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610707573d6000803e3d6000fd5b6000546001600160a01b0316331461088d5760405162461bcd60e51b815260040161036b906111e8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610717338484610a46565b3360009081526003602052604090205460ff1661090057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036b565b6001600160a01b0382166109e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aaa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036b565b6001600160a01b038216610b0c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036b565b60008111610b6e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161036b565b60006001600160a01b0384163014801590610b9257506001600160a01b0383163014155b15610cca57600b546001600160a01b038581169116148015610bc25750600a546001600160a01b03848116911614155b8015610be757506001600160a01b03831660009081526003602052604090205460ff16155b8015610c0157506004546001600160a01b03848116911614155b15610c1c5760088054906000610c16836113ad565b91905055505b30600090815260016020526040902054600b54600160a81b900460ff16158015610c535750600b546001600160a01b038581169116145b8015610c685750600b54600160b01b900460ff165b8015610c8257506004546001600160a01b03868116911614155b15610cc8578015610cbc5760006009548211610c9e5781610ca2565b6009545b9050610cba818511610cb45784610e62565b81610e62565b505b47610cc647610fdc565b505b505b6001600160a01b038416600090815260016020526040902054610ced908361101a565b6001600160a01b038516600090815260016020526040902055610d32610d13838361101a565b6001600160a01b03851660009081526001602052604090205490611063565b6001600160a01b0384166000908152600160205260409020558015610dc55730600090815260016020526040902054610d6b9082611063565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dbc9085815260200190565b60405180910390a35b6001600160a01b03831661dead14610e22576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610e10858561101a565b60405190815260200160405180910390a35b50505050565b60008184841115610e4c5760405162461bcd60e51b815260040161036b91906110c2565b506000610e5984866113c6565b95945050505050565b600b805460ff60a81b1916600160a81b1790556040805160028082526060820183526000926020830190803683370190505090503081600081518110610eaa57610eaa6113d9565b6001600160a01b03928316602091820292909201810191909152600a54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190611340565b81600181518110610f3a57610f3a6113d9565b6001600160a01b039283166020918202929092010152600a54610f609130911684610922565b600a5460405163791ac94760e01b81526001600160a01b039091169063791ac94790610f999085906000908690309042906004016113ef565b600060405180830381600087803b158015610fb357600080fd5b505af1158015610fc7573d6000803e3d6000fd5b5050600b805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611016573d6000803e3d6000fd5b5050565b600061105c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e28565b9392505050565b6000806110708385611461565b90508381101561105c5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161036b565b602081526000825180602084015260005b818110156110f057602081860181015160408684010152016110d3565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461070757600080fd5b6000806040838503121561113857600080fd5b823561114381611110565b946020939093013593505050565b60008060006060848603121561116657600080fd5b833561117181611110565b9250602084013561118181611110565b929592945050506040919091013590565b6000602082840312156111a457600080fd5b813561105c81611110565b600080604083850312156111c257600080fd5b82356111cd81611110565b915060208301356111dd81611110565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561126e578085048111156112525761125261121d565b600184161561126057908102905b60019390931c928002611237565b935093915050565b6000826112855750600161071b565b816112925750600061071b565b81600181146112a857600281146112b2576112ce565b600191505061071b565b60ff8411156112c3576112c361121d565b50506001821b61071b565b5060208310610133831016604e8410600b84101617156112f1575081810a61071b565b6112fe6000198484611233565b80600019048211156113125761131261121d565b029392505050565b600061105c60ff841683611276565b808202811582820484141761071b5761071b61121d565b60006020828403121561135257600080fd5b815161105c81611110565b60008060006060848603121561137257600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561139d57600080fd5b8151801515811461105c57600080fd5b6000600182016113bf576113bf61121d565b5060010190565b8181038181111561071b5761071b61121d565b634e487b7160e01b600052603260045260246000fd5b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156114415783516001600160a01b031683526020938401939092019160010161141a565b50506001600160a01b039590951660608401525050608001529392505050565b8082018082111561071b5761071b61121d56fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201119a77d68a10bd51ccf92306b7614069e381a8ce57920aa8c4898980bdbf2ee64736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
