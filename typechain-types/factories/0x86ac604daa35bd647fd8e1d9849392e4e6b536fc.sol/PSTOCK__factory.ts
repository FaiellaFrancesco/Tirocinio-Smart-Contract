/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PSTOCK,
  PSTOCKInterface,
} from "../../0x86ac604daa35bd647fd8e1d9849392e4e6b536fc.sol/PSTOCK";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
    ],
    name: "TransferTaxUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "clearStuckERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeTransferTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerLogicLoop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556017600a556017600b556017600c556046600d556000600e556012600a620000419190620004ef565b62000050906298968062000507565b600f55620000616012600a620004ef565b62000070906298968062000507565b601055620000816012600a620004ef565b62000090906298968062000507565b601155620000a16012600a620004ef565b620000b0906298968062000507565b6012556014805461ffff60a81b1916905560006015819055601655348015620000d857600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b031916331790556200013a6012600a620004ef565b6200014a90633b9aca0062000507565b336000908152600160208190526040822092909255600390620001756000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600384528281208054861660019081179091556005549092168152829020805490941617909255601380546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155825163c45a015560e01b81529251909263c45a01559260048083019391928290030181865afa1580156200022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000254919062000521565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002dd919062000521565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156200032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000351919062000521565b601480546001600160a01b0319166001600160a01b0392909216919091179055620003793390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620003b36012600a620004ef565b620003c390633b9aca0062000507565b60405190815260200160405180910390a36200054c565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000431578160001904821115620004155762000415620003da565b808516156200042357918102915b93841c9390800290620003f5565b509250929050565b6000826200044a57506001620004e9565b816200045957506000620004e9565b81600181146200047257600281146200047d576200049d565b6001915050620004e9565b60ff841115620004915762000491620003da565b50506001821b620004e9565b5060208310610133831016604e8410600b8410161715620004c2575081810a620004e9565b620004ce8383620003f0565b8060001904821115620004e557620004e5620003da565b0290505b92915050565b60006200050060ff84168362000439565b9392505050565b8082028115828204841417620004e957620004e9620003da565b6000602082840312156200053457600080fd5b81516001600160a01b03811681146200050057600080fd5b611d32806200055c6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d157806395d89b411161008a578063c9567bf911610064578063c9567bf914610434578063d34628cc14610449578063dd62ed3e14610469578063ec1f3f63146104af57600080fd5b806395d89b41146103cf578063a9059cbb146103fe578063bf474bed1461041e57600080fd5b806370a082311461031b578063715018a614610351578063751039fc146103665780637d1db4a51461037b5780638da5cb5b146103915780638f9a55c0146103b957600080fd5b80632ae50c00116101235780632ae50c001461025c578063313ce5671461027157806331c2d8471461028d5780633bbac579146102ad57806351bc3c85146102e65780636e26124a146102fb57600080fd5b806306fdde0314610176578063095ea7b3146101bc5780630faee56f146101ec578063109daa991461021057806318160ddd1461022757806323b872dd1461023c57600080fd5b3661017157005b600080fd5b34801561018257600080fd5b5060408051808201909152600b81526a50656e6e792053746f636b60a81b60208201525b6040516101b391906117c8565b60405180910390f35b3480156101c857600080fd5b506101dc6101d736600461183e565b6104cf565b60405190151581526020016101b3565b3480156101f857600080fd5b5061020260125481565b6040519081526020016101b3565b34801561021c57600080fd5b506102256104e6565b005b34801561023357600080fd5b50610202610556565b34801561024857600080fd5b506101dc61025736600461186a565b610577565b34801561026857600080fd5b506101dc6105e0565b34801561027d57600080fd5b50604051601281526020016101b3565b34801561029957600080fd5b506102256102a83660046118c1565b6105ec565b3480156102b957600080fd5b506101dc6102c8366004611986565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102f257600080fd5b50610225610682565b34801561030757600080fd5b5061022561031636600461183e565b6106e8565b34801561032757600080fd5b50610202610336366004611986565b6001600160a01b031660009081526001602052604090205490565b34801561035d57600080fd5b50610225610815565b34801561037257600080fd5b50610225610889565b34801561038757600080fd5b50610202600f5481565b34801561039d57600080fd5b506000546040516001600160a01b0390911681526020016101b3565b3480156103c557600080fd5b5061020260105481565b3480156103db57600080fd5b506040805180820190915260068152655053544f434b60d01b60208201526101a6565b34801561040a57600080fd5b506101dc61041936600461183e565b610936565b34801561042a57600080fd5b5061020260115481565b34801561044057600080fd5b50610225610943565b34801561045557600080fd5b506102256104643660046118c1565b610bad565b34801561047557600080fd5b506102026104843660046119a3565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156104bb57600080fd5b506102256104ca3660046119dc565b610c3f565b60006104dc338484610c86565b5060015b92915050565b6000546001600160a01b031633146105195760405162461bcd60e51b8152600401610510906119f5565b60405180910390fd5b6000600d8190556040519081527fe9b79e1a6c2dc43b4c0c6ff01ce9e3332d810e482270f464c0a21ad6c5fc6de3906020015b60405180910390a1565b60006105646012600a611b24565b61057290633b9aca00611b33565b905090565b6000610584848484610daa565b6105d684336105d185604051806060016040528060288152602001611cd5602891396001600160a01b038a16600090815260026020908152604080832033845290915290205491906113c5565b610c86565b5060019392505050565b6000610572602a6113ff565b6000546001600160a01b031633146106165760405162461bcd60e51b8152600401610510906119f5565b60005b815181101561067e5760006004600084848151811061063a5761063a611b4a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061067681611b60565b915050610619565b5050565b6005546001600160a01b0316336001600160a01b0316146106a257600080fd5b3060009081526001602052604090205480158015906106ca5750601454600160b01b900460ff165b156106d8576106d881611422565b47801561067e5761067e8161159c565b6000546001600160a01b031633146107125760405162461bcd60e51b8152600401610510906119f5565b6040516370a0823160e01b8152306004820152600090610796906064906107909085906001600160a01b038816906370a0823190602401602060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190611b79565b906115d6565b9061165f565b60055460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb906044016020604051808303816000875af11580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190611b92565b50505050565b6000546001600160a01b0316331461083f5760405162461bcd60e51b8152600401610510906119f5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108b35760405162461bcd60e51b8152600401610510906119f5565b6108bf6012600a611b24565b6108cd90633b9aca00611b33565b600f556108dc6012600a611b24565b6108ea90633b9aca00611b33565b6010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf61091a6012600a611b24565b61092890633b9aca00611b33565b60405190815260200161054c565b60006104dc338484610daa565b6000546001600160a01b0316331461096d5760405162461bcd60e51b8152600401610510906119f5565b601454600160a01b900460ff16156109c75760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e0000000000000000006044820152606401610510565b6014546001600160a01b0316610a165760405162461bcd60e51b815260206004820152601460248201527314185a5c881b9bdd081a5b9a5d1a585b1a5e995960621b6044820152606401610510565b601354610a429030906001600160a01b0316610a346012600a611b24565b6105d190633b9aca00611b33565b6013546001600160a01b031663f305d7194730610a74816001600160a01b031660009081526001602052604090205490565b600080610a896000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610af1573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b169190611bb4565b505060145460135460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b939190611b92565b506014805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610bd75760405162461bcd60e51b8152600401610510906119f5565b60005b815181101561067e57600160046000848481518110610bfb57610bfb611b4a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610c3781611b60565b915050610bda565b6005546001600160a01b0316336001600160a01b031614610c5f57600080fd5b6008548111158015610c7357506009548111155b610c7c57600080fd5b6008819055600955565b6001600160a01b038316610ce85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610510565b6001600160a01b038216610d495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610510565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e0e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610510565b6001600160a01b038216610e705760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610510565b60008111610ed25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610510565b600080546001600160a01b03858116911614801590610eff57506000546001600160a01b03848116911614155b8015610f1957506005546001600160a01b03848116911614155b15611282576001600160a01b03841660009081526004602052604090205460ff16158015610f6057506001600160a01b03831660009081526004602052604090205460ff16155b610f6957600080fd5b600e54600003610f9c57610f996064610790600a54600e5411610f8e57600654610f92565b6008545b85906115d6565b90505b600e5415610fc157610fbe6064610790600d54856115d690919063ffffffff16565b90505b6014546001600160a01b038581169116148015610fec57506013546001600160a01b03848116911614155b801561101157506001600160a01b03831660009081526003602052604090205460ff16155b1561111657600f548211156110685760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e000000000000006044820152606401610510565b6010548261108b856001600160a01b031660009081526001602052604090205490565b6110959190611be2565b11156110e35760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e0000000000006044820152606401610510565b6110fe6064610790600a54600e5411610f8e57600654610f92565b600e8054919250600061111083611b60565b91905055505b6014546001600160a01b03848116911614801561113c57506001600160a01b0384163014155b15611169576111666064610790600b54600e541161115c57600754610f92565b60095485906115d6565b90505b30600090815260016020526040902054601454600160a81b900460ff161580156111a057506014546001600160a01b038581169116145b80156111b55750601454600160b01b900460ff165b80156111c2575060115481115b80156111d15750600c54600e54115b15611280576016544311156111e65760006015555b6003601554106112385760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b210000000000000000006044820152606401610510565b6112556112508461124b846012546116a1565b6116a1565b611422565b478015611265576112654761159c565b6015805490600061127583611b60565b909155505043601655505b505b80156112fc57306000908152600160205260409020546112a290826116b6565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112f39085815260200190565b60405180910390a35b6001600160a01b03841660009081526001602052604090205461131f9083611715565b6001600160a01b0385166000908152600160205260409020556113646113458383611715565b6001600160a01b038516600090815260016020526040902054906116b6565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6113ae8585611715565b60405190815260200160405180910390a350505050565b600081848411156113e95760405162461bcd60e51b815260040161051091906117c8565b5060006113f68486611bf5565b95945050505050565b6000811561141a576104e0611415836002611b33565b611757565b506000919050565b6014805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061146a5761146a611b4a565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156114c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e79190611c08565b816001815181106114fa576114fa611b4a565b6001600160a01b0392831660209182029290920101526013546115209130911684610c86565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac94790611559908590600090869030904290600401611c25565b600060405180830381600087803b15801561157357600080fd5b505af1158015611587573d6000803e3d6000fd5b50506014805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561067e573d6000803e3d6000fd5b6000826000036115e8575060006104e0565b60006115f48385611b33565b9050826116018583611cac565b146116585760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610510565b9392505050565b600061165883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061179a565b60008183116116b05782611658565b50919050565b6000806116c38385611be2565b9050838110156116585760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610510565b600061165883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113c5565b6000805b611766600584611cc0565b811015611791578061270f0361177f5750600192915050565b8061178981611b60565b91505061175b565b50600092915050565b600081836117bb5760405162461bcd60e51b815260040161051091906117c8565b5060006113f68486611cac565b600060208083528351808285015260005b818110156117f5578581018301518582016040015282016117d9565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461182b57600080fd5b50565b803561183981611816565b919050565b6000806040838503121561185157600080fd5b823561185c81611816565b946020939093013593505050565b60008060006060848603121561187f57600080fd5b833561188a81611816565b9250602084013561189a81611816565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156118d457600080fd5b823567ffffffffffffffff808211156118ec57600080fd5b818501915085601f83011261190057600080fd5b813581811115611912576119126118ab565b8060051b604051601f19603f83011681018181108582111715611937576119376118ab565b60405291825284820192508381018501918883111561195557600080fd5b938501935b8285101561197a5761196b8561182e565b8452938501939285019261195a565b98975050505050505050565b60006020828403121561199857600080fd5b813561165881611816565b600080604083850312156119b657600080fd5b82356119c181611816565b915060208301356119d181611816565b809150509250929050565b6000602082840312156119ee57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611a7b578160001904821115611a6157611a61611a2a565b80851615611a6e57918102915b93841c9390800290611a45565b509250929050565b600082611a92575060016104e0565b81611a9f575060006104e0565b8160018114611ab55760028114611abf57611adb565b60019150506104e0565b60ff841115611ad057611ad0611a2a565b50506001821b6104e0565b5060208310610133831016604e8410600b8410161715611afe575081810a6104e0565b611b088383611a40565b8060001904821115611b1c57611b1c611a2a565b029392505050565b600061165860ff841683611a83565b80820281158282048414176104e0576104e0611a2a565b634e487b7160e01b600052603260045260246000fd5b600060018201611b7257611b72611a2a565b5060010190565b600060208284031215611b8b57600080fd5b5051919050565b600060208284031215611ba457600080fd5b8151801515811461165857600080fd5b600080600060608486031215611bc957600080fd5b8351925060208401519150604084015190509250925092565b808201808211156104e0576104e0611a2a565b818103818111156104e0576104e0611a2a565b600060208284031215611c1a57600080fd5b815161165881611816565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c755784516001600160a01b031683529383019391830191600101611c50565b50506001600160a01b03969096166060850152505050608001529392505050565b634e487b7160e01b600052601260045260246000fd5b600082611cbb57611cbb611c96565b500490565b600082611ccf57611ccf611c96565b50069056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220b772760dd2f40ec492158b2108732bfcddb0a57221d6e6698b22ffc4e3c66e0b64736f6c63430008130033";

type PSTOCKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PSTOCKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PSTOCK__factory extends ContractFactory {
  constructor(...args: PSTOCKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PSTOCK & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PSTOCK__factory {
    return super.connect(runner) as PSTOCK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PSTOCKInterface {
    return new Interface(_abi) as PSTOCKInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PSTOCK {
    return new Contract(address, _abi, runner) as unknown as PSTOCK;
  }
}
