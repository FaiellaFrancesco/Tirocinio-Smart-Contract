/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VaultToken,
  VaultTokenInterface,
} from "../../0x6961c30095fbf2eb9e909363e387898eccaf1cfe.sol/VaultToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600560809081526415985d5b1d60da1b60a052600090610024908261017d565b5060408051808201909152600381526215931560ea1b602082015260019061004c908261017d565b506002805460ff191660121790556a295fced7cf0054fe1c000060035534801561007557600080fd5b50600480546001600160a01b031916339081179091556003546000828152600560205260408082208390555190917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916100d191815260200190565b60405180910390a361023b565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010857607f821691505b60208210810361012857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017857806000526020600020601f840160051c810160208510156101555750805b601f840160051c820191505b818110156101755760008155600101610161565b50505b505050565b81516001600160401b03811115610196576101966100de565b6101aa816101a484546100f4565b8461012e565b6020601f8211600181146101de57600083156101c65750848201515b600019600385901b1c1916600184901b178455610175565b600084815260208120601f198516915b8281101561020e57878501518255602094850194600190920191016101ee565b508482101561022c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6107248061024a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461013557806370a082311461015457806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806302d05d3f146100a357806306fdde03146100d3578063095ea7b3146100e857806318160ddd1461010b57806323b872dd14610122575b600080fd5b6004546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6101ba565b6040516100ca9190610552565b6100fb6100f63660046105bc565b610248565b60405190151581526020016100ca565b61011460035481565b6040519081526020016100ca565b6100fb6101303660046105e6565b6102b5565b6002546101429060ff1681565b60405160ff90911681526020016100ca565b610114610162366004610623565b60056020526000908152604090205481565b6100db610463565b6100fb61018a3660046105bc565b610470565b61011461019d366004610645565b600660209081526000928352604080842090915290825290205481565b600080546101c790610678565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610678565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102a39086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600560205260408120548211156103175760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526006602090815260408083203384529091529020548211156103785760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161030e565b6001600160a01b038416600090815260056020526040812080548492906103a09084906106c8565b90915550506001600160a01b038316600090815260056020526040812080548492906103cd9084906106db565b90915550506001600160a01b0384166000908152600660209081526040808320338452909152812080548492906104059084906106c8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161045191815260200190565b60405180910390a35060019392505050565b600180546101c790610678565b336000908152600560205260408120548211156104c45760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b604482015260640161030e565b33600090815260056020526040812080548492906104e39084906106c8565b90915550506001600160a01b038316600090815260056020526040812080548492906105109084906106db565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102a3565b602081526000825180602084015260005b818110156105805760208186018101516040868401015201610563565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105b757600080fd5b919050565b600080604083850312156105cf57600080fd5b6105d8836105a0565b946020939093013593505050565b6000806000606084860312156105fb57600080fd5b610604846105a0565b9250610612602085016105a0565b929592945050506040919091013590565b60006020828403121561063557600080fd5b61063e826105a0565b9392505050565b6000806040838503121561065857600080fd5b610661836105a0565b915061066f602084016105a0565b90509250929050565b600181811c9082168061068c57607f821691505b6020821081036106ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102af576102af6106b2565b808201808211156102af576102af6106b256fea2646970667358221220b89c3a375b61baac2ab55eeaa3ba5810a313dfd1e8503e7d1aa7379babdcfa5b64736f6c634300081e0033";

type VaultTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultToken__factory extends ContractFactory {
  constructor(...args: VaultTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultToken__factory {
    return super.connect(runner) as VaultToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultTokenInterface {
    return new Interface(_abi) as VaultTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaultToken {
    return new Contract(address, _abi, runner) as unknown as VaultToken;
  }
}
