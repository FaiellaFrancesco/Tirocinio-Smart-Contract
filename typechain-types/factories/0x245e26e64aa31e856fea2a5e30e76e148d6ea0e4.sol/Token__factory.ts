/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x245e26e64aa31e856fea2a5e30e76e148d6ea0e4.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_finalTokenTransferDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initTokenDurationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokenETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setTaxWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a6005556000600655600060075560006008556000600a5560646009600a61002d9190610268565b61003b906305f5e10061027e565b6100459190610295565b600b556000600c819055600d819055600f805461ffff60a81b1916905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319163317815530600090815260036020526040808220805460ff19908116600190811790925593546001600160a01b03168352912080549092161790556100f66009600a610268565b610104906305f5e10061027e565b30600081815260016020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6101456009600a610268565b610153906305f5e10061027e565b60405190815260200160405180910390a36102b7565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156101ba5780850481111561019e5761019e610169565b60018416156101ac57908102905b60019390931c928002610183565b935093915050565b6000826101d157506001610262565b816101de57506000610262565b81600181146101f457600281146101fe5761021a565b6001915050610262565b60ff84111561020f5761020f610169565b50506001821b610262565b5060208310610133831016604e8410600b841016171561023d575081810a610262565b61024a600019848461017f565b806000190482111561025e5761025e610169565b0290505b92915050565b600061027760ff8416836101c2565b9392505050565b808202811582820484141761026257610262610169565b6000826102b257634e487b7160e01b600052601260045260246000fd5b500490565b61185e806102c66000396000f3fe6080604052600436106101025760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102b9578063a9059cbb146102e5578063ba18ed0d14610305578063dd62ed3e1461031b578063ea414b281461036157600080fd5b806370a0823114610231578063715018a6146102675780638a8c523c1461027c5780638da5cb5b1461029157600080fd5b806318160ddd116100d157806318160ddd146101ca57806323b872dd146101df578063313ce567146101ff5780635ce74cbf1461021b57600080fd5b8063022321f21461010e57806306fdde0314610125578063095ea7b3146101765780630faee56f146101a657600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123610381565b005b34801561013157600080fd5b5060408051808201909152601681527520b936b7b932b2102130b93134b29021b434b1b5b2b760511b60208201525b60405161016d919061133b565b60405180910390f35b34801561018257600080fd5b5061019661019136600461139e565b6103f0565b604051901515815260200161016d565b3480156101b257600080fd5b506101bc600b5481565b60405190815260200161016d565b3480156101d657600080fd5b506101bc610407565b3480156101eb57600080fd5b506101966101fa3660046113ca565b610428565b34801561020b57600080fd5b506040516009815260200161016d565b34801561022757600080fd5b506101bc600d5481565b34801561023d57600080fd5b506101bc61024c36600461140b565b6001600160a01b031660009081526001602052604090205490565b34801561027357600080fd5b506101236104eb565b34801561028857600080fd5b5061012361055f565b34801561029d57600080fd5b506000546040516001600160a01b03909116815260200161016d565b3480156102c557600080fd5b5060408051808201909152600381526241424360e81b6020820152610160565b3480156102f157600080fd5b5061019661030036600461139e565b610917565b34801561031157600080fd5b506101bc600c5481565b34801561032757600080fd5b506101bc610336366004611428565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561036d57600080fd5b5061012361037c36600461140b565b610924565b6000546001600160a01b031633146103b45760405162461bcd60e51b81526004016103ab90611461565b60405180910390fd5b600047116103c157600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103ed573d6000803e3d6000fd5b50565b60006103fd338484610962565b5060015b92915050565b60006104156009600a611593565b610423906305f5e1006115a2565b905090565b6000610435848484610a86565b3360009081526003602052604090205460ff1615801561048a5750600f546001600160a01b038581169116148061047757506001600160a01b03831661dead14155b8061048a57506001600160a01b03841630145b156104e1576104e184336104dc85604051806060016040528060288152602001611801602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610f13565b610962565b5060019392505050565b6000546001600160a01b031633146105155760405162461bcd60e51b81526004016103ab90611461565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105895760405162461bcd60e51b81526004016103ab90611461565b600f54600160a01b900460ff16156105e35760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103ab565b600e80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811790915561062c90309061061e6009600a611593565b6104dc906305f5e1006115a2565b600e60009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a391906115b9565b6001600160a01b031663c9c6539630600e60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610705573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072991906115b9565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a91906115b9565b600f80546001600160a01b039283166001600160a01b0319909116179055600e541663f305d71947306107e2816001600160a01b031660009081526001602052604090205490565b6000806107f76000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af115801561085f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061088491906115d6565b5050600f805462ff00ff60a01b1981166201000160a01b17909155600e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af11580156108f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190611604565b60006103fd338484610a86565b3360009081526003602052604090205460ff1661094057600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109c45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ab565b6001600160a01b038216610a255760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ab565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610aea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ab565b6001600160a01b038216610b4c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ab565b60008111610bae5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103ab565b60006001600160a01b0384163014801590610bd257506001600160a01b0383163014155b15610db557600f546001600160a01b038581169116148015610c025750600e546001600160a01b03848116911614155b8015610c2757506001600160a01b03831660009081526003602052604090205460ff16155b8015610c4157506004546001600160a01b03848116911614155b15610c86574360095414610c59576000600a55436009555b81600a6000828254610c6b9190611626565b909155505060088054906000610c8083611639565b91905055505b600f546001600160a01b038481169116148015610cac57506001600160a01b0384163014155b15610d0757610cb9610f4d565b600a541080610cca57504360095414155b610d075760405162461bcd60e51b815260206004820152600e60248201526d13585e0814ddd85c08131a5b5a5d60921b60448201526064016103ab565b30600090815260016020526040902054600f54600160a81b900460ff16158015610d3e5750600f546001600160a01b038581169116145b8015610d535750600f54600160b01b900460ff165b8015610d6d57506004546001600160a01b03868116911614155b15610db3578015610da7576000600b548211610d895781610d8d565b600b545b9050610da5818511610d9f57846110db565b816110db565b505b47610db147611255565b505b505b6001600160a01b038416600090815260016020526040902054610dd89083611293565b6001600160a01b038516600090815260016020526040902055610e1d610dfe8383611293565b6001600160a01b038516600090815260016020526040902054906112dc565b6001600160a01b0384166000908152600160205260409020558015610eb05730600090815260016020526040902054610e5690826112dc565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ea79085815260200190565b60405180910390a35b6001600160a01b03831661dead14610f0d576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610efb8585611293565b60405190815260200160405180910390a35b50505050565b60008184841115610f375760405162461bcd60e51b81526004016103ab919061133b565b506000610f448486611652565b95945050505050565b604080516002808252606082018352600092839291906020830190803683375050600e54604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf91906115b9565b81600081518110610ff257610ff261167b565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106110265761102661167b565b6001600160a01b039283166020918202929092010152600e5460405163d06ca61f60e01b8152600092919091169063d06ca61f90611072906729a2241af62c00009086906004016116d6565b600060405180830381865afa15801561108f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b791908101906116f7565b9050806001815181106110cc576110cc61167b565b60200260200101519250505090565b600f805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106111235761112361167b565b6001600160a01b03928316602091820292909201810191909152600e54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a091906115b9565b816001815181106111b3576111b361167b565b6001600160a01b039283166020918202929092010152600e546111d99130911684610962565b600e5460405163791ac94760e01b81526001600160a01b039091169063791ac947906112129085906000908690309042906004016117c4565b600060405180830381600087803b15801561122c57600080fd5b505af1158015611240573d6000803e3d6000fd5b5050600f805460ff60a81b1916905550505050565b6004546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561128f573d6000803e3d6000fd5b5050565b60006112d583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f13565b9392505050565b6000806112e98385611626565b9050838110156112d55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103ab565b602081526000825180602084015260005b81811015611369576020818601810151604086840101520161134c565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146103ed57600080fd5b600080604083850312156113b157600080fd5b82356113bc81611389565b946020939093013593505050565b6000806000606084860312156113df57600080fd5b83356113ea81611389565b925060208401356113fa81611389565b929592945050506040919091013590565b60006020828403121561141d57600080fd5b81356112d581611389565b6000806040838503121561143b57600080fd5b823561144681611389565b9150602083013561145681611389565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156114e7578085048111156114cb576114cb611496565b60018416156114d957908102905b60019390931c9280026114b0565b935093915050565b6000826114fe57506001610401565b8161150b57506000610401565b8160018114611521576002811461152b57611547565b6001915050610401565b60ff84111561153c5761153c611496565b50506001821b610401565b5060208310610133831016604e8410600b841016171561156a575081810a610401565b61157760001984846114ac565b806000190482111561158b5761158b611496565b029392505050565b60006112d560ff8416836114ef565b808202811582820484141761040157610401611496565b6000602082840312156115cb57600080fd5b81516112d581611389565b6000806000606084860312156115eb57600080fd5b5050815160208301516040909301519094929350919050565b60006020828403121561161657600080fd5b815180151581146112d557600080fd5b8082018082111561040157610401611496565b60006001820161164b5761164b611496565b5060010190565b8181038181111561040157610401611496565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156116cc5781516001600160a01b03168652602095860195909101906001016116a5565b5093949350505050565b8281526040602082015260006116ef6040830184611691565b949350505050565b60006020828403121561170957600080fd5b815167ffffffffffffffff81111561172057600080fd5b8201601f8101841361173157600080fd5b805167ffffffffffffffff81111561174b5761174b611665565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561177857611778611665565b60405291825260208184018101929081018784111561179657600080fd5b6020850194505b838510156117b95784518082526020958601959093500161179d565b509695505050505050565b85815284602082015260a0604082015260006117e360a0830186611691565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a264697066735822122054c442740b0734b2f2d5255a23d50293054386a1036eb66069113582347581a564736f6c634300081d0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
