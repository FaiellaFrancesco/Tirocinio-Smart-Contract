/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Token,
  TokenInterface,
} from "../../0x6055988fa50032198f3b5d4dc1eced7d975870f3.sol/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "LFT_MOON",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_assist_OMGBN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_oijboijoiOMG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "_setTax_lknblOMG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_vnbbvlOMGK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600a600255600a6003556014600455600060055560026006556002600755600060085560646009600a6100379190610340565b61004590633b9aca00610356565b61004f919061036d565b600a90815567d02ab486cedc0000600b55600c556011805461ffff60a81b1916905560006012819055601381905580546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319163317905560646100dc6009600a610340565b6100ea90633b9aca00610356565b6100f5906002610356565b6100ff919061036d565b336000908152600d6020526040902055606461011d6009600a610340565b61012b90633b9aca00610356565b610136906062610356565b610140919061036d565b306000908152600d6020908152604080832093909355600f90528181208054600160ff19918216811790925581546001600160a01b0316835292909120805490921617905561018c3390565b6001600160a01b03166000600080516020611de083398151915260646101b46009600a610340565b6101c290633b9aca00610356565b6101cd906002610356565b6101d7919061036d565b60405190815260200160405180910390a3306000600080516020611de083398151915260646102086009600a610340565b61021690633b9aca00610356565b610221906062610356565b61022b919061036d565b60405190815260200160405180910390a361038f565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156102925780850481111561027657610276610241565b600184161561028457908102905b60019390931c92800261025b565b935093915050565b6000826102a95750600161033a565b816102b65750600061033a565b81600181146102cc57600281146102d6576102f2565b600191505061033a565b60ff8411156102e7576102e7610241565b50506001821b61033a565b5060208310610133831016604e8410600b8410161715610315575081810a61033a565b6103226000198484610257565b806000190482111561033657610336610241565b0290505b92915050565b600061034f60ff84168361029a565b9392505050565b808202811582820484141761033a5761033a610241565b60008261038a57634e487b7160e01b600052601260045260246000fd5b500490565b611a428061039e6000396000f3fe6080604052600436106101025760003560e01c806370a08231116100955780638da5cb5b116100645780638da5cb5b146102a257806395d89b41146102ca578063a52fdab114610304578063a9059cbb1461031a578063dd62ed3e1461033a57600080fd5b806370a082311461022d578063715018a61461026357806372f07ee714610278578063751039fc1461028d57600080fd5b80631fd29756116100d15780631fd29756146101ba57806323b872dd146101d1578063313ce567146101f1578063481775461461020d57600080fd5b806306fdde031461010e57806308c1b94814610151578063095ea7b31461017557806318160ddd146101a557600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50604080518082019091526008815267434849434b49555360c01b60208201525b6040516101489190611505565b60405180910390f35b34801561015d57600080fd5b50610167600a5481565b604051908152602001610148565b34801561018157600080fd5b50610195610190366004611568565b610380565b6040519015158152602001610148565b3480156101b157600080fd5b50610167610397565b3480156101c657600080fd5b506101cf6103b8565b005b3480156101dd57600080fd5b506101956101ec366004611594565b610780565b3480156101fd57600080fd5b5060405160098152602001610148565b34801561021957600080fd5b506101cf6102283660046115d5565b6107f3565b34801561023957600080fd5b506101676102483660046115d5565b6001600160a01b03166000908152600d602052604090205490565b34801561026f57600080fd5b506101cf61084a565b34801561028457600080fd5b506101cf6108be565b34801561029957600080fd5b506101cf610921565b3480156102ae57600080fd5b506000546040516001600160a01b039091168152602001610148565b3480156102d657600080fd5b50604080518082019091526011815270434849434b454d5553204d4158494d555360781b602082015261013b565b34801561031057600080fd5b50610167600b5481565b34801561032657600080fd5b50610195610335366004611568565b61094d565b34801561034657600080fd5b506101676103553660046115f2565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205490565b600061038d33848461095a565b5060015b92915050565b60006103a56009600a611728565b6103b390633b9aca00611737565b905090565b6000546001600160a01b031633146103eb5760405162461bcd60e51b81526004016103e29061174e565b60405180910390fd5b601154600160a01b900460ff16156104455760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016103e2565b600980546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d90811782556104929130919061047f90600a611728565b61048d90633b9aca00611737565b61095a565b600960009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190611783565b6001600160a01b031663c9c6539630600960009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190611783565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190611783565b601180546001600160a01b039283166001600160a01b03199091161790556009541663f305d7194730610648816001600160a01b03166000908152600d602052604090205490565b60008061065d6000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af11580156106c5573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106ea91906117a0565b50506011805462ff00ff60a01b1981166201000160a01b1790915560095460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d91906117ce565b50565b600061078d848484610a7e565b6107978484610d14565b156107e9576107e9843361048d856040518060600160405280602881526020016119e5602891396001600160a01b038a166000908152600e602090815260408083203384529091529020549190610d79565b5060019392505050565b336000908152600f602052604090205460ff1661080f57600080fd5b600180546001600160a01b039092166001600160a01b0319909216821781556000918252600f6020526040909120805460ff19169091179055565b6000546001600160a01b031633146108745760405162461bcd60e51b81526004016103e29061174e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108e85760405162461bcd60e51b81526004016103e29061174e565b600047116108f557600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561077d573d6000803e3d6000fd5b6000546001600160a01b0316331461094b5760405162461bcd60e51b81526004016103e29061174e565b565b600061038d338484610a7e565b6001600160a01b0383166109bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e2565b6001600160a01b038216610a1d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e2565b6001600160a01b038381166000818152600e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ae25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e2565b6001600160a01b038216610b445760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e2565b60008111610ba65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016103e2565b6000610bb3848484610db3565b6001600160a01b0385166000908152600d6020526040902054909150610bd99083611029565b6001600160a01b0385166000908152600d6020526040902055610c1e610bff8383611029565b6001600160a01b0385166000908152600d602052604090205490611072565b6001600160a01b0384166000908152600d60205260409020558015610cb157306000908152600d6020526040902054610c579082611072565b306000818152600d6020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ca89085815260200190565b60405180910390a35b6001600160a01b03831661dead14610d0e576001600160a01b038084169085167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610cfc8585611029565b60405190815260200160405180910390a35b50505050565b336000908152600f602052604081205460ff1615610d465750336000908152600f602052604090205460ff1615610391565b6011546001600160a01b0384811691161480610d6d57506001600160a01b03821661dead14155b61038d57506000610391565b60008184841115610d9d5760405162461bcd60e51b81526004016103e29190611505565b506000610daa84866117f0565b95945050505050565b600080610dc86000546001600160a01b031690565b6001600160a01b0316856001600160a01b031614158015610df757506000546001600160a01b03858116911614155b8015610e0c57506001600160a01b0385163014155b8015610e2157506001600160a01b0384163014155b1561102157601154600160a81b900460ff16610e6657610e636064610e5d60065460085411610e5257600454610e56565b6005545b86906110d1565b90611153565b90505b6011546001600160a01b038681169116148015610e9157506009546001600160a01b03858116911614155b8015610eb657506001600160a01b0384166000908152600f602052604090205460ff16155b8015610ed057506001546001600160a01b03858116911614155b15610eeb5760088054906000610ee583611803565b91905055505b306000908152600d602052604081205490546001600160a01b03878116911614801590610f225750601154600160a81b900460ff16155b8015610f3b57506011546001600160a01b038681169116145b8015610f5557506001546001600160a01b03878116911614155b8015610f6a5750601154600160b01b900460ff165b8015610f795750600754600854115b1561101f57601354431115610f8e5760006012555b610f9784611195565b601254610fa4919061181c565b6012819055600b541015610feb5760405162461bcd60e51b815260206004820152600e60248201526d13585e081cddd85c081b1a5b5a5d60921b60448201526064016103e2565b600a5481111561100f5761100f84600a541161100957600a5461130d565b8461130d565b4761101947611499565b50436013555b505b949350505050565b600061106b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d79565b9392505050565b60008061107f838561181c565b90508381101561106b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103e2565b6000826000036110e357506000610391565b60006110ef8385611737565b9050826110fc858361182f565b1461106b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016103e2565b600061106b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114d7565b6040805160028082526060820183526000928392919060208301908036833701905050905030816000815181106111ce576111ce611867565b6001600160a01b03928316602091820292909201810191909152600954604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124b9190611783565b8160018151811061125e5761125e611867565b6001600160a01b03928316602091820292909201015260095460405163d06ca61f60e01b8152600092919091169063d06ca61f906112a290879086906004016118c2565b600060405180830381865afa1580156112bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112e791908101906118db565b9050806001815181106112fc576112fc611867565b602002602001015192505050919050565b6011805460ff60a81b1916600160a81b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061135557611355611867565b6001600160a01b03928316602091820292909201810191909152600954604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156113ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d29190611783565b816001815181106113e5576113e5611867565b6001600160a01b03928316602091820292909201015260095461140b913091168461095a565b600954601080546001600160a01b0319166001600160a01b03909216918217905560405163791ac94760e01b815263791ac947906114569085906000908690309042906004016119a8565b600060405180830381600087803b15801561147057600080fd5b505af1158015611484573d6000803e3d6000fd5b50506011805460ff60a81b1916905550505050565b6001546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156114d3573d6000803e3d6000fd5b5050565b600081836114f85760405162461bcd60e51b81526004016103e29190611505565b506000610daa848661182f565b602081526000825180602084015260005b818110156115335760208186018101516040868401015201611516565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461077d57600080fd5b6000806040838503121561157b57600080fd5b823561158681611553565b946020939093013593505050565b6000806000606084860312156115a957600080fd5b83356115b481611553565b925060208401356115c481611553565b929592945050506040919091013590565b6000602082840312156115e757600080fd5b813561106b81611553565b6000806040838503121561160557600080fd5b823561161081611553565b9150602083013561162081611553565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561167c578085048111156116605761166061162b565b600184161561166e57908102905b60019390931c928002611645565b935093915050565b60008261169357506001610391565b816116a057506000610391565b81600181146116b657600281146116c0576116dc565b6001915050610391565b60ff8411156116d1576116d161162b565b50506001821b610391565b5060208310610133831016604e8410600b84101617156116ff575081810a610391565b61170c6000198484611641565b80600019048211156117205761172061162b565b029392505050565b600061106b60ff841683611684565b80820281158282048414176103915761039161162b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561179557600080fd5b815161106b81611553565b6000806000606084860312156117b557600080fd5b5050815160208301516040909301519094929350919050565b6000602082840312156117e057600080fd5b8151801515811461106b57600080fd5b818103818111156103915761039161162b565b6000600182016118155761181561162b565b5060010190565b808201808211156103915761039161162b565b60008261184c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020840193506020830160005b828110156118b85781516001600160a01b0316865260209586019590910190600101611891565b5093949350505050565b828152604060208201526000611021604083018461187d565b6000602082840312156118ed57600080fd5b815167ffffffffffffffff81111561190457600080fd5b8201601f8101841361191557600080fd5b805167ffffffffffffffff81111561192f5761192f611851565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561195c5761195c611851565b60405291825260208184018101929081018784111561197a57600080fd5b6020850194505b8385101561199d57845180825260209586019590935001611981565b509695505050505050565b85815284602082015260a0604082015260006119c760a083018661187d565b6001600160a01b039490941660608301525060800152939250505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220007462d52087fd512f992bb7fbfa561d2ce7753e2724c72ad5cd091d77fe29a364736f6c634300081e0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
