/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CHIN,
  CHINInterface,
} from "../../0x8cc7c09ed72869e21ba5a9bc8eec9a75857a7162.sol/CHIN";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "MaxTxAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxTaxSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxWalletSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxSwapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bots_",
        type: "address[]",
      },
    ],
    name: "addBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "notbot",
        type: "address[]",
      },
    ],
    name: "delBots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "isBot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manualSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "openTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "reduceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260176006556017600755600060085560006009556014600a556014600b55601b600c556000600d556009600a6200003c91906200034b565b6200004c90630bebc20062000363565b600e556200005d6009600a6200034b565b6200006d90630bebc20062000363565b600f556200007e6009600a6200034b565b6200008e906305f5e10062000363565b6010556200009f6009600a6200034b565b620000af906305f5e10062000363565b6011556013805461ffff60a81b1916905560006014819055601555348015620000d757600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b03191633179055620001396009600a6200034b565b6200014a906402540be40062000363565b336000908152600160208190526040822092909255600390620001756000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526003909352818320805485166001908117909155600554909116835291208054909216179055620001d43390565b6001600160a01b031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200020e6009600a6200034b565b6200021f906402540be40062000363565b60405190815260200160405180910390a36200037d565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200028d57816000190482111562000271576200027162000236565b808516156200027f57918102915b93841c939080029062000251565b509250929050565b600082620002a65750600162000345565b81620002b55750600062000345565b8160018114620002ce5760028114620002d957620002f9565b600191505062000345565b60ff841115620002ed57620002ed62000236565b50506001821b62000345565b5060208310610133831016604e8410600b84101617156200031e575081810a62000345565b6200032a83836200024c565b806000190482111562000341576200034162000236565b0290505b92915050565b60006200035c60ff84168362000295565b9392505050565b808202811582820484141762000345576200034562000236565b611b4b806200038d6000396000f3fe6080604052600436106101395760003560e01c8063751039fc116100ab578063a9059cbb1161006f578063a9059cbb1461037e578063bf474bed1461039e578063c9567bf9146103b4578063d34628cc146103c9578063dd62ed3e146103e9578063ec1f3f631461042f57600080fd5b8063751039fc146102e85780637d1db4a5146102fd5780638da5cb5b146103135780638f9a55c01461033b57806395d89b411461035157600080fd5b8063313ce567116100fd578063313ce5671461021157806331c2d8471461022d5780633bbac5791461024f57806351bc3c851461028857806370a082311461029d578063715018a6146102d357600080fd5b806306fdde0314610145578063095ea7b3146101885780630faee56f146101b857806318160ddd146101dc57806323b872dd146101f157600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506040805180820190915260088152674348494e20494e5560c01b60208201525b60405161017f9190611613565b60405180910390f35b34801561019457600080fd5b506101a86101a336600461168a565b61044f565b604051901515815260200161017f565b3480156101c457600080fd5b506101ce60115481565b60405190815260200161017f565b3480156101e857600080fd5b506101ce610466565b3480156101fd57600080fd5b506101a861020c3660046116b6565b610488565b34801561021d57600080fd5b506040516009815260200161017f565b34801561023957600080fd5b5061024d61024836600461170d565b6104f1565b005b34801561025b57600080fd5b506101a861026a3660046117d2565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561029457600080fd5b5061024d610586565b3480156102a957600080fd5b506101ce6102b83660046117d2565b6001600160a01b031660009081526001602052604090205490565b3480156102df57600080fd5b5061024d6105d5565b3480156102f457600080fd5b5061024d610649565b34801561030957600080fd5b506101ce600e5481565b34801561031f57600080fd5b506000546040516001600160a01b03909116815260200161017f565b34801561034757600080fd5b506101ce600f5481565b34801561035d57600080fd5b5060408051808201909152600481526321a424a760e11b6020820152610172565b34801561038a57600080fd5b506101a861039936600461168a565b6106fe565b3480156103aa57600080fd5b506101ce60105481565b3480156103c057600080fd5b5061024d61070b565b3480156103d557600080fd5b5061024d6103e436600461170d565b610ac8565b3480156103f557600080fd5b506101ce6104043660046117ef565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561043b57600080fd5b5061024d61044a366004611828565b610b50565b600061045c338484610b97565b5060015b92915050565b60006104746009600a61193b565b610483906402540be40061194a565b905090565b6000610495848484610cbb565b6104e784336104e285604051806060016040528060288152602001611aee602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190611276565b610b97565b5060019392505050565b6000546001600160a01b031633146105245760405162461bcd60e51b815260040161051b90611961565b60405180910390fd5b60005b81518110156105825760006004600084848151811061054857610548611996565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610527565b5050565b6005546001600160a01b0316336001600160a01b0316146105a657600080fd5b3060009081526001602052604090205480156105c5576105c5816112b0565b478015610582576105828161142a565b6000546001600160a01b031633146105ff5760405162461bcd60e51b815260040161051b90611961565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106735760405162461bcd60e51b815260040161051b90611961565b61067f6009600a61193b565b61068e906402540be40061194a565b600e5561069d6009600a61193b565b6106ac906402540be40061194a565b600f557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6106dc6009600a61193b565b6106eb906402540be40061194a565b60405190815260200160405180910390a1565b600061045c338484610cbb565b6000546001600160a01b031633146107355760405162461bcd60e51b815260040161051b90611961565b601354600160a01b900460ff161561078f5760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e000000000000000000604482015260640161051b565b601280546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d9081179091556107d99030906107ca6009600a61193b565b6104e2906402540be40061194a565b601260009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085091906119ac565b6001600160a01b031663c9c6539630601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d691906119ac565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610923573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094791906119ac565b601380546001600160a01b039283166001600160a01b03199091161790556012541663f305d719473061098f816001600160a01b031660009081526001602052604090205490565b6000806109a46000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a0c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a3191906119c9565b505060135460125460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116915063095ea7b3906044016020604051808303816000875af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae91906119f7565b506013805462ff00ff60a01b19166201000160a01b179055565b6000546001600160a01b03163314610af25760405162461bcd60e51b815260040161051b90611961565b60005b815181101561058257600160046000848481518110610b1657610b16611996565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610af5565b6005546001600160a01b0316336001600160a01b031614610b7057600080fd5b6008548111158015610b8457506009548111155b610b8d57600080fd5b6008819055600955565b6001600160a01b038316610bf95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051b565b6001600160a01b038216610c5a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610d1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051b565b6001600160a01b038216610d815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051b565b60008111610de35760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161051b565b600080546001600160a01b03858116911614801590610e1057506000546001600160a01b03848116911614155b15611133576001600160a01b03841660009081526004602052604090205460ff16158015610e5757506001600160a01b03831660009081526004602052604090205460ff16155b610e6057600080fd5b610e8c6064610e86600a54600d5411610e7b57600654610e7f565b6008545b8590611464565b906114ed565b6013549091506001600160a01b038581169116148015610eba57506012546001600160a01b03848116911614155b8015610edf57506001600160a01b03831660009081526003602052604090205460ff16155b15610fc757600e54821115610f365760405162461bcd60e51b815260206004820152601960248201527f4578636565647320746865205f6d61785478416d6f756e742e00000000000000604482015260640161051b565b600f5482610f59856001600160a01b031660009081526001602052604090205490565b610f639190611a19565b1115610fb15760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e000000000000604482015260640161051b565b600d8054906000610fc183611a2c565b91905055505b6013546001600160a01b038481169116148015610fed57506001600160a01b0384163014155b1561101a576110176064610e86600b54600d541161100d57600754610e7f565b6009548590611464565b90505b30600090815260016020526040902054601354600160a81b900460ff1615801561105157506013546001600160a01b038581169116145b80156110665750601354600160b01b900460ff165b8015611073575060105481115b80156110825750600c54600d54115b15611131576015544311156110975760006014555b6003601454106110e95760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920332073656c6c732070657220626c6f636b21000000000000000000604482015260640161051b565b611106611101846110fc8460115461152f565b61152f565b6112b0565b478015611116576111164761142a565b6014805490600061112683611a2c565b909155505043601555505b505b80156111ad57306000908152600160205260409020546111539082611544565b30600081815260016020526040908190209290925590516001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111a49085815260200190565b60405180910390a35b6001600160a01b0384166000908152600160205260409020546111d090836115a3565b6001600160a01b0385166000908152600160205260409020556112156111f683836115a3565b6001600160a01b03851660009081526001602052604090205490611544565b6001600160a01b0380851660008181526001602052604090209290925585167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61125f85856115a3565b60405190815260200160405180910390a350505050565b6000818484111561129a5760405162461bcd60e51b815260040161051b9190611613565b5060006112a78486611a45565b95945050505050565b6013805460ff60a81b1916600160a81b17905560408051600280825260608201835260009260208301908036833701905050905030816000815181106112f8576112f8611996565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611351573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137591906119ac565b8160018151811061138857611388611996565b6001600160a01b0392831660209182029290920101526012546113ae9130911684610b97565b60125460405163791ac94760e01b81526001600160a01b039091169063791ac947906113e7908590600090869030904290600401611a58565b600060405180830381600087803b15801561140157600080fd5b505af1158015611415573d6000803e3d6000fd5b50506013805460ff60a81b1916905550505050565b6005546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610582573d6000803e3d6000fd5b60008260000361147657506000610460565b6000611482838561194a565b90508261148f8583611acb565b146114e65760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161051b565b9392505050565b60006114e683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115e5565b600081831161153e57826114e6565b50919050565b6000806115518385611a19565b9050838110156114e65760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161051b565b60006114e683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611276565b600081836116065760405162461bcd60e51b815260040161051b9190611613565b5060006112a78486611acb565b60006020808352835180602085015260005b8181101561164157858101830151858201604001528201611625565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461167757600080fd5b50565b803561168581611662565b919050565b6000806040838503121561169d57600080fd5b82356116a881611662565b946020939093013593505050565b6000806000606084860312156116cb57600080fd5b83356116d681611662565b925060208401356116e681611662565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561172057600080fd5b823567ffffffffffffffff8082111561173857600080fd5b818501915085601f83011261174c57600080fd5b81358181111561175e5761175e6116f7565b8060051b604051601f19603f83011681018181108582111715611783576117836116f7565b6040529182528482019250838101850191888311156117a157600080fd5b938501935b828510156117c6576117b78561167a565b845293850193928501926117a6565b98975050505050505050565b6000602082840312156117e457600080fd5b81356114e681611662565b6000806040838503121561180257600080fd5b823561180d81611662565b9150602083013561181d81611662565b809150509250929050565b60006020828403121561183a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561189257816000190482111561187857611878611841565b8085161561188557918102915b93841c939080029061185c565b509250929050565b6000826118a957506001610460565b816118b657506000610460565b81600181146118cc57600281146118d6576118f2565b6001915050610460565b60ff8411156118e7576118e7611841565b50506001821b610460565b5060208310610133831016604e8410600b8410161715611915575081810a610460565b61191f8383611857565b806000190482111561193357611933611841565b029392505050565b60006114e660ff84168361189a565b808202811582820484141761046057610460611841565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119be57600080fd5b81516114e681611662565b6000806000606084860312156119de57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611a0957600080fd5b815180151581146114e657600080fd5b8082018082111561046057610460611841565b600060018201611a3e57611a3e611841565b5060010190565b8181038181111561046057610460611841565b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b81811015611aaa5784516001600160a01b031683529383019391830191600101611a85565b50506001600160a01b03969096166060850152505050608001529392505050565b600082611ae857634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212202e66187a9bdc58f3add57ba63d8ab5fa65db45fb9d20a5b92337ee42cb2353f664736f6c63430008170033";

type CHINConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CHINConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CHIN__factory extends ContractFactory {
  constructor(...args: CHINConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CHIN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CHIN__factory {
    return super.connect(runner) as CHIN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CHINInterface {
    return new Interface(_abi) as CHINInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CHIN {
    return new Contract(address, _abi, runner) as unknown as CHIN;
  }
}
