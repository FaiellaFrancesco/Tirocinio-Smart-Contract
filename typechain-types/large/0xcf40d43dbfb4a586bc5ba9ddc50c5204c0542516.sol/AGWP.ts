/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface AGWPInterface extends utils.Interface {
  functions: {
    "getAllTransactions()": FunctionFragment;
    "getGWF()": FunctionFragment;
    "getIsOwner(address)": FunctionFragment;
    "getMasterCopy()": FunctionFragment;
    "getOwners()": FunctionFragment;
    "getTransactionRecord(uint256)": FunctionFragment;
    "getTransactionsCount()": FunctionFragment;
    "nameAuctionBidBucketLabel(bytes32,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAllTransactions"
      | "getGWF"
      | "getIsOwner"
      | "getMasterCopy"
      | "getOwners"
      | "getTransactionRecord"
      | "getTransactionsCount"
      | "nameAuctionBidBucketLabel"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAllTransactions",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getGWF", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getIsOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMasterCopy",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getOwners", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getTransactionRecord",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTransactionsCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "nameAuctionBidBucketLabel",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAllTransactions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getGWF", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getIsOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMasterCopy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOwners", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionRecord",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nameAuctionBidBucketLabel",
    data: BytesLike
  ): Result;

  events: {};
}

export interface AGWP extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AGWPInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAllTransactions(
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { transArr: BigNumber[] }>;

    getGWF(overrides?: CallOverrides): Promise<[string]>;

    getIsOwner(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getMasterCopy(overrides?: CallOverrides): Promise<[string]>;

    getOwners(overrides?: CallOverrides): Promise<[string[]]>;

    getTransactionRecord(
      _tNb: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTransactionsCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    nameAuctionBidBucketLabel(
      labelhash: PromiseOrValue<BytesLike>,
      deedContract: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getAllTransactions(overrides?: CallOverrides): Promise<BigNumber[]>;

  getGWF(overrides?: CallOverrides): Promise<string>;

  getIsOwner(
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getMasterCopy(overrides?: CallOverrides): Promise<string>;

  getOwners(overrides?: CallOverrides): Promise<string[]>;

  getTransactionRecord(
    _tNb: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTransactionsCount(overrides?: CallOverrides): Promise<BigNumber>;

  nameAuctionBidBucketLabel(
    labelhash: PromiseOrValue<BytesLike>,
    deedContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getAllTransactions(overrides?: CallOverrides): Promise<BigNumber[]>;

    getGWF(overrides?: CallOverrides): Promise<string>;

    getIsOwner(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getMasterCopy(overrides?: CallOverrides): Promise<string>;

    getOwners(overrides?: CallOverrides): Promise<string[]>;

    getTransactionRecord(
      _tNb: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactionsCount(overrides?: CallOverrides): Promise<BigNumber>;

    nameAuctionBidBucketLabel(
      labelhash: PromiseOrValue<BytesLike>,
      deedContract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getAllTransactions(overrides?: CallOverrides): Promise<BigNumber>;

    getGWF(overrides?: CallOverrides): Promise<BigNumber>;

    getIsOwner(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMasterCopy(overrides?: CallOverrides): Promise<BigNumber>;

    getOwners(overrides?: CallOverrides): Promise<BigNumber>;

    getTransactionRecord(
      _tNb: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactionsCount(overrides?: CallOverrides): Promise<BigNumber>;

    nameAuctionBidBucketLabel(
      labelhash: PromiseOrValue<BytesLike>,
      deedContract: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAllTransactions(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGWF(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getIsOwner(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMasterCopy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getOwners(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTransactionRecord(
      _tNb: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTransactionsCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nameAuctionBidBucketLabel(
      labelhash: PromiseOrValue<BytesLike>,
      deedContract: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
